export const nodeDefinitions = {
  KSampler: {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.1, round: 0.01 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSampler",
    display_name: "KSampler",
    description: "",
    category: "sampling",
    output_node: false,
  },
  CheckpointLoaderSimple: {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "CheckpointLoaderSimple",
    display_name: "Load Checkpoint",
    description: "",
    category: "loaders",
    output_node: false,
  },
  CLIPTextEncode: {
    input: {
      required: { text: ["STRING", { multiline: true }], clip: ["CLIP"] },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncode",
    display_name: "CLIP Text Encode (Prompt)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  CLIPSetLastLayer: {
    input: {
      required: {
        clip: ["CLIP"],
        stop_at_clip_layer: [
          "INT",
          { default: -1, min: -24, max: -1, step: 1 },
        ],
      },
    },
    output: ["CLIP"],
    output_is_list: [false],
    output_name: ["CLIP"],
    name: "CLIPSetLastLayer",
    display_name: "CLIP Set Last Layer",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  VAEDecode: {
    input: { required: { samples: ["LATENT"], vae: ["VAE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "VAEDecode",
    display_name: "VAE Decode",
    description: "",
    category: "latent",
    output_node: false,
  },
  VAEEncode: {
    input: { required: { pixels: ["IMAGE"], vae: ["VAE"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "VAEEncode",
    display_name: "VAE Encode",
    description: "",
    category: "latent",
    output_node: false,
  },
  VAEEncodeForInpaint: {
    input: {
      required: {
        pixels: ["IMAGE"],
        vae: ["VAE"],
        mask: ["MASK"],
        grow_mask_by: ["INT", { default: 6, min: 0, max: 64, step: 1 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "VAEEncodeForInpaint",
    display_name: "VAE Encode (for Inpainting)",
    description: "",
    category: "latent/inpaint",
    output_node: false,
  },
  VAELoader: {
    input: { required: { vae_name: [["__models__"]] } },
    output: ["VAE"],
    output_is_list: [false],
    output_name: ["VAE"],
    name: "VAELoader",
    display_name: "Load VAE",
    description: "",
    category: "loaders",
    output_node: false,
  },
  EmptyLatentImage: {
    input: {
      required: {
        width: ["INT", { default: 512, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 16, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "EmptyLatentImage",
    display_name: "Empty Latent Image",
    description: "",
    category: "latent",
    output_node: false,
  },
  LatentUpscale: {
    input: {
      required: {
        samples: ["LATENT"],
        upscale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"],
        ],
        width: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        crop: [["disabled", "center"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentUpscale",
    display_name: "Upscale Latent",
    description: "",
    category: "latent",
    output_node: false,
  },
  LatentUpscaleBy: {
    input: {
      required: {
        samples: ["LATENT"],
        upscale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"],
        ],
        scale_by: ["FLOAT", { default: 1.5, min: 0.01, max: 8.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentUpscaleBy",
    display_name: "Upscale Latent By",
    description: "",
    category: "latent",
    output_node: false,
  },
  LatentFromBatch: {
    input: {
      required: {
        samples: ["LATENT"],
        batch_index: ["INT", { default: 0, min: 0, max: 63 }],
        length: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentFromBatch",
    display_name: "Latent From Batch",
    description: "",
    category: "latent/batch",
    output_node: false,
  },
  RepeatLatentBatch: {
    input: {
      required: {
        samples: ["LATENT"],
        amount: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "RepeatLatentBatch",
    display_name: "Repeat Latent Batch",
    description: "",
    category: "latent/batch",
    output_node: false,
  },
  SaveImage: {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SaveImage",
    display_name: "Save Image",
    description: "",
    category: "image",
    output_node: true,
  },
  PreviewImage: {
    input: {
      required: { images: ["IMAGE"] },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "PreviewImage",
    display_name: "Preview Image",
    description: "",
    category: "image",
    output_node: true,
  },
  LoadImage: {
    input: { required: { image: [["__inputs__"], { image_upload: true }] } },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "LoadImage",
    display_name: "Load Image",
    description: "",
    category: "image",
    output_node: false,
  },
  LoadImageMask: {
    input: {
      required: {
        image: [["__inputs__"], { image_upload: true }],
        channel: [["alpha", "red", "green", "blue"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "LoadImageMask",
    display_name: "Load Image (as Mask)",
    description: "",
    category: "mask",
    output_node: false,
  },
  ImageScale: {
    input: {
      required: {
        image: ["IMAGE"],
        upscale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"],
        ],
        width: ["INT", { default: 512, min: 0, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 0, max: 8192, step: 1 }],
        crop: [["disabled", "center"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageScale",
    display_name: "Upscale Image",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  ImageScaleBy: {
    input: {
      required: {
        image: ["IMAGE"],
        upscale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"],
        ],
        scale_by: ["FLOAT", { default: 1.0, min: 0.01, max: 8.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageScaleBy",
    display_name: "Upscale Image By",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  ImageInvert: {
    input: { required: { image: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageInvert",
    display_name: "Invert Image",
    description: "",
    category: "image",
    output_node: false,
  },
  ImageBatch: {
    input: { required: { image1: ["IMAGE"], image2: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBatch",
    display_name: "Batch Images",
    description: "",
    category: "image",
    output_node: false,
  },
  ImagePadForOutpaint: {
    input: {
      required: {
        image: ["IMAGE"],
        left: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        top: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        right: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        bottom: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        feathering: ["INT", { default: 40, min: 0, max: 8192, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "ImagePadForOutpaint",
    display_name: "Pad Image for Outpainting",
    description: "",
    category: "image",
    output_node: false,
  },
  EmptyImage: {
    input: {
      required: {
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
        color: [
          "INT",
          { default: 0, min: 0, max: 16777215, step: 1, display: "color" },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "EmptyImage",
    display_name: "EmptyImage",
    description: "",
    category: "image",
    output_node: false,
  },
  ConditioningAverage: {
    input: {
      required: {
        conditioning_to: ["CONDITIONING"],
        conditioning_from: ["CONDITIONING"],
        conditioning_to_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningAverage",
    display_name: "ConditioningAverage",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningCombine: {
    input: {
      required: {
        conditioning_1: ["CONDITIONING"],
        conditioning_2: ["CONDITIONING"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningCombine",
    display_name: "Conditioning (Combine)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningConcat: {
    input: {
      required: {
        conditioning_to: ["CONDITIONING"],
        conditioning_from: ["CONDITIONING"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningConcat",
    display_name: "Conditioning (Concat)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningSetArea: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        width: ["INT", { default: 64, min: 64, max: 8192, step: 8 }],
        height: ["INT", { default: 64, min: 64, max: 8192, step: 8 }],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetArea",
    display_name: "Conditioning (Set Area)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningSetAreaPercentage: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        width: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
        height: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
        x: ["FLOAT", { default: 0, min: 0, max: 1.0, step: 0.01 }],
        y: ["FLOAT", { default: 0, min: 0, max: 1.0, step: 0.01 }],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetAreaPercentage",
    display_name: "Conditioning (Set Area with Percentage)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningSetAreaStrength: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetAreaStrength",
    display_name: "ConditioningSetAreaStrength",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ConditioningSetMask: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        mask: ["MASK"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        set_cond_area: [["default", "mask bounds"]],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetMask",
    display_name: "Conditioning (Set Mask)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  KSamplerAdvanced: {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: [["enable", "disable"]],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.1, round: 0.01 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        return_with_leftover_noise: [["disable", "enable"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSamplerAdvanced",
    display_name: "KSampler (Advanced)",
    description: "",
    category: "sampling",
    output_node: false,
  },
  SetLatentNoiseMask: {
    input: { required: { samples: ["LATENT"], mask: ["MASK"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "SetLatentNoiseMask",
    display_name: "Set Latent Noise Mask",
    description: "",
    category: "latent/inpaint",
    output_node: false,
  },
  LatentComposite: {
    input: {
      required: {
        samples_to: ["LATENT"],
        samples_from: ["LATENT"],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        feather: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentComposite",
    display_name: "Latent Composite",
    description: "",
    category: "latent",
    output_node: false,
  },
  LatentBlend: {
    input: {
      required: {
        samples1: ["LATENT"],
        samples2: ["LATENT"],
        blend_factor: ["FLOAT", { default: 0.5, min: 0, max: 1, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentBlend",
    display_name: "Latent Blend",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  LatentRotate: {
    input: {
      required: {
        samples: ["LATENT"],
        rotation: [["none", "90 degrees", "180 degrees", "270 degrees"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentRotate",
    display_name: "Rotate Latent",
    description: "",
    category: "latent/transform",
    output_node: false,
  },
  LatentFlip: {
    input: {
      required: {
        samples: ["LATENT"],
        flip_method: [["x-axis: vertically", "y-axis: horizontally"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentFlip",
    display_name: "Flip Latent",
    description: "",
    category: "latent/transform",
    output_node: false,
  },
  LatentCrop: {
    input: {
      required: {
        samples: ["LATENT"],
        width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentCrop",
    display_name: "Crop Latent",
    description: "",
    category: "latent/transform",
    output_node: false,
  },
  LoraLoader: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -20.0, max: 20.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -20.0, max: 20.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP"],
    output_is_list: [false, false],
    output_name: ["MODEL", "CLIP"],
    name: "LoraLoader",
    display_name: "Load LoRA",
    description: "",
    category: "loaders",
    output_node: false,
  },
  CLIPLoader: {
    input: {
      required: {
        clip_name: [["__models__"]],
        type: [["stable_diffusion", "stable_cascade"]],
      },
    },
    output: ["CLIP"],
    output_is_list: [false],
    output_name: ["CLIP"],
    name: "CLIPLoader",
    display_name: "Load CLIP",
    description: "",
    category: "advanced/loaders",
    output_node: false,
  },
  UNETLoader: {
    input: { required: { unet_name: [["__models__"]] } },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "UNETLoader",
    display_name: "UNETLoader",
    description: "",
    category: "advanced/loaders",
    output_node: false,
  },
  DualCLIPLoader: {
    input: {
      required: { clip_name1: [["__models__"]], clip_name2: [["__models__"]] },
    },
    output: ["CLIP"],
    output_is_list: [false],
    output_name: ["CLIP"],
    name: "DualCLIPLoader",
    display_name: "DualCLIPLoader",
    description: "",
    category: "advanced/loaders",
    output_node: false,
  },
  CLIPVisionEncode: {
    input: { required: { clip_vision: ["CLIP_VISION"], image: ["IMAGE"] } },
    output: ["CLIP_VISION_OUTPUT"],
    output_is_list: [false],
    output_name: ["CLIP_VISION_OUTPUT"],
    name: "CLIPVisionEncode",
    display_name: "CLIP Vision Encode",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  StyleModelApply: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        style_model: ["STYLE_MODEL"],
        clip_vision_output: ["CLIP_VISION_OUTPUT"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "StyleModelApply",
    display_name: "Apply Style Model",
    description: "",
    category: "conditioning/style_model",
    output_node: false,
  },
  unCLIPConditioning: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        clip_vision_output: ["CLIP_VISION_OUTPUT"],
        strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        noise_augmentation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "unCLIPConditioning",
    display_name: "unCLIPConditioning",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ControlNetApply: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ControlNetApply",
    display_name: "Apply ControlNet",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ControlNetApplyAdvanced: {
    input: {
      required: {
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "ControlNetApplyAdvanced",
    display_name: "Apply ControlNet (Advanced)",
    description: "",
    category: "conditioning",
    output_node: false,
  },
  ControlNetLoader: {
    input: { required: { control_net_name: [["__models__"]] } },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "ControlNetLoader",
    display_name: "Load ControlNet Model",
    description: "",
    category: "loaders",
    output_node: false,
  },
  DiffControlNetLoader: {
    input: {
      required: { model: ["MODEL"], control_net_name: [["__models__"]] },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "DiffControlNetLoader",
    display_name: "Load ControlNet Model (diff)",
    description: "",
    category: "loaders",
    output_node: false,
  },
  StyleModelLoader: {
    input: { required: { style_model_name: [["__models__"]] } },
    output: ["STYLE_MODEL"],
    output_is_list: [false],
    output_name: ["STYLE_MODEL"],
    name: "StyleModelLoader",
    display_name: "Load Style Model",
    description: "",
    category: "loaders",
    output_node: false,
  },
  CLIPVisionLoader: {
    input: { required: { clip_name: [["__models__"]] } },
    output: ["CLIP_VISION"],
    output_is_list: [false],
    output_name: ["CLIP_VISION"],
    name: "CLIPVisionLoader",
    display_name: "Load CLIP Vision",
    description: "",
    category: "loaders",
    output_node: false,
  },
  VAEDecodeTiled: {
    input: {
      required: {
        samples: ["LATENT"],
        vae: ["VAE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "VAEDecodeTiled",
    display_name: "VAE Decode (Tiled)",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  VAEEncodeTiled: {
    input: {
      required: {
        pixels: ["IMAGE"],
        vae: ["VAE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "VAEEncodeTiled",
    display_name: "VAE Encode (Tiled)",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  unCLIPCheckpointLoader: {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE", "CLIP_VISION"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "CLIP_VISION"],
    name: "unCLIPCheckpointLoader",
    display_name: "unCLIPCheckpointLoader",
    description: "",
    category: "loaders",
    output_node: false,
  },
  GLIGENLoader: {
    input: { required: { gligen_name: [["__models__"]] } },
    output: ["GLIGEN"],
    output_is_list: [false],
    output_name: ["GLIGEN"],
    name: "GLIGENLoader",
    display_name: "GLIGENLoader",
    description: "",
    category: "loaders",
    output_node: false,
  },
  GLIGENTextBoxApply: {
    input: {
      required: {
        conditioning_to: ["CONDITIONING"],
        clip: ["CLIP"],
        gligen_textbox_model: ["GLIGEN"],
        text: ["STRING", { multiline: true }],
        width: ["INT", { default: 64, min: 8, max: 8192, step: 8 }],
        height: ["INT", { default: 64, min: 8, max: 8192, step: 8 }],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "GLIGENTextBoxApply",
    display_name: "GLIGENTextBoxApply",
    description: "",
    category: "conditioning/gligen",
    output_node: false,
  },
  InpaintModelConditioning: {
    input: {
      required: {
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        vae: ["VAE"],
        pixels: ["IMAGE"],
        mask: ["MASK"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "InpaintModelConditioning",
    display_name: "InpaintModelConditioning",
    description: "",
    category: "conditioning/inpaint",
    output_node: false,
  },
  CheckpointLoader: {
    input: {
      required: { config_name: [["__models__"]], ckpt_name: [["__models__"]] },
    },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "CheckpointLoader",
    display_name: "Load Checkpoint With Config (DEPRECATED)",
    description: "",
    category: "advanced/loaders",
    output_node: false,
  },
  DiffusersLoader: {
    input: { required: { model_path: [[]] } },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "DiffusersLoader",
    display_name: "DiffusersLoader",
    description: "",
    category: "advanced/loaders/deprecated",
    output_node: false,
  },
  LoadLatent: {
    input: { required: { latent: [[]] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LoadLatent",
    display_name: "LoadLatent",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  SaveLatent: {
    input: {
      required: {
        samples: ["LATENT"],
        filename_prefix: ["STRING", { default: "latents/ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SaveLatent",
    display_name: "SaveLatent",
    description: "",
    category: "_for_testing",
    output_node: true,
  },
  ConditioningZeroOut: {
    input: { required: { conditioning: ["CONDITIONING"] } },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningZeroOut",
    display_name: "ConditioningZeroOut",
    description: "",
    category: "advanced/conditioning",
    output_node: false,
  },
  ConditioningSetTimestepRange: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        start: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetTimestepRange",
    display_name: "ConditioningSetTimestepRange",
    description: "",
    category: "advanced/conditioning",
    output_node: false,
  },
  LoraLoaderModelOnly: {
    input: {
      required: {
        model: ["MODEL"],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -20.0, max: 20.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "LoraLoaderModelOnly",
    display_name: "LoraLoaderModelOnly",
    description: "",
    category: "loaders",
    output_node: false,
  },
  LatentAdd: {
    input: { required: { samples1: ["LATENT"], samples2: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentAdd",
    display_name: "LatentAdd",
    description: "",
    category: "latent/advanced",
    output_node: false,
  },
  LatentSubtract: {
    input: { required: { samples1: ["LATENT"], samples2: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentSubtract",
    display_name: "LatentSubtract",
    description: "",
    category: "latent/advanced",
    output_node: false,
  },
  LatentMultiply: {
    input: {
      required: {
        samples: ["LATENT"],
        multiplier: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentMultiply",
    display_name: "LatentMultiply",
    description: "",
    category: "latent/advanced",
    output_node: false,
  },
  LatentInterpolate: {
    input: {
      required: {
        samples1: ["LATENT"],
        samples2: ["LATENT"],
        ratio: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentInterpolate",
    display_name: "LatentInterpolate",
    description: "",
    category: "latent/advanced",
    output_node: false,
  },
  LatentBatch: {
    input: { required: { samples1: ["LATENT"], samples2: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentBatch",
    display_name: "LatentBatch",
    description: "",
    category: "latent/batch",
    output_node: false,
  },
  LatentBatchSeedBehavior: {
    input: {
      required: {
        samples: ["LATENT"],
        seed_behavior: [["random", "fixed"], { default: "fixed" }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentBatchSeedBehavior",
    display_name: "LatentBatchSeedBehavior",
    description: "",
    category: "latent/advanced",
    output_node: false,
  },
  HypernetworkLoader: {
    input: {
      required: {
        model: ["MODEL"],
        hypernetwork_name: [["__models__"]],
        strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "HypernetworkLoader",
    display_name: "HypernetworkLoader",
    description: "",
    category: "loaders",
    output_node: false,
  },
  UpscaleModelLoader: {
    input: { required: { model_name: [["__models__"]] } },
    output: ["UPSCALE_MODEL"],
    output_is_list: [false],
    output_name: ["UPSCALE_MODEL"],
    name: "UpscaleModelLoader",
    display_name: "Load Upscale Model",
    description: "",
    category: "loaders",
    output_node: false,
  },
  ImageUpscaleWithModel: {
    input: { required: { upscale_model: ["UPSCALE_MODEL"], image: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageUpscaleWithModel",
    display_name: "Upscale Image (using Model)",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  ImageBlend: {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        blend_factor: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        blend_mode: [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference",
          ],
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBlend",
    display_name: "ImageBlend",
    description: "",
    category: "image/postprocessing",
    output_node: false,
  },
  ImageBlur: {
    input: {
      required: {
        image: ["IMAGE"],
        blur_radius: ["INT", { default: 1, min: 1, max: 31, step: 1 }],
        sigma: ["FLOAT", { default: 1.0, min: 0.1, max: 10.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBlur",
    display_name: "ImageBlur",
    description: "",
    category: "image/postprocessing",
    output_node: false,
  },
  ImageQuantize: {
    input: {
      required: {
        image: ["IMAGE"],
        colors: ["INT", { default: 256, min: 1, max: 256, step: 1 }],
        dither: [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16",
          ],
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageQuantize",
    display_name: "ImageQuantize",
    description: "",
    category: "image/postprocessing",
    output_node: false,
  },
  ImageSharpen: {
    input: {
      required: {
        image: ["IMAGE"],
        sharpen_radius: ["INT", { default: 1, min: 1, max: 31, step: 1 }],
        sigma: ["FLOAT", { default: 1.0, min: 0.1, max: 10.0, step: 0.1 }],
        alpha: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageSharpen",
    display_name: "ImageSharpen",
    description: "",
    category: "image/postprocessing",
    output_node: false,
  },
  ImageScaleToTotalPixels: {
    input: {
      required: {
        image: ["IMAGE"],
        upscale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"],
        ],
        megapixels: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 16.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageScaleToTotalPixels",
    display_name: "ImageScaleToTotalPixels",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  LatentCompositeMasked: {
    input: {
      required: {
        destination: ["LATENT"],
        source: ["LATENT"],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        resize_source: ["BOOLEAN", { default: false }],
      },
      optional: { mask: ["MASK"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentCompositeMasked",
    display_name: "LatentCompositeMasked",
    description: "",
    category: "latent",
    output_node: false,
  },
  ImageCompositeMasked: {
    input: {
      required: {
        destination: ["IMAGE"],
        source: ["IMAGE"],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        resize_source: ["BOOLEAN", { default: false }],
      },
      optional: { mask: ["MASK"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageCompositeMasked",
    display_name: "ImageCompositeMasked",
    description: "",
    category: "image",
    output_node: false,
  },
  MaskToImage: {
    input: { required: { mask: ["MASK"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "MaskToImage",
    display_name: "Mask To Image (mtb)",
    description: "",
    category: "mask",
    output_node: false,
  },
  ImageToMask: {
    input: {
      required: {
        image: ["IMAGE"],
        channel: [["red", "green", "blue", "alpha"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ImageToMask",
    display_name: "Convert Image to Mask",
    description: "",
    category: "mask",
    output_node: false,
  },
  ImageColorToMask: {
    input: {
      required: {
        image: ["IMAGE"],
        color: [
          "INT",
          { default: 0, min: 0, max: 16777215, step: 1, display: "color" },
        ],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ImageColorToMask",
    display_name: "ImageColorToMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  SolidMask: {
    input: {
      required: {
        value: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "SolidMask",
    display_name: "SolidMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  InvertMask: {
    input: { required: { mask: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "InvertMask",
    display_name: "InvertMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  CropMask: {
    input: {
      required: {
        mask: ["MASK"],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "CropMask",
    display_name: "CropMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  MaskComposite: {
    input: {
      required: {
        destination: ["MASK"],
        source: ["MASK"],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        operation: [["multiply", "add", "subtract", "and", "or", "xor"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskComposite",
    display_name: "MaskComposite",
    description: "",
    category: "mask",
    output_node: false,
  },
  FeatherMask: {
    input: {
      required: {
        mask: ["MASK"],
        left: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        top: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        right: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        bottom: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "FeatherMask",
    display_name: "FeatherMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  GrowMask: {
    input: {
      required: {
        mask: ["MASK"],
        expand: ["INT", { default: 0, min: -8192, max: 8192, step: 1 }],
        tapered_corners: ["BOOLEAN", { default: true }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "GrowMask",
    display_name: "GrowMask",
    description: "",
    category: "mask",
    output_node: false,
  },
  PorterDuffImageComposite: {
    input: {
      required: {
        source: ["IMAGE"],
        source_alpha: ["MASK"],
        destination: ["IMAGE"],
        destination_alpha: ["MASK"],
        mode: [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR",
          ],
          { default: "DST" },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "PorterDuffImageComposite",
    display_name: "Porter-Duff Image Composite",
    description: "",
    category: "mask/compositing",
    output_node: false,
  },
  SplitImageWithAlpha: {
    input: { required: { image: ["IMAGE"] } },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "SplitImageWithAlpha",
    display_name: "Split Image with Alpha",
    description: "",
    category: "mask/compositing",
    output_node: false,
  },
  JoinImageWithAlpha: {
    input: { required: { image: ["IMAGE"], alpha: ["MASK"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "JoinImageWithAlpha",
    display_name: "Join Image with Alpha",
    description: "",
    category: "mask/compositing",
    output_node: false,
  },
  RebatchLatents: {
    input: {
      required: {
        latents: ["LATENT"],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [true],
    output_name: ["LATENT"],
    name: "RebatchLatents",
    display_name: "Rebatch Latents",
    description: "",
    category: "latent/batch",
    output_node: false,
  },
  RebatchImages: {
    input: {
      required: {
        images: ["IMAGE"],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "RebatchImages",
    display_name: "Rebatch Images",
    description: "",
    category: "image/batch",
    output_node: false,
  },
  ModelMergeSimple: {
    input: {
      required: {
        model1: ["MODEL"],
        model2: ["MODEL"],
        ratio: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelMergeSimple",
    display_name: "ModelMergeSimple",
    description: "",
    category: "advanced/model_merging",
    output_node: false,
  },
  ModelMergeBlocks: {
    input: {
      required: {
        model1: ["MODEL"],
        model2: ["MODEL"],
        input: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        middle: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        out: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelMergeBlocks",
    display_name: "ModelMergeBlocks",
    description: "",
    category: "advanced/model_merging",
    output_node: false,
  },
  ModelMergeSubtract: {
    input: {
      required: {
        model1: ["MODEL"],
        model2: ["MODEL"],
        multiplier: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelMergeSubtract",
    display_name: "ModelMergeSubtract",
    description: "",
    category: "advanced/model_merging",
    output_node: false,
  },
  ModelMergeAdd: {
    input: { required: { model1: ["MODEL"], model2: ["MODEL"] } },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelMergeAdd",
    display_name: "ModelMergeAdd",
    description: "",
    category: "advanced/model_merging",
    output_node: false,
  },
  CheckpointSave: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        filename_prefix: ["STRING", { default: "checkpoints/ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CheckpointSave",
    display_name: "CheckpointSave",
    description: "",
    category: "advanced/model_merging",
    output_node: true,
  },
  CLIPMergeSimple: {
    input: {
      required: {
        clip1: ["CLIP"],
        clip2: ["CLIP"],
        ratio: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["CLIP"],
    output_is_list: [false],
    output_name: ["CLIP"],
    name: "CLIPMergeSimple",
    display_name: "CLIPMergeSimple",
    description: "",
    category: "advanced/model_merging",
    output_node: false,
  },
  CLIPSave: {
    input: {
      required: {
        clip: ["CLIP"],
        filename_prefix: ["STRING", { default: "clip/ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CLIPSave",
    display_name: "CLIPSave",
    description: "",
    category: "advanced/model_merging",
    output_node: true,
  },
  VAESave: {
    input: {
      required: {
        vae: ["VAE"],
        filename_prefix: ["STRING", { default: "vae/ComfyUI_vae" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "VAESave",
    display_name: "VAESave",
    description: "",
    category: "advanced/model_merging",
    output_node: true,
  },
  TomePatchModel: {
    input: {
      required: {
        model: ["MODEL"],
        ratio: ["FLOAT", { default: 0.3, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "TomePatchModel",
    display_name: "TomePatchModel",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  CLIPTextEncodeSDXLRefiner: {
    input: {
      required: {
        ascore: ["FLOAT", { default: 6.0, min: 0.0, max: 1000.0, step: 0.01 }],
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text: ["STRING", { multiline: true }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncodeSDXLRefiner",
    display_name: "CLIPTextEncodeSDXLRefiner",
    description: "",
    category: "advanced/conditioning",
    output_node: false,
  },
  CLIPTextEncodeSDXL: {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text_g: ["STRING", { multiline: true, default: "CLIP_G" }],
        clip: ["CLIP"],
        text_l: ["STRING", { multiline: true, default: "CLIP_L" }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncodeSDXL",
    display_name: "CLIPTextEncodeSDXL",
    description: "",
    category: "advanced/conditioning",
    output_node: false,
  },
  Canny: {
    input: {
      required: {
        image: ["IMAGE"],
        low_threshold: [
          "FLOAT",
          { default: 0.4, min: 0.01, max: 0.99, step: 0.01 },
        ],
        high_threshold: [
          "FLOAT",
          { default: 0.8, min: 0.01, max: 0.99, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Canny",
    display_name: "Canny",
    description: "",
    category: "image/preprocessors",
    output_node: false,
  },
  FreeU: {
    input: {
      required: {
        model: ["MODEL"],
        b1: ["FLOAT", { default: 1.1, min: 0.0, max: 10.0, step: 0.01 }],
        b2: ["FLOAT", { default: 1.2, min: 0.0, max: 10.0, step: 0.01 }],
        s1: ["FLOAT", { default: 0.9, min: 0.0, max: 10.0, step: 0.01 }],
        s2: ["FLOAT", { default: 0.2, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "FreeU",
    display_name: "FreeU",
    description: "",
    category: "model_patches",
    output_node: false,
  },
  FreeU_V2: {
    input: {
      required: {
        model: ["MODEL"],
        b1: ["FLOAT", { default: 1.3, min: 0.0, max: 10.0, step: 0.01 }],
        b2: ["FLOAT", { default: 1.4, min: 0.0, max: 10.0, step: 0.01 }],
        s1: ["FLOAT", { default: 0.9, min: 0.0, max: 10.0, step: 0.01 }],
        s2: ["FLOAT", { default: 0.2, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "FreeU_V2",
    display_name: "FreeU_V2",
    description: "",
    category: "model_patches",
    output_node: false,
  },
  SamplerCustom: {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: ["BOOLEAN", { default: true }],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.1, round: 0.01 },
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        sampler: ["SAMPLER"],
        sigmas: ["SIGMAS"],
        latent_image: ["LATENT"],
      },
    },
    output: ["LATENT", "LATENT"],
    output_is_list: [false, false],
    output_name: ["output", "denoised_output"],
    name: "SamplerCustom",
    display_name: "SamplerCustom",
    description: "",
    category: "sampling/custom_sampling",
    output_node: false,
  },
  BasicScheduler: {
    input: {
      required: {
        model: ["MODEL"],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "BasicScheduler",
    display_name: "BasicScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  KarrasScheduler: {
    input: {
      required: {
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        sigma_max: [
          "FLOAT",
          {
            default: 14.614642,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
        sigma_min: [
          "FLOAT",
          {
            default: 0.0291675,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
        rho: [
          "FLOAT",
          { default: 7.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "KarrasScheduler",
    display_name: "KarrasScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  ExponentialScheduler: {
    input: {
      required: {
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        sigma_max: [
          "FLOAT",
          {
            default: 14.614642,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
        sigma_min: [
          "FLOAT",
          {
            default: 0.0291675,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "ExponentialScheduler",
    display_name: "ExponentialScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  PolyexponentialScheduler: {
    input: {
      required: {
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        sigma_max: [
          "FLOAT",
          {
            default: 14.614642,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
        sigma_min: [
          "FLOAT",
          {
            default: 0.0291675,
            min: 0.0,
            max: 1000.0,
            step: 0.01,
            round: false,
          },
        ],
        rho: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "PolyexponentialScheduler",
    display_name: "PolyexponentialScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  VPScheduler: {
    input: {
      required: {
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        beta_d: [
          "FLOAT",
          { default: 19.9, min: 0.0, max: 1000.0, step: 0.01, round: false },
        ],
        beta_min: [
          "FLOAT",
          { default: 0.1, min: 0.0, max: 1000.0, step: 0.01, round: false },
        ],
        eps_s: [
          "FLOAT",
          { default: 0.001, min: 0.0, max: 1.0, step: 0.0001, round: false },
        ],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "VPScheduler",
    display_name: "VPScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  SDTurboScheduler: {
    input: {
      required: {
        model: ["MODEL"],
        steps: ["INT", { default: 1, min: 1, max: 10 }],
        denoise: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "SDTurboScheduler",
    display_name: "SDTurboScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  KSamplerSelect: {
    input: {
      required: {
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
      },
    },
    output: ["SAMPLER"],
    output_is_list: [false],
    output_name: ["SAMPLER"],
    name: "KSamplerSelect",
    display_name: "KSamplerSelect",
    description: "",
    category: "sampling/custom_sampling/samplers",
    output_node: false,
  },
  SamplerDPMPP_2M_SDE: {
    input: {
      required: {
        solver_type: [["midpoint", "heun"]],
        eta: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
        s_noise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
        noise_device: [["gpu", "cpu"]],
      },
    },
    output: ["SAMPLER"],
    output_is_list: [false],
    output_name: ["SAMPLER"],
    name: "SamplerDPMPP_2M_SDE",
    display_name: "SamplerDPMPP_2M_SDE",
    description: "",
    category: "sampling/custom_sampling/samplers",
    output_node: false,
  },
  SamplerDPMPP_SDE: {
    input: {
      required: {
        eta: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
        s_noise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
        r: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 100.0, step: 0.01, round: false },
        ],
        noise_device: [["gpu", "cpu"]],
      },
    },
    output: ["SAMPLER"],
    output_is_list: [false],
    output_name: ["SAMPLER"],
    name: "SamplerDPMPP_SDE",
    display_name: "SamplerDPMPP_SDE",
    description: "",
    category: "sampling/custom_sampling/samplers",
    output_node: false,
  },
  SplitSigmas: {
    input: {
      required: {
        sigmas: ["SIGMAS"],
        step: ["INT", { default: 0, min: 0, max: 10000 }],
      },
    },
    output: ["SIGMAS", "SIGMAS"],
    output_is_list: [false, false],
    output_name: ["SIGMAS", "SIGMAS"],
    name: "SplitSigmas",
    display_name: "SplitSigmas",
    description: "",
    category: "sampling/custom_sampling/sigmas",
    output_node: false,
  },
  FlipSigmas: {
    input: { required: { sigmas: ["SIGMAS"] } },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "FlipSigmas",
    display_name: "FlipSigmas",
    description: "",
    category: "sampling/custom_sampling/sigmas",
    output_node: false,
  },
  HyperTile: {
    input: {
      required: {
        model: ["MODEL"],
        tile_size: ["INT", { default: 256, min: 1, max: 2048 }],
        swap_size: ["INT", { default: 2, min: 1, max: 128 }],
        max_depth: ["INT", { default: 0, min: 0, max: 10 }],
        scale_depth: ["BOOLEAN", { default: false }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "HyperTile",
    display_name: "HyperTile",
    description: "",
    category: "model_patches",
    output_node: false,
  },
  ModelSamplingDiscrete: {
    input: {
      required: {
        model: ["MODEL"],
        sampling: [["eps", "v_prediction", "lcm", "x0"]],
        zsnr: ["BOOLEAN", { default: false }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelSamplingDiscrete",
    display_name: "ModelSamplingDiscrete",
    description: "",
    category: "advanced/model",
    output_node: false,
  },
  ModelSamplingContinuousEDM: {
    input: {
      required: {
        model: ["MODEL"],
        sampling: [["v_prediction", "edm_playground_v2.5", "eps"]],
        sigma_max: [
          "FLOAT",
          { default: 120.0, min: 0.0, max: 1000.0, step: 0.001, round: false },
        ],
        sigma_min: [
          "FLOAT",
          { default: 0.002, min: 0.0, max: 1000.0, step: 0.001, round: false },
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelSamplingContinuousEDM",
    display_name: "ModelSamplingContinuousEDM",
    description: "",
    category: "advanced/model",
    output_node: false,
  },
  ModelSamplingStableCascade: {
    input: {
      required: {
        model: ["MODEL"],
        shift: ["FLOAT", { default: 2.0, min: 0.0, max: 100.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelSamplingStableCascade",
    display_name: "ModelSamplingStableCascade",
    description: "",
    category: "advanced/model",
    output_node: false,
  },
  RescaleCFG: {
    input: {
      required: {
        model: ["MODEL"],
        multiplier: ["FLOAT", { default: 0.7, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "RescaleCFG",
    display_name: "RescaleCFG",
    description: "",
    category: "advanced/model",
    output_node: false,
  },
  PatchModelAddDownscale: {
    input: {
      required: {
        model: ["MODEL"],
        block_number: ["INT", { default: 3, min: 1, max: 32, step: 1 }],
        downscale_factor: [
          "FLOAT",
          { default: 2.0, min: 0.1, max: 9.0, step: 0.001 },
        ],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 0.35, min: 0.0, max: 1.0, step: 0.001 },
        ],
        downscale_after_skip: ["BOOLEAN", { default: true }],
        downscale_method: [
          ["bicubic", "nearest-exact", "bilinear", "area", "bislerp"],
        ],
        upscale_method: [
          ["bicubic", "nearest-exact", "bilinear", "area", "bislerp"],
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "PatchModelAddDownscale",
    display_name: "PatchModelAddDownscale (Kohya Deep Shrink)",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  ImageCrop: {
    input: {
      required: {
        image: ["IMAGE"],
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        x: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        y: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageCrop",
    display_name: "ImageCrop",
    description: "",
    category: "image/transform",
    output_node: false,
  },
  RepeatImageBatch: {
    input: {
      required: {
        image: ["IMAGE"],
        amount: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "RepeatImageBatch",
    display_name: "RepeatImageBatch",
    description: "",
    category: "image/batch",
    output_node: false,
  },
  ImageFromBatch: {
    input: {
      required: {
        image: ["IMAGE"],
        batch_index: ["INT", { default: 0, min: 0, max: 63 }],
        length: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageFromBatch",
    display_name: "ImageFromBatch",
    description: "",
    category: "image/batch",
    output_node: false,
  },
  SaveAnimatedWEBP: {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
        fps: ["FLOAT", { default: 6.0, min: 0.01, max: 1000.0, step: 0.01 }],
        lossless: ["BOOLEAN", { default: true }],
        quality: ["INT", { default: 80, min: 0, max: 100 }],
        method: [["default", "fastest", "slowest"]],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SaveAnimatedWEBP",
    display_name: "SaveAnimatedWEBP",
    description: "",
    category: "image/animation",
    output_node: true,
  },
  SaveAnimatedPNG: {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
        fps: ["FLOAT", { default: 6.0, min: 0.01, max: 1000.0, step: 0.01 }],
        compress_level: ["INT", { default: 4, min: 0, max: 9 }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SaveAnimatedPNG",
    display_name: "SaveAnimatedPNG",
    description: "",
    category: "image/animation",
    output_node: true,
  },
  ImageOnlyCheckpointLoader: {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP_VISION", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP_VISION", "VAE"],
    name: "ImageOnlyCheckpointLoader",
    display_name: "Image Only Checkpoint Loader (img2vid model)",
    description: "",
    category: "loaders/video_models",
    output_node: false,
  },
  SVD_img2vid_Conditioning: {
    input: {
      required: {
        clip_vision: ["CLIP_VISION"],
        init_image: ["IMAGE"],
        vae: ["VAE"],
        width: ["INT", { default: 1024, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 576, min: 16, max: 8192, step: 8 }],
        video_frames: ["INT", { default: 14, min: 1, max: 4096 }],
        motion_bucket_id: ["INT", { default: 127, min: 1, max: 1023 }],
        fps: ["INT", { default: 6, min: 1, max: 1024 }],
        augmentation_level: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "SVD_img2vid_Conditioning",
    display_name: "SVD_img2vid_Conditioning",
    description: "",
    category: "conditioning/video_models",
    output_node: false,
  },
  VideoLinearCFGGuidance: {
    input: {
      required: {
        model: ["MODEL"],
        min_cfg: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.5, round: 0.01 },
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "VideoLinearCFGGuidance",
    display_name: "VideoLinearCFGGuidance",
    description: "",
    category: "sampling/video_models",
    output_node: false,
  },
  ImageOnlyCheckpointSave: {
    input: {
      required: {
        model: ["MODEL"],
        clip_vision: ["CLIP_VISION"],
        vae: ["VAE"],
        filename_prefix: ["STRING", { default: "checkpoints/ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImageOnlyCheckpointSave",
    display_name: "ImageOnlyCheckpointSave",
    description: "",
    category: "_for_testing",
    output_node: true,
  },
  SelfAttentionGuidance: {
    input: {
      required: {
        model: ["MODEL"],
        scale: ["FLOAT", { default: 0.5, min: -2.0, max: 5.0, step: 0.1 }],
        blur_sigma: ["FLOAT", { default: 2.0, min: 0.0, max: 10.0, step: 0.1 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "SelfAttentionGuidance",
    display_name: "Self-Attention Guidance",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  PerpNeg: {
    input: {
      required: {
        model: ["MODEL"],
        empty_conditioning: ["CONDITIONING"],
        neg_scale: ["FLOAT", { default: 1.0, min: 0.0, max: 100.0 }],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "PerpNeg",
    display_name: "Perp-Neg",
    description: "",
    category: "_for_testing",
    output_node: false,
  },
  StableZero123_Conditioning: {
    input: {
      required: {
        clip_vision: ["CLIP_VISION"],
        init_image: ["IMAGE"],
        vae: ["VAE"],
        width: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
        elevation: ["FLOAT", { default: 0.0, min: -180.0, max: 180.0 }],
        azimuth: ["FLOAT", { default: 0.0, min: -180.0, max: 180.0 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "StableZero123_Conditioning",
    display_name: "StableZero123_Conditioning",
    description: "",
    category: "conditioning/3d_models",
    output_node: false,
  },
  StableZero123_Conditioning_Batched: {
    input: {
      required: {
        clip_vision: ["CLIP_VISION"],
        init_image: ["IMAGE"],
        vae: ["VAE"],
        width: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
        elevation: ["FLOAT", { default: 0.0, min: -180.0, max: 180.0 }],
        azimuth: ["FLOAT", { default: 0.0, min: -180.0, max: 180.0 }],
        elevation_batch_increment: [
          "FLOAT",
          { default: 0.0, min: -180.0, max: 180.0 },
        ],
        azimuth_batch_increment: [
          "FLOAT",
          { default: 0.0, min: -180.0, max: 180.0 },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "StableZero123_Conditioning_Batched",
    display_name: "StableZero123_Conditioning_Batched",
    description: "",
    category: "conditioning/3d_models",
    output_node: false,
  },
  SD_4XUpscale_Conditioning: {
    input: {
      required: {
        images: ["IMAGE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        scale_ratio: [
          "FLOAT",
          { default: 4.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        noise_augmentation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "SD_4XUpscale_Conditioning",
    display_name: "SD_4XUpscale_Conditioning",
    description: "",
    category: "conditioning/upscale_diffusion",
    output_node: false,
  },
  PhotoMakerLoader: {
    input: { required: { photomaker_model_name: [["__models__"]] } },
    output: ["PHOTOMAKER"],
    output_is_list: [false],
    output_name: ["PHOTOMAKER"],
    name: "PhotoMakerLoader",
    display_name: "PhotoMakerLoader",
    description: "",
    category: "_for_testing/photomaker",
    output_node: false,
  },
  PhotoMakerEncode: {
    input: {
      required: {
        photomaker: ["PHOTOMAKER"],
        image: ["IMAGE"],
        clip: ["CLIP"],
        text: [
          "STRING",
          { multiline: true, default: "photograph of photomaker" },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "PhotoMakerEncode",
    display_name: "PhotoMakerEncode",
    description: "",
    category: "_for_testing/photomaker",
    output_node: false,
  },
  CLIPTextEncodeControlnet: {
    input: {
      required: {
        clip: ["CLIP"],
        conditioning: ["CONDITIONING"],
        text: ["STRING", { multiline: true }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncodeControlnet",
    display_name: "CLIPTextEncodeControlnet",
    description: "",
    category: "_for_testing/conditioning",
    output_node: false,
  },
  StableCascade_EmptyLatentImage: {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 256, max: 8192, step: 8 }],
        height: ["INT", { default: 1024, min: 256, max: 8192, step: 8 }],
        compression: ["INT", { default: 42, min: 4, max: 128, step: 1 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT", "LATENT"],
    output_is_list: [false, false],
    output_name: ["stage_c", "stage_b"],
    name: "StableCascade_EmptyLatentImage",
    display_name: "StableCascade_EmptyLatentImage",
    description: "",
    category: "_for_testing/stable_cascade",
    output_node: false,
  },
  StableCascade_StageB_Conditioning: {
    input: {
      required: { conditioning: ["CONDITIONING"], stage_c: ["LATENT"] },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "StableCascade_StageB_Conditioning",
    display_name: "StableCascade_StageB_Conditioning",
    description: "",
    category: "_for_testing/stable_cascade",
    output_node: false,
  },
  StableCascade_StageC_VAEEncode: {
    input: {
      required: {
        image: ["IMAGE"],
        vae: ["VAE"],
        compression: ["INT", { default: 42, min: 4, max: 128, step: 1 }],
      },
    },
    output: ["LATENT", "LATENT"],
    output_is_list: [false, false],
    output_name: ["stage_c", "stage_b"],
    name: "StableCascade_StageC_VAEEncode",
    display_name: "StableCascade_StageC_VAEEncode",
    description: "",
    category: "_for_testing/stable_cascade",
    output_node: false,
  },
  "0246.Highway": {
    input: {
      required: {
        _query: ["STRING", { default: ">data; <data", multiline: false }],
      },
      optional: { _way_in: ["HIGHWAY_PIPE"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["HIGHWAY_PIPE"],
    output_is_list: [false],
    output_name: ["_way_out"],
    name: "0246.Highway",
    display_name: "Highway",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.HighwayBatch": {
    input: {
      required: {
        _query: ["STRING", { default: ">data; <data", multiline: false }],
      },
      optional: { _way_in: ["HIGHWAY_PIPE"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["HIGHWAY_PIPE"],
    output_is_list: {},
    output_name: ["_way_out"],
    name: "0246.HighwayBatch",
    display_name: "Highway Batch",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Junction": {
    input: {
      required: { _offset: ["STRING", { default: ";", multiline: false }] },
      optional: { _junc_in: ["JUNCTION_PIPE"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["JUNCTION_PIPE"],
    output_is_list: [false],
    output_name: ["_junc_out"],
    name: "0246.Junction",
    display_name: "Junction",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.JunctionBatch": {
    input: {
      required: {
        _offset: ["STRING", { default: ";", multiline: false }],
        _mode: [["pluck", "batch"]],
      },
      optional: { _junc_in: ["JUNCTION_PIPE"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["JUNCTION_PIPE"],
    output_is_list: [false],
    output_name: ["_junc_out"],
    name: "0246.JunctionBatch",
    display_name: "Junction Batch",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.RandomInt": {
    input: {
      required: {
        val: ["STRING", { default: "rand,0", multiline: false }],
        min: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
        max: [
          "INT",
          {
            default: 9007199254740991,
            min: -9007199254740991,
            max: 9007199254740991,
          },
        ],
        batch_size: ["INT", { default: 2, min: 1, max: 9223372036854775807 }],
        mode: [["usual", "keep", "force"]],
      },
      optional: {
        seed: [
          "INT",
          { default: 0, min: -1125899906842624, max: 1125899906842624 },
        ],
      },
      hidden: { _id: "UNIQUE_ID" },
    },
    output: ["INT"],
    output_is_list: [true],
    output_name: ["rand_int"],
    name: "0246.RandomInt",
    display_name: "Random Int",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Count": {
    input: {
      required: {
        _node: ["*"],
        _event: ["STRING", { default: "10", multiline: false }],
      },
      hidden: { _id: "UNIQUE_ID" },
    },
    output: ["INT", "EVENT_TYPE"],
    output_is_list: [false, false],
    output_name: ["_count_int", "_count_event"],
    name: "0246.Count",
    display_name: "Count",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Hold": {
    input: {
      required: {
        _mode: [["save", "clear", "pin"]],
        _key_id: ["STRING", { default: "", multiline: false }],
      },
      optional: { _data_in: ["*"], _hold: ["HOLD_TYPE"] },
      hidden: {
        _id: "UNIQUE_ID",
        _prompt: "PROMPT",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["_data_out"],
    name: "0246.Hold",
    display_name: "Hold",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Loop": {
    input: {
      required: {
        _event: ["*"],
        _mode: [["sweep"]],
        _update: ["STRING", { default: "{'update': ''}", multiline: false }],
      },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
        _dynprompt: "DYNPROMPT",
      },
    },
    output: ["HOLD_TYPE"],
    output_is_list: [false],
    output_name: ["_hold"],
    name: "0246.Loop",
    display_name: "Loop",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Beautify": {
    input: {
      optional: { data: ["*"] },
      required: { mode: [["basic", "more", "full", "json"]] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "0246.Beautify",
    display_name: "Beautify",
    description: "",
    category: "0246",
    output_node: true,
  },
  "0246.Stringify": {
    input: {
      required: {
        _mode: [["basic", "value", "force"]],
        _delimiter: ["STRING", { default: ", ", multiline: false }],
      },
      hidden: {
        _id: "UNIQUE_ID",
        _prompt: "PROMPT",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["_str"],
    name: "0246.Stringify",
    display_name: "Stringify",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Merge": {
    input: {
      required: {
        _mode: [["flat", "deep"]],
        _pad: ["STRING", { default: "_", multiline: false }],
      },
    },
    output: ["HIGHWAY_PIPE", "JUNCTION_PIPE", "*"],
    output_is_list: [false, false, true],
    output_name: ["_way_out", "_junc_out", "_batch_out"],
    name: "0246.Merge",
    display_name: "Merge",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.BoxRange": {
    input: {
      required: {
        script_box_regex: [
          "STRING",
          {
            default:
              "(?P<x>^x$)|(?P<y>^y$)|(?P<w>^width$)|(?P<h>^height$)|(^@x$)|(^@y$)|(^@w$)|(^@h$)|(^%x$)|(^%y$)|(^%w$)|(^%h$)",
            multiline: false,
          },
        ],
        script_order: ["STRING", { default: "box", multiline: false }],
        box_range: [
          "BOX_RANGE",
          {
            ratio: { data: { width: 512, height: 512 } },
            row_count: 10,
            col_count: 10,
            flex: { share: 1, min_h: 50, center: true },
          },
        ],
      },
      hidden: { _id: "UNIQUE_ID" },
    },
    output: ["*"],
    output_is_list: {},
    output_name: ["_data"],
    name: "0246.BoxRange",
    display_name: "Box Range",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.ScriptNode": {
    input: {
      required: {
        script_node: [
          [
            "KSampler",
            "CheckpointLoaderSimple",
            "CLIPTextEncode",
            "CLIPSetLastLayer",
            "VAEDecode",
            "VAEEncode",
            "VAEEncodeForInpaint",
            "VAELoader",
            "EmptyLatentImage",
            "LatentUpscale",
            "LatentUpscaleBy",
            "LatentFromBatch",
            "RepeatLatentBatch",
            "SaveImage",
            "PreviewImage",
            "LoadImage",
            "LoadImageMask",
            "ImageScale",
            "ImageScaleBy",
            "ImageInvert",
            "ImageBatch",
            "ImagePadForOutpaint",
            "EmptyImage",
            "ConditioningAverage",
            "ConditioningCombine",
            "ConditioningConcat",
            "ConditioningSetArea",
            "ConditioningSetAreaPercentage",
            "ConditioningSetAreaStrength",
            "ConditioningSetMask",
            "KSamplerAdvanced",
            "SetLatentNoiseMask",
            "LatentComposite",
            "LatentBlend",
            "LatentRotate",
            "LatentFlip",
            "LatentCrop",
            "LoraLoader",
            "CLIPLoader",
            "UNETLoader",
            "DualCLIPLoader",
            "CLIPVisionEncode",
            "StyleModelApply",
            "unCLIPConditioning",
            "ControlNetApply",
            "ControlNetApplyAdvanced",
            "ControlNetLoader",
            "DiffControlNetLoader",
            "StyleModelLoader",
            "CLIPVisionLoader",
            "VAEDecodeTiled",
            "VAEEncodeTiled",
            "unCLIPCheckpointLoader",
            "GLIGENLoader",
            "GLIGENTextBoxApply",
            "InpaintModelConditioning",
            "CheckpointLoader",
            "DiffusersLoader",
            "LoadLatent",
            "SaveLatent",
            "ConditioningZeroOut",
            "ConditioningSetTimestepRange",
            "LoraLoaderModelOnly",
            "LatentAdd",
            "LatentSubtract",
            "LatentMultiply",
            "LatentInterpolate",
            "LatentBatch",
            "LatentBatchSeedBehavior",
            "HypernetworkLoader",
            "UpscaleModelLoader",
            "ImageUpscaleWithModel",
            "ImageBlend",
            "ImageBlur",
            "ImageQuantize",
            "ImageSharpen",
            "ImageScaleToTotalPixels",
            "LatentCompositeMasked",
            "ImageCompositeMasked",
            "MaskToImage",
            "ImageToMask",
            "ImageColorToMask",
            "SolidMask",
            "InvertMask",
            "CropMask",
            "MaskComposite",
            "FeatherMask",
            "GrowMask",
            "PorterDuffImageComposite",
            "SplitImageWithAlpha",
            "JoinImageWithAlpha",
            "RebatchLatents",
            "RebatchImages",
            "ModelMergeSimple",
            "ModelMergeBlocks",
            "ModelMergeSubtract",
            "ModelMergeAdd",
            "CheckpointSave",
            "CLIPMergeSimple",
            "CLIPSave",
            "VAESave",
            "TomePatchModel",
            "CLIPTextEncodeSDXLRefiner",
            "CLIPTextEncodeSDXL",
            "Canny",
            "FreeU",
            "FreeU_V2",
            "SamplerCustom",
            "BasicScheduler",
            "KarrasScheduler",
            "ExponentialScheduler",
            "PolyexponentialScheduler",
            "VPScheduler",
            "SDTurboScheduler",
            "KSamplerSelect",
            "SamplerDPMPP_2M_SDE",
            "SamplerDPMPP_SDE",
            "SplitSigmas",
            "FlipSigmas",
            "HyperTile",
            "ModelSamplingDiscrete",
            "ModelSamplingContinuousEDM",
            "ModelSamplingStableCascade",
            "RescaleCFG",
            "PatchModelAddDownscale",
            "ImageCrop",
            "RepeatImageBatch",
            "ImageFromBatch",
            "SaveAnimatedWEBP",
            "SaveAnimatedPNG",
            "ImageOnlyCheckpointLoader",
            "SVD_img2vid_Conditioning",
            "VideoLinearCFGGuidance",
            "ImageOnlyCheckpointSave",
            "SelfAttentionGuidance",
            "PerpNeg",
            "StableZero123_Conditioning",
            "StableZero123_Conditioning_Batched",
            "SD_4XUpscale_Conditioning",
            "PhotoMakerLoader",
            "PhotoMakerEncode",
            "CLIPTextEncodeControlnet",
            "StableCascade_EmptyLatentImage",
            "StableCascade_StageB_Conditioning",
            "StableCascade_StageC_VAEEncode",
            "0246.Highway",
            "0246.HighwayBatch",
            "0246.Junction",
            "0246.JunctionBatch",
            "0246.RandomInt",
            "0246.Count",
            "0246.Hold",
            "0246.Loop",
            "0246.Beautify",
            "0246.Stringify",
            "0246.Merge",
            "0246.BoxRange",
            "0246.ScriptNode",
            "0246.ScriptRule",
            "0246.ScriptPile",
            "0246.Script",
            "0246.Hub",
            "0246.Cloud",
            "0246.Switch",
            "0246.Meta",
            "ProPostVignette",
            "ProPostFilmGrain",
            "ProPostRadialBlur",
            "ProPostDepthMapBlur",
            "ProPostApplyLUT",
            "ReActorFaceSwap",
            "ReActorLoadFaceModel",
            "ReActorSaveFaceModel",
            "ReActorRestoreFace",
            "BNK_NoisyLatentImage",
            "BNK_SlerpLatent",
            "BNK_GetSigma",
            "BNK_InjectNoise",
            "BNK_Unsampler",
            "PortraitMaster",
            "ShowText|pysssss",
            "ConstrainImage|pysssss",
            "ReroutePrimitive|pysssss",
            "MathExpression|pysssss",
            "ConstrainImageforVideo|pysssss",
            "LoraLoader|pysssss",
            "CheckpointLoader|pysssss",
            "PlaySound|pysssss",
            "Repeater|pysssss",
            "StringFunction|pysssss",
            "BLIP Model Loader",
            "Blend Latents",
            "Bus Node",
            "Cache Node",
            "Checkpoint Loader",
            "Checkpoint Loader (Simple)",
            "CLIPTextEncode (NSP)",
            "CLIP Input Switch",
            "CLIP Vision Input Switch",
            "Conditioning Input Switch",
            "Constant Number",
            "Create Grid Image",
            "Create Grid Image from Batch",
            "Create Morph Image",
            "Create Morph Image from Path",
            "Create Video from Path",
            "CLIPSeg Masking",
            "CLIPSeg Model Loader",
            "CLIPSeg Batch Masking",
            "Convert Masks to Images",
            "Control Net Model Input Switch",
            "Debug Number to Console",
            "Dictionary to Console",
            "Diffusers Model Loader",
            "Diffusers Hub Model Down-Loader",
            "Export API",
            "Latent Input Switch",
            "Load Cache",
            "Logic Boolean",
            "Lora Loader",
            "Image SSAO (Ambient Occlusion)",
            "Image SSDO (Direct Occlusion)",
            "Image Analyze",
            "Image Aspect Ratio",
            "Image Batch",
            "Image Blank",
            "Image Blend by Mask",
            "Image Blend",
            "Image Blending Mode",
            "Image Bloom Filter",
            "Image Canny Filter",
            "Image Chromatic Aberration",
            "Image Color Palette",
            "Image Crop Face",
            "Image Crop Location",
            "Image Crop Square Location",
            "Image Displacement Warp",
            "Image Lucy Sharpen",
            "Image Paste Face",
            "Image Paste Crop",
            "Image Paste Crop by Location",
            "Image Pixelate",
            "Image Power Noise",
            "Image Dragan Photography Filter",
            "Image Edge Detection Filter",
            "Image Film Grain",
            "Image Filter Adjustments",
            "Image Flip",
            "Image Gradient Map",
            "Image Generate Gradient",
            "Image High Pass Filter",
            "Image History Loader",
            "Image Input Switch",
            "Image Levels Adjustment",
            "Image Load",
            "Image Median Filter",
            "Image Mix RGB Channels",
            "Image Monitor Effects Filter",
            "Image Nova Filter",
            "Image Padding",
            "Image Perlin Noise",
            "Image Rembg (Remove Background)",
            "Image Perlin Power Fractal",
            "Image Remove Background (Alpha)",
            "Image Remove Color",
            "Image Resize",
            "Image Rotate",
            "Image Rotate Hue",
            "Image Save",
            "Image Seamless Texture",
            "Image Select Channel",
            "Image Select Color",
            "Image Shadows and Highlights",
            "Image Size to Number",
            "Image Stitch",
            "Image Style Filter",
            "Image Threshold",
            "Image Tiled",
            "Image Transpose",
            "Image fDOF Filter",
            "Image to Latent Mask",
            "Image to Noise",
            "Image to Seed",
            "Images to RGB",
            "Images to Linear",
            "Integer place counter",
            "Image Voronoi Noise Filter",
            "KSampler (WAS)",
            "KSampler Cycle",
            "Latent Noise Injection",
            "Latent Size to Number",
            "Latent Upscale by Factor (WAS)",
            "Load Image Batch",
            "Load Text File",
            "Load Lora",
            "Lora Input Switch",
            "Masks Add",
            "Masks Subtract",
            "Mask Arbitrary Region",
            "Mask Batch to Mask",
            "Mask Batch",
            "Mask Ceiling Region",
            "Mask Crop Dominant Region",
            "Mask Crop Minority Region",
            "Mask Crop Region",
            "Mask Paste Region",
            "Mask Dilate Region",
            "Mask Dominant Region",
            "Mask Erode Region",
            "Mask Fill Holes",
            "Mask Floor Region",
            "Mask Gaussian Region",
            "Mask Invert",
            "Mask Minority Region",
            "Mask Smooth Region",
            "Mask Threshold Region",
            "Masks Combine Regions",
            "Masks Combine Batch",
            "MiDaS Model Loader",
            "MiDaS Depth Approximation",
            "MiDaS Mask Image",
            "Model Input Switch",
            "Number Counter",
            "Number Operation",
            "Number to Float",
            "Number Input Switch",
            "Number Input Condition",
            "Number Multiple Of",
            "Number PI",
            "Number to Int",
            "Number to Seed",
            "Number to String",
            "Number to Text",
            "Prompt Styles Selector",
            "Prompt Multiple Styles Selector",
            "Random Number",
            "Save Text File",
            "Seed",
            "Tensor Batch to Image",
            "BLIP Analyze Image",
            "SAM Model Loader",
            "SAM Parameters",
            "SAM Parameters Combine",
            "SAM Image Mask",
            "Samples Passthrough (Stat System)",
            "String to Text",
            "Image Bounds",
            "Inset Image Bounds",
            "Bounded Image Blend",
            "Bounded Image Blend with Mask",
            "Bounded Image Crop",
            "Bounded Image Crop with Mask",
            "Image Bounds to Console",
            "Text Dictionary Update",
            "Text Add Tokens",
            "Text Add Token by Input",
            "Text Compare",
            "Text Concatenate",
            "Text File History Loader",
            "Text Find and Replace by Dictionary",
            "Text Find and Replace Input",
            "Text Find and Replace",
            "Text Input Switch",
            "Text List",
            "Text List Concatenate",
            "Text List to Text",
            "Text Load Line From File",
            "Text Multiline",
            "Text Parse A1111 Embeddings",
            "Text Parse Noodle Soup Prompts",
            "Text Parse Tokens",
            "Text Random Line",
            "Text Random Prompt",
            "Text String",
            "Text Shuffle",
            "Text to Conditioning",
            "Text to Console",
            "Text to Number",
            "Text to String",
            "Text String Truncate",
            "True Random.org Number Generator",
            "unCLIP Checkpoint Loader",
            "Upscale Model Loader",
            "Upscale Model Switch",
            "Write to GIF",
            "Write to Video",
            "VAE Input Switch",
            "Video Dump Frames",
            "CLIPTextEncode (BlenderNeko Advanced + NSP)",
            "CONSTANT (JOV) \ud83d\udfea",
            "SHAPE GENERATOR (JOV) \u2728",
            "TEXT GENERATOR (JOV) \ud83d\udcdd",
            "ADJUST (JOV) \ud83d\udd78\ufe0f",
            "COLOR MATCH (JOV) \ud83d\udc9e",
            "FIND EDGES (JOV) \ud83d\udd33",
            "HSV (JOV) \ud83c\udf08",
            "LEVELS (JOV) \ud83d\uded7",
            "THRESHOLD (JOV) \ud83d\udcc9",
            "BLEND (JOV) \u2697\ufe0f",
            "PIXEL MERGE (JOV) \ud83e\udec2",
            "PIXEL SPLIT (JOV) \ud83d\udc94",
            "TRANSFORM (JOV) \ud83c\udfdd\ufe0f",
            "MERGE (JOV) \u2795",
            "CROP (JOV) \u2702\ufe0f",
            "COLOR THEORY (JOV) \ud83d\udede",
            "TICK (JOV) \u23f1",
            "WAVE GENERATOR (JOV) \ud83c\udf0a",
            "COMPARISON (JOV) \ud83d\udd75\ud83c\udffd",
            "GET (JOV) \ud83d\udff0",
            "IF-THEN-ELSE (JOV) \ud83d\udd00",
            "SET (JOV) \ud83d\udff0",
            "CONVERT (JOV) \ud83e\uddec",
            "VALUE (JOV) #\ufe0f\u20e3",
            "CALC OP UNARY (JOV) \ud83c\udfb2",
            "CALC OP BINARY (JOV) \ud83c\udf1f",
            "OPTIONS (JOV) \u2699\ufe0f",
            "AKASHIC (JOV) \ud83d\udcd3",
            "VALUE GRAPH (JOV) \ud83d\udcc8",
            "GLSL (JOV) \ud83c\udf69",
            "DELAY (JOV) \u270b\ud83c\udffd",
            "SeargeTextInputV2",
            "SeargePromptAdapterV2",
            "SeargeImageAdapterV2",
            "SeargeControlnetAdapterV2",
            "SeargeSeparator",
            "SeargePreviewImage",
            "SeargeAdvancedParameters",
            "SeargeConditioningParameters",
            "SeargeConditionMixing",
            "SeargeControlnetModels",
            "SeargeCustomPromptMode",
            "SeargeFreeU",
            "SeargeGenerationParameters",
            "SeargeHighResolution",
            "SeargeImage2ImageAndInpainting",
            "SeargeImageSaving",
            "SeargeLoras",
            "SeargeModelSelector",
            "SeargeOperatingMode",
            "SeargePromptStyles",
            "SeargeUpscaleModels",
            "SeargeMagicBox",
            "SeargePipelineStart",
            "SeargePipelineTerminator",
            "SeargeCustomAfterVaeDecode",
            "SeargeCustomAfterUpscaling",
            "SeargeDebugPrinter",
            "SeargeSDXLSampler",
            "SeargeSDXLSampler2",
            "SeargeSDXLSamplerV3",
            "SeargeSDXLImage2ImageSampler",
            "SeargeSDXLImage2ImageSampler2",
            "SeargeSamplerInputs",
            "SeargeEnablerInputs",
            "SeargeSaveFolderInputs",
            "SeargeSDXLPromptEncoder",
            "SeargeSDXLBasePromptEncoder",
            "SeargeSDXLRefinerPromptEncoder",
            "SeargePromptText",
            "SeargePromptCombiner",
            "SeargeIntegerConstant",
            "SeargeIntegerPair",
            "SeargeIntegerMath",
            "SeargeIntegerScaler",
            "SeargeFloatConstant",
            "SeargeFloatPair",
            "SeargeFloatMath",
            "SeargeImageSave",
            "SeargeCheckpointLoader",
            "SeargeVAELoader",
            "SeargeUpscaleModelLoader",
            "SeargeLoraLoader",
            "SeargeLatentMuxer3",
            "SeargeConditioningMuxer2",
            "SeargeConditioningMuxer5",
            "SeargeParameterProcessor",
            "SeargeStylePreprocessor",
            "SeargeInput1",
            "SeargeInput2",
            "SeargeInput3",
            "SeargeInput4",
            "SeargeInput5",
            "SeargeInput6",
            "SeargeInput7",
            "SeargeOutput1",
            "SeargeOutput2",
            "SeargeOutput3",
            "SeargeOutput4",
            "SeargeOutput5",
            "SeargeOutput6",
            "SeargeOutput7",
            "SeargeGenerated1",
            "Context Big (rgthree)",
            "Context (rgthree)",
            "Context Switch (rgthree)",
            "Context Switch Big (rgthree)",
            "Context Merge (rgthree)",
            "Context Merge Big (rgthree)",
            "Display Int (rgthree)",
            "Display Any (rgthree)",
            "Lora Loader Stack (rgthree)",
            "Seed (rgthree)",
            "Image Inset Crop (rgthree)",
            "Power Prompt (rgthree)",
            "Power Prompt - Simple (rgthree)",
            "KSampler Config (rgthree)",
            "SDXL Empty Latent Image (rgthree)",
            "SDXL Power Prompt - Positive (rgthree)",
            "SDXL Power Prompt - Simple / Negative (rgthree)",
            "Any Switch (rgthree)",
            "Image Comparer (rgthree)",
            "comfy-qr-by-module-size",
            "comfy-qr-by-image-size",
            "comfy-qr-by-module-split",
            "comfy-qr-mask_errors",
            "SAMLoader",
            "CLIPSegDetectorProvider",
            "ONNXDetectorProvider",
            "BitwiseAndMaskForEach",
            "SubtractMaskForEach",
            "DetailerForEach",
            "DetailerForEachDebug",
            "DetailerForEachPipe",
            "DetailerForEachDebugPipe",
            "DetailerForEachPipeForAnimateDiff",
            "SAMDetectorCombined",
            "SAMDetectorSegmented",
            "FaceDetailer",
            "FaceDetailerPipe",
            "MaskDetailerPipe",
            "ToDetailerPipe",
            "ToDetailerPipeSDXL",
            "FromDetailerPipe",
            "FromDetailerPipe_v2",
            "FromDetailerPipeSDXL",
            "ToBasicPipe",
            "FromBasicPipe",
            "FromBasicPipe_v2",
            "BasicPipeToDetailerPipe",
            "BasicPipeToDetailerPipeSDXL",
            "DetailerPipeToBasicPipe",
            "EditBasicPipe",
            "EditDetailerPipe",
            "EditDetailerPipeSDXL",
            "LatentPixelScale",
            "PixelKSampleUpscalerProvider",
            "PixelKSampleUpscalerProviderPipe",
            "IterativeLatentUpscale",
            "IterativeImageUpscale",
            "PixelTiledKSampleUpscalerProvider",
            "PixelTiledKSampleUpscalerProviderPipe",
            "TwoSamplersForMaskUpscalerProvider",
            "TwoSamplersForMaskUpscalerProviderPipe",
            "PixelKSampleHookCombine",
            "DenoiseScheduleHookProvider",
            "StepsScheduleHookProvider",
            "CfgScheduleHookProvider",
            "NoiseInjectionHookProvider",
            "UnsamplerHookProvider",
            "CoreMLDetailerHookProvider",
            "PreviewDetailerHookProvider",
            "DetailerHookCombine",
            "NoiseInjectionDetailerHookProvider",
            "UnsamplerDetailerHookProvider",
            "DenoiseSchedulerDetailerHookProvider",
            "SEGSOrderedFilterDetailerHookProvider",
            "SEGSRangeFilterDetailerHookProvider",
            "SEGSLabelFilterDetailerHookProvider",
            "BitwiseAndMask",
            "SubtractMask",
            "AddMask",
            "ImpactSegsAndMask",
            "ImpactSegsAndMaskForEach",
            "EmptySegs",
            "MediaPipeFaceMeshToSEGS",
            "MaskToSEGS",
            "MaskToSEGS_for_AnimateDiff",
            "ToBinaryMask",
            "MasksToMaskList",
            "MaskListToMaskBatch",
            "ImageListToImageBatch",
            "SetDefaultImageForSEGS",
            "RemoveImageFromSEGS",
            "BboxDetectorSEGS",
            "SegmDetectorSEGS",
            "ONNXDetectorSEGS",
            "ImpactSimpleDetectorSEGS_for_AD",
            "ImpactSimpleDetectorSEGS",
            "ImpactSimpleDetectorSEGSPipe",
            "ImpactControlNetApplySEGS",
            "ImpactControlNetApplyAdvancedSEGS",
            "ImpactControlNetClearSEGS",
            "ImpactIPAdapterApplySEGS",
            "ImpactDecomposeSEGS",
            "ImpactAssembleSEGS",
            "ImpactFrom_SEG_ELT",
            "ImpactEdit_SEG_ELT",
            "ImpactDilate_Mask_SEG_ELT",
            "ImpactDilateMask",
            "ImpactGaussianBlurMask",
            "ImpactDilateMaskInSEGS",
            "ImpactGaussianBlurMaskInSEGS",
            "ImpactScaleBy_BBOX_SEG_ELT",
            "BboxDetectorCombined_v2",
            "SegmDetectorCombined_v2",
            "SegsToCombinedMask",
            "KSamplerProvider",
            "TwoSamplersForMask",
            "TiledKSamplerProvider",
            "KSamplerAdvancedProvider",
            "TwoAdvancedSamplersForMask",
            "PreviewBridge",
            "PreviewBridgeLatent",
            "ImageSender",
            "ImageReceiver",
            "LatentSender",
            "LatentReceiver",
            "ImageMaskSwitch",
            "LatentSwitch",
            "SEGSSwitch",
            "ImpactSwitch",
            "ImpactInversedSwitch",
            "ImpactWildcardProcessor",
            "ImpactWildcardEncode",
            "SEGSDetailer",
            "SEGSPaste",
            "SEGSPreview",
            "SEGSPreviewCNet",
            "SEGSToImageList",
            "ImpactSEGSToMaskList",
            "ImpactSEGSToMaskBatch",
            "ImpactSEGSConcat",
            "ImpactSEGSPicker",
            "ImpactMakeTileSEGS",
            "SEGSDetailerForAnimateDiff",
            "ImpactKSamplerBasicPipe",
            "ImpactKSamplerAdvancedBasicPipe",
            "ReencodeLatent",
            "ReencodeLatentPipe",
            "ImpactImageBatchToImageList",
            "ImpactMakeImageList",
            "ImpactMakeImageBatch",
            "RegionalSampler",
            "RegionalSamplerAdvanced",
            "CombineRegionalPrompts",
            "RegionalPrompt",
            "ImpactCombineConditionings",
            "ImpactConcatConditionings",
            "ImpactSEGSLabelAssign",
            "ImpactSEGSLabelFilter",
            "ImpactSEGSRangeFilter",
            "ImpactSEGSOrderedFilter",
            "ImpactCompare",
            "ImpactConditionalBranch",
            "ImpactConditionalBranchSelMode",
            "ImpactIfNone",
            "ImpactConvertDataType",
            "ImpactLogicalOperators",
            "ImpactInt",
            "ImpactFloat",
            "ImpactValueSender",
            "ImpactValueReceiver",
            "ImpactImageInfo",
            "ImpactLatentInfo",
            "ImpactMinMax",
            "ImpactNeg",
            "ImpactConditionalStopIteration",
            "ImpactStringSelector",
            "RemoveNoiseMask",
            "ImpactLogger",
            "ImpactDummyInput",
            "ImpactQueueTrigger",
            "ImpactQueueTriggerCountdown",
            "ImpactSetWidgetValue",
            "ImpactNodeSetMuteState",
            "ImpactControlBridge",
            "ImpactIsNotEmptySEGS",
            "ImpactSleep",
            "ImpactRemoteBoolean",
            "ImpactRemoteInt",
            "ImpactHFTransformersClassifierProvider",
            "ImpactSEGSClassify",
            "UltralyticsDetectorProvider",
            "TimestepKeyframe",
            "LatentKeyframe",
            "LatentKeyframeGroup",
            "LatentKeyframeBatchedGroup",
            "LatentKeyframeTiming",
            "ACN_AdvancedControlNetApply",
            "ControlNetLoaderAdvanced",
            "DiffControlNetLoaderAdvanced",
            "ScaledSoftControlNetWeights",
            "ScaledSoftMaskedUniversalWeights",
            "SoftControlNetWeights",
            "CustomControlNetWeights",
            "SoftT2IAdapterWeights",
            "CustomT2IAdapterWeights",
            "ACN_DefaultUniversalWeights",
            "ACN_SparseCtrlRGBPreprocessor",
            "ACN_SparseCtrlLoaderAdvanced",
            "ACN_SparseCtrlMergedLoaderAdvanced",
            "ACN_SparseCtrlIndexMethodNode",
            "ACN_SparseCtrlSpreadMethodNode",
            "LoadImagesFromDirectory",
            "BNK_CutoffBasePrompt",
            "BNK_CutoffSetRegions",
            "BNK_CutoffRegionsToConditioning",
            "BNK_CutoffRegionsToConditioning_ADV",
            "UltimateSDUpscale",
            "UltimateSDUpscaleNoUpscale",
            "INTConstant",
            "FloatConstant",
            "ConditioningMultiCombine",
            "ConditioningSetMaskAndCombine",
            "ConditioningSetMaskAndCombine3",
            "ConditioningSetMaskAndCombine4",
            "ConditioningSetMaskAndCombine5",
            "GrowMaskWithBlur",
            "ColorToMask",
            "CreateGradientMask",
            "CreateTextMask",
            "CreateAudioMask",
            "CreateFadeMask",
            "CreateFadeMaskAdvanced",
            "CreateFluidMask",
            "VRAM_Debug",
            "SomethingToString",
            "CrossFadeImages",
            "EmptyLatentImagePresets",
            "ColorMatch",
            "GetImageRangeFromBatch",
            "SaveImageWithAlpha",
            "ReverseImageBatch",
            "ImageGridComposite2x2",
            "ImageGridComposite3x3",
            "ImageConcanate",
            "ImageBatchTestPattern",
            "ReplaceImagesInBatch",
            "BatchCropFromMask",
            "BatchCropFromMaskAdvanced",
            "BatchUncrop",
            "BatchUncropAdvanced",
            "BatchCLIPSeg",
            "RoundMask",
            "ResizeMask",
            "OffsetMask",
            "WidgetToString",
            "CreateShapeMask",
            "CreateVoronoiMask",
            "CreateMagicMask",
            "BboxToInt",
            "SplitBboxes",
            "ImageGrabPIL",
            "DummyLatentOut",
            "NormalizeLatent",
            "FlipSigmasAdjusted",
            "InjectNoiseToLatent",
            "AddLabel",
            "ReferenceOnlySimple3",
            "SoundReactive",
            "GenerateNoise",
            "StableZero123_BatchSchedule",
            "GetImagesFromBatchIndexed",
            "ImageBatchRepeatInterleaving",
            "LoraLoaderTagsQuery",
            "XY Input: Lora Block Weight //Inspire",
            "LoraLoaderBlockWeight //Inspire",
            "LoraBlockInfo //Inspire",
            "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
            "DWPreprocessor_Provider_for_SEGS //Inspire",
            "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
            "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
            "Canny_Preprocessor_Provider_for_SEGS //Inspire",
            "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
            "HEDPreprocessor_Provider_for_SEGS //Inspire",
            "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
            "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "Color_Preprocessor_Provider_for_SEGS //Inspire",
            "InpaintPreprocessor_Provider_for_SEGS //Inspire",
            "TilePreprocessor_Provider_for_SEGS //Inspire",
            "MediaPipeFaceMeshDetectorProvider //Inspire",
            "KSampler //Inspire",
            "KSamplerAdvanced //Inspire",
            "LoadPromptsFromDir //Inspire",
            "LoadPromptsFromFile //Inspire",
            "LoadSinglePromptFromFile //Inspire",
            "UnzipPrompt //Inspire",
            "ZipPrompt //Inspire",
            "PromptExtractor //Inspire",
            "GlobalSeed //Inspire",
            "GlobalSampler //Inspire",
            "BindImageListPromptList //Inspire",
            "WildcardEncode //Inspire",
            "PromptBuilder //Inspire",
            "SeedExplorer //Inspire",
            "ListCounter //Inspire",
            "CLIPTextEncodeWithWeight //Inspire",
            "LoadImagesFromDir //Inspire",
            "LoadImageListFromDir //Inspire",
            "LoadImage //Inspire",
            "ChangeImageBatchSize //Inspire",
            "RegionalPromptSimple //Inspire",
            "RegionalPromptColorMask //Inspire",
            "RegionalConditioningSimple //Inspire",
            "RegionalConditioningColorMask //Inspire",
            "RegionalIPAdapterMask //Inspire",
            "RegionalIPAdapterColorMask //Inspire",
            "RegionalIPAdapterEncodedMask //Inspire",
            "RegionalIPAdapterEncodedColorMask //Inspire",
            "RegionalSeedExplorerMask //Inspire",
            "RegionalSeedExplorerColorMask //Inspire",
            "ToIPAdapterPipe //Inspire",
            "FromIPAdapterPipe //Inspire",
            "ApplyRegionalIPAdapters //Inspire",
            "KSamplerProgress //Inspire",
            "KSamplerAdvancedProgress //Inspire",
            "CacheBackendData //Inspire",
            "CacheBackendDataNumberKey //Inspire",
            "CacheBackendDataList //Inspire",
            "CacheBackendDataNumberKeyList //Inspire",
            "RetrieveBackendData //Inspire",
            "RetrieveBackendDataNumberKey //Inspire",
            "RemoveBackendData //Inspire",
            "RemoveBackendDataNumberKey //Inspire",
            "ShowCachedInfo //Inspire",
            "CheckpointLoaderSimpleShared //Inspire",
            "FloatRange //Inspire",
            "ConcatConditioningsWithMultiplier //Inspire",
            "CLIPSeg",
            "CombineSegMasks",
            "DynamiCrafterLoader",
            "DynamiCrafter Simple",
            "TilePreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "BinaryPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "InpaintPreprocessor",
            "ColorPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DensePosePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "M-LSDPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "LineArtPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DiffusionEdge_Preprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "PiDiNetPreprocessor",
            "OpenposePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "BAE-NormalMapPreprocessor",
            "TEEDPreprocessor",
            "LineartStandardPreprocessor",
            "AIO_Preprocessor",
            "PixelPerfectResolution",
            "ImageGenResolutionFromImage",
            "ImageGenResolutionFromLatent",
            "HintImageEnchance",
            "ADE_AnimateDiffLoRALoader",
            "ADE_AnimateDiffSamplingSettings",
            "ADE_AnimateDiffKeyframe",
            "ADE_MultivalDynamic",
            "ADE_MultivalScaledMask",
            "ADE_StandardStaticContextOptions",
            "ADE_StandardUniformContextOptions",
            "ADE_LoopedUniformContextOptions",
            "ADE_ViewsOnlyContextOptions",
            "ADE_BatchedContextOptions",
            "ADE_AnimateDiffUniformContextOptions",
            "ADE_StandardStaticViewOptions",
            "ADE_StandardUniformViewOptions",
            "ADE_LoopedUniformViewOptions",
            "ADE_IterationOptsDefault",
            "ADE_IterationOptsFreeInit",
            "ADE_NoiseLayerAdd",
            "ADE_NoiseLayerAddWeighted",
            "ADE_NoiseLayerReplace",
            "ADE_AnimateDiffSettings",
            "ADE_AdjustPESweetspotStretch",
            "ADE_AdjustPEFullStretch",
            "ADE_AdjustPEManual",
            "ADE_CustomCFG",
            "ADE_CustomCFGKeyframe",
            "ADE_SigmaSchedule",
            "ADE_RawSigmaSchedule",
            "ADE_SigmaScheduleWeightedAverage",
            "ADE_SigmaScheduleWeightedAverageInterp",
            "ADE_SigmaScheduleSplitAndCombine",
            "ADE_AnimateDiffUnload",
            "ADE_EmptyLatentImageLarge",
            "CheckpointLoaderSimpleWithNoiseSelect",
            "ADE_AnimateDiffLoaderGen1",
            "ADE_AnimateDiffLoaderWithContext",
            "ADE_AnimateDiffModelSettings_Release",
            "ADE_AnimateDiffModelSettingsSimple",
            "ADE_AnimateDiffModelSettings",
            "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
            "ADE_UseEvolvedSampling",
            "ADE_ApplyAnimateDiffModelSimple",
            "ADE_ApplyAnimateDiffModel",
            "ADE_LoadAnimateDiffModel",
            "AnimateDiffLoaderV1",
            "ADE_AnimateDiffLoaderV1Advanced",
            "ADE_AnimateDiffCombine",
            "RecommendedResCalc",
            "Checkpoint Selector",
            "Save Image w/Metadata",
            "Sampler Selector",
            "Scheduler Selector",
            "Seed Generator",
            "String Literal",
            "Width/Height Literal",
            "Cfg Literal",
            "Int Literal",
            "SDXLPromptStyler",
            "SDXLPromptStylerAdvanced",
            "Seed Everywhere",
            "Anything Everywhere",
            "Anything Everywhere3",
            "Anything Everywhere?",
            "Prompts Everywhere",
            "Simple String",
            "Compare",
            "Int",
            "Float",
            "Bool",
            "String",
            "If ANY execute A else B",
            "DebugPrint",
            "Lerp",
            "SinWave",
            "InvSinWave",
            "CosWave",
            "InvCosWave",
            "SquareWave",
            "SawtoothWave",
            "TriangleWave",
            "AbsCosWave",
            "AbsSinWave",
            "PromptSchedule",
            "ValueSchedule",
            "PromptScheduleNodeFlow",
            "PromptScheduleNodeFlowEnd",
            "PromptScheduleEncodeSDXL",
            "StringSchedule",
            "BatchPromptSchedule",
            "BatchValueSchedule",
            "BatchPromptScheduleEncodeSDXL",
            "BatchStringSchedule",
            "BatchValueScheduleLatentInput",
            "BatchPromptScheduleSDXLLatentInput",
            "BatchPromptScheduleLatentInput",
            "ImageBatchFromValueSchedule",
            "StringConcatenate",
            "Init FizzFrame",
            "FizzFrame",
            "FizzFrameConcatenate",
            "ConcatStringSingle",
            "convertKeyframeKeysToBatchKeys",
            "CalculateFrameOffset",
            "Integer",
            "Text",
            "Text box",
            "Float debug print",
            "Int debug print",
            "Tuple debug print",
            "String debug print",
            "Random",
            "Tuple",
            "Int to tuple",
            "Tuple to floats",
            "Tuple to ints",
            "Tuple swap",
            "Tuple multiply",
            "Int to float",
            "Ceil",
            "Floor",
            "Absolute value",
            "Get latent size",
            "Get image size",
            "Sum",
            "Subtract",
            "Multiply",
            "Divide",
            "Power",
            "Square root",
            "Sinus",
            "Cosines",
            "Tangent",
            "Latent Scale by ratio",
            "Latent Scale to side",
            "Image scale by ratio",
            "Image scale to side",
            "Conditioning area scale by ratio",
            "ConditioningSetArea with tuples",
            "LatentComposite with tuples",
            "CCSR_Upscale",
            "CCSR_Model_Select",
            "VHS_VideoCombine",
            "VHS_LoadVideo",
            "VHS_LoadVideoPath",
            "VHS_LoadImages",
            "VHS_LoadImagesPath",
            "VHS_LoadAudio",
            "VHS_PruneOutputs",
            "VHS_BatchManager",
            "VHS_SplitLatents",
            "VHS_SplitImages",
            "VHS_SplitMasks",
            "VHS_MergeLatents",
            "VHS_MergeImages",
            "VHS_MergeMasks",
            "VHS_SelectEveryNthLatent",
            "VHS_SelectEveryNthImage",
            "VHS_SelectEveryNthMask",
            "VHS_GetLatentCount",
            "VHS_GetImageCount",
            "VHS_GetMaskCount",
            "VHS_DuplicateLatents",
            "VHS_DuplicateImages",
            "VHS_DuplicateMasks",
            "VHS_VAEEncodeBatched",
            "VHS_VAEDecodeBatched",
            "BNK_CLIPTextEncodeAdvanced",
            "BNK_CLIPTextEncodeSDXLAdvanced",
            "BNK_AddCLIPSDXLParams",
            "BNK_AddCLIPSDXLRParams",
            "Text Utils - Join Strings",
            "Text Utils - Split String to List",
            "Text Utils - Join String List",
            "Text Utils - Join N-Elements of String List",
            "KSamplerRAVE",
            "ImageGridCompose",
            "ImageGridDecompose",
            "LatentGridCompose",
            "LatentGridDecompose",
            "KSampler (Efficient)",
            "KSampler Adv. (Efficient)",
            "KSampler SDXL (Eff.)",
            "Efficient Loader",
            "Eff. Loader SDXL",
            "LoRA Stacker",
            "Control Net Stacker",
            "Apply ControlNet Stack",
            "Unpack SDXL Tuple",
            "Pack SDXL Tuple",
            "XY Plot",
            "XY Input: Seeds++ Batch",
            "XY Input: Add/Return Noise",
            "XY Input: Steps",
            "XY Input: CFG Scale",
            "XY Input: Sampler/Scheduler",
            "XY Input: Denoise",
            "XY Input: VAE",
            "XY Input: Prompt S/R",
            "XY Input: Aesthetic Score",
            "XY Input: Refiner On/Off",
            "XY Input: Checkpoint",
            "XY Input: Clip Skip",
            "XY Input: LoRA",
            "XY Input: LoRA Plot",
            "XY Input: LoRA Stacks",
            "XY Input: Control Net",
            "XY Input: Control Net Plot",
            "XY Input: Manual XY Entry",
            "Manual XY Entry Info",
            "Join XY Inputs of Same Type",
            "Image Overlay",
            "Noise Control Script",
            "HighRes-Fix Script",
            "Tiled Upscaler Script",
            "LoRA Stack to String converter",
            "Mask By Text",
            "Mask Morphology",
            "Combine Masks",
            "Unary Mask Op",
            "Unary Image Op",
            "Blur",
            "Image To Mask",
            "Mix Images By Mask",
            "Mix Color By Mask",
            "Mask To Region",
            "Cut By Mask",
            "Paste By Mask",
            "Get Image Size",
            "Change Channel Count",
            "Constant Mask",
            "Prune By Mask",
            "Separate Mask Components",
            "Create Rect Mask",
            "Make Image Batch",
            "Create QR Code",
            "Convert Color Space",
            "MasqueradeIncrementer",
            "SimpleMath",
            "SimpleMathDebug",
            "KepStringLiteral",
            "Operation",
            "Checkpoint",
            "Lora",
            "CM_BoolToInt",
            "CM_IntToBool",
            "CM_FloatToInt",
            "CM_IntToFloat",
            "CM_IntToNumber",
            "CM_NumberToInt",
            "CM_FloatToNumber",
            "CM_NumberToFloat",
            "CM_ComposeVec2",
            "CM_ComposeVec3",
            "CM_ComposeVec4",
            "CM_BreakoutVec2",
            "CM_BreakoutVec3",
            "CM_BreakoutVec4",
            "CM_BoolUnaryOperation",
            "CM_BoolBinaryOperation",
            "CM_IntUnaryOperation",
            "CM_IntUnaryCondition",
            "CM_IntBinaryOperation",
            "CM_IntBinaryCondition",
            "CM_FloatUnaryOperation",
            "CM_FloatUnaryCondition",
            "CM_FloatBinaryOperation",
            "CM_FloatBinaryCondition",
            "CM_NumberUnaryOperation",
            "CM_NumberUnaryCondition",
            "CM_NumberBinaryOperation",
            "CM_NumberBinaryCondition",
            "CM_Vec2UnaryOperation",
            "CM_Vec2UnaryCondition",
            "CM_Vec2ToScalarUnaryOperation",
            "CM_Vec2BinaryOperation",
            "CM_Vec2BinaryCondition",
            "CM_Vec2ToScalarBinaryOperation",
            "CM_Vec2ScalarOperation",
            "CM_Vec3UnaryOperation",
            "CM_Vec3UnaryCondition",
            "CM_Vec3ToScalarUnaryOperation",
            "CM_Vec3BinaryOperation",
            "CM_Vec3BinaryCondition",
            "CM_Vec3ToScalarBinaryOperation",
            "CM_Vec3ScalarOperation",
            "CM_Vec4UnaryOperation",
            "CM_Vec4UnaryCondition",
            "CM_Vec4ToScalarUnaryOperation",
            "CM_Vec4BinaryOperation",
            "CM_Vec4BinaryCondition",
            "CM_Vec4ToScalarBinaryOperation",
            "CM_Vec4ScalarOperation",
            "CM_SDXLResolution",
            "CM_NearestSDXLResolution",
            "KSampler Gradually Adding More Denoise (efficient)",
            "GMFSS Fortuna VFI",
            "IFRNet VFI",
            "IFUnet VFI",
            "M2M VFI",
            "RIFE VFI",
            "Sepconv VFI",
            "AMT VFI",
            "FILM VFI",
            "Make Interpolation State List",
            "STMFNet VFI",
            "FLAVR VFI",
            "CAIN VFI",
            "InstantIDModelLoader",
            "InstantIDFaceAnalysis",
            "ApplyInstantID",
            "FaceKeypointsPreprocessor",
            "Checkpoint Loader w/Name (WLSH)",
            "KSamplerAdvanced (WLSH)",
            "CLIP Positive-Negative (WLSH)",
            "CLIP Positive-Negative w/Text (WLSH)",
            "CLIP Positive-Negative XL (WLSH)",
            "CLIP Positive-Negative XL w/Text (WLSH)",
            "CLIP +/- w/Text Unified (WLSH)",
            "Empty Latent by Pixels (WLSH)",
            "Empty Latent by Ratio (WLSH)",
            "Empty Latent by Size (WLSH)",
            "SDXL Quick Empty Latent (WLSH)",
            "Image Load with Metadata (WLSH)",
            "Grayscale Image (WLSH)",
            "Generate Border Mask (WLSH)",
            "Outpaint to Image (WLSH)",
            "VAE Encode for Inpaint w/Padding (WLSH)",
            "Image Scale By Factor (WLSH)",
            "Image Scale by Shortside (WLSH)",
            "SDXL Quick Image Scale (WLSH)",
            "Upscale by Factor with Model (WLSH)",
            "Multiply Integer (WLSH)",
            "Quick Resolution Multiply (WLSH)",
            "Resolutions by Ratio (WLSH)",
            "Seed to Number (WLSH)",
            "Seed and Int (WLSH)",
            "SDXL Steps (WLSH)",
            "SDXL Resolutions (WLSH)",
            "Build Filename String (WLSH)",
            "Time String (WLSH)",
            "Simple Pattern Replace (WLSH)",
            "Simple String Combine (WLSH)",
            "Prompt Weight (WLSH)",
            "Image Save with Prompt (WLSH)",
            "Image Save with Prompt/Info (WLSH)",
            "Image Save with Prompt File (WLSH)",
            "Image Save with Prompt/Info File (WLSH)",
            "Save Prompt (WLSH)",
            "Save Prompt/Info (WLSH)",
            "Save Positive Prompt(WLSH)",
            "CR Image Output",
            "CR Latent Batch Size",
            "CR Conditioning Mixer",
            "CR Select Model",
            "CR Seed",
            "CR Prompt Text",
            "CR Combine Prompt",
            "CR VAE Decode",
            "CR Text List",
            "CR Prompt List",
            "CR Simple List",
            "CR Float Range List",
            "CR Integer Range List",
            "CR Load Text List",
            "CR Binary To Bit List",
            "CR Text Cycler",
            "CR Value Cycler",
            "CR Load Image List",
            "CR Load Image List Plus",
            "CR Load GIF As List",
            "CR Font File List",
            "CR Batch Images From List",
            "CR Intertwine Lists",
            "CR Repeater",
            "CR XY Product",
            "CR Text List To String",
            "CR SD1.5 Aspect Ratio",
            "CR SDXL Aspect Ratio",
            "CR Aspect Ratio",
            "CR Aspect Ratio Banners",
            "CR Aspect Ratio Social Media",
            "CR_Aspect Ratio For Print",
            "CR Image Size",
            "CR Aspect Ratio SDXL",
            "CR SDXL Prompt Mixer",
            "CR Seed to Int",
            "CR Apply ControlNet",
            "CR Multi-ControlNet Stack",
            "CR Apply Multi-ControlNet",
            "CR Load LoRA",
            "CR LoRA Stack",
            "CR Random LoRA Stack",
            "CR Random Weight LoRA",
            "CR Apply LoRA Stack",
            "CR Apply Model Merge",
            "CR Model Merge Stack",
            "CR Data Bus In",
            "CR Data Bus Out",
            "CR 8 Channel In",
            "CR 8 Channel Out",
            "CR Module Pipe Loader",
            "CR Module Input",
            "CR Module Output",
            "CR Image Pipe In",
            "CR Image Pipe Edit",
            "CR Image Pipe Out",
            "CR Pipe Switch",
            "CR SDXL Prompt Mix Presets",
            "CR SDXL Style Text",
            "CR SDXL Base Prompt Encoder",
            "CR Multi Upscale Stack",
            "CR Upscale Image",
            "CR Apply Multi Upscale",
            "CR XY List",
            "CR XY Interpolate",
            "CR XY From Folder",
            "CR XY Save Grid Image",
            "CR XY Index",
            "CR Halftone Grid",
            "CR Color Bars",
            "CR Style Bars",
            "CR Checker Pattern",
            "CR Polygons",
            "CR Color Gradient",
            "CR Radial Gradient",
            "CR Starburst Lines",
            "CR Starburst Colors",
            "CR Simple Binary Pattern",
            "CR Binary Pattern",
            "CR Draw Shape",
            "CR Draw Pie",
            "CR Random Shape Pattern",
            "CR Overlay Text",
            "CR Draw Text",
            "CR Mask Text",
            "CR Composite Text",
            "CR Simple Text Watermark",
            "CR Select Font",
            "CR Halftone Filter",
            "CR Color Tint",
            "CR Vignette Filter",
            "CR Page Layout",
            "CR Image Panel",
            "CR Image Grid Panel",
            "CR Image Border",
            "CR Feathered Border",
            "CR Simple Text Panel",
            "CR Color Panel",
            "CR Overlay Transparent Image",
            "CR Half Drop Panel",
            "CR Diamond Panel",
            "CR Simple Meme Template",
            "CR Simple Banner",
            "CR Comic Panel Templates",
            "CR Simple Image Compare",
            "CR Thumbnail Preview",
            "CR Seamless Checker",
            "CR Image Input Switch",
            "CR Image Input Switch (4 way)",
            "CR Latent Input Switch",
            "CR Conditioning Input Switch",
            "CR Clip Input Switch",
            "CR Model Input Switch",
            "CR ControlNet Input Switch",
            "CR VAE Input Switch",
            "CR Text Input Switch",
            "CR Text Input Switch (4 way)",
            "CR Switch Model and CLIP",
            "CR Batch Process Switch",
            "CR Img2Img Process Switch",
            "CR Hires Fix Process Switch",
            "CR Index",
            "CR Index Increment",
            "CR Index Multiply",
            "CR Index Reset",
            "CR Trigger",
            "CR String To Number",
            "CR String To Combo",
            "CR Float To String",
            "CR Float To Integer",
            "CR Integer To String",
            "CR String To Boolean",
            "CR Random Hex Color",
            "CR Random RGB",
            "CR Random Multiline Values",
            "CR Random Multiline Colors",
            "CR Random RGB Gradient",
            "CR Random Panel Codes",
            "CR Text",
            "CR Multiline Text",
            "CR Split String",
            "CR Text Concatenate",
            "CR Text Replace",
            "CR Text Length",
            "CR Text Operation",
            "CR Text Blacklist",
            "CR Save Text To File",
            "CR Set Value On Boolean",
            "CR Set Value On Binary",
            "CR Set Value on String",
            "CR Set Switch From String",
            "CR Value",
            "CR Integer Multiple",
            "CR Clamp Value",
            "CR Math Operation",
            "CR Get Parameter From Prompt",
            "CR Select Resize Method",
            "CR Select ISO Size",
            "CR Simple Schedule",
            "CR Central Schedule",
            "CR Combine Schedules",
            "CR Output Schedule To File",
            "CR Load Schedule From File",
            "CR Schedule Input Switch",
            "CR Bit Schedule",
            "CR Simple Value Scheduler",
            "CR Simple Text Scheduler",
            "CR Value Scheduler",
            "CR Text Scheduler",
            "CR Load Scheduled Models",
            "CR Load Scheduled LoRAs",
            "CR Prompt Scheduler",
            "CR Simple Prompt Scheduler",
            "CR Keyframe List",
            "CR Encode Scheduled Prompts",
            "CR Gradient Float",
            "CR Gradient Integer",
            "CR Increment Float",
            "CR Increment Integer",
            "CR Interpolate Latents",
            "CR Debatch Frames",
            "CR Current Frame",
            "CR Load Animation Frames",
            "CR Load Flow Frames",
            "CR Output Flow Frames",
            "CR Prompt List Keyframes",
            "CR Simple Prompt List",
            "CR Simple Prompt List Keyframes",
            "CR Cycle Models",
            "CR Cycle LoRAs",
            "CR Cycle Text",
            "CR Cycle Text Simple",
            "CR Cycle Images",
            "CR Cycle Images Simple",
            "CR Model List",
            "CR LoRA List",
            "CR Text List Simple",
            "CR Image List",
            "CR Image List Simple",
            "LCMScheduler",
            "SamplerLCMAlternative",
            "SamplerLCMCycle",
            "Image Remove Background Rembg (mtb)",
            "Stack Images (mtb)",
            "Pick From Batch (mtb)",
            "Deep Bump (mtb)",
            "Qr Code (mtb)",
            "Unsplash Image (mtb)",
            "Text To Image (mtb)",
            "Float To Number (mtb)",
            "Int To Bool (mtb)",
            "Int To Number (mtb)",
            "Latent Lerp (mtb)",
            "Batch Float (mtb)",
            "Batch Transform (mtb)",
            "Batch Shape (mtb)",
            "Batch Make (mtb)",
            "Batch Float Assemble (mtb)",
            "Batch Float Fill (mtb)",
            "Batch Merge (mtb)",
            "Batch Shake (mtb)",
            "Plot Batch Float (mtb)",
            "Save Gif (mtb)",
            "Export With Ffmpeg (mtb)",
            "Add To Playlist (mtb)",
            "Read Playlist (mtb)",
            "String Replace (mtb)",
            "Fit Number (mtb)",
            "Get Batch From History (mtb)",
            "Any To String (mtb)",
            "Concat Images (mtb)",
            "Math Expression (mtb)",
            "Face Swap (mtb)",
            "Load Face Swap Model (mtb)",
            "Load Face Analysis Model (mtb)",
            "Curve (mtb)",
            "Model Patch Seamless (mtb)",
            "Vae Decode (mtb)",
            "Animation Builder (mtb)",
            "Smart Step (mtb)",
            "Styles Loader (mtb)",
            "Interpolate Clip Sequential (mtb)",
            "Bbox From Mask (mtb)",
            "Bbox (mtb)",
            "Crop (mtb)",
            "Uncrop (mtb)",
            "Debug (mtb)",
            "Save Tensors (mtb)",
            "Transform Image (mtb)",
            "Filter Z (mtb)",
            "Load Image Sequence (mtb)",
            "Save Image Sequence (mtb)",
            "Color Correct (mtb)",
            "Image Compare (mtb)",
            "Image Tile Offset (mtb)",
            "Blur (mtb)",
            "Mask To Image (mtb)",
            "Colored Image (mtb)",
            "Image Premultiply (mtb)",
            "Image Resize Factor (mtb)",
            "Save Image Grid (mtb)",
            "Load Image From Url (mtb)",
            "Sharpen (mtb)",
            "SAMModelLoader (segment anything)",
            "GroundingDinoModelLoader (segment anything)",
            "GroundingDinoSAMSegment (segment anything)",
            "InvertMask (segment anything)",
            "IsMaskEmpty",
            "FaceRestoreCFWithModel",
            "CropFace",
            "FaceRestoreModelLoader",
            "ttN pipeLoader",
            "ttN pipeKSampler",
            "ttN pipeKSamplerAdvanced",
            "ttN pipeLoaderSDXL",
            "ttN pipeKSamplerSDXL",
            "ttN xyPlot",
            "ttN pipeIN",
            "ttN pipeOUT",
            "ttN pipeEDIT",
            "ttN pipe2BASIC",
            "ttN pipe2DETAILER",
            "ttN pipeEncodeConcat",
            "ttN pipeLoraStack",
            "ttN multiModelMerge",
            "ttN text",
            "ttN textDebug",
            "ttN concat",
            "ttN text3BOX_3WAYconcat",
            "ttN text7BOX_concat",
            "ttN imageOutput",
            "ttN imageREMBG",
            "ttN hiresfixScale",
            "ttN int",
            "ttN float",
            "ttN seed",
            "GetImageSize+",
            "ImageResize+",
            "ImageCrop+",
            "ImageFlip+",
            "ImageDesaturate+",
            "ImagePosterize+",
            "ImageCASharpening+",
            "ImageSeamCarving+",
            "ImageEnhanceDifference+",
            "ImageExpandBatch+",
            "ImageFromBatch+",
            "ImageCompositeFromMaskBatch+",
            "ExtractKeyframes+",
            "ImageApplyLUT+",
            "MaskBlur+",
            "MaskFlip+",
            "MaskPreview+",
            "MaskBatch+",
            "MaskExpandBatch+",
            "TransitionMask+",
            "MaskFromColor+",
            "MaskFromBatch+",
            "SimpleMath+",
            "ConsoleDebug+",
            "DebugTensorShape+",
            "ModelCompile+",
            "BatchCount+",
            "KSamplerVariationsStochastic+",
            "KSamplerVariationsWithNoise+",
            "CLIPTextEncodeSDXL+",
            "SDXLEmptyLatentSizePicker+",
            "DrawText+",
            "RemBGSession+",
            "ImageRemoveBackground+",
            "RemoveLatentMask+",
            "IPAdapterModelLoader",
            "IPAdapterApply",
            "IPAdapterApplyFaceID",
            "IPAdapterApplyEncoded",
            "PrepImageForClipVision",
            "IPAdapterEncoder",
            "IPAdapterSaveEmbeds",
            "IPAdapterLoadEmbeds",
            "IPAdapterBatchEmbeds",
            "InsightFaceLoader",
            "PrepImageForInsightFace",
            "LDSRUpscaler",
            "LDSRModelLoader",
            "LDSRUpscale",
            "Sine Curve [Dream]",
            "Linear Curve [Dream]",
            "CSV Curve [Dream]",
            "Beat Curve [Dream]",
            "Common Frame Dimensions [Dream]",
            "Image Motion [Dream]",
            "Noise from Palette [Dream]",
            "Analyze Palette [Dream]",
            "Palette Color Shift [Dream]",
            "File Count [Dream]",
            "Frame Counter Offset [Dream]",
            "Frame Counter (Directory) [Dream]",
            "Frame Counter (Simple) [Dream]",
            "Image Sequence Loader [Dream]",
            "Image Sequence Saver [Dream]",
            "CSV Generator [Dream]",
            "Sample Image Area as Palette [Dream]",
            "FFMPEG Video Encoder [Dream]",
            "Image Sequence Tweening [Dream]",
            "Image Sequence Blend [Dream]",
            "Palette Color Align [Dream]",
            "Sample Image as Palette [Dream]",
            "Noise from Area Palettes [Dream]",
            "String Input [Dream]",
            "Float Input [Dream]",
            "Int Input [Dream]",
            "Text Input [Dream]",
            "Big Latent Switch [Dream]",
            "Frame Count Calculator [Dream]",
            "Big Image Switch [Dream]",
            "Big Text Switch [Dream]",
            "Big Float Switch [Dream]",
            "Big Int Switch [Dream]",
            "Big Palette Switch [Dream]",
            "Build Prompt [Dream]",
            "Finalize Prompt [Dream]",
            "Frame Counter Info [Dream]",
            "Boolean To Float [Dream]",
            "Boolean To Int [Dream]",
            "Saw Curve [Dream]",
            "Triangle Curve [Dream]",
            "Triangle Event Curve [Dream]",
            "Smooth Event Curve [Dream]",
            "Calculation [Dream]",
            "Image Color Shift [Dream]",
            "Compare Palettes [Dream]",
            "Image Contrast Adjustment [Dream]",
            "Image Brightness Adjustment [Dream]",
            "Log File [Dream]",
            "Laboratory [Dream]",
            "String to Log Entry [Dream]",
            "Int to Log Entry [Dream]",
            "Float to Log Entry [Dream]",
            "Log Entry Joiner [Dream]",
            "String Tokenizer [Dream]",
            "WAV Curve [Dream]",
            "Frame Counter Time Offset [Dream]",
          ],
        ],
        script_pin_order: ["STRING", { default: "", multiline: false }],
        script_pin_mode: [["pin_highway", "pin_junction", "pin_direct"]],
        script_res_order: ["STRING", { default: "", multiline: false }],
        script_res_mode: [["res_junction", "res_highway_batch"]],
        script_ignore_regex: [
          "STRING",
          { default: "(?P<_>^$)", multiline: false },
        ],
      },
      optional: { pipe_in: ["*"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["*", "SCRIPT_DATA", "SCRIPT_DATA", "SCRIPT_DATA"],
    output_is_list: {},
    output_name: [
      "pipe_out",
      "script_pin_data",
      "script_exec_data",
      "script_res_data",
    ],
    name: "0246.ScriptNode",
    display_name: "Script Node",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.ScriptRule": {
    input: {
      required: { script_rule_mode: [["_", "slice", "cycle"]] },
      hidden: { _id: "UNIQUE_ID" },
    },
    output: ["SCRIPT_DATA"],
    output_is_list: [false],
    output_name: ["script_rule_data"],
    name: "0246.ScriptRule",
    display_name: "Script Rule",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.ScriptPile": {
    input: {
      required: {
        pipe_in: ["*"],
        script_rule_loop_mode: [["_", "slice", "cycle"]],
        script_rule_regex: [
          "STRING",
          {
            default:
              "(?P<m>^(@model|%MODEL)$)|(?P<c>^(@clip|%CLIP)$)|(?P<_>^$)",
            multiline: false,
          },
        ],
        script_rule_pin_mode: [
          [
            "pin_highway_batch",
            "pin_highway_junction",
            "pin_junction_highway",
            "pin_junction",
          ],
        ],
        count: ["INT", { default: 0, min: 0, max: 9223372036854775807 }],
      },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["*", "SCRIPT_DATA"],
    output_is_list: [false, false],
    output_name: ["pipe_out", "script_rule_data"],
    name: "0246.ScriptPile",
    display_name: "Script Pile",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Script": {
    input: {
      required: {
        _exec_mode: [["pass", "act"]],
        _sort_mode: ["STRING", { default: "INT", multiline: false }],
      },
      optional: { _script_in: ["SCRIPT_PIPE"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["SCRIPT_PIPE"],
    output_is_list: {},
    output_name: ["_script_out"],
    name: "0246.Script",
    display_name: "Script",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Hub": {
    input: {
      required: {},
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: {},
    output_is_list: {},
    output_name: {},
    name: "0246.Hub",
    display_name: "Hub",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Cloud": {
    input: {
      required: {},
      optional: { cloud: ["CLOUD_DATA"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["CLOUD_PIPE"],
    output_is_list: {},
    output_name: ["_cloud_out"],
    name: "0246.Cloud",
    display_name: "Cloud",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Switch": {
    input: {
      required: {},
      hidden: {
        _id: "UNIQUE_ID",
        _prompt: "PROMPT",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: {},
    output_is_list: {},
    output_name: {},
    name: "0246.Switch",
    display_name: "Switch",
    description: "",
    category: "0246",
    output_node: false,
  },
  "0246.Meta": {
    input: {
      required: {},
      optional: { data: ["*"] },
      hidden: {
        _prompt: "PROMPT",
        _id: "UNIQUE_ID",
        _workflow: "EXTRA_PNGINFO",
      },
    },
    output: ["INT", "INT", "STRING", "STRING", "STRING", "STRING"],
    output_is_list: {},
    output_name: [
      "batch_size",
      "data_size",
      "key_list",
      "type_list",
      "comfy_type",
      "py_type",
    ],
    name: "0246.Meta",
    display_name: "Meta",
    description: "",
    category: "0246",
    output_node: false,
  },
  ProPostVignette: {
    input: {
      required: {
        image: ["IMAGE"],
        intensity: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        center_x: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        center_y: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: [],
    name: "ProPostVignette",
    display_name: "ProPostVignette",
    description: "",
    category: "Pro Post/Camera Effects",
    output_node: false,
  },
  ProPostFilmGrain: {
    input: {
      required: {
        image: ["IMAGE"],
        gray_scale: ["BOOLEAN", { default: false }],
        grain_type: [["Fine", "Fine Simple", "Coarse", "Coarser"]],
        grain_sat: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        grain_power: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
        shadows: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.01 }],
        highs: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.01 }],
        scale: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        sharpen: ["INT", { default: 0, min: 0, max: 10 }],
        src_gamma: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        seed: ["INT", { default: 1, min: 1, max: 1000 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: [],
    name: "ProPostFilmGrain",
    display_name: "ProPostFilmGrain",
    description: "",
    category: "Pro Post/Camera Effects",
    output_node: false,
  },
  ProPostRadialBlur: {
    input: {
      required: {
        image: ["IMAGE"],
        blur_strength: [
          "FLOAT",
          { default: 64.0, min: 0.0, max: 256.0, step: 1.0 },
        ],
        center_x: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        center_y: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        focus_spread: ["FLOAT", { default: 1, min: 0.1, max: 8.0, step: 0.1 }],
        steps: ["INT", { default: 5, min: 1, max: 32 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: [],
    name: "ProPostRadialBlur",
    display_name: "ProPostRadialBlur",
    description: "",
    category: "Pro Post/Blur Effects",
    output_node: false,
  },
  ProPostDepthMapBlur: {
    input: {
      required: {
        image: ["IMAGE"],
        depth_map: ["IMAGE"],
        blur_strength: [
          "FLOAT",
          { default: 64.0, min: 0.0, max: 256.0, step: 1.0 },
        ],
        focal_depth: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        focus_spread: ["FLOAT", { default: 1, min: 1.0, max: 8.0, step: 0.1 }],
        steps: ["INT", { default: 5, min: 1, max: 32 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: [],
    name: "ProPostDepthMapBlur",
    display_name: "ProPostDepthMapBlur",
    description: "",
    category: "Pro Post/Blur Effects",
    output_node: false,
  },
  ProPostApplyLUT: {
    input: {
      required: {
        image: ["IMAGE"],
        lut_name: [["__models__"]],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        log: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: [],
    name: "ProPostApplyLUT",
    display_name: "ProPostApplyLUT",
    description: "",
    category: "Pro Post/Color Grading",
    output_node: false,
  },
  ReActorFaceSwap: {
    input: {
      required: {
        enabled: [
          "BOOLEAN",
          { default: true, label_off: "OFF", label_on: "ON" },
        ],
        input_image: ["IMAGE"],
        swap_model: [["__models__"]],
        facedetection: [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n",
          ],
        ],
        face_restore_model: [["__models__"]],
        face_restore_visibility: [
          "FLOAT",
          { default: 1, min: 0.1, max: 1, step: 0.05 },
        ],
        codeformer_weight: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1, step: 0.05 },
        ],
        detect_gender_source: [["no", "female", "male"], { default: "no" }],
        detect_gender_input: [["no", "female", "male"], { default: "no" }],
        source_faces_index: ["STRING", { default: "0" }],
        input_faces_index: ["STRING", { default: "0" }],
        console_log_level: [[0, 1, 2], { default: 1 }],
      },
      optional: { source_image: ["IMAGE"], face_model: ["FACE_MODEL"] },
    },
    output: ["IMAGE", "FACE_MODEL"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "FACE_MODEL"],
    name: "ReActorFaceSwap",
    display_name: "ReActor - Fast Face Swap",
    description: "",
    category: "ReActor",
    output_node: false,
  },
  ReActorLoadFaceModel: {
    input: { required: { face_model: [["__models__"]] } },
    output: ["FACE_MODEL"],
    output_is_list: [false],
    output_name: ["FACE_MODEL"],
    name: "ReActorLoadFaceModel",
    display_name: "Load Face Model",
    description: "",
    category: "ReActor",
    output_node: false,
  },
  ReActorSaveFaceModel: {
    input: {
      required: {
        save_mode: [
          "BOOLEAN",
          { default: true, label_off: "OFF", label_on: "ON" },
        ],
        face_model_name: ["STRING", { default: "default" }],
      },
      optional: { image: ["IMAGE"], face_model: ["FACE_MODEL"] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ReActorSaveFaceModel",
    display_name: "Save Face Model",
    description: "",
    category: "ReActor",
    output_node: true,
  },
  ReActorRestoreFace: {
    input: {
      required: {
        image: ["IMAGE"],
        facedetection: [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n",
          ],
        ],
        model: [["__models__"]],
        visibility: ["FLOAT", { default: 1, min: 0.0, max: 1, step: 0.05 }],
        codeformer_weight: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1, step: 0.05 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ReActorRestoreFace",
    display_name: "Restore Face",
    description: "",
    category: "ReActor",
    output_node: false,
  },
  BNK_NoisyLatentImage: {
    input: {
      required: {
        source: [["CPU", "GPU"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "BNK_NoisyLatentImage",
    display_name: "Noisy Latent Image",
    description: "",
    category: "latent/noise",
    output_node: false,
  },
  BNK_SlerpLatent: {
    input: {
      required: {
        latents1: ["LATENT"],
        factor: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: { latents2: ["LATENT"], mask: ["MASK"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "BNK_SlerpLatent",
    display_name: "Slerp Latents",
    description: "",
    category: "latent",
    output_node: false,
  },
  BNK_GetSigma: {
    input: {
      required: {
        model: ["MODEL"],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        steps: ["INT", { default: 10000, min: 0, max: 10000 }],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 1, max: 10000 }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "BNK_GetSigma",
    display_name: "Get Sigma",
    description: "",
    category: "latent/noise",
    output_node: false,
  },
  BNK_InjectNoise: {
    input: {
      required: {
        latents: ["LATENT"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 200.0, step: 0.01 }],
      },
      optional: { noise: ["LATENT"], mask: ["MASK"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "BNK_InjectNoise",
    display_name: "Inject Noise",
    description: "",
    category: "latent/noise",
    output_node: false,
  },
  BNK_Unsampler: {
    input: {
      required: {
        model: ["MODEL"],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        end_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        cfg: ["FLOAT", { default: 1.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        normalize: [["disable", "enable"]],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "BNK_Unsampler",
    display_name: "Unsampler",
    description: "",
    category: "sampling",
    output_node: false,
  },
  PortraitMaster: {
    input: {
      required: {
        shot: [
          [
            "-",
            "Close-up",
            "Face",
            "Full body",
            "Full-length portrait",
            "Half-length portrait",
            "Head and shoulders portrait",
            "Head portrait",
            "Portrait",
          ],
          { default: "-" },
        ],
        shot_weight: [
          "FLOAT",
          { default: 0, step: 0.05, min: 0, max: 1.95, display: "slider" },
        ],
        gender: [["-", "Man", "Woman"], { default: "-" }],
        androgynous: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        age: [
          "INT",
          { default: 30, min: 18, max: 90, step: 1, display: "slider" },
        ],
        nationality_1: [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean",
          ],
          { default: "-" },
        ],
        nationality_2: [
          [
            "-",
            "Afghan",
            "Albanian",
            "Algerian",
            "Andorran",
            "Angolan",
            "Antiguans Barbudans",
            "Argentine",
            "Armenian",
            "Australian",
            "Austrian",
            "Azerbaijani",
            "Bahamian",
            "Bahraini",
            "Bangladeshi",
            "Barbadian",
            "Belarusian",
            "Belgian",
            "Belizean",
            "Beninese",
            "Bhutanese",
            "Bolivian",
            "Bosnian Herzegovinian",
            "Brazilian",
            "British",
            "Bruneian",
            "Bulgarian",
            "Burkinabe",
            "Burundian",
            "Cambodian",
            "Cameroonian",
            "Canadian",
            "Cape Verdian",
            "Central African",
            "Chadian",
            "Chilean",
            "Chinese",
            "Colombian",
            "Comoran",
            "Congolese",
            "Costa Rican",
            "Croatian",
            "Cuban",
            "Cypriot",
            "Czech",
            "Danish",
            "Djibouti",
            "Dominican",
            "Dutch",
            "East Timorese",
            "Ecuadorean",
            "Egyptian",
            "Emirian",
            "Equatorial Guinean",
            "Eritrean",
            "Estonian",
            "Ethiopian",
            "Fijian",
            "Filipino",
            "Finnish",
            "French",
            "Gabonese",
            "Gambian",
            "Georgian",
            "German",
            "Ghanaian",
            "Greek",
            "Grenadian",
            "Guatemalan",
            "Guinean",
            "Guyanese",
            "Haitian",
            "Herzegovinian",
            "Honduran",
            "Hungarian",
            "Icelander",
            "Indian",
            "Indonesian",
            "Iranian",
            "Iraqi",
            "Irish",
            "Israeli",
            "Italian",
            "Ivorian",
            "Jamaican",
            "Japanese",
            "Jordanian",
            "Kazakhstani",
            "Kenyan",
            "Kiribati",
            "Kuwaiti",
            "Kyrgyz",
            "Laotian",
            "Latvian",
            "Lebanese",
            "Liberian",
            "Libyan",
            "Liechtensteiner",
            "Lithuanian",
            "Luxembourgish",
            "Macedonian",
            "Malagasy",
            "Malawian",
            "Malaysian",
            "Maldivan",
            "Malian",
            "Maltese",
            "Marshallese",
            "Mauritanian",
            "Mauritian",
            "Mexican",
            "Micronesian",
            "Moldovan",
            "Monegasque",
            "Mongolian",
            "Montenegrin",
            "Moroccan",
            "Mosotho",
            "Motswana",
            "Mozambican",
            "Namibian",
            "Nauruan",
            "Nepalese",
            "New Zealander",
            "Ni-Vanuatu",
            "Nicaraguan",
            "Nigerian",
            "Nigerien",
            "North Korean",
            "North Korean",
            "Northern Irish",
            "Norwegian",
            "Omani",
            "Pakistani",
            "Palauan",
            "Palestinian",
            "Panamanian",
            "Papua New Guinean",
            "Paraguayan",
            "Peruvian",
            "Polish",
            "Portuguese",
            "Qatari",
            "Romanian",
            "Russian",
            "Rwandan",
            "Saint Lucian",
            "Salvadoran",
            "Samoan",
            "San Marinese",
            "Sao Tomean",
            "Saudi",
            "Scottish",
            "Senegalese",
            "Serbian",
            "Seychellois",
            "Sierra Leonean",
            "Singaporean",
            "Slovakian",
            "Slovenian",
            "Solomon Islander",
            "Somali",
            "South African",
            "South Korean",
            "South Korean",
            "South Sudanese",
            "Spanish",
            "Sri Lankan",
            "Sudanese",
            "Surinamer",
            "Swazi",
            "Swedish",
            "Swiss",
            "Syrian",
            "Tajikistani",
            "Tanzanian",
            "Thai",
            "Togolese",
            "Tongan",
            "Trinidadian Tobagonian",
            "Tunisian",
            "Turkish",
            "Turkmen",
            "Tuvaluan",
            "Ugandan",
            "Ukrainian",
            "Uruguayan",
            "Uzbekistani",
            "Venezuelan",
            "Vietnamese",
            "Welsh",
            "Yemeni",
            "Zambian",
            "Zimbabwean",
          ],
          { default: "-" },
        ],
        nationality_mix: [
          "FLOAT",
          { default: 0.5, min: 0, max: 1, step: 0.05, display: "slider" },
        ],
        body_type: [
          ["-", "Normal weight", "Obese", "Overweight", "Underweight"],
          { default: "-" },
        ],
        body_type_weight: [
          "FLOAT",
          { default: 0, step: 0.05, min: 0, max: 1.95, display: "slider" },
        ],
        model_pose: [
          [
            "-",
            "Arms Up Pose",
            "Back Arch Pose",
            "Candid Laugh Pose",
            "Casual Stroll Pose",
            "Close-Up Beauty Shot Pose",
            "Contrapposto Pose",
            "Dynamic Action Pose",
            "Gazing into the Distance Pose",
            "Hand-on-Hip Pose",
            "Headshot Pose",
            "High Fashion Pose",
            "Leaning Pose",
            "Power Pose",
            "S-curve Pose",
            "Sitting Cross-Legged Pose",
            "Sitting Pose",
            "The Over-the-Shoulder Look",
            "Walking Pose",
          ],
          { default: "-" },
        ],
        eyes_color: [
          [
            "-",
            "Amber",
            "Blue",
            "Brown",
            "Gray",
            "Green",
            "Hazel",
            "Red",
            "Violet",
          ],
          { default: "-" },
        ],
        facial_expression: [
          [
            "-",
            "Amused",
            "Angry",
            "Bored",
            "Calm",
            "Cautious",
            "Confused",
            "Contemptuous",
            "Content",
            "Disappointed",
            "Disgusted",
            "Envious",
            "Excited",
            "Fearful",
            "Happy",
            "In love",
            "Nervous",
            "Peaceful",
            "Proud",
            "Relieved",
            "Sad",
            "Serene",
            "Serious",
            "Shy",
            "Surprised",
          ],
          { default: "-" },
        ],
        facial_expression_weight: [
          "FLOAT",
          { default: 0, step: 0.05, min: 0, max: 1.95, display: "slider" },
        ],
        face_shape: [
          [
            "-",
            "Heart-shaped",
            "Inverted Triangle",
            "Long",
            "Oblong",
            "Oval",
            "Pear-shaped",
            "Rectangle",
            "Round",
            "Square",
            "Square Oval",
            "Square Round",
            "Triangle",
          ],
          { default: "-" },
        ],
        face_shape_weight: [
          "FLOAT",
          { default: 0, step: 0.05, min: 0, max: 1.95, display: "slider" },
        ],
        facial_asymmetry: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        hair_style: [
          [
            "-",
            "Asymmetrical cut",
            "Blunt cut",
            "Bob cut",
            "Box braids",
            "Braided bob",
            "Brave short haircut with shaved sides",
            "Buzz cut",
            "Choppy cut",
            "Curly bob",
            "Curtain bangs",
            "Deep side part",
            "Faux hawk",
            "Faux hawk short pixie",
            "Feathered cut",
            "French bob",
            "French braids",
            "Italian bob",
            "Layered cut",
            "Lemonade braids",
            "Long bob",
            "Long pixie",
            "Middle part ponytails",
            "Mohawk",
            "Pixie cut",
            "Right side shaved",
            "Shag cut",
            "Shullet",
            "Side-swept bangs",
            "Sideswept pixie",
            "Smooth lob",
            "Stacked bob",
            "Stitch braids",
            "Sweeping pixie",
            "Tapered haricut wuth shaved side",
            "Textured cut",
            "Two dutch braids",
            "Undercut",
            "Wavy bob",
            "Wavy cut with curtains bangs",
          ],
          { default: "-" },
        ],
        hair_color: [
          [
            "-",
            "Auburn",
            "Black",
            "Blonde",
            "Brown",
            "Chestnut",
            "Gray",
            "Red",
            "Salt and pepper",
            "White",
          ],
          { default: "-" },
        ],
        disheveled: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        beard: [
          [
            "-",
            "Anchor Beard",
            "Balbo Beard",
            "Chevron Mustache",
            "Chinstrap Beard",
            "Circle Beard",
            "Corporate Beard",
            "Ducktail Beard",
            "Friendly Mutton Chops",
            "Full Beard",
            "Garibaldi Beard",
            "Goatee",
            "Handlebar Mustache",
            "Horseshoe Mustache",
            "Imperial Mustache",
            "Mutton Chops",
            "Pencil Mustache",
            "Soul Patch",
            "Stubble Beard",
            "Van Dyke Beard",
            "Zappa Mustache",
          ],
          { default: "-" },
        ],
        natural_skin: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        bare_face: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        washed_face: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        dried_face: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        skin_details: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        skin_pores: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        dimples: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        wrinkles: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        freckles: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        moles: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        skin_imperfections: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        skin_acne: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        tanned_skin: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        eyes_details: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        iris_details: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        circular_iris: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        circular_pupil: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        light_type: [
          [
            "-",
            "Abstract light patterns",
            "Backlit silhouette",
            "Blue hour light",
            "Candlelight",
            "City streetlights",
            "Cloudy day diffused light",
            "Dappled sunlight",
            "Firelight",
            "Flash photography",
            "Fluorescent lighting",
            "Golden hour light",
            "Harsh sunlight",
            "Incandescent lighting",
            "Lantern light",
            "Lightning",
            "Moonlight",
            "Natural sunlight",
            "Neon lights",
            "Overcast sky",
            "Rim light",
            "Rim lighting",
            "Skylight",
            "Soft ambient light",
            "Softbox lighting",
            "Spotlight",
            "Stage lighting",
            "Studio lighting",
            "Sunrise warmth",
            "Sunset glow",
            "Torchlight",
            "Tungsten lighting",
            "Twilight hues",
          ],
          { default: "-" },
        ],
        light_direction: [
          [
            "-",
            "from bottom",
            "from bottom-left",
            "from bottom-right",
            "from front",
            "from left",
            "from rear",
            "from right",
            "from top",
            "from top-left",
            "from top-right",
          ],
          { default: "-" },
        ],
        light_weight: [
          "FLOAT",
          { default: 0, min: 0, max: 1.95, step: 0.05, display: "slider" },
        ],
        photorealism_improvement: [["enable", "disable"]],
        prompt_start: [
          "STRING",
          { multiline: true, default: "raw photo, (realistic:1.5)" },
        ],
        prompt_additional: ["STRING", { multiline: true, default: "" }],
        prompt_end: ["STRING", { multiline: true, default: "" }],
        negative_prompt: ["STRING", { multiline: true, default: "" }],
        style_1: [
          [
            "-",
            "Agfa Vista",
            "Astia",
            "Aurora Borealis",
            "Black and White Photography",
            "Bleach Bypass",
            "Charcoal Sketch",
            "CineStyle",
            "City Lights",
            "Classic Chrome",
            "Cool Blue Tint",
            "Cross Hatch",
            "Cross Process",
            "Cyanotype",
            "Day to Night",
            "Dreamy Desaturation",
            "Duotone",
            "Ektachrome",
            "Faded Glory",
            "Fashion Photography",
            "Golden Hour Glow",
            "Graphic Novel Style",
            "Gritty Contrast",
            "HDR Look",
            "HDR Photography",
            "High Key",
            "Holga",
            "Infrared Effect",
            "Kodachrome",
            "Lomo",
            "Lomography",
            "Low Key",
            "Mars Red Landscape",
            "Matte Finish",
            "Midnight Cool",
            "Minimalist Photography",
            "Monochromatic Photography",
            "Muted Colors",
            "Nature Photography",
            "Neon Glow",
            "Oil Painting Effect",
            "Orton Effect",
            "Pastel Hues",
            "Pastel Pop",
            "Polaroid",
            "Polaroid Photography",
            "Pop Art Colors",
            "Provia",
            "Sepia Photography",
            "Sepia Tone",
            "Smoke Art Photography",
            "Solarization",
            "Split Toning",
            "Street Photography",
            "Sunset Warmth",
            "Surreal Photography",
            "Tri-tone",
            "Twilight Blue",
            "Underwater Photography",
            "Urban Exploration (Urbex)",
            "Velvia",
            "Vibrant Colors",
            "Vintage Fade",
            "Vintage Photography",
            "Warm Orange Glow",
            "Watercolor Effect",
          ],
          { default: "-" },
        ],
        style_1_weight: [
          "FLOAT",
          { default: 1.5, min: 1, max: 1.95, step: 0.05, display: "slider" },
        ],
        style_2: [
          [
            "-",
            "Agfa Vista",
            "Astia",
            "Aurora Borealis",
            "Black and White Photography",
            "Bleach Bypass",
            "Charcoal Sketch",
            "CineStyle",
            "City Lights",
            "Classic Chrome",
            "Cool Blue Tint",
            "Cross Hatch",
            "Cross Process",
            "Cyanotype",
            "Day to Night",
            "Dreamy Desaturation",
            "Duotone",
            "Ektachrome",
            "Faded Glory",
            "Fashion Photography",
            "Golden Hour Glow",
            "Graphic Novel Style",
            "Gritty Contrast",
            "HDR Look",
            "HDR Photography",
            "High Key",
            "Holga",
            "Infrared Effect",
            "Kodachrome",
            "Lomo",
            "Lomography",
            "Low Key",
            "Mars Red Landscape",
            "Matte Finish",
            "Midnight Cool",
            "Minimalist Photography",
            "Monochromatic Photography",
            "Muted Colors",
            "Nature Photography",
            "Neon Glow",
            "Oil Painting Effect",
            "Orton Effect",
            "Pastel Hues",
            "Pastel Pop",
            "Polaroid",
            "Polaroid Photography",
            "Pop Art Colors",
            "Provia",
            "Sepia Photography",
            "Sepia Tone",
            "Smoke Art Photography",
            "Solarization",
            "Split Toning",
            "Street Photography",
            "Sunset Warmth",
            "Surreal Photography",
            "Tri-tone",
            "Twilight Blue",
            "Underwater Photography",
            "Urban Exploration (Urbex)",
            "Velvia",
            "Vibrant Colors",
            "Vintage Fade",
            "Vintage Photography",
            "Warm Orange Glow",
            "Watercolor Effect",
          ],
          { default: "-" },
        ],
        style_2_weight: [
          "FLOAT",
          { default: 1.5, min: 1, max: 1.95, step: 0.05, display: "slider" },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "PortraitMaster",
    display_name: "Portrait Master v.2.5",
    description: "",
    category: "AI WizArt",
    output_node: false,
  },
  "ShowText|pysssss": {
    input: {
      required: { text: ["STRING", { forceInput: true }] },
      hidden: { unique_id: "UNIQUE_ID", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["STRING"],
    output_is_list: [true],
    output_name: ["STRING"],
    name: "ShowText|pysssss",
    display_name: "Show Text \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: true,
  },
  "ConstrainImage|pysssss": {
    input: {
      required: {
        images: ["IMAGE"],
        max_width: ["INT", { default: 1024, min: 0 }],
        max_height: ["INT", { default: 1024, min: 0 }],
        min_width: ["INT", { default: 0, min: 0 }],
        min_height: ["INT", { default: 0, min: 0 }],
        crop_if_required: [["yes", "no"], { default: "no" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "ConstrainImage|pysssss",
    display_name: "Constrain Image \ud83d\udc0d",
    description: "",
    category: "image",
    output_node: false,
  },
  "ReroutePrimitive|pysssss": {
    input: { required: { value: ["*"] } },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ReroutePrimitive|pysssss",
    display_name: "Reroute Primitive \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: false,
  },
  "MathExpression|pysssss": {
    input: {
      required: {
        expression: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            "pysssss.autocomplete": {
              words: [
                {
                  text: "round",
                  value: "round()",
                  showValue: false,
                  hint: "number, dp? = 0",
                  caretOffset: -1,
                },
                {
                  text: "ceil",
                  value: "ceil()",
                  showValue: false,
                  hint: "number",
                  caretOffset: -1,
                },
                {
                  text: "floor",
                  value: "floor()",
                  showValue: false,
                  hint: "number",
                  caretOffset: -1,
                },
                {
                  text: "min",
                  value: "min()",
                  showValue: false,
                  hint: "...numbers",
                  caretOffset: -1,
                },
                {
                  text: "max",
                  value: "max()",
                  showValue: false,
                  hint: "...numbers",
                  caretOffset: -1,
                },
                {
                  text: "randomint",
                  value: "randomint()",
                  showValue: false,
                  hint: "min, max",
                  caretOffset: -1,
                },
                {
                  text: "randomchoice",
                  value: "randomchoice()",
                  showValue: false,
                  hint: "...numbers",
                  caretOffset: -1,
                },
              ],
              separator: "",
            },
          },
        ],
      },
      optional: {
        a: ["INT,FLOAT,IMAGE,LATENT"],
        b: ["INT,FLOAT,IMAGE,LATENT"],
        c: ["INT,FLOAT,IMAGE,LATENT"],
      },
      hidden: { extra_pnginfo: "EXTRA_PNGINFO", prompt: "PROMPT" },
    },
    output: ["INT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["INT", "FLOAT"],
    name: "MathExpression|pysssss",
    display_name: "Math Expression \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: true,
  },
  "ConstrainImageforVideo|pysssss": {
    input: {
      required: {
        images: ["IMAGE"],
        max_width: ["INT", { default: 1024, min: 0 }],
        max_height: ["INT", { default: 1024, min: 0 }],
        min_width: ["INT", { default: 0, min: 0 }],
        min_height: ["INT", { default: 0, min: 0 }],
        crop_if_required: [["yes", "no"], { default: "no" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ConstrainImageforVideo|pysssss",
    display_name: "Constrain Image for Video \ud83d\udc0d",
    description: "",
    category: "image",
    output_node: false,
  },
  "LoraLoader|pysssss": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -20.0, max: 20.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -20.0, max: 20.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP"],
    output_is_list: [false, false],
    output_name: ["MODEL", "CLIP"],
    name: "LoraLoader|pysssss",
    display_name: "Lora Loader \ud83d\udc0d",
    description: "",
    category: "loaders",
    output_node: false,
  },
  "CheckpointLoader|pysssss": {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "CheckpointLoader|pysssss",
    display_name: "Checkpoint Loader \ud83d\udc0d",
    description: "",
    category: "loaders",
    output_node: false,
  },
  "PlaySound|pysssss": {
    input: {
      required: {
        any: ["*", {}],
        mode: [["always", "on empty queue"], {}],
        volume: ["FLOAT", { min: 0, max: 1, step: 0.1, default: 0.5 }],
        file: ["STRING", { default: "notify.mp3" }],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["*"],
    name: "PlaySound|pysssss",
    display_name: "PlaySound \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: true,
  },
  "Repeater|pysssss": {
    input: {
      required: {
        source: ["*", {}],
        repeats: ["INT", { min: 0, max: 5000, default: 2 }],
        output: [["single", "multi"], {}],
        node_mode: [["reuse", "create"], {}],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["*"],
    name: "Repeater|pysssss",
    display_name: "Repeater \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: false,
  },
  "StringFunction|pysssss": {
    input: {
      required: {
        action: [["append", "replace"], {}],
        tidy_tags: [["yes", "no"], {}],
        text_a: ["STRING", { multiline: true }],
        text_b: ["STRING", { multiline: true }],
      },
      optional: { text_c: ["STRING", { multiline: true }] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "StringFunction|pysssss",
    display_name: "String Function \ud83d\udc0d",
    description: "",
    category: "utils",
    output_node: true,
  },
  "BLIP Model Loader": {
    input: { required: { blip_model: [["caption", "interrogate"]] } },
    output: ["BLIP_MODEL"],
    output_is_list: [false],
    output_name: ["BLIP_MODEL"],
    name: "BLIP Model Loader",
    display_name: "BLIP Model Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "Blend Latents": {
    input: {
      required: {
        latent_a: ["LATENT"],
        latent_b: ["LATENT"],
        operation: [
          [
            "add",
            "multiply",
            "divide",
            "subtract",
            "overlay",
            "hard_light",
            "soft_light",
            "screen",
            "linear_dodge",
            "difference",
            "exclusion",
            "random",
          ],
        ],
        blend: ["FLOAT", { default: 0.5, min: 0.01, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Blend Latents",
    display_name: "Blend Latents",
    description: "",
    category: "WAS Suite/Latent",
    output_node: false,
  },
  "Bus Node": {
    input: {
      required: {},
      optional: {
        bus: ["BUS"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
      },
    },
    output: ["BUS", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["bus", "model", "clip", "vae", "positive", "negative"],
    name: "Bus Node",
    display_name: "Bus Node",
    description: "",
    category: "WAS Suite/Utilities",
    output_node: false,
  },
  "Cache Node": {
    input: {
      required: {
        latent_suffix: [
          "STRING",
          { default: "62290352_cache", multiline: false },
        ],
        image_suffix: [
          "STRING",
          { default: "35193669_cache", multiline: false },
        ],
        conditioning_suffix: [
          "STRING",
          { default: "1974986_cache", multiline: false },
        ],
      },
      optional: {
        output_path: [
          "STRING",
          {
            default:
              "/Users/nc/Desktop/flowt-workbench/flowt-execution-pipeline-v2/filesystem/custom_nodes/was-node-suite-comfyui/cache",
            multiline: false,
          },
        ],
        latent: ["LATENT"],
        image: ["IMAGE"],
        conditioning: ["CONDITIONING"],
      },
    },
    output: ["STRING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["latent_filename", "image_filename", "conditioning_filename"],
    name: "Cache Node",
    display_name: "Cache Node",
    description: "",
    category: "WAS Suite/IO",
    output_node: true,
  },
  "Checkpoint Loader": {
    input: {
      required: { config_name: [["__models__"]], ckpt_name: [["__models__"]] },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "NAME_STRING"],
    name: "Checkpoint Loader",
    display_name: "Checkpoint Loader",
    description: "",
    category: "WAS Suite/Loaders/Advanced",
    output_node: false,
  },
  "Checkpoint Loader (Simple)": {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "NAME_STRING"],
    name: "Checkpoint Loader (Simple)",
    display_name: "Checkpoint Loader (Simple)",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "CLIPTextEncode (NSP)": {
    input: {
      required: {
        mode: [["Noodle Soup Prompts", "Wildcards"]],
        noodle_key: ["STRING", { default: "__", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        text: ["STRING", { multiline: true }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["conditioning", "parsed_text", "raw_text"],
    name: "CLIPTextEncode (NSP)",
    display_name: "CLIPTextEncode (NSP)",
    description: "",
    category: "WAS Suite/Conditioning",
    output_node: true,
  },
  "CLIP Input Switch": {
    input: {
      required: {
        clip_a: ["CLIP"],
        clip_b: ["CLIP"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["CLIP"],
    output_is_list: [false],
    output_name: ["CLIP"],
    name: "CLIP Input Switch",
    display_name: "CLIP Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "CLIP Vision Input Switch": {
    input: {
      required: {
        clip_vision_a: ["CLIP_VISION"],
        clip_vision_b: ["CLIP_VISION"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["CLIP_VISION"],
    output_is_list: [false],
    output_name: ["CLIP_VISION"],
    name: "CLIP Vision Input Switch",
    display_name: "CLIP Vision Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Conditioning Input Switch": {
    input: {
      required: {
        conditioning_a: ["CONDITIONING"],
        conditioning_b: ["CONDITIONING"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "Conditioning Input Switch",
    display_name: "Conditioning Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Constant Number": {
    input: {
      required: {
        number_type: [["integer", "float", "bool"]],
        number: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
      optional: { number_as_text: ["STRING", { forceInput: true }] },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Constant Number",
    display_name: "Constant Number",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "Create Grid Image": {
    input: {
      required: {
        images_path: [["__inputs__"]],
        pattern_glob: ["STRING", { default: "*", multiline: false }],
        include_subfolders: [["false", "true"]],
        border_width: ["INT", { default: 3, min: 0, max: 100, step: 1 }],
        number_of_columns: ["INT", { default: 6, min: 1, max: 24, step: 1 }],
        max_cell_size: ["INT", { default: 256, min: 32, max: 1280, step: 1 }],
        border_red: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        border_green: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        border_blue: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Create Grid Image",
    display_name: "Create Grid Image",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Create Grid Image from Batch": {
    input: {
      required: {
        images: ["IMAGE"],
        border_width: ["INT", { default: 3, min: 0, max: 100, step: 1 }],
        number_of_columns: ["INT", { default: 6, min: 1, max: 24, step: 1 }],
        max_cell_size: ["INT", { default: 256, min: 32, max: 2048, step: 1 }],
        border_red: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        border_green: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        border_blue: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Create Grid Image from Batch",
    display_name: "Create Grid Image from Batch",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Create Morph Image": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        transition_frames: ["INT", { default: 30, min: 2, max: 60, step: 1 }],
        still_image_delay_ms: [
          "FLOAT",
          { default: 2500.0, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        duration_ms: [
          "FLOAT",
          { default: 0.1, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        loops: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        max_size: ["INT", { default: 512, min: 128, max: 1280, step: 1 }],
        filename: ["STRING", { default: "morph", multiline: false }],
        filetype: [["GIF", "APNG"]],
      },
    },
    output: ["IMAGE", "IMAGE", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: [
      "image_a_pass",
      "image_b_pass",
      "filepath_text",
      "filename_text",
    ],
    name: "Create Morph Image",
    display_name: "Create Morph Image",
    description: "",
    category: "WAS Suite/Animation",
    output_node: false,
  },
  "Create Morph Image from Path": {
    input: {
      required: {
        transition_frames: ["INT", { default: 30, min: 2, max: 60, step: 1 }],
        still_image_delay_ms: [
          "FLOAT",
          { default: 2500.0, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        duration_ms: [
          "FLOAT",
          { default: 0.1, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        loops: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        max_size: ["INT", { default: 512, min: 128, max: 1280, step: 1 }],
        input_path: [["__inputs__"]],
        input_pattern: ["STRING", { default: "*", multiline: false }],
        filename: ["STRING", { default: "morph", multiline: false }],
        filetype: [["GIF", "APNG"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["filepath_text", "filename_text"],
    name: "Create Morph Image from Path",
    display_name: "Create Morph Image from Path",
    description: "",
    category: "WAS Suite/Animation",
    output_node: false,
  },
  "Create Video from Path": {
    input: {
      required: {
        transition_frames: ["INT", { default: 30, min: 0, max: 120, step: 1 }],
        image_delay_sec: [
          "FLOAT",
          { default: 2.5, min: 0.01, max: 60000.0, step: 0.01 },
        ],
        fps: ["INT", { default: 30, min: 1, max: 60.0, step: 1 }],
        max_size: ["INT", { default: 512, min: 128, max: 1920, step: 1 }],
        input_path: [["__inputs__"]],
        filename: ["STRING", { default: "comfy_video", multiline: false }],
        codec: [["AVC1", "FFV1", "H264", "MP4V"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["filepath_text", "filename_text"],
    name: "Create Video from Path",
    display_name: "Create Video from Path",
    description: "",
    category: "WAS Suite/Animation",
    output_node: false,
  },
  "CLIPSeg Masking": {
    input: {
      required: {
        image: ["IMAGE"],
        text: ["STRING", { default: "", multiline: false }],
      },
      optional: { clipseg_model: ["CLIPSEG_MODEL"] },
    },
    output: ["MASK", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["MASK", "MASK_IMAGE"],
    name: "CLIPSeg Masking",
    display_name: "CLIPSeg Masking",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "CLIPSeg Model Loader": {
    input: {
      required: {
        model: [
          "STRING",
          { default: "CIDAS/clipseg-rd64-refined", multiline: false },
        ],
      },
    },
    output: ["CLIPSEG_MODEL"],
    output_is_list: [false],
    output_name: ["clipseg_model"],
    name: "CLIPSeg Model Loader",
    display_name: "CLIPSeg Model Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "CLIPSeg Batch Masking": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        text_a: ["STRING", { default: "", multiline: false }],
        text_b: ["STRING", { default: "", multiline: false }],
      },
      optional: {
        image_c: ["IMAGE"],
        image_d: ["IMAGE"],
        image_e: ["IMAGE"],
        image_f: ["IMAGE"],
        text_c: ["STRING", { default: "", multiline: false }],
        text_d: ["STRING", { default: "", multiline: false }],
        text_e: ["STRING", { default: "", multiline: false }],
        text_f: ["STRING", { default: "", multiline: false }],
      },
    },
    output: ["IMAGE", "MASK", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["IMAGES_BATCH", "MASKS_BATCH", "MASK_IMAGES_BATCH"],
    name: "CLIPSeg Batch Masking",
    display_name: "CLIPSeg Batch Masking",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Convert Masks to Images": {
    input: { required: { masks: ["MASK"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGES"],
    name: "Convert Masks to Images",
    display_name: "Convert Masks to Images",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Control Net Model Input Switch": {
    input: {
      required: {
        control_net_a: ["CONTROL_NET"],
        control_net_b: ["CONTROL_NET"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "Control Net Model Input Switch",
    display_name: "Control Net Model Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Debug Number to Console": {
    input: {
      required: {
        number: ["NUMBER"],
        label: ["STRING", { default: "Debug to Console", multiline: false }],
      },
    },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "Debug Number to Console",
    display_name: "Debug Number to Console",
    description: "",
    category: "WAS Suite/Debug",
    output_node: true,
  },
  "Dictionary to Console": {
    input: {
      required: {
        dictionary: ["DICT"],
        label: ["STRING", { default: "Dictionary Output", multiline: false }],
      },
    },
    output: ["DICT"],
    output_is_list: [false],
    output_name: ["DICT"],
    name: "Dictionary to Console",
    display_name: "Dictionary to Console",
    description: "",
    category: "WAS Suite/Debug",
    output_node: true,
  },
  "Diffusers Model Loader": {
    input: { required: { model_path: [[]] } },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "NAME_STRING"],
    name: "Diffusers Model Loader",
    display_name: "Diffusers Model Loader",
    description: "",
    category: "WAS Suite/Loaders/Advanced",
    output_node: false,
  },
  "Diffusers Hub Model Down-Loader": {
    input: {
      required: {
        repo_id: ["STRING", { multiline: false }],
        revision: ["STRING", { default: "None", multiline: false }],
      },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "NAME_STRING"],
    name: "Diffusers Hub Model Down-Loader",
    display_name: "Diffusers Hub Model Down-Loader",
    description: "",
    category: "WAS Suite/Loaders/Advanced",
    output_node: false,
  },
  "Export API": {
    input: {
      required: {
        save_prompt_api: [["true", "true"]],
        output_path: [
          "STRING",
          { default: "./ComfyUI/output/", multiline: false },
        ],
        filename_prefix: ["STRING", { default: "ComfyUI_Prompt" }],
        filename_delimiter: ["STRING", { default: "_" }],
        filename_number_padding: [
          "INT",
          { default: 4, min: 2, max: 9, step: 1 },
        ],
        parse_text_tokens: ["BOOLEAN", { default: false }],
      },
      hidden: { prompt: "PROMPT" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Export API",
    display_name: "Export API",
    description: "",
    category: "WAS Suite/Debug",
    output_node: true,
  },
  "Latent Input Switch": {
    input: {
      required: {
        latent_a: ["LATENT"],
        latent_b: ["LATENT"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Input Switch",
    display_name: "Latent Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Load Cache": {
    input: {
      required: {
        latent_path: ["STRING", { default: "", multiline: false }],
        image_path: ["STRING", { default: "", multiline: false }],
        conditioning_path: ["STRING", { default: "", multiline: false }],
      },
    },
    output: ["LATENT", "IMAGE", "CONDITIONING"],
    output_is_list: [false, false, false],
    output_name: ["LATENT", "IMAGE", "CONDITIONING"],
    name: "Load Cache",
    display_name: "Load Cache",
    description: "",
    category: "WAS Suite/IO",
    output_node: false,
  },
  "Logic Boolean": {
    input: {
      required: {
        boolean_number: ["FLOAT", { default: 1, min: 0, max: 1, step: 1 }],
      },
    },
    output: ["NUMBER", "INT"],
    output_is_list: [false, false],
    output_name: ["NUMBER", "INT"],
    name: "Logic Boolean",
    display_name: "Logic Boolean",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Lora Loader": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["None", "__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "NAME_STRING"],
    name: "Lora Loader",
    display_name: "Lora Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "Image SSAO (Ambient Occlusion)": {
    input: {
      required: {
        images: ["IMAGE"],
        depth_images: ["IMAGE"],
        strength: ["FLOAT", { min: 0.0, max: 5.0, default: 1.0, step: 0.01 }],
        radius: ["FLOAT", { min: 0.01, max: 1024, default: 30, step: 0.01 }],
        ao_blur: ["FLOAT", { min: 0.01, max: 1024, default: 2.5, step: 0.01 }],
        specular_threshold: ["INT", { min: 0, max: 255, default: 25, step: 1 }],
        enable_specular_masking: [["True", "False"]],
        tile_size: ["INT", { min: 1, max: 512, default: 1, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["composited_images", "ssao_images", "specular_mask_images"],
    name: "Image SSAO (Ambient Occlusion)",
    display_name: "Image SSAO (Ambient Occlusion)",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image SSDO (Direct Occlusion)": {
    input: {
      required: {
        images: ["IMAGE"],
        depth_images: ["IMAGE"],
        strength: ["FLOAT", { min: 0.0, max: 5.0, default: 1.0, step: 0.01 }],
        radius: ["FLOAT", { min: 0.01, max: 1024, default: 30, step: 0.01 }],
        specular_threshold: [
          "INT",
          { min: 0, max: 255, default: 128, step: 1 },
        ],
        colored_occlusion: [["True", "False"]],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false, false],
    output_name: [
      "composited_images",
      "ssdo_images",
      "ssdo_image_masks",
      "light_source_image_masks",
    ],
    name: "Image SSDO (Direct Occlusion)",
    display_name: "Image SSDO (Direct Occlusion)",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Analyze": {
    input: {
      required: {
        image: ["IMAGE"],
        mode: [["Black White Levels", "RGB Levels"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Analyze",
    display_name: "Image Analyze",
    description: "",
    category: "WAS Suite/Image/Analyze",
    output_node: false,
  },
  "Image Aspect Ratio": {
    input: {
      required: {},
      optional: { image: ["IMAGE"], width: ["NUMBER"], height: ["NUMBER"] },
    },
    output: ["NUMBER", "FLOAT", "NUMBER", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "aspect_number",
      "aspect_float",
      "is_landscape_bool",
      "aspect_ratio_common",
      "aspect_type",
    ],
    name: "Image Aspect Ratio",
    display_name: "Image Aspect Ratio",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Image Batch": {
    input: {
      required: {},
      optional: {
        images_a: ["IMAGE"],
        images_b: ["IMAGE"],
        images_c: ["IMAGE"],
        images_d: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Batch",
    display_name: "Image Batch",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Image Blank": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 8, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 8, max: 4096, step: 1 }],
        red: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        green: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        blue: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Blank",
    display_name: "Image Blank",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Image Blend by Mask": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        mask: ["IMAGE"],
        blend_percentage: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Blend by Mask",
    display_name: "Image Blend by Mask",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Image Blend": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        blend_percentage: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Blend",
    display_name: "Image Blend",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Image Blending Mode": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        mode: [
          [
            "add",
            "color",
            "color_burn",
            "color_dodge",
            "darken",
            "difference",
            "exclusion",
            "hard_light",
            "hue",
            "lighten",
            "multiply",
            "overlay",
            "screen",
            "soft_light",
          ],
        ],
        blend_percentage: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Blending Mode",
    display_name: "Image Blending Mode",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Image Bloom Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        radius: ["FLOAT", { default: 10, min: 0.0, max: 1024, step: 0.1 }],
        intensity: ["FLOAT", { default: 1, min: 0.0, max: 1.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Bloom Filter",
    display_name: "Image Bloom Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Canny Filter": {
    input: {
      required: {
        images: ["IMAGE"],
        enable_threshold: [["false", "true"]],
        threshold_low: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        threshold_high: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Canny Filter",
    display_name: "Image Canny Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Chromatic Aberration": {
    input: {
      required: {
        image: ["IMAGE"],
        red_offset: ["INT", { default: 2, min: -255, max: 255, step: 1 }],
        green_offset: ["INT", { default: -1, min: -255, max: 255, step: 1 }],
        blue_offset: ["INT", { default: 1, min: -255, max: 255, step: 1 }],
        intensity: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        fade_radius: ["INT", { default: 12, min: 0, max: 1024, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Chromatic Aberration",
    display_name: "Image Chromatic Aberration",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Color Palette": {
    input: {
      required: {
        image: ["IMAGE"],
        colors: ["INT", { default: 16, min: 8, max: 256, step: 1 }],
        mode: [["Chart", "back_to_back"]],
      },
    },
    output: ["IMAGE", "LIST"],
    output_is_list: [false, false],
    output_name: ["image", "color_palettes"],
    name: "Image Color Palette",
    display_name: "Image Color Palette",
    description: "",
    category: "WAS Suite/Image/Analyze",
    output_node: false,
  },
  "Image Crop Face": {
    input: {
      required: {
        image: ["IMAGE"],
        crop_padding_factor: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 2.0, step: 0.01 },
        ],
        cascade_xml: [
          [
            "lbpcascade_animeface.xml",
            "haarcascade_frontalface_default.xml",
            "haarcascade_frontalface_alt.xml",
            "haarcascade_frontalface_alt2.xml",
            "haarcascade_frontalface_alt_tree.xml",
            "haarcascade_profileface.xml",
            "haarcascade_upperbody.xml",
            "haarcascade_eye.xml",
          ],
        ],
      },
    },
    output: ["IMAGE", "CROP_DATA"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "CROP_DATA"],
    name: "Image Crop Face",
    display_name: "Image Crop Face",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Crop Location": {
    input: {
      required: {
        image: ["IMAGE"],
        top: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        left: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        right: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        bottom: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
      },
    },
    output: ["IMAGE", "CROP_DATA"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "CROP_DATA"],
    name: "Image Crop Location",
    display_name: "Image Crop Location",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Crop Square Location": {
    input: {
      required: {
        image: ["IMAGE"],
        x: ["INT", { default: 0, max: 24576, min: 0, step: 1 }],
        y: ["INT", { default: 0, max: 24576, min: 0, step: 1 }],
        size: ["INT", { default: 256, max: 4096, min: 5, step: 1 }],
      },
    },
    output: ["IMAGE", "CROP_DATA"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "CROP_DATA"],
    name: "Image Crop Square Location",
    display_name: "Image Crop Square Location",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Displacement Warp": {
    input: {
      required: {
        images: ["IMAGE"],
        displacement_maps: ["IMAGE"],
        amplitude: [
          "FLOAT",
          { default: 25.0, min: -4096, max: 4096, step: 0.1 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Displacement Warp",
    display_name: "Image Displacement Warp",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Lucy Sharpen": {
    input: {
      required: {
        images: ["IMAGE"],
        iterations: ["INT", { default: 2, min: 1, max: 12, step: 1 }],
        kernel_size: ["INT", { default: 3, min: 1, max: 16, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Lucy Sharpen",
    display_name: "Image Lucy Sharpen",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Paste Face": {
    input: {
      required: {
        image: ["IMAGE"],
        crop_image: ["IMAGE"],
        crop_data: ["CROP_DATA"],
        crop_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_sharpening: ["INT", { default: 0, min: 0, max: 3, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK_IMAGE"],
    name: "Image Paste Face",
    display_name: "Image Paste Face",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Paste Crop": {
    input: {
      required: {
        image: ["IMAGE"],
        crop_image: ["IMAGE"],
        crop_data: ["CROP_DATA"],
        crop_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_sharpening: ["INT", { default: 0, min: 0, max: 3, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE"],
    name: "Image Paste Crop",
    display_name: "Image Paste Crop",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Paste Crop by Location": {
    input: {
      required: {
        image: ["IMAGE"],
        crop_image: ["IMAGE"],
        top: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        left: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        right: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        bottom: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        crop_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_sharpening: ["INT", { default: 0, min: 0, max: 3, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE"],
    name: "Image Paste Crop by Location",
    display_name: "Image Paste Crop by Location",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Pixelate": {
    input: {
      required: {
        images: ["IMAGE"],
        pixelation_size: [
          "FLOAT",
          { default: 164, min: 16, max: 480, step: 1 },
        ],
        num_colors: ["FLOAT", { default: 16, min: 2, max: 256, step: 1 }],
        init_mode: [["k-means++", "random", "none"]],
        max_iterations: ["FLOAT", { default: 100, min: 1, max: 256, step: 1 }],
        dither: [["False", "True"]],
        dither_mode: [["FloydSteinberg", "Ordered"]],
      },
      optional: {
        color_palettes: ["LIST", { forceInput: true }],
        color_palette_mode: [
          ["Brightness", "BrightnessAndTonal", "Linear", "Tonal"],
        ],
        reverse_palette: [["False", "True"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Pixelate",
    display_name: "Image Pixelate",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Power Noise": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        height: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        frequency: ["FLOAT", { default: 0.5, max: 10.0, min: 0.0, step: 0.01 }],
        attenuation: [
          "FLOAT",
          { default: 0.5, max: 10.0, min: 0.0, step: 0.01 },
        ],
        noise_type: [["grey", "white", "pink", "blue", "green", "mix"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Power Noise",
    display_name: "Image Power Noise",
    description: "",
    category: "WAS Suite/Image/Generate/Noise",
    output_node: false,
  },
  "Image Dragan Photography Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        saturation: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 16.0, step: 0.01 },
        ],
        contrast: ["FLOAT", { default: 1.0, min: 0.0, max: 16.0, step: 0.01 }],
        brightness: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 16.0, step: 0.01 },
        ],
        sharpness: ["FLOAT", { default: 1.0, min: 0.0, max: 6.0, step: 0.01 }],
        highpass_radius: [
          "FLOAT",
          { default: 6.0, min: 0.0, max: 255.0, step: 0.01 },
        ],
        highpass_samples: ["INT", { default: 1, min: 0, max: 6.0, step: 1 }],
        highpass_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 3.0, step: 0.01 },
        ],
        colorize: [["true", "false"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Dragan Photography Filter",
    display_name: "Image Dragan Photography Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Edge Detection Filter": {
    input: { required: { image: ["IMAGE"], mode: [["normal", "laplacian"]] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Edge Detection Filter",
    display_name: "Image Edge Detection Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Film Grain": {
    input: {
      required: {
        image: ["IMAGE"],
        density: ["FLOAT", { default: 1.0, min: 0.01, max: 1.0, step: 0.01 }],
        intensity: ["FLOAT", { default: 1.0, min: 0.01, max: 1.0, step: 0.01 }],
        highlights: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 255.0, step: 0.01 },
        ],
        supersample_factor: ["INT", { default: 4, min: 1, max: 8, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Film Grain",
    display_name: "Image Film Grain",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Filter Adjustments": {
    input: {
      required: {
        image: ["IMAGE"],
        brightness: [
          "FLOAT",
          { default: 0.0, min: -1.0, max: 1.0, step: 0.01 },
        ],
        contrast: ["FLOAT", { default: 1.0, min: -1.0, max: 2.0, step: 0.01 }],
        saturation: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.01 }],
        sharpness: ["FLOAT", { default: 1.0, min: -5.0, max: 5.0, step: 0.01 }],
        blur: ["INT", { default: 0, min: 0, max: 16, step: 1 }],
        gaussian_blur: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1024.0, step: 0.1 },
        ],
        edge_enhance: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        detail_enhance: [["false", "true"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Filter Adjustments",
    display_name: "Image Filter Adjustments",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Flip": {
    input: {
      required: { images: ["IMAGE"], mode: [["horizontal", "vertical"]] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Flip",
    display_name: "Image Flip",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Gradient Map": {
    input: {
      required: {
        image: ["IMAGE"],
        gradient_image: ["IMAGE"],
        flip_left_right: [["false", "true"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Gradient Map",
    display_name: "Image Gradient Map",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Generate Gradient": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        height: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        direction: [["horizontal", "vertical"]],
        tolerance: ["INT", { default: 0, max: 255, min: 0, step: 1 }],
        gradient_stops: [
          "STRING",
          {
            default: "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
            multiline: true,
          },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Generate Gradient",
    display_name: "Image Generate Gradient",
    description: "",
    category: "WAS Suite/Image/Generate",
    output_node: false,
  },
  "Image High Pass Filter": {
    input: {
      required: {
        images: ["IMAGE"],
        radius: ["INT", { default: 10, min: 1, max: 500, step: 1 }],
        strength: ["FLOAT", { default: 1.5, min: 0.0, max: 255.0, step: 0.1 }],
        color_output: [["true", "false"]],
        neutral_background: [["true", "false"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image High Pass Filter",
    display_name: "Image High Pass Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image History Loader": {
    input: { required: { image: [[".../Input Frames 2/Frame_47_.png"]] } },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "filename_text"],
    name: "Image History Loader",
    display_name: "Image History Loader",
    description: "",
    category: "WAS Suite/History",
    output_node: false,
  },
  "Image Input Switch": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Input Switch",
    display_name: "Image Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Image Levels Adjustment": {
    input: {
      required: {
        image: ["IMAGE"],
        black_level: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 255.0, step: 0.1 },
        ],
        mid_level: [
          "FLOAT",
          { default: 127.5, min: 0.0, max: 255.0, step: 0.1 },
        ],
        white_level: [
          "FLOAT",
          { default: 255, min: 0.0, max: 255.0, step: 0.1 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Levels Adjustment",
    display_name: "Image Levels Adjustment",
    description: "",
    category: "WAS Suite/Image/Adjustment",
    output_node: false,
  },
  "Image Load": {
    input: {
      required: { image_path: [["__inputs__"]], RGBA: [["false", "true"]] },
      optional: { filename_text_extension: [["true", "false"]] },
    },
    output: ["IMAGE", "MASK", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["image", "mask", "filename_text"],
    name: "Image Load",
    display_name: "Image Load",
    description: "",
    category: "WAS Suite/IO",
    output_node: false,
  },
  "Image Median Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        diameter: ["INT", { default: 2.0, min: 0.1, max: 255, step: 1 }],
        sigma_color: [
          "FLOAT",
          { default: 10.0, min: -255.0, max: 255.0, step: 0.1 },
        ],
        sigma_space: [
          "FLOAT",
          { default: 10.0, min: -255.0, max: 255.0, step: 0.1 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Median Filter",
    display_name: "Image Median Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Mix RGB Channels": {
    input: {
      required: {
        red_channel: ["IMAGE"],
        green_channel: ["IMAGE"],
        blue_channel: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Mix RGB Channels",
    display_name: "Image Mix RGB Channels",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Monitor Effects Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        mode: [["Digital Distortion", "Signal Distortion", "TV Distortion"]],
        amplitude: ["INT", { default: 5, min: 1, max: 255, step: 1 }],
        offset: ["INT", { default: 10, min: 1, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Monitor Effects Filter",
    display_name: "Image Monitor Effects Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Nova Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        amplitude: ["FLOAT", { default: 0.1, min: 0.0, max: 1.0, step: 0.001 }],
        frequency: [
          "FLOAT",
          { default: 3.14, min: 0.0, max: 100.0, step: 0.001 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Nova Filter",
    display_name: "Image Nova Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Padding": {
    input: {
      required: {
        image: ["IMAGE"],
        feathering: ["INT", { default: 120, min: 0, max: 2048, step: 1 }],
        feather_second_pass: [["true", "false"]],
        left_padding: ["INT", { default: 512, min: 8, max: 48000, step: 1 }],
        right_padding: ["INT", { default: 512, min: 8, max: 48000, step: 1 }],
        top_padding: ["INT", { default: 512, min: 8, max: 48000, step: 1 }],
        bottom_padding: ["INT", { default: 512, min: 8, max: 48000, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE"],
    name: "Image Padding",
    display_name: "Image Padding",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Perlin Noise": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 2048, min: 64, step: 1 }],
        height: ["INT", { default: 512, max: 2048, min: 64, step: 1 }],
        scale: ["INT", { default: 100, max: 2048, min: 2, step: 1 }],
        octaves: ["INT", { default: 4, max: 8, min: 0, step: 1 }],
        persistence: [
          "FLOAT",
          { default: 0.5, max: 100.0, min: 0.01, step: 0.01 },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Perlin Noise",
    display_name: "Image Perlin Noise",
    description: "",
    category: "WAS Suite/Image/Generate/Noise",
    output_node: false,
  },
  "Image Rembg (Remove Background)": {
    input: {
      required: {
        images: ["IMAGE"],
        transparency: ["BOOLEAN", { default: true }],
        model: [
          [
            "u2net",
            "u2netp",
            "u2net_human_seg",
            "silueta",
            "isnet-general-use",
            "isnet-anime",
          ],
        ],
        post_processing: ["BOOLEAN", { default: false }],
        only_mask: ["BOOLEAN", { default: false }],
        alpha_matting: ["BOOLEAN", { default: false }],
        alpha_matting_foreground_threshold: [
          "INT",
          { default: 240, min: 0, max: 255 },
        ],
        alpha_matting_background_threshold: [
          "INT",
          { default: 10, min: 0, max: 255 },
        ],
        alpha_matting_erode_size: ["INT", { default: 10, min: 0, max: 255 }],
        background_color: [
          ["none", "black", "white", "magenta", "chroma green", "chroma blue"],
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Rembg (Remove Background)",
    display_name: "Image Rembg (Remove Background)",
    description: "",
    category: "WAS Suite/Image/AI",
    output_node: false,
  },
  "Image Perlin Power Fractal": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 8192, min: 64, step: 1 }],
        height: ["INT", { default: 512, max: 8192, min: 64, step: 1 }],
        scale: ["INT", { default: 100, max: 2048, min: 2, step: 1 }],
        octaves: ["INT", { default: 4, max: 8, min: 0, step: 1 }],
        persistence: [
          "FLOAT",
          { default: 0.5, max: 100.0, min: 0.01, step: 0.01 },
        ],
        lacunarity: [
          "FLOAT",
          { default: 2.0, max: 100.0, min: 0.01, step: 0.01 },
        ],
        exponent: [
          "FLOAT",
          { default: 2.0, max: 100.0, min: 0.01, step: 0.01 },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Perlin Power Fractal",
    display_name: "Image Perlin Power Fractal",
    description: "",
    category: "WAS Suite/Image/Generate/Noise",
    output_node: false,
  },
  "Image Remove Background (Alpha)": {
    input: {
      required: {
        images: ["IMAGE"],
        mode: [["background", "foreground"]],
        threshold: ["INT", { default: 127, min: 0, max: 255, step: 1 }],
        threshold_tolerance: ["INT", { default: 2, min: 1, max: 24, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Remove Background (Alpha)",
    display_name: "Image Remove Background (Alpha)",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Remove Color": {
    input: {
      required: {
        image: ["IMAGE"],
        target_red: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        target_green: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        target_blue: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        replace_red: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        replace_green: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        replace_blue: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        clip_threshold: ["INT", { default: 10, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Remove Color",
    display_name: "Image Remove Color",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Resize": {
    input: {
      required: {
        image: ["IMAGE"],
        mode: [["rescale", "resize"]],
        supersample: [["true", "false"]],
        resampling: [["lanczos", "nearest", "bilinear", "bicubic"]],
        rescale_factor: [
          "FLOAT",
          { default: 2, min: 0.01, max: 16.0, step: 0.01 },
        ],
        resize_width: ["INT", { default: 1024, min: 1, max: 48000, step: 1 }],
        resize_height: ["INT", { default: 1536, min: 1, max: 48000, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Resize",
    display_name: "Image Resize",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Rotate": {
    input: {
      required: {
        images: ["IMAGE"],
        mode: [["transpose", "internal"]],
        rotation: ["INT", { default: 0, min: 0, max: 360, step: 90 }],
        sampler: [["nearest", "bilinear", "bicubic"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Rotate",
    display_name: "Image Rotate",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Rotate Hue": {
    input: {
      required: {
        image: ["IMAGE"],
        hue_shift: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Rotate Hue",
    display_name: "Image Rotate Hue",
    description: "",
    category: "WAS Suite/Image/Adjustment",
    output_node: false,
  },
  "Image Save": {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
        filename_delimiter: ["STRING", { default: "_" }],
        filename_number_padding: [
          "INT",
          { default: 4, min: 1, max: 9, step: 1 },
        ],
        filename_number_start: [["false", "true"]],
        extension: [["png", "jpg", "jpeg", "gif", "tiff", "webp", "bmp"]],
        quality: ["INT", { default: 100, min: 1, max: 100, step: 1 }],
        lossless_webp: [["false", "true"]],
        overwrite_mode: [["false", "prefix_as_filename"]],
        show_history: [["false", "true"]],
        show_history_by_prefix: [["true", "false"]],
        embed_workflow: [["true", "false"]],
        show_previews: [["true", "false"]],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Save",
    display_name: "Image Save",
    description: "",
    category: "WAS Suite/IO",
    output_node: true,
  },
  "Image Seamless Texture": {
    input: {
      required: {
        images: ["IMAGE"],
        blending: ["FLOAT", { default: 0.4, max: 1.0, min: 0.0, step: 0.01 }],
        tiled: [["true", "false"]],
        tiles: ["INT", { default: 2, max: 6, min: 2, step: 2 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Image Seamless Texture",
    display_name: "Image Seamless Texture",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Select Channel": {
    input: {
      required: { image: ["IMAGE"], channel: [["red", "green", "blue"]] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Select Channel",
    display_name: "Image Select Channel",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Select Color": {
    input: {
      required: {
        image: ["IMAGE"],
        red: ["INT", { default: 255.0, min: 0.0, max: 255.0, step: 0.1 }],
        green: ["INT", { default: 255.0, min: 0.0, max: 255.0, step: 0.1 }],
        blue: ["INT", { default: 255.0, min: 0.0, max: 255.0, step: 0.1 }],
        variance: ["INT", { default: 10, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Select Color",
    display_name: "Image Select Color",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Shadows and Highlights": {
    input: {
      required: {
        image: ["IMAGE"],
        shadow_threshold: [
          "FLOAT",
          { default: 75, min: 0.0, max: 255.0, step: 0.1 },
        ],
        shadow_factor: [
          "FLOAT",
          { default: 1.5, min: -12.0, max: 12.0, step: 0.1 },
        ],
        shadow_smoothing: [
          "FLOAT",
          { default: 0.25, min: -255.0, max: 255.0, step: 0.1 },
        ],
        highlight_threshold: [
          "FLOAT",
          { default: 175, min: 0.0, max: 255.0, step: 0.1 },
        ],
        highlight_factor: [
          "FLOAT",
          { default: 0.5, min: -12.0, max: 12.0, step: 0.1 },
        ],
        highlight_smoothing: [
          "FLOAT",
          { default: 0.25, min: -255.0, max: 255.0, step: 0.1 },
        ],
        simplify_isolation: [
          "FLOAT",
          { default: 0, min: -255.0, max: 255.0, step: 0.1 },
        ],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["image", "shadow_map", "highlight_map"],
    name: "Image Shadows and Highlights",
    display_name: "Image Shadows and Highlights",
    description: "",
    category: "WAS Suite/Image/Adjustment",
    output_node: false,
  },
  "Image Size to Number": {
    input: { required: { image: ["IMAGE"] } },
    output: ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "width_num",
      "height_num",
      "width_float",
      "height_float",
      "width_int",
      "height_int",
    ],
    name: "Image Size to Number",
    display_name: "Image Size to Number",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Image Stitch": {
    input: {
      required: {
        image_a: ["IMAGE"],
        image_b: ["IMAGE"],
        stitch: [["top", "left", "bottom", "right"]],
        feathering: ["INT", { default: 50, min: 0, max: 2048, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Stitch",
    display_name: "Image Stitch",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image Style Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        style: [
          [
            "1977",
            "aden",
            "brannan",
            "brooklyn",
            "clarendon",
            "earlybird",
            "fairy tale",
            "gingham",
            "hudson",
            "inkwell",
            "kelvin",
            "lark",
            "lofi",
            "maven",
            "mayfair",
            "moon",
            "nashville",
            "perpetua",
            "reyes",
            "rise",
            "slumber",
            "stinson",
            "toaster",
            "valencia",
            "walden",
            "willow",
            "xpro2",
          ],
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Style Filter",
    display_name: "Image Style Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image Threshold": {
    input: {
      required: {
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Threshold",
    display_name: "Image Threshold",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Tiled": {
    input: {
      required: {
        image: ["IMAGE"],
        num_tiles: ["INT", { default: 4, max: 64, min: 2, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGES"],
    name: "Image Tiled",
    display_name: "Image Tiled",
    description: "",
    category: "WAS Suite/Image/Process",
    output_node: false,
  },
  "Image Transpose": {
    input: {
      required: {
        image: ["IMAGE"],
        image_overlay: ["IMAGE"],
        width: ["INT", { default: 512, min: -48000, max: 48000, step: 1 }],
        height: ["INT", { default: 512, min: -48000, max: 48000, step: 1 }],
        X: ["INT", { default: 0, min: -48000, max: 48000, step: 1 }],
        Y: ["INT", { default: 0, min: -48000, max: 48000, step: 1 }],
        rotation: ["INT", { default: 0, min: -360, max: 360, step: 1 }],
        feathering: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Transpose",
    display_name: "Image Transpose",
    description: "",
    category: "WAS Suite/Image/Transform",
    output_node: false,
  },
  "Image fDOF Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        depth: ["IMAGE"],
        mode: [["mock", "gaussian", "box"]],
        radius: ["INT", { default: 8, min: 1, max: 128, step: 1 }],
        samples: ["INT", { default: 1, min: 1, max: 3, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image fDOF Filter",
    display_name: "Image fDOF Filter",
    description: "",
    category: "WAS Suite/Image/Filter",
    output_node: false,
  },
  "Image to Latent Mask": {
    input: {
      required: {
        images: ["IMAGE"],
        channel: [["alpha", "red", "green", "blue"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Image to Latent Mask",
    display_name: "Image to Latent Mask",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Image to Noise": {
    input: {
      required: {
        images: ["IMAGE"],
        num_colors: ["INT", { default: 16, max: 256, min: 2, step: 2 }],
        black_mix: ["INT", { default: 0, max: 20, min: 0, step: 1 }],
        gaussian_mix: ["FLOAT", { default: 0.0, max: 1024, min: 0, step: 0.1 }],
        brightness: ["FLOAT", { default: 1.0, max: 2.0, min: 0.0, step: 0.01 }],
        output_mode: [["batch", "list"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image to Noise",
    display_name: "Image to Noise",
    description: "",
    category: "WAS Suite/Image/Generate/Noise",
    output_node: false,
  },
  "Image to Seed": {
    input: { required: { images: ["IMAGE"] } },
    output: ["INT"],
    output_is_list: [true],
    output_name: ["INT"],
    name: "Image to Seed",
    display_name: "Image to Seed",
    description: "",
    category: "WAS Suite/Image/Analyze",
    output_node: false,
  },
  "Images to RGB": {
    input: { required: { images: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Images to RGB",
    display_name: "Images to RGB",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Images to Linear": {
    input: { required: { images: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Images to Linear",
    display_name: "Images to Linear",
    description: "",
    category: "WAS Suite/Image",
    output_node: false,
  },
  "Integer place counter": {
    input: {
      required: {
        int_input: ["INT", { default: 0, min: 0, max: 10000000, step: 1 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT_PLACES"],
    name: "Integer place counter",
    display_name: "Integer place counter",
    description: "",
    category: "WAS Suite/Integer",
    output_node: false,
  },
  "Image Voronoi Noise Filter": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        height: ["INT", { default: 512, max: 4096, min: 64, step: 1 }],
        density: ["INT", { default: 50, max: 256, min: 10, step: 2 }],
        modulator: ["INT", { default: 0, max: 8, min: 0, step: 1 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      optional: { flat: [["False", "True"]], RGB_output: [["True", "False"]] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Voronoi Noise Filter",
    display_name: "Image Voronoi Noise Filter",
    description: "",
    category: "WAS Suite/Image/Generate/Noise",
    output_node: false,
  },
  "KSampler (WAS)": {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["SEED"],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSampler (WAS)",
    display_name: "KSampler (WAS)",
    description: "",
    category: "WAS Suite/Sampling",
    output_node: false,
  },
  "KSampler Cycle": {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        tiled_vae: [["disable", "enable"]],
        latent_upscale: [
          [
            "disable",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
          ],
        ],
        upscale_factor: [
          "FLOAT",
          { default: 2.0, min: 0.1, max: 8.0, step: 0.1 },
        ],
        upscale_cycles: ["INT", { default: 2, min: 2, max: 12, step: 1 }],
        starting_denoise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        cycle_denoise: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        scale_denoise: [["enable", "disable"]],
        scale_sampling: [["bilinear", "bicubic", "nearest", "lanczos"]],
        vae: ["VAE"],
      },
      optional: {
        secondary_model: ["MODEL"],
        secondary_start_cycle: [
          "INT",
          { default: 2, min: 2, max: 16, step: 1 },
        ],
        upscale_model: ["UPSCALE_MODEL"],
        processor_model: ["UPSCALE_MODEL"],
        pos_additive: ["CONDITIONING"],
        neg_additive: ["CONDITIONING"],
        pos_add_mode: [["increment", "decrement"]],
        pos_add_strength: [
          "FLOAT",
          { default: 0.25, min: 0.01, max: 1.0, step: 0.01 },
        ],
        pos_add_strength_scaling: [["enable", "disable"]],
        pos_add_strength_cutoff: [
          "FLOAT",
          { default: 2.0, min: 0.01, max: 10.0, step: 0.01 },
        ],
        neg_add_mode: [["increment", "decrement"]],
        neg_add_strength: [
          "FLOAT",
          { default: 0.25, min: 0.01, max: 1.0, step: 0.01 },
        ],
        neg_add_strength_scaling: [["enable", "disable"]],
        neg_add_strength_cutoff: [
          "FLOAT",
          { default: 2.0, min: 0.01, max: 10.0, step: 0.01 },
        ],
        sharpen_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        sharpen_radius: ["INT", { default: 2, min: 1, max: 12, step: 1 }],
        steps_scaling: [["enable", "disable"]],
        steps_control: [["decrement", "increment"]],
        steps_scaling_value: ["INT", { default: 10, min: 1, max: 20, step: 1 }],
        steps_cutoff: ["INT", { default: 20, min: 4, max: 1000, step: 1 }],
        denoise_cutoff: [
          "FLOAT",
          { default: 0.25, min: 0.01, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["latent(s)"],
    name: "KSampler Cycle",
    display_name: "KSampler Cycle",
    description: "",
    category: "WAS Suite/Sampling",
    output_node: false,
  },
  "Latent Noise Injection": {
    input: {
      required: {
        samples: ["LATENT"],
        noise_std: ["FLOAT", { default: 0.1, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Noise Injection",
    display_name: "Latent Noise Injection",
    description: "",
    category: "WAS Suite/Latent/Generate",
    output_node: false,
  },
  "Latent Size to Number": {
    input: { required: { samples: ["LATENT"] } },
    output: ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["tensor_w_num", "tensor_h_num"],
    name: "Latent Size to Number",
    display_name: "Latent Size to Number",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Latent Upscale by Factor (WAS)": {
    input: {
      required: {
        samples: ["LATENT"],
        mode: [["area", "bicubic", "bilinear", "nearest"]],
        factor: ["FLOAT", { default: 2.0, min: 0.1, max: 8.0, step: 0.01 }],
        align: [["true", "false"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Upscale by Factor (WAS)",
    display_name: "Latent Upscale by Factor (WAS)",
    description: "",
    category: "WAS Suite/Latent/Transform",
    output_node: false,
  },
  "Load Image Batch": {
    input: {
      required: {
        mode: [["single_image", "incremental_image", "random"]],
        index: ["INT", { default: 0, min: 0, max: 150000, step: 1 }],
        label: ["STRING", { default: "Batch 001", multiline: false }],
        path: [["__inputs__"]],
        pattern: ["STRING", { default: "*", multiline: false }],
        allow_RGBA_output: [["false", "true"]],
      },
      optional: { filename_text_extension: [["true", "false"]] },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "filename_text"],
    name: "Load Image Batch",
    display_name: "Load Image Batch",
    description: "",
    category: "WAS Suite/IO",
    output_node: false,
  },
  "Load Text File": {
    input: {
      required: {
        file_path: ["STRING", { default: "", multiline: false }],
        dictionary_name: [
          "STRING",
          { default: "[filename]", multiline: false },
        ],
      },
    },
    output: ["STRING", "DICT"],
    output_is_list: [false, false],
    output_name: ["STRING", "DICT"],
    name: "Load Text File",
    display_name: "Load Text File",
    description: "",
    category: "WAS Suite/IO",
    output_node: false,
  },
  "Load Lora": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["None", "__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "NAME_STRING"],
    name: "Load Lora",
    display_name: "Load Lora",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "Lora Input Switch": {
    input: {
      required: {
        model_a: ["MODEL"],
        clip_a: ["CLIP"],
        model_b: ["MODEL"],
        clip_b: ["CLIP"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["MODEL", "CLIP"],
    output_is_list: [false, false],
    output_name: ["MODEL", "CLIP"],
    name: "Lora Input Switch",
    display_name: "Lora Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Masks Add": {
    input: { required: { masks_a: ["MASK"], masks_b: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Masks Add",
    display_name: "Masks Add",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Masks Subtract": {
    input: { required: { masks_a: ["MASK"], masks_b: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Masks Subtract",
    display_name: "Masks Subtract",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Arbitrary Region": {
    input: {
      required: {
        masks: ["MASK"],
        size: ["INT", { default: 256, min: 1, max: 4096, step: 1 }],
        threshold: ["INT", { default: 128, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Arbitrary Region",
    display_name: "Mask Arbitrary Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Batch to Mask": {
    input: {
      required: {
        masks: ["MASK"],
        batch_number: ["INT", { default: 0, min: 0, max: 64, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "Mask Batch to Mask",
    display_name: "Mask Batch to Mask",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Batch": {
    input: {
      optional: {
        masks_a: ["MASK"],
        masks_b: ["MASK"],
        masks_c: ["MASK"],
        masks_d: ["MASK"],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["masks"],
    name: "Mask Batch",
    display_name: "Mask Batch",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Ceiling Region": {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Ceiling Region",
    display_name: "Mask Ceiling Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Crop Dominant Region": {
    input: {
      required: {
        masks: ["MASK"],
        padding: ["INT", { default: 24, min: 0, max: 4096, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Crop Dominant Region",
    display_name: "Mask Crop Dominant Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Crop Minority Region": {
    input: {
      required: {
        masks: ["MASK"],
        padding: ["INT", { default: 24, min: 0, max: 4096, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Crop Minority Region",
    display_name: "Mask Crop Minority Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Crop Region": {
    input: {
      required: {
        mask: ["MASK"],
        padding: ["INT", { default: 24, min: 0, max: 4096, step: 1 }],
        region_type: [["dominant", "minority"]],
      },
    },
    output: ["MASK", "CROP_DATA", "INT", "INT", "INT", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "cropped_mask",
      "crop_data",
      "top_int",
      "left_int",
      "right_int",
      "bottom_int",
      "width_int",
      "height_int",
    ],
    name: "Mask Crop Region",
    display_name: "Mask Crop Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Paste Region": {
    input: {
      required: {
        mask: ["MASK"],
        crop_mask: ["MASK"],
        crop_data: ["CROP_DATA"],
        crop_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_sharpening: ["INT", { default: 0, min: 0, max: 3, step: 1 }],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["MASK", "MASK"],
    name: "Mask Paste Region",
    display_name: "Mask Paste Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Dilate Region": {
    input: {
      required: {
        masks: ["MASK"],
        iterations: ["INT", { default: 5, min: 1, max: 64, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Dilate Region",
    display_name: "Mask Dilate Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Dominant Region": {
    input: {
      required: {
        masks: ["MASK"],
        threshold: ["INT", { default: 128, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Dominant Region",
    display_name: "Mask Dominant Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Erode Region": {
    input: {
      required: {
        masks: ["MASK"],
        iterations: ["INT", { default: 5, min: 1, max: 64, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Erode Region",
    display_name: "Mask Erode Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Fill Holes": {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Fill Holes",
    display_name: "Mask Fill Holes",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Floor Region": {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Floor Region",
    display_name: "Mask Floor Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Gaussian Region": {
    input: {
      required: {
        masks: ["MASK"],
        radius: ["FLOAT", { default: 5.0, min: 0.0, max: 1024, step: 0.1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Gaussian Region",
    display_name: "Mask Gaussian Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Invert": {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Invert",
    display_name: "Mask Invert",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Minority Region": {
    input: {
      required: {
        masks: ["MASK"],
        threshold: ["INT", { default: 128, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Minority Region",
    display_name: "Mask Minority Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Smooth Region": {
    input: {
      required: {
        masks: ["MASK"],
        sigma: ["FLOAT", { default: 5.0, min: 0.0, max: 128.0, step: 0.1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Smooth Region",
    display_name: "Mask Smooth Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Mask Threshold Region": {
    input: {
      required: {
        masks: ["MASK"],
        black_threshold: ["INT", { default: 75, min: 0, max: 255, step: 1 }],
        white_threshold: ["INT", { default: 175, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASKS"],
    name: "Mask Threshold Region",
    display_name: "Mask Threshold Region",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Masks Combine Regions": {
    input: {
      required: { mask_a: ["MASK"], mask_b: ["MASK"] },
      optional: {
        mask_c: ["MASK"],
        mask_d: ["MASK"],
        mask_e: ["MASK"],
        mask_f: ["MASK"],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "Masks Combine Regions",
    display_name: "Masks Combine Regions",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Masks Combine Batch": {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "Masks Combine Batch",
    display_name: "Masks Combine Batch",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "MiDaS Model Loader": {
    input: { required: { midas_model: [["DPT_Large", "DPT_Hybrid"]] } },
    output: ["MIDAS_MODEL"],
    output_is_list: [false],
    output_name: ["midas_model"],
    name: "MiDaS Model Loader",
    display_name: "MiDaS Model Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "MiDaS Depth Approximation": {
    input: {
      required: {
        image: ["IMAGE"],
        use_cpu: [["false", "true"]],
        midas_type: [["DPT_Large", "DPT_Hybrid"]],
        invert_depth: [["false", "true"]],
      },
      optional: { midas_model: ["MIDAS_MODEL"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "MiDaS Depth Approximation",
    display_name: "MiDaS Depth Approximation",
    description: "",
    category: "WAS Suite/Image/AI",
    output_node: false,
  },
  "MiDaS Mask Image": {
    input: {
      required: {
        image: ["IMAGE"],
        use_cpu: [["false", "true"]],
        midas_model: [["DPT_Large", "DPT_Hybrid", "DPT_Small"]],
        remove: [["background", "foregroud"]],
        threshold: [["false", "true"]],
        threshold_low: ["FLOAT", { default: 10, min: 0, max: 255, step: 1 }],
        threshold_mid: ["FLOAT", { default: 200, min: 0, max: 255, step: 1 }],
        threshold_high: ["FLOAT", { default: 210, min: 0, max: 255, step: 1 }],
        smoothing: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 16.0, step: 0.01 },
        ],
        background_red: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        background_green: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        background_blue: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE"],
    name: "MiDaS Mask Image",
    display_name: "MiDaS Mask Image",
    description: "",
    category: "WAS Suite/Image/AI",
    output_node: false,
  },
  "Model Input Switch": {
    input: {
      required: {
        model_a: ["MODEL"],
        model_b: ["MODEL"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "Model Input Switch",
    display_name: "Model Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Number Counter": {
    input: {
      required: {
        number_type: [["integer", "float"]],
        mode: [
          ["increment", "decrement", "increment_to_stop", "decrement_to_stop"],
        ],
        start: [
          "FLOAT",
          {
            default: 0,
            min: -18446744073709551615,
            max: 18446744073709551615,
            step: 0.01,
          },
        ],
        stop: [
          "FLOAT",
          {
            default: 0,
            min: -18446744073709551615,
            max: 18446744073709551615,
            step: 0.01,
          },
        ],
        step: ["FLOAT", { default: 1, min: 0, max: 99999, step: 0.01 }],
      },
      optional: { reset_bool: ["NUMBER"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["number", "float", "int"],
    name: "Number Counter",
    display_name: "Number Counter",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "Number Operation": {
    input: {
      required: {
        number_a: ["NUMBER"],
        number_b: ["NUMBER"],
        operation: [
          [
            "addition",
            "subtraction",
            "division",
            "floor division",
            "multiplication",
            "exponentiation",
            "modulus",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
          ],
        ],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Number Operation",
    display_name: "Number Operation",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Number to Float": {
    input: { required: { number: ["NUMBER"] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Number to Float",
    display_name: "Number to Float",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Number Input Switch": {
    input: {
      required: {
        number_a: ["NUMBER"],
        number_b: ["NUMBER"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Number Input Switch",
    display_name: "Number Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Number Input Condition": {
    input: {
      required: {
        number_a: ["NUMBER"],
        number_b: ["NUMBER"],
        return_boolean: [["false", "true"]],
        comparison: [
          [
            "and",
            "or",
            "greater-than",
            "greater-than or equals",
            "less-than",
            "less-than or equals",
            "equals",
            "does not equal",
            "divisible by",
            "if A odd",
            "if A even",
            "if A prime",
            "factor of",
          ],
        ],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Number Input Condition",
    display_name: "Number Input Condition",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Number Multiple Of": {
    input: {
      required: {
        number: ["NUMBER"],
        multiple: [
          "INT",
          { default: 8, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Number Multiple Of",
    display_name: "Number Multiple Of",
    description: "",
    category: "WAS Suite/Number/Functions",
    output_node: false,
  },
  "Number PI": {
    input: { required: {} },
    output: ["NUMBER", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["NUMBER", "FLOAT"],
    name: "Number PI",
    display_name: "Number PI",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "Number to Int": {
    input: { required: { number: ["NUMBER"] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Number to Int",
    display_name: "Number to Int",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Number to Seed": {
    input: { required: { number: ["NUMBER"] } },
    output: ["SEED"],
    output_is_list: [false],
    output_name: ["SEED"],
    name: "Number to Seed",
    display_name: "Number to Seed",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Number to String": {
    input: { required: { number: ["NUMBER"] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Number to String",
    display_name: "Number to String",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Number to Text": {
    input: { required: { number: ["NUMBER"] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Number to Text",
    display_name: "Number to Text",
    description: "",
    category: "WAS Suite/Number/Operations",
    output_node: false,
  },
  "Prompt Styles Selector": {
    input: { required: { style: [["None"]] } },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive_string", "negative_string"],
    name: "Prompt Styles Selector",
    display_name: "Prompt Styles Selector",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Prompt Multiple Styles Selector": {
    input: {
      required: {
        style1: [["None"]],
        style2: [["None"]],
        style3: [["None"]],
        style4: [["None"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive_string", "negative_string"],
    name: "Prompt Multiple Styles Selector",
    display_name: "Prompt Multiple Styles Selector",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Random Number": {
    input: {
      required: {
        number_type: [["integer", "float", "bool"]],
        minimum: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        maximum: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "Random Number",
    display_name: "Random Number",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "Save Text File": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        path: [
          "STRING",
          { default: "./ComfyUI/output/[time(%Y-%m-%d)]", multiline: false },
        ],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
        filename_delimiter: ["STRING", { default: "_" }],
        filename_number_padding: [
          "INT",
          { default: 4, min: 2, max: 9, step: 1 },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Text File",
    display_name: "Save Text File",
    description: "",
    category: "WAS Suite/IO",
    output_node: true,
  },
  Seed: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["SEED", "NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["seed", "number", "float", "int"],
    name: "Seed",
    display_name: "Seed",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "Tensor Batch to Image": {
    input: {
      required: {
        images_batch: ["IMAGE"],
        batch_image_number: ["INT", { default: 0, min: 0, max: 64, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Tensor Batch to Image",
    display_name: "Tensor Batch to Image",
    description: "",
    category: "WAS Suite/Latent/Transform",
    output_node: false,
  },
  "BLIP Analyze Image": {
    input: {
      required: {
        image: ["IMAGE"],
        mode: [["caption", "interrogate"]],
        question: [
          "STRING",
          { default: "What does the background consist of?", multiline: true },
        ],
      },
      optional: { blip_model: ["BLIP_MODEL"] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "BLIP Analyze Image",
    display_name: "BLIP Analyze Image",
    description: "",
    category: "WAS Suite/Text/AI",
    output_node: false,
  },
  "SAM Model Loader": {
    input: { required: { model_size: [["ViT-H", "ViT-L", "ViT-B"]] } },
    output: ["SAM_MODEL"],
    output_is_list: [false],
    output_name: ["SAM_MODEL"],
    name: "SAM Model Loader",
    display_name: "SAM Model Loader",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "SAM Parameters": {
    input: {
      required: {
        points: ["STRING", { default: "[128, 128]; [0, 0]", multiline: false }],
        labels: ["STRING", { default: "[1, 0]", multiline: false }],
      },
    },
    output: ["SAM_PARAMETERS"],
    output_is_list: [false],
    output_name: ["SAM_PARAMETERS"],
    name: "SAM Parameters",
    display_name: "SAM Parameters",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "SAM Parameters Combine": {
    input: {
      required: {
        sam_parameters_a: ["SAM_PARAMETERS"],
        sam_parameters_b: ["SAM_PARAMETERS"],
      },
    },
    output: ["SAM_PARAMETERS"],
    output_is_list: [false],
    output_name: ["SAM_PARAMETERS"],
    name: "SAM Parameters Combine",
    display_name: "SAM Parameters Combine",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "SAM Image Mask": {
    input: {
      required: {
        sam_model: ["SAM_MODEL"],
        sam_parameters: ["SAM_PARAMETERS"],
        image: ["IMAGE"],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "SAM Image Mask",
    display_name: "SAM Image Mask",
    description: "",
    category: "WAS Suite/Image/Masking",
    output_node: false,
  },
  "Samples Passthrough (Stat System)": {
    input: { required: { samples: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["samples"],
    name: "Samples Passthrough (Stat System)",
    display_name: "Samples Passthrough (Stat System)",
    description: "",
    category: "WAS Suite/Debug",
    output_node: false,
  },
  "String to Text": {
    input: { required: { string: ["STRING", {}] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "String to Text",
    display_name: "String to Text",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "Image Bounds": {
    input: { required: { image: ["IMAGE"] } },
    output: ["IMAGE_BOUNDS"],
    output_is_list: [false],
    output_name: ["IMAGE_BOUNDS"],
    name: "Image Bounds",
    display_name: "Image Bounds",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Inset Image Bounds": {
    input: {
      required: {
        image_bounds: ["IMAGE_BOUNDS"],
        inset_left: ["INT", { default: 64, min: 0, max: 18446744073709551615 }],
        inset_right: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
        inset_top: ["INT", { default: 64, min: 0, max: 18446744073709551615 }],
        inset_bottom: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
      },
    },
    output: ["IMAGE_BOUNDS"],
    output_is_list: [false],
    output_name: ["IMAGE_BOUNDS"],
    name: "Inset Image Bounds",
    display_name: "Inset Image Bounds",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Bounded Image Blend": {
    input: {
      required: {
        target: ["IMAGE"],
        target_bounds: ["IMAGE_BOUNDS"],
        source: ["IMAGE"],
        blend_factor: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0 }],
        feathering: ["INT", { default: 16, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Bounded Image Blend",
    display_name: "Bounded Image Blend",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Bounded Image Blend with Mask": {
    input: {
      required: {
        target: ["IMAGE"],
        target_mask: ["MASK"],
        target_bounds: ["IMAGE_BOUNDS"],
        source: ["IMAGE"],
        blend_factor: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0 }],
        feathering: ["INT", { default: 16, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Bounded Image Blend with Mask",
    display_name: "Bounded Image Blend with Mask",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Bounded Image Crop": {
    input: { required: { image: ["IMAGE"], image_bounds: ["IMAGE_BOUNDS"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Bounded Image Crop",
    display_name: "Bounded Image Crop",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Bounded Image Crop with Mask": {
    input: {
      required: {
        image: ["IMAGE"],
        mask: ["MASK"],
        padding_left: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
        padding_right: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
        padding_top: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
        padding_bottom: [
          "INT",
          { default: 64, min: 0, max: 18446744073709551615 },
        ],
      },
    },
    output: ["IMAGE", "IMAGE_BOUNDS"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE_BOUNDS"],
    name: "Bounded Image Crop with Mask",
    display_name: "Bounded Image Crop with Mask",
    description: "",
    category: "WAS Suite/Image/Bound",
    output_node: false,
  },
  "Image Bounds to Console": {
    input: {
      required: {
        image_bounds: ["IMAGE_BOUNDS"],
        label: ["STRING", { default: "Debug to Console", multiline: false }],
      },
    },
    output: ["IMAGE_BOUNDS"],
    output_is_list: [false],
    output_name: ["IMAGE_BOUNDS"],
    name: "Image Bounds to Console",
    display_name: "Image Bounds to Console",
    description: "",
    category: "WAS Suite/Debug",
    output_node: true,
  },
  "Text Dictionary Update": {
    input: {
      required: { dictionary_a: ["DICT"], dictionary_b: ["DICT"] },
      optional: { dictionary_c: ["DICT"], dictionary_d: ["DICT"] },
    },
    output: ["DICT"],
    output_is_list: [false],
    output_name: ["DICT"],
    name: "Text Dictionary Update",
    display_name: "Text Dictionary Update",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Add Tokens": {
    input: {
      required: {
        tokens: ["STRING", { default: "[hello]: world", multiline: true }],
        print_current_tokens: [["false", "true"]],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Text Add Tokens",
    display_name: "Text Add Tokens",
    description: "",
    category: "WAS Suite/Text/Tokens",
    output_node: true,
  },
  "Text Add Token by Input": {
    input: {
      required: {
        token_name: ["STRING", { forceInput: true }],
        token_value: ["STRING", { forceInput: true }],
        print_current_tokens: [["false", "true"]],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Text Add Token by Input",
    display_name: "Text Add Token by Input",
    description: "",
    category: "WAS Suite/Text/Tokens",
    output_node: true,
  },
  "Text Compare": {
    input: {
      required: {
        text_a: ["STRING", { forceInput: true }],
        text_b: ["STRING", { forceInput: true }],
        mode: [["similarity", "difference"]],
        tolerance: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["STRING", "STRING", "NUMBER", "NUMBER", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "TEXT_A_PASS",
      "TEXT_B_PASS",
      "BOOL_NUMBER",
      "SCORE_NUMBER",
      "COMPARISON_TEXT",
    ],
    name: "Text Compare",
    display_name: "Text Compare",
    description: "",
    category: "WAS Suite/Text/Search",
    output_node: false,
  },
  "Text Concatenate": {
    input: {
      required: {
        delimiter: ["STRING", { default: ", " }],
        clean_whitespace: [["true", "false"]],
      },
      optional: {
        text_a: ["STRING", { forceInput: true }],
        text_b: ["STRING", { forceInput: true }],
        text_c: ["STRING", { forceInput: true }],
        text_d: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Concatenate",
    display_name: "Text Concatenate",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text File History Loader": {
    input: {
      required: {
        file: [["No History"]],
        dictionary_name: ["STRING", { default: "[filename]", multiline: true }],
      },
    },
    output: ["STRING", "DICT"],
    output_is_list: [false, false],
    output_name: ["STRING", "DICT"],
    name: "Text File History Loader",
    display_name: "Text File History Loader",
    description: "",
    category: "WAS Suite/History",
    output_node: false,
  },
  "Text Find and Replace by Dictionary": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        dictionary: ["DICT"],
        replacement_key: ["STRING", { default: "__", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Find and Replace by Dictionary",
    display_name: "Text Find and Replace by Dictionary",
    description: "",
    category: "WAS Suite/Text/Search",
    output_node: false,
  },
  "Text Find and Replace Input": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        find: ["STRING", { forceInput: true }],
        replace: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING", "NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int",
    ],
    name: "Text Find and Replace Input",
    display_name: "Text Find and Replace Input",
    description: "",
    category: "WAS Suite/Text/Search",
    output_node: false,
  },
  "Text Find and Replace": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        find: ["STRING", { default: "", multiline: false }],
        replace: ["STRING", { default: "", multiline: false }],
      },
    },
    output: ["STRING", "NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: [
      "result_text",
      "replacement_count_number",
      "replacement_count_float",
      "replacement_count_int",
    ],
    name: "Text Find and Replace",
    display_name: "Text Find and Replace",
    description: "",
    category: "WAS Suite/Text/Search",
    output_node: false,
  },
  "Text Input Switch": {
    input: {
      required: {
        text_a: ["STRING", { forceInput: true }],
        text_b: ["STRING", { forceInput: true }],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Input Switch",
    display_name: "Text Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Text List": {
    input: {
      required: {},
      optional: {
        text_a: ["STRING", { forceInput: true }],
        text_b: ["STRING", { forceInput: true }],
        text_c: ["STRING", { forceInput: true }],
        text_d: ["STRING", { forceInput: true }],
        text_e: ["STRING", { forceInput: true }],
        text_f: ["STRING", { forceInput: true }],
        text_g: ["STRING", { forceInput: true }],
      },
    },
    output: ["LIST"],
    output_is_list: [false],
    output_name: ["LIST"],
    name: "Text List",
    display_name: "Text List",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text List Concatenate": {
    input: {
      required: {},
      optional: {
        list_a: ["LIST", { forceInput: true }],
        list_b: ["LIST", { forceInput: true }],
        list_c: ["LIST", { forceInput: true }],
        list_d: ["LIST", { forceInput: true }],
      },
    },
    output: ["LIST"],
    output_is_list: [false],
    output_name: ["LIST"],
    name: "Text List Concatenate",
    display_name: "Text List Concatenate",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text List to Text": {
    input: {
      required: {
        delimiter: ["STRING", { default: ", " }],
        text_list: ["LIST", { forceInput: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text List to Text",
    display_name: "Text List to Text",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Load Line From File": {
    input: {
      required: {
        file_path: ["STRING", { default: "", multiline: false }],
        dictionary_name: [
          "STRING",
          { default: "[filename]", multiline: false },
        ],
        label: ["STRING", { default: "TextBatch", multiline: false }],
        mode: [["automatic", "index"]],
        index: ["INT", { default: 0, min: 0, step: 1 }],
      },
      optional: { multiline_text: ["STRING", { forceInput: true }] },
    },
    output: ["STRING", "DICT"],
    output_is_list: [false, false],
    output_name: ["line_text", "dictionary"],
    name: "Text Load Line From File",
    display_name: "Text Load Line From File",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Multiline": {
    input: { required: { text: ["STRING", { default: "", multiline: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Multiline",
    display_name: "Text Multiline",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Parse A1111 Embeddings": {
    input: { required: { text: ["STRING", { forceInput: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Parse A1111 Embeddings",
    display_name: "Text Parse A1111 Embeddings",
    description: "",
    category: "WAS Suite/Text/Parse",
    output_node: false,
  },
  "Text Parse Noodle Soup Prompts": {
    input: {
      required: {
        mode: [["Noodle Soup Prompts", "Wildcards"]],
        noodle_key: ["STRING", { default: "__", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        text: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Parse Noodle Soup Prompts",
    display_name: "Text Parse Noodle Soup Prompts",
    description: "",
    category: "WAS Suite/Text/Parse",
    output_node: true,
  },
  "Text Parse Tokens": {
    input: { required: { text: ["STRING", { forceInput: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Parse Tokens",
    display_name: "Text Parse Tokens",
    description: "",
    category: "WAS Suite/Text/Tokens",
    output_node: false,
  },
  "Text Random Line": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Random Line",
    display_name: "Text Random Line",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Random Prompt": {
    input: { required: { search_seed: ["STRING", { multiline: false }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Random Prompt",
    display_name: "Text Random Prompt",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text String": {
    input: {
      required: { text: ["STRING", { default: "", multiline: false }] },
      optional: {
        text_b: ["STRING", { default: "", multiline: false }],
        text_c: ["STRING", { default: "", multiline: false }],
        text_d: ["STRING", { default: "", multiline: false }],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["STRING", "STRING", "STRING", "STRING"],
    name: "Text String",
    display_name: "Text String",
    description: "",
    category: "WAS Suite/Text",
    output_node: false,
  },
  "Text Shuffle": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        separator: ["STRING", { default: ",", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Shuffle",
    display_name: "Text Shuffle",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "Text to Conditioning": {
    input: {
      required: { clip: ["CLIP"], text: ["STRING", { forceInput: true }] },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "Text to Conditioning",
    display_name: "Text to Conditioning",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "Text to Console": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        label: ["STRING", { default: "Text Output", multiline: false }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text to Console",
    display_name: "Text to Console",
    description: "",
    category: "WAS Suite/Debug",
    output_node: true,
  },
  "Text to Number": {
    input: { required: { text: ["STRING", { forceInput: true }] } },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "Text to Number",
    display_name: "Text to Number",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "Text to String": {
    input: { required: { text: ["STRING", { forceInput: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text to String",
    display_name: "Text to String",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "Text String Truncate": {
    input: {
      required: {
        text: ["STRING", { forceInput: true }],
        truncate_by: [["characters", "words"]],
        truncate_from: [["end", "beginning"]],
        truncate_to: [
          "INT",
          { default: 10, min: -99999999, max: 99999999, step: 1 },
        ],
      },
      optional: {
        text_b: ["STRING", { forceInput: true }],
        text_c: ["STRING", { forceInput: true }],
        text_d: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["STRING", "STRING", "STRING", "STRING"],
    name: "Text String Truncate",
    display_name: "Text String Truncate",
    description: "",
    category: "WAS Suite/Text/Operations",
    output_node: false,
  },
  "True Random.org Number Generator": {
    input: {
      required: {
        api_key: [
          "STRING",
          { default: "00000000-0000-0000-0000-000000000000", multiline: false },
        ],
        minimum: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        maximum: [
          "FLOAT",
          {
            default: 10000000,
            min: -18446744073709551615,
            max: 18446744073709551615,
          },
        ],
        mode: [["random", "fixed"]],
      },
    },
    output: ["NUMBER", "FLOAT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["NUMBER", "FLOAT", "INT"],
    name: "True Random.org Number Generator",
    display_name: "True Random.org Number Generator",
    description: "",
    category: "WAS Suite/Number",
    output_node: false,
  },
  "unCLIP Checkpoint Loader": {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE", "CLIP_VISION", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "CLIP_VISION", "NAME_STRING"],
    name: "unCLIP Checkpoint Loader",
    display_name: "unCLIP Checkpoint Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "Upscale Model Loader": {
    input: { required: { model_name: [["__models__"]] } },
    output: ["UPSCALE_MODEL", "STRING"],
    output_is_list: [false, false],
    output_name: ["UPSCALE_MODEL", "MODEL_NAME_TEXT"],
    name: "Upscale Model Loader",
    display_name: "Upscale Model Loader",
    description: "",
    category: "WAS Suite/Loaders",
    output_node: false,
  },
  "Upscale Model Switch": {
    input: {
      required: {
        upscale_model_a: ["UPSCALE_MODEL"],
        upscale_model_b: ["UPSCALE_MODEL"],
        boolean_number: ["NUMBER"],
      },
    },
    output: ["UPSCALE_MODEL"],
    output_is_list: [false],
    output_name: ["UPSCALE_MODEL"],
    name: "Upscale Model Switch",
    display_name: "Upscale Model Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Write to GIF": {
    input: {
      required: {
        image: ["IMAGE"],
        transition_frames: ["INT", { default: 30, min: 2, max: 60, step: 1 }],
        image_delay_ms: [
          "FLOAT",
          { default: 2500.0, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        duration_ms: [
          "FLOAT",
          { default: 0.1, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        loops: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        max_size: ["INT", { default: 512, min: 128, max: 1280, step: 1 }],
        filename: ["STRING", { default: "morph_writer", multiline: false }],
      },
    },
    output: ["IMAGE", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["image_pass", "filepath_text", "filename_text"],
    name: "Write to GIF",
    display_name: "Write to GIF",
    description: "",
    category: "WAS Suite/Animation/Writer",
    output_node: false,
  },
  "Write to Video": {
    input: {
      required: {
        image: ["IMAGE"],
        transition_frames: ["INT", { default: 30, min: 0, max: 120, step: 1 }],
        image_delay_sec: [
          "FLOAT",
          { default: 2.5, min: 0.1, max: 60000.0, step: 0.1 },
        ],
        fps: ["INT", { default: 30, min: 1, max: 60.0, step: 1 }],
        max_size: ["INT", { default: 512, min: 128, max: 1920, step: 1 }],
        filename: ["STRING", { default: "comfy_writer", multiline: false }],
        codec: [["AVC1", "FFV1", "H264", "MP4V"]],
      },
    },
    output: ["IMAGE", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE_PASS", "filepath_text", "filename_text"],
    name: "Write to Video",
    display_name: "Write to Video",
    description: "",
    category: "WAS Suite/Animation/Writer",
    output_node: false,
  },
  "VAE Input Switch": {
    input: {
      required: { vae_a: ["VAE"], vae_b: ["VAE"], boolean_number: ["NUMBER"] },
    },
    output: ["VAE"],
    output_is_list: [false],
    output_name: ["VAE"],
    name: "VAE Input Switch",
    display_name: "VAE Input Switch",
    description: "",
    category: "WAS Suite/Logic",
    output_node: false,
  },
  "Video Dump Frames": {
    input: {
      required: {
        video_path: [["__inputs__"]],
        output_path: ["STRING", { default: "MyVideo", multiline: false }],
        prefix: ["STRING", { default: "frame_", multiline: false }],
        filenumber_digits: ["INT", { default: 4, min: -1, max: 8, step: 1 }],
        extension: [["png", "jpg", "gif", "tiff"]],
      },
    },
    output: ["STRING", "NUMBER"],
    output_is_list: [false, false],
    output_name: ["output_path", "processed_count"],
    name: "Video Dump Frames",
    display_name: "Video Dump Frames",
    description: "",
    category: "WAS Suite/Animation",
    output_node: false,
  },
  "CLIPTextEncode (BlenderNeko Advanced + NSP)": {
    input: {
      required: {
        mode: [["Noodle Soup Prompts", "Wildcards"]],
        noodle_key: ["STRING", { default: "__", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        clip: ["CLIP"],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [["comfy", "A1111", "compel", "comfy++"]],
        text: ["STRING", { multiline: true }],
      },
    },
    output: ["CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["conditioning", "parsed_text", "raw_text"],
    name: "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    display_name: "CLIPTextEncode (BlenderNeko Advanced + NSP)",
    description:
      "A node based on Blenderneko's <a href='https://github.com/BlenderNeko/ComfyUI_ADV_CLIP_embw' target='_blank'>Advanced CLIP Text Encode</a>. This version adds the ability to use Noodle Soup Prompts and Wildcards. Wildcards are stored in WAS Node Suite root under the folder 'wildcards'. You can create the folder if it doesn't exist and move your wildcards into it.",
    category: "WAS Suite/Conditioning",
    output_node: true,
  },
  "CONSTANT (JOV) \ud83d\udfea": {
    input: {
      required: {},
      optional: {
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83c\udf08": [
          "VEC4",
          {
            default: [0, 0, 0, 255],
            min: 0,
            max: 255,
            step: 0.0625,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6", "\u2b1c"],
          },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "CONSTANT (JOV) \ud83d\udfea",
    display_name: "CONSTANT (JOV) \ud83d\udfea",
    description: "",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CREATE",
    output_node: false,
  },
  "SHAPE GENERATOR (JOV) \u2728": {
    input: {
      required: {},
      optional: {
        "\ud83c\uddf8\ud83c\uddf4": [
          ["CIRCLE", "SQUARE", "ELLIPSE", "RECTANGLE", "POLYGON"],
          { default: "CIRCLE" },
        ],
        "\u267e\ufe0f": ["INT", { default: 3, min: 3, max: 100, step: 1 }],
        "\ud83c\udf08": [
          "VEC3",
          {
            default: [255, 255, 255],
            min: 0,
            max: 255,
            step: 1,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6"],
          },
        ],
        "\ud83c\udf08B": [
          "VEC3",
          {
            default: [0, 0, 0],
            min: 0,
            max: 255,
            step: 1,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6"],
          },
        ],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udcd0": [
          "FLOAT",
          { default: 0, min: -180, max: 180, step: 0.005, precision: 4 },
        ],
        "\ud83d\udccf": [
          "VEC2",
          {
            default: [1.0, 1.0],
            min: -1.0,
            max: 1.0,
            step: 0.005,
            precision: 4,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "SHAPE GENERATOR (JOV) \u2728",
    display_name: "SHAPE GENERATOR (JOV) \u2728",
    description: "",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CREATE",
    output_node: false,
  },
  "TEXT GENERATOR (JOV) \ud83d\udcdd": {
    input: {
      required: {},
      optional: {
        "\ud83d\udcdd": ["STRING", { default: "", multiline: true }],
        FONT: [
          [
            ".Aqua Kana",
            ".Keyboard",
            ".New York",
            ".SF Arabic",
            ".SF Arabic Rounded",
            ".SF Armenian",
            ".SF Armenian Rounded",
            ".SF Camera",
            ".SF Compact",
            ".SF Compact Rounded",
            ".SF Georgian",
            ".SF Georgian Rounded",
            ".SF Hebrew",
            ".SF Hebrew Rounded",
            ".SF NS Mono",
            ".SF NS Rounded",
            ".SF Soft Numeric",
            ".ThonburiUI",
            "Academy Engraved LET",
            "Adelle Sans Devanagari",
            "AkayaKanadaka",
            "AkayaTelivigala",
            "Al Bayan",
            "Al Nile",
            "Al Tarikh",
            "American Typewriter",
            "Andale Mono",
            "Annai MN",
            "Apple Braille",
            "Apple Chancery",
            "Apple LiGothic",
            "Apple LiSung",
            "Apple SD Gothic Neo",
            "Apple Symbols",
            "AppleGothic",
            "AppleMyungjo",
            "Arial",
            "Arial Black",
            "Arial Hebrew",
            "Arial Narrow",
            "Arial Rounded MT Bold",
            "Arial Unicode MS",
            "Arima Koshi",
            "Arima Madurai",
            "Athelas",
            "Avenir",
            "Avenir Next",
            "Avenir Next Condensed",
            "Ayuthaya",
            "BM Dohyeon",
            "BM Hanna 11yrs Old",
            "BM Hanna Air",
            "BM Hanna Pro",
            "BM Jua",
            "BM Kirang Haerang",
            "BM Yeonsung",
            "Baghdad",
            "Bai Jamjuree",
            "Baloo 2",
            "Baloo Bhai 2",
            "Baloo Bhaijaan",
            "Baloo Bhaina 2",
            "Baloo Chettan 2",
            "Baloo Da 2",
            "Baloo Paaji 2",
            "Baloo Tamma 2",
            "Baloo Tammudu 2",
            "Baloo Thambi 2",
            "Bangla MN",
            "Bangla Sangam MN",
            "Baoli SC",
            "Baskerville",
            "Beirut",
            "BiauKai",
            "Big Caslon",
            "Bodoni 72",
            "Bodoni 72 Oldstyle",
            "Bodoni 72 Smallcaps",
            "Bodoni Ornaments",
            "Bradley Hand",
            "Brush Script MT",
            "Cambay Devanagari",
            "Chakra Petch",
            "Chalkboard",
            "Chalkboard SE",
            "Chalkduster",
            "Charm",
            "Charmonman",
            "Charter",
            "Cochin",
            "Comic Sans MS",
            "Copperplate",
            "Corsiva Hebrew",
            "Courier",
            "Courier New",
            "DIN Alternate",
            "DIN Condensed",
            "Damascus",
            "DecoType Naskh",
            "DejaVu Sans",
            "DejaVu Sans Display",
            "DejaVu Sans Mono",
            "DejaVu Serif",
            "DejaVu Serif Display",
            "Devanagari MT",
            "Devanagari Sangam MN",
            "Didot",
            "Diwan Kufi",
            "Diwan Thuluth",
            "Euphemia UCAS",
            "Fahkwang",
            "Farah",
            "Farisi",
            "Futura",
            "Galvji",
            "Geeza Pro",
            "Geneva",
            "Georgia",
            "Gill Sans",
            "Gilroy-Black",
            "Gilroy-BlackItalic",
            "Gilroy-Bold",
            "Gilroy-BoldItalic",
            "Gilroy-ExtraBold",
            "Gilroy-ExtraBoldItalic",
            "Gilroy-Heavy",
            "Gilroy-HeavyItalic",
            "Gilroy-Light",
            "Gilroy-LightItalic",
            "Gilroy-Medium",
            "Gilroy-MediumItalic",
            "Gilroy-Regular",
            "Gilroy-RegularItalic",
            "Gilroy-SemiBold",
            "Gilroy-SemiBoldItalic",
            "Gilroy-Thin",
            "Gilroy-ThinItalic",
            "Gilroy-UltraLight",
            "Gilroy-UltraLightItalic",
            "Gotu",
            "Gujarati MT",
            "Gujarati Sangam MN",
            "GungSeo",
            "Gurmukhi MN",
            "Gurmukhi MT",
            "Gurmukhi Sangam MN",
            "Hannotate SC",
            "HanziPen SC",
            "HeadLineA",
            "Hei",
            "Heiti TC",
            "Helvetica",
            "Helvetica Neue",
            "Herculanum",
            "Hiragino Maru Gothic Pro",
            "Hiragino Mincho ProN",
            "Hiragino Sans",
            "Hiragino Sans CNS",
            "Hiragino Sans GB",
            "Hoefler Text",
            "Hubballi",
            "ITF Devanagari",
            "Impact",
            "InaiMathi",
            "Iowan Old Style",
            "Jaini",
            "Jaini Purva",
            "K2D",
            "Kai",
            "Kailasa",
            "Kaiti SC",
            "Kannada MN",
            "Kannada Sangam MN",
            "Katari",
            "Kavivanar",
            "Kefa",
            "Khmer MN",
            "Khmer Sangam MN",
            "Klee",
            "KoHo",
            "Kodchasan",
            "Kohinoor Bangla",
            "Kohinoor Devanagari",
            "Kohinoor Gujarati",
            "Kohinoor Telugu",
            "Kokonor",
            "Krub",
            "Krungthep",
            "KufiStandardGK",
            "Lahore Gurmukhi",
            "Lantinghei SC",
            "Lao MN",
            "Lao Sangam MN",
            "Lava Devanagari",
            "Lava Kannada",
            "Lava Telugu",
            "LiHei Pro",
            "LiSong Pro",
            "Libian SC",
            "LingWai SC",
            "LingWai TC",
            "Lucida Grande",
            "Luminari",
            "Maku",
            "Malayalam MN",
            "Malayalam Sangam MN",
            "Mali",
            "Marion",
            "Marker Felt",
            "Menlo",
            "Microsoft Sans Serif",
            "Mishafi",
            "Mishafi Gold",
            "Modak",
            "Monaco",
            "Mshtakan",
            "Mukta",
            "Mukta Mahee",
            "Mukta Malar",
            "Mukta Vaani",
            "Muna",
            "Myanmar MN",
            "Myanmar Sangam MN",
            "Nadeem",
            "Nanum Brush Script",
            "Nanum Gothic",
            "Nanum Myeongjo",
            "New Peninim MT",
            "Niramit",
            "Noteworthy",
            "Noto Nastaliq Urdu",
            "Noto Sans Adlam",
            "Noto Sans Armenian",
            "Noto Sans Avestan",
            "Noto Sans Bamum",
            "Noto Sans Bassa Vah",
            "Noto Sans Batak",
            "Noto Sans Bhaiksuki",
            "Noto Sans Brahmi",
            "Noto Sans Buginese",
            "Noto Sans Buhid",
            "Noto Sans Canadian Aboriginal",
            "Noto Sans Carian",
            "Noto Sans Caucasian Albanian",
            "Noto Sans Chakma",
            "Noto Sans Cham",
            "Noto Sans Coptic",
            "Noto Sans Cuneiform",
            "Noto Sans Cypriot",
            "Noto Sans Duployan",
            "Noto Sans Egyptian Hieroglyphs",
            "Noto Sans Elbasan",
            "Noto Sans Glagolitic",
            "Noto Sans Gothic",
            "Noto Sans Gunjala Gondi",
            "Noto Sans Hanifi Rohingya",
            "Noto Sans Hanunoo",
            "Noto Sans Hatran",
            "Noto Sans Imperial Aramaic",
            "Noto Sans Inscriptional Pahlavi",
            "Noto Sans Inscriptional Parthian",
            "Noto Sans Javanese",
            "Noto Sans Kaithi",
            "Noto Sans Kannada",
            "Noto Sans Kayah Li",
            "Noto Sans Kharoshthi",
            "Noto Sans Khojki",
            "Noto Sans Khudawadi",
            "Noto Sans Lepcha",
            "Noto Sans Limbu",
            "Noto Sans Linear A",
            "Noto Sans Linear B",
            "Noto Sans Lisu",
            "Noto Sans Lycian",
            "Noto Sans Lydian",
            "Noto Sans Mahajani",
            "Noto Sans Mandaic",
            "Noto Sans Manichaean",
            "Noto Sans Marchen",
            "Noto Sans Masaram Gondi",
            "Noto Sans Meetei Mayek",
            "Noto Sans Mende Kikakui",
            "Noto Sans Meroitic",
            "Noto Sans Miao",
            "Noto Sans Modi",
            "Noto Sans Mongolian",
            "Noto Sans Mro",
            "Noto Sans Multani",
            "Noto Sans Myanmar",
            "Noto Sans NKo",
            "Noto Sans Nabataean",
            "Noto Sans New Tai Lue",
            "Noto Sans Newa",
            "Noto Sans Ol Chiki",
            "Noto Sans Old Hungarian",
            "Noto Sans Old Italic",
            "Noto Sans Old North Arabian",
            "Noto Sans Old Permic",
            "Noto Sans Old Persian",
            "Noto Sans Old South Arabian",
            "Noto Sans Old Turkic",
            "Noto Sans Oriya",
            "Noto Sans Osage",
            "Noto Sans Osmanya",
            "Noto Sans Pahawh Hmong",
            "Noto Sans Palmyrene",
            "Noto Sans Pau Cin Hau",
            "Noto Sans PhagsPa",
            "Noto Sans Phoenician",
            "Noto Sans Psalter Pahlavi",
            "Noto Sans Rejang",
            "Noto Sans Samaritan",
            "Noto Sans Saurashtra",
            "Noto Sans Sharada",
            "Noto Sans Siddham",
            "Noto Sans Sora Sompeng",
            "Noto Sans Sundanese",
            "Noto Sans Syloti Nagri",
            "Noto Sans Syriac",
            "Noto Sans Tagalog",
            "Noto Sans Tagbanwa",
            "Noto Sans Tai Le",
            "Noto Sans Tai Tham",
            "Noto Sans Tai Viet",
            "Noto Sans Takri",
            "Noto Sans Thaana",
            "Noto Sans Tifinagh",
            "Noto Sans Tirhuta",
            "Noto Sans Ugaritic",
            "Noto Sans Vai",
            "Noto Sans Wancho",
            "Noto Sans Warang Citi",
            "Noto Sans Yi",
            "Noto Serif Ahom",
            "Noto Serif Balinese",
            "Noto Serif Hmong Nyiakeng",
            "Noto Serif Kannada",
            "Noto Serif Myanmar",
            "Noto Serif Yezidi",
            "October Compressed Devanagari",
            "October Compressed Tamil",
            "October Condensed Devanagari",
            "October Condensed Tamil",
            "October Devanagari",
            "October Tamil",
            "Optima",
            "Oriya MN",
            "Oriya Sangam MN",
            "Osaka",
            "PCMyungjo",
            "PSL Ornanong Pro",
            "PT Mono",
            "PT Sans",
            "PT Serif",
            "PT Serif Caption",
            "Padyakke Expanded One",
            "Palatino",
            "Papyrus",
            "Party LET",
            "Phosphate",
            "PilGi",
            "PingFang HK",
            "Plantagenet Cherokee",
            "Poppins",
            "Raanana",
            "Rockwell",
            "SF Pro",
            "SF Pro Display",
            "SF Pro Rounded",
            "SF Pro Text",
            "STFangsong",
            "STHeiti",
            "STIX Two Math",
            "STIX Two Text",
            "STIXGeneral",
            "STIXIntegralsD",
            "STIXIntegralsSm",
            "STIXIntegralsUp",
            "STIXIntegralsUpD",
            "STIXIntegralsUpSm",
            "STIXNonUnicode",
            "STIXSizeFiveSym",
            "STIXSizeFourSym",
            "STIXSizeOneSym",
            "STIXSizeThreeSym",
            "STIXSizeTwoSym",
            "STIXVariants",
            "Sama Devanagari",
            "Sama Gujarati",
            "Sama Gurmukhi",
            "Sama Kannada",
            "Sama Malayalam",
            "Sama Tamil",
            "Sana",
            "Sarabun",
            "Sathu",
            "Savoye LET",
            "Seravek",
            "Shobhika",
            "Shree Devanagari 714",
            "SignPainter",
            "Silom",
            "SimSong",
            "Sinhala MN",
            "Sinhala Sangam MN",
            "Skia",
            "Snell Roundhand",
            "Songti SC",
            "Srisakdi",
            "Sukhumvit Set",
            "Superclarendon",
            "Symbol",
            "System Font",
            "Tahoma",
            "Tamil MN",
            "Tamil Sangam MN",
            "Telugu MN",
            "Telugu Sangam MN",
            "Thonburi",
            "Times",
            "Times New Roman",
            "Tiro Bangla",
            "Tiro Devanagari Hindi",
            "Tiro Devanagari Marathi",
            "Tiro Devanagari Sanskrit",
            "Tiro Gurmukhi",
            "Tiro Kannada",
            "Tiro Tamil",
            "Tiro Telugu",
            "Toppan Bunkyu Gothic",
            "Toppan Bunkyu Midashi Gothic",
            "Toppan Bunkyu Midashi Mincho",
            "Toppan Bunkyu Mincho",
            "Trattatello",
            "Trebuchet MS",
            "Tsukushi A Round Gothic",
            "Tsukushi B Round Gothic",
            "Verdana",
            "Waseem",
            "Wawati SC",
            "Wawati TC",
            "Webdings",
            "Wingdings",
            "Wingdings 2",
            "Wingdings 3",
            "Xingkai SC",
            "YuGothic",
            "YuKyokasho Yoko",
            "YuMincho",
            "Yuanti SC",
            "Yuppy SC",
            "Yuppy TC",
            "Zapf Dingbats",
            "Zapfino",
            "cmb10",
            "cmex10",
            "cmmi10",
            "cmr10",
            "cmss10",
            "cmsy10",
            "cmtt10",
          ],
          { default: ".Aqua Kana" },
        ],
        FONT_SIZE: ["FLOAT", { default: 10, min: 1, step: 0.01 }],
        "\ud83c\udf08": [
          "VEC3",
          {
            default: [255, 255, 255],
            min: 0,
            max: 255,
            step: 1,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6"],
          },
        ],
        "\ud83c\udf08B": [
          "VEC3",
          {
            default: [0, 0, 0],
            min: 0,
            max: 255,
            step: 1,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6"],
          },
        ],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udea6": [
          ["NONE", "FIT", "CROP", "ASPECT"],
          { default: "NONE" },
        ],
        "\ud83d\udcd0": [
          "FLOAT",
          { default: 0, min: -180, max: 180, step: 0.005, precision: 4 },
        ],
        "\ud83d\udccf": [
          "VEC2",
          {
            default: [1.0, 1.0],
            min: -1.0,
            max: 1.0,
            step: 0.005,
            precision: 4,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "TEXT GENERATOR (JOV) \ud83d\udcdd",
    display_name: "TEXT GENERATOR (JOV) \ud83d\udcdd",
    description: "",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CREATE",
    output_node: false,
  },
  "ADJUST (JOV) \ud83d\udd78\ufe0f": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        "\u2692\ufe0f": [
          [
            "BLUR",
            "STACK_BLUR",
            "GAUSSIAN_BLUR",
            "MEDIAN_BLUR",
            "SHARPEN",
            "EMBOSS",
            "ADAPTIVE_HISTOGRAM",
            "EQUALIZE",
            "PIXELATE",
            "QUANTIZE",
            "POSTERIZE",
            "OUTLINE",
            "DILATE",
            "ERODE",
            "OPEN",
            "CLOSE",
          ],
          { default: "BLUR" },
        ],
        "\ud83c\udd61": ["INT", { default: 1, min: 3, step: 1 }],
        "#\ufe0f\u20e3": ["FLOAT", { default: 1, min: 0, step: 0.1 }],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "ADJUST (JOV) \ud83d\udd78\ufe0f",
    display_name: "ADJUST (JOV) \ud83d\udd78\ufe0f",
    description: "Blur, Sharpen and Emboss an input",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "COLOR MATCH (JOV) \ud83d\udc9e": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7eA": ["*", {}],
        "\ud83d\udc7eB": ["*", {}],
        "\ud83c\uddf8\ud83c\udde8": [
          [
            "NONE",
            "AUTUMN",
            "BONE",
            "JET",
            "WINTER",
            "RAINBOW",
            "OCEAN",
            "SUMMER",
            "SPRING",
            "COOL",
            "HSV",
            "PINK",
            "HOT",
            "PARULA",
            "MAGMA",
            "INFERNO",
            "PLASMA",
            "VIRIDIS",
            "CIVIDIS",
            "TWILIGHT",
            "TWILIGHT_SHIFTED",
            "TURBO",
            "DEEPGREEN",
          ],
          { default: "NONE" },
        ],
        "\ud83d\udcc9": ["FLOAT", { default: 0, min: 0, max: 1, step: 0.01 }],
        BLUR: ["INT", { default: 13, min: 3, step: 1 }],
        "\ud83d\ude43": ["BOOLEAN", { default: false }],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "COLOR MATCH (JOV) \ud83d\udc9e",
    display_name: "COLOR MATCH (JOV) \ud83d\udc9e",
    description: "Project the colors of one pixel block onto another",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "FIND EDGES (JOV) \ud83d\udd33": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        LoHi: [
          "VEC2",
          {
            default: [0, 1],
            min: 0,
            max: 1,
            step: 0.005,
            precision: 4,
            label: ["LO", "HI"],
          },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "FIND EDGES (JOV) \ud83d\udd33",
    display_name: "FIND EDGES (JOV) \ud83d\udd33",
    description: "Find Edges on an input",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "HSV (JOV) \ud83c\udf08": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        "\ud83c\udded\ud83c\uddf8\u200c\ud83c\uddfb": [
          "VEC3",
          {
            default: [0, 1, 1],
            min: 0,
            max: 1,
            step: 0.005,
            precision: 4,
            label: ["\ud83c\udded", "\ud83c\uddf8", "\ud83c\uddfb"],
          },
        ],
        "\ud83c\udf13": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
        "\ud83d\udd06": [
          "FLOAT",
          { default: 1, min: 1e-5, max: 1, step: 0.005, precision: 4 },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "HSV (JOV) \ud83c\udf08",
    display_name: "HSV (JOV) \ud83c\udf08",
    description:
      "Adjust the Hue, Saturation, Value, Contrast and Gamma of the input.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "LEVELS (JOV) \ud83d\uded7": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        LMH: [
          "VEC3",
          {
            default: [0, 0.5, 1],
            min: 0,
            max: 1,
            step: 0.01,
            precision: 4,
            label: ["LO", "MID", "HI"],
          },
        ],
        "\ud83d\udd06": [
          "FLOAT",
          { default: 1, min: 1e-5, max: 1, step: 0.005, precision: 4 },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "LEVELS (JOV) \ud83d\uded7",
    display_name: "LEVELS (JOV) \ud83d\uded7",
    description: "Clip an input based on a low, high and mid point value",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "THRESHOLD (JOV) \ud83d\udcc9": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        "\ud83e\uddec": [
          ["ADAPT_NONE", "ADAPT_MEAN", "ADAPT_GAUSS"],
          { default: "ADAPT_NONE" },
        ],
        "\u2692\ufe0f": [["BINARY", "TRUNC", "TOZERO"], { default: "BINARY" }],
        "\ud83d\udcc9": [
          "FLOAT",
          { default: 0.5, min: -100, max: 100, step: 0.01 },
        ],
        "\ud83d\udccf": ["INT", { default: 3, min: 3, max: 103, step: 1 }],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "THRESHOLD (JOV) \ud83d\udcc9",
    display_name: "THRESHOLD (JOV) \ud83d\udcc9",
    description: "Clip an input to explicit 0 or 1",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ADJUST",
    output_node: false,
  },
  "BLEND (JOV) \u2697\ufe0f": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7eA": ["*", {}],
        "\ud83d\udc7eB": ["*", {}],
        "\ud83d\ude37": ["*", {}],
        "\u2692\ufe0f": [
          [
            "NORMAL",
            "ADDITIVE",
            "NEGATION",
            "DIFFERENCE",
            "MULTIPLY",
            "DIVIDE",
            "LIGHTEN",
            "DARKEN",
            "SCREEN",
            "BURN",
            "DODGE",
            "OVERLAY",
            "HUE",
            "SATURATION",
            "LUMINOSITY",
            "COLOR",
            "SOFT",
            "HARD",
            "PIN",
            "VIVID",
            "EXCLUSION",
            "REFLECT",
            "GLOW",
            "XOR",
            "EXTRACT",
            "MERGE",
            "DESTIN",
            "DESTOUT",
            "SRCATOP",
            "DESTATOP",
          ],
          { default: "NORMAL" },
        ],
        "\u2b1c": ["FLOAT", { default: 1, min: 0, max: 1, step: 0.01 }],
        "\ud83d\ude43": ["BOOLEAN", { default: false }],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udea6": [
          ["NONE", "FIT", "CROP", "ASPECT"],
          { default: "NONE" },
        ],
        "\ud83c\udf9e\ufe0f": [
          [
            "NEAREST",
            "LINEAR",
            "CUBIC",
            "AREA",
            "LANCZOS4",
            "LINEAR_EXACT",
            "NEAREST_EXACT",
          ],
          { default: "LANCZOS4" },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "BLEND (JOV) \u2697\ufe0f",
    display_name: "BLEND (JOV) \u2697\ufe0f",
    description:
      "Applies selected operation to 2 inputs with optional mask using a linear blend (alpha).",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "PIXEL MERGE (JOV) \ud83e\udec2": {
    input: {
      required: {},
      optional: {
        "\ud83d\udfe5": ["*", {}],
        "\ud83d\udfe9": ["*", {}],
        "\ud83d\udfe6": ["*", {}],
        "\u2b1c": ["*", {}],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udea6": [
          ["NONE", "FIT", "CROP", "ASPECT"],
          { default: "NONE" },
        ],
        "\ud83c\udf9e\ufe0f": [
          [
            "NEAREST",
            "LINEAR",
            "CUBIC",
            "AREA",
            "LANCZOS4",
            "LINEAR_EXACT",
            "NEAREST_EXACT",
          ],
          { default: "LANCZOS4" },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "PIXEL MERGE (JOV) \ud83e\udec2",
    display_name: "PIXEL MERGE (JOV) \ud83e\udec2",
    description: "Merge 3/4 single channel inputs to make an image.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "PIXEL SPLIT (JOV) \ud83d\udc94": {
    input: { required: {}, optional: { "\ud83d\udc7e": ["*", {}] } },
    output: [
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "MASK",
      "MASK",
      "MASK",
      "MASK",
    ],
    output_is_list: [true, true, true, true, true, true, true, true],
    output_name: [
      "\u2764\ufe0f",
      "\ud83d\udc9a",
      "\ud83d\udc99",
      "\ud83d\udda4",
      "\ud83d\udfe5",
      "\ud83d\udfe9",
      "\ud83d\udfe6",
      "\u2b1b",
    ],
    name: "PIXEL SPLIT (JOV) \ud83d\udc94",
    display_name: "PIXEL SPLIT (JOV) \ud83d\udc94",
    description: "SPLIT THE R-G-B-A from an image",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "TRANSFORM (JOV) \ud83c\udfdd\ufe0f": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        "\ud83c\uddfd\ud83c\uddfe": [
          "VEC2",
          {
            default: [0.0, 0.0],
            min: -1,
            max: 1,
            step: 0.005,
            precision: 4,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        "\ud83d\udcd0": [
          "FLOAT",
          { default: 0, min: -180, max: 180, step: 0.005, precision: 4 },
        ],
        "\ud83d\udccf": [
          "VEC2",
          {
            default: [1.0, 1.0],
            min: -1.0,
            max: 1.0,
            step: 0.005,
            precision: 4,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        EDGE: [["CLIP", "WRAP", "WRAPX", "WRAPY"], { default: "CLIP" }],
        "\ud83e\ude9e": [["NONE", "X", "Y", "XY", "YX"], { default: "NONE" }],
        PIVOT: [
          "VEC2",
          {
            default: [0.5, 0.5],
            max: 1,
            min: "0",
            step: 0.005,
            precision: 4,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        TILE: [
          "VEC2",
          {
            default: [1, 1],
            step: 1,
            min: 1,
            label: ["\ud83c\uddfd", "\ud83c\uddfe"],
          },
        ],
        "TL-TR": [
          "VEC4",
          {
            default: [0, 0, 1, 0],
            min: 0,
            max: 1,
            step: 0.005,
            precision: 4,
            label: [
              "\ud83d\udd3c",
              "\u25c0\ufe0f",
              "\ud83d\udd3c",
              "\u25b6\ufe0f",
            ],
          },
        ],
        "BL-BR": [
          "VEC4",
          {
            default: [0, 1, 1, 1],
            min: 0,
            max: 1,
            step: 0.005,
            precision: 4,
            label: [
              "\ud83d\udd3d",
              "\u25c0\ufe0f",
              "\ud83d\udd3d",
              "\u25b6\ufe0f",
            ],
          },
        ],
        "\ud83d\udcfd\ufe0f": [
          ["NORMAL", "POLAR", "SPHERICAL", "FISHEYE"],
          { default: "NORMAL" },
        ],
        "\ud83d\udcaa\ud83c\udffd": [
          "FLOAT",
          { default: 1, min: 0, precision: 4, step: 0.005 },
        ],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udea6": [
          ["NONE", "FIT", "CROP", "ASPECT"],
          { default: "NONE" },
        ],
        "\ud83c\udf9e\ufe0f": [
          [
            "NEAREST",
            "LINEAR",
            "CUBIC",
            "AREA",
            "LANCZOS4",
            "LINEAR_EXACT",
            "NEAREST_EXACT",
          ],
          { default: "LANCZOS4" },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "TRANSFORM (JOV) \ud83c\udfdd\ufe0f",
    display_name: "TRANSFORM (JOV) \ud83c\udfdd\ufe0f",
    description:
      "Translate, Rotate, Scale, Tile, Mirror, Re-project and invert an input",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "MERGE (JOV) \u2795": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7eA": ["*", {}],
        "\ud83d\udc7eB": ["*", {}],
        "\ud83d\ude37": ["*", {}],
        "\u2795": [["HORIZONTAL", "VERTICAL", "GRID"], { default: "GRID" }],
        "\ud83e\uddb6\ud83c\udffd": ["INT", { min: 1, step: 1, default: 5 }],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udea6": [
          ["NONE", "FIT", "CROP", "ASPECT"],
          { default: "NONE" },
        ],
        "\ud83c\udf9e\ufe0f": [
          [
            "NEAREST",
            "LINEAR",
            "CUBIC",
            "AREA",
            "LANCZOS4",
            "LINEAR_EXACT",
            "NEAREST_EXACT",
          ],
          { default: "LANCZOS4" },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "MERGE (JOV) \u2795",
    display_name: "MERGE (JOV) \u2795",
    description: "Union multiple latents horizontal, vertical or in a grid.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "CROP (JOV) \u2702\ufe0f": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        "\ud83d\udd32": [
          "VEC4",
          {
            default: [0, 0, 1, 1],
            min: 0,
            max: 1,
            step: 0.005,
            precision: 4,
            label: [
              "\ud83d\udd3c",
              "\u25c0\ufe0f",
              "\ud83d\udd3d",
              "\u25b6\ufe0f",
            ],
          },
        ],
        PAD: ["BOOLEAN", { default: false }],
        "\ud83c\udf08": [
          "VEC4",
          {
            default: [0, 0, 0, 255],
            min: 0,
            max: 255,
            step: 0.0625,
            label: ["\ud83d\udfe5", "\ud83d\udfe9", "\ud83d\udfe6", "\u2b1c"],
          },
        ],
        "\ud83c\uddfc\ud83c\udded": [
          "VEC2",
          {
            default: [512, 512],
            min: 32,
            max: 8192,
            step: 1,
            label: ["\ud83c\uddfc", "\ud83c\udded"],
          },
        ],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["\ud83d\uddbc\ufe0f", "\ud83d\ude37"],
    name: "CROP (JOV) \u2702\ufe0f",
    display_name: "CROP (JOV) \u2702\ufe0f",
    description: "Robust cropping with color fill",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "COLOR THEORY (JOV) \ud83d\udede": {
    input: {
      required: {},
      optional: {
        "\ud83d\udc7e": ["*", {}],
        SCHEME: [
          [
            "COMPLIMENTARY",
            "MONOCHROMATIC",
            "SPLIT_COMPLIMENTARY",
            "ANALOGOUS",
            "TRIADIC",
            "SQUARE",
            "COMPOUND",
            "CUSTOM_TETRAD",
          ],
          { default: "COMPLIMENTARY" },
        ],
        "#\ufe0f\u20e3": ["INT", { default: 45, min: -90, max: 90, step: 1 }],
        "\ud83d\udd33": [
          "FLOAT",
          { default: 0, min: 0, max: 1, step: 0.005, precision: 4 },
        ],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [true, true, true, true, true],
    output_name: [
      "\ud83d\udd35",
      "\ud83d\udfe1",
      "\ud83d\udfe3",
      "\u26ab\ufe0f",
      "\u26aa",
    ],
    name: "COLOR THEORY (JOV) \ud83d\udede",
    display_name: "COLOR THEORY (JOV) \ud83d\udede",
    description: "Re-project an input into various color theory mappings",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/COMPOSE",
    output_node: false,
  },
  "TICK (JOV) \u23f1": {
    input: {
      required: {},
      optional: {
        "\ud83c\udfbc": [
          "FLOAT",
          { min: 1, max: 60000, default: 120, step: 1 },
        ],
        "#\ufe0f\u20e3": ["INT", { min: 0, default: 0, step: 1 }],
        "\ud83d\udd04": ["BOOLEAN", { default: false }],
        "\u270b\ud83c\udffd": ["BOOLEAN", { default: false }],
        RESET: ["BOOLEAN", { default: false }],
      },
    },
    output: [
      "INT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "\ud83e\uddee",
      "\ud83d\udedf",
      "\ud83d\udd5b",
      "\ud83d\udd3a",
      "\ud83c\udfb6_128",
      "\ud83c\udfb6_64",
      "\ud83c\udfb6_32",
      "\ud83c\udfb6_16",
      "\ud83c\udfb6_08",
      "\ud83c\udfb6_04",
      "\ud83c\udfb6_02",
      "\ud83c\udfb6_01",
    ],
    name: "TICK (JOV) \u23f1",
    display_name: "TICK (JOV) \u23f1",
    description:
      "Periodic pulse exporting normalized, delta since last pulse and count.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ANIMATE",
    output_node: false,
  },
  "WAVE GENERATOR (JOV) \ud83c\udf0a": {
    input: {
      required: {},
      optional: {
        "\u2652": [
          [
            "SIN",
            "SIN_INV",
            "SIN_ABS",
            "COS",
            "COS_INV",
            "COS_ABS",
            "SAWTOOTH",
            "TRIANGLE",
            "RAMP",
            "STEP",
            "HAVERSINE",
            "NOISE",
          ],
          { default: "SIN" },
        ],
        FREQ: ["FLOAT", { default: 1, min: 0.0, step: 0.01 }],
        "\ud83d\udd0a": ["FLOAT", { default: 1, min: 0.0, step: 0.01 }],
        "\ud83c\udf19": ["FLOAT", { default: 0, min: 0.0, step: 0.001 }],
        "\u25c0\ufe0f\u25b6\ufe0f": [
          "FLOAT",
          { default: 0, min: 0.0, step: 0.001 },
        ],
        "\ud83d\udd5b": ["FLOAT", { default: 0, min: 0, step: 1e-6 }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["\ud83d\udedf", "\ud83d\udd1f"],
    name: "WAVE GENERATOR (JOV) \ud83c\udf0a",
    display_name: "WAVE GENERATOR (JOV) \ud83c\udf0a",
    description: "",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/ANIMATE",
    output_node: false,
  },
  "COMPARISON (JOV) \ud83d\udd75\ud83c\udffd": {
    input: {
      required: {},
      optional: {
        "\ud83c\udd70\ufe0f": ["*", { default: null }],
        "\ud83d\udd75\ud83c\udffd\u200d\u2640\ufe0f": [
          [
            "EQUAL",
            "NOT_EQUAL",
            "LESS_THAN",
            "LESS_THAN_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_EQUAL",
            "AND",
            "NAND",
            "OR",
            "NOR",
            "XOR",
            "XNOR",
            "IS",
            "IS_NOT",
            "IN",
            "NOT_IN",
          ],
          { default: "EQUAL" },
        ],
        "\ud83c\udd71\ufe0f": ["*", { default: null }],
        "\ud83d\ude43": ["BOOLEAN", { default: false }],
      },
    },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["\ud83c\uddf4"],
    name: "COMPARISON (JOV) \ud83d\udd75\ud83c\udffd",
    display_name: "COMPARISON (JOV) \ud83d\udd75\ud83c\udffd",
    description: "Compare two inputs",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/FLOW",
    output_node: false,
  },
  "GET (JOV) \ud83d\udff0": {
    input: {
      required: {},
      optional: {
        "\ud83e\udd32\ud83c\udffd": [["SET", "GET"], { default: "SET" }],
        "\ud83d\udd11": ["STRING", { default: "" }],
        "#\ufe0f\u20e3": ["*", { default: null }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["\ud83d\udc4d"],
    name: "GET (JOV) \ud83d\udff0",
    display_name: "GET (JOV) \ud83d\udff0",
    description: "Get a value",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/FLOW",
    output_node: false,
  },
  "IF-THEN-ELSE (JOV) \ud83d\udd00": {
    input: {
      required: {},
      optional: {
        "\ud83c\uddf9": ["*", { default: null }],
        "\ud83c\uddeb": ["*", { default: null }],
        "\u2049\ufe0f": ["BOOLEAN", { default: false }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["\ud83d\udc4d"],
    name: "IF-THEN-ELSE (JOV) \ud83d\udd00",
    display_name: "IF-THEN-ELSE (JOV) \ud83d\udd00",
    description: "IF <valid> then A else B",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/FLOW",
    output_node: false,
  },
  "SET (JOV) \ud83d\udff0": {
    input: {
      required: {},
      optional: {
        "\ud83e\udd32\ud83c\udffd": [["SET", "GET"], { default: "SET" }],
        "\ud83d\udd11": ["STRING", { default: "" }],
        "#\ufe0f\u20e3": ["*", { default: null }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["\ud83d\udc4d"],
    name: "SET (JOV) \ud83d\udff0",
    display_name: "SET (JOV) \ud83d\udff0",
    description: "Set a value",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/FLOW",
    output_node: false,
  },
  "CONVERT (JOV) \ud83e\uddec": {
    input: {
      required: {},
      optional: {
        "\ud83c\udd70\ufe0f": ["*", { default: null }],
        "\u2753": [
          ["STRING", "BOOLEAN", "INT", "FLOAT", "VEC2", "VEC3", "VEC4"],
          { default: "BOOLEAN" },
        ],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "CONVERT (JOV) \ud83e\uddec",
    display_name: "CONVERT (JOV) \ud83e\uddec",
    description: "Convert A to B.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CALC",
    output_node: false,
  },
  "VALUE (JOV) #\ufe0f\u20e3": {
    input: {
      required: {},
      optional: {
        "\u2753": [
          ["STRING", "BOOLEAN", "INT", "FLOAT", "VEC2", "VEC3", "VEC4"],
          { default: "BOOLEAN" },
        ],
        "\ud83c\uddfd": ["FLOAT", { default: 0 }],
        "\ud83c\uddfe": ["FLOAT", { default: 0 }],
        "\ud83c\uddff": ["FLOAT", { default: 0 }],
        "\ud83c\uddfc": ["FLOAT", { default: 0 }],
      },
      hidden: {},
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "VALUE (JOV) #\ufe0f\u20e3",
    display_name: "VALUE (JOV) #\ufe0f\u20e3",
    description: "Create a value for most types; also universal constants.",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CALC",
    output_node: false,
  },
  "CALC OP UNARY (JOV) \ud83c\udfb2": {
    input: {
      required: {},
      optional: {
        "\ud83c\udd70\ufe0f": ["*", { default: null }],
        "\u2692\ufe0f": [
          [
            "ABS",
            "FLOOR",
            "CEIL",
            "SQRT",
            "SQUARE",
            "LOG",
            "LOG10",
            "SIN",
            "COS",
            "TAN",
            "NEGATE",
            "RECIPROCAL",
            "FACTORIAL",
            "EXP",
            "MINIMUM",
            "MAXIMUM",
            "MEAN",
            "MEDIAN",
            "MODE",
            "MAGNITUDE",
            "NORMALIZE",
            "NOT",
            "BIT_NOT",
            "COS_H",
            "SIN_H",
            "TAN_H",
            "RADIANS",
            "DEGREES",
            "GAMMA",
            "IS_EVEN",
            "IS_ODD",
          ],
          { default: "ABS" },
        ],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["\u2754"],
    name: "CALC OP UNARY (JOV) \ud83c\udfb2",
    display_name: "CALC OP UNARY (JOV) \ud83c\udfb2",
    description: "Perform a Unary Operation on an input",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CALC",
    output_node: false,
  },
  "CALC OP BINARY (JOV) \ud83c\udf1f": {
    input: {
      required: {},
      optional: {
        "\ud83c\udd70\ufe0f": ["*", { default: null }],
        "\u2692\ufe0f": [
          [
            "ADD",
            "SUBTRACT",
            "MULTIPLY",
            "DIVIDE",
            "DIVIDE_FLOOR",
            "MODULUS",
            "POWER",
            "MAXIMUM",
            "MINIMUM",
            "DOT_PRODUCT",
            "CROSS_PRODUCT",
            "BIT_AND",
            "BIT_NAND",
            "BIT_OR",
            "BIT_NOR",
            "BIT_XOR",
            "BIT_XNOR",
            "BIT_LSHIFT",
            "BIT_RSHIFT",
            "UNION",
            "INTERSECTION",
            "DIFFERENCE",
          ],
          { default: "ADD" },
        ],
        "\ud83c\udd71\ufe0f": ["*", { default: null }],
        "\ud83d\ude43": ["BOOLEAN", { default: false }],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["\u2754"],
    name: "CALC OP BINARY (JOV) \ud83c\udf1f",
    display_name: "CALC OP BINARY (JOV) \ud83c\udf1f",
    description: "Perform a Binary Operation on two inputs",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/CALC",
    output_node: false,
  },
  "OPTIONS (JOV) \u2699\ufe0f": {
    input: {
      required: {},
      optional: {
        "\ud83d\udce5": ["*", { default: null }],
        "\ud83e\udeb5": [
          ["ERROR", "WARN", "INFO", "DEBUG", "SPAM"],
          { default: "ERROR" },
        ],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["\ud83d\udce4"],
    name: "OPTIONS (JOV) \u2699\ufe0f",
    display_name: "OPTIONS (JOV) \u2699\ufe0f",
    description: "Change Jovimetrix Global Options",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/UTILITY",
    output_node: false,
  },
  "AKASHIC (JOV) \ud83d\udcd3": {
    input: { required: {}, optional: { "\ud83d\udce5": ["*", {}] } },
    output: ["*", "AKASHIC"],
    output_is_list: [false, false],
    output_name: ["\ud83d\udce4", "\ud83d\udccb"],
    name: "AKASHIC (JOV) \ud83d\udcd3",
    display_name: "AKASHIC (JOV) \ud83d\udcd3",
    description: "Display the top level attributes of an output",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/UTILITY",
    output_node: true,
  },
  "VALUE GRAPH (JOV) \ud83d\udcc8": {
    input: {
      required: {},
      optional: {
        "\u270b\ud83c\udffd": ["BOOLEAN", { default: false }],
        RESET: ["BOOLEAN", { default: false }],
        "#\ufe0f\u20e3": ["INT", { default: 500, min: 0 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["\ud83d\uddbc\ufe0f"],
    name: "VALUE GRAPH (JOV) \ud83d\udcc8",
    display_name: "VALUE GRAPH (JOV) \ud83d\udcc8",
    description: "Graphs historical execution run values",
    category: "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/UTILITY",
    output_node: true,
  },
  "GLSL (JOV) \ud83c\udf69": {
    input: { required: {}, optional: { "\ud83d\udc7e": ["*", {}] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["\ud83d\uddbc\ufe0f"],
    name: "GLSL (JOV) \ud83c\udf69",
    display_name: "GLSL (JOV) \ud83c\udf69",
    description: "",
    category:
      "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/WIP \u2623\ufe0f\ud83d\udca3",
    output_node: false,
  },
  "DELAY (JOV) \u270b\ud83c\udffd": {
    input: {
      required: {},
      optional: {
        "\ud83d\udce5": ["*", { default: null }],
        "\u270b\ud83c\udffd": ["FLOAT", { step: 0.01, default: 0 }],
        RESET: ["BOOLEAN", { default: false }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["\ud83d\ude8c"],
    name: "DELAY (JOV) \u270b\ud83c\udffd",
    display_name: "DELAY (JOV) \u270b\ud83c\udffd",
    description: "Delay traffic. Electrons on the data bus go round.",
    category:
      "JOVIMETRIX \ud83d\udd3a\ud83d\udfe9\ud83d\udd35/WIP \u2623\ufe0f\ud83d\udca3",
    output_node: false,
  },
  SeargeTextInputV2: {
    input: {
      required: { prompt: ["STRING", { default: "", multiline: true }] },
    },
    output: ["SRG_PROMPT_TEXT"],
    output_is_list: [false],
    output_name: ["prompt_text"],
    name: "SeargeTextInputV2",
    display_name: "Text Input v2",
    description: "",
    category: "Searge/UI/Prompting",
    output_node: false,
  },
  SeargePromptAdapterV2: {
    input: {
      required: {},
      optional: {
        data: ["SRG_DATA_STREAM"],
        main_prompt: ["SRG_PROMPT_TEXT"],
        secondary_prompt: ["SRG_PROMPT_TEXT"],
        style_prompt: ["SRG_PROMPT_TEXT"],
        negative_main_prompt: ["SRG_PROMPT_TEXT"],
        negative_secondary_prompt: ["SRG_PROMPT_TEXT"],
        negative_style_prompt: ["SRG_PROMPT_TEXT"],
      },
    },
    output: ["SRG_DATA_STREAM", "SRG_DATA_STREAM"],
    output_is_list: [false, false],
    output_name: ["data", "prompts"],
    name: "SeargePromptAdapterV2",
    display_name: "Prompt Adapter v2",
    description: "",
    category: "Searge/UI/Prompting",
    output_node: false,
  },
  SeargeImageAdapterV2: {
    input: {
      required: {},
      optional: {
        data: ["SRG_DATA_STREAM"],
        source_image: ["IMAGE"],
        image_mask: ["MASK"],
        uploaded_mask: ["MASK"],
      },
    },
    output: ["SRG_DATA_STREAM", "SRG_DATA_STREAM"],
    output_is_list: [false, false],
    output_name: ["data", "image_inputs"],
    name: "SeargeImageAdapterV2",
    display_name: "Image Adapter v2",
    description: "",
    category: "Searge/UI/Prompting",
    output_node: false,
  },
  SeargeControlnetAdapterV2: {
    input: {
      required: {
        controlnet_mode: [
          ["none", "revision", "canny", "depth", "recolor", "sketch", "custom"],
          { default: "none" },
        ],
        controlnet_preprocessor: ["BOOLEAN", { default: false }],
        strength: ["FLOAT", { default: 0.5, min: 0.0, max: 10.0, step: 0.05 }],
        low_threshold: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.05 },
        ],
        high_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.05 },
        ],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        noise_augmentation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        revision_enhancer: ["BOOLEAN", { default: false }],
      },
      optional: { data: ["SRG_DATA_STREAM"], source_image: ["IMAGE"] },
    },
    output: ["SRG_DATA_STREAM", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["data", "preview"],
    name: "SeargeControlnetAdapterV2",
    display_name: "Controlnet Adapter v2",
    description: "",
    category: "Searge/UI/Prompting",
    output_node: false,
  },
  SeargeSeparator: {
    input: { required: {} },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SeargeSeparator",
    display_name: "Separator",
    description: "",
    category: "Searge/UI",
    output_node: false,
  },
  SeargePreviewImage: {
    input: {
      required: { enabled: ["BOOLEAN", { default: true }] },
      optional: { images: ["IMAGE"] },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "SeargePreviewImage",
    display_name: "SeargePreviewImage",
    description: "",
    category: "Searge/UI",
    output_node: true,
  },
  SeargeAdvancedParameters: {
    input: {
      required: {
        dynamic_cfg_method: [
          ["none", "interpolate", "rescale", "tonemap"],
          { default: "none" },
        ],
        dynamic_cfg_factor: [
          "FLOAT",
          { default: 0.0, min: -1.0, max: 1.0, step: 0.05 },
        ],
        refiner_detail_boost: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        contrast_factor: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        saturation_factor: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        latent_detailer: [
          ["none", "normal", "soft", "blurry", "soft blurry"],
          { default: "none" },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeAdvancedParameters",
    display_name: "Advanced Parameters v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeConditioningParameters: {
    input: {
      required: {
        base_conditioning_scale: [
          "FLOAT",
          { default: 2.0, min: 0.5, max: 4.0, step: 0.25 },
        ],
        refiner_conditioning_scale: [
          "FLOAT",
          { default: 2.0, min: 0.5, max: 4.0, step: 0.25 },
        ],
        target_conditioning_scale: [
          "FLOAT",
          { default: 2.0, min: 0.5, max: 4.0, step: 0.25 },
        ],
        positive_conditioning_scale: [
          "FLOAT",
          { default: 1.5, min: 0.25, max: 2.0, step: 0.25 },
        ],
        negative_conditioning_scale: [
          "FLOAT",
          { default: 0.75, min: 0.25, max: 2.0, step: 0.25 },
        ],
        positive_aesthetic_score: [
          "FLOAT",
          { default: 6.0, min: 0.5, max: 10.0, step: 0.5 },
        ],
        negative_aesthetic_score: [
          "FLOAT",
          { default: 2.5, min: 0.5, max: 10.0, step: 0.5 },
        ],
        precondition_mode: [["none", "gaussian"]],
        precondition_strength: [
          "FLOAT",
          { default: 0.1, min: 0.0, max: 1.0, step: 0.05 },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeConditioningParameters",
    display_name: "Conditioning Parameters v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeConditionMixing: {
    input: { required: {}, optional: { data: ["SRG_DATA_STREAM"] } },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeConditionMixing",
    display_name: "Condition Mixing v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeControlnetModels: {
    input: {
      required: {
        clip_vision: [["none", "__models__"]],
        canny_checkpoint: [["none", "__models__"]],
        depth_checkpoint: [["none", "__models__"]],
        recolor_checkpoint: [["none", "__models__"]],
        sketch_checkpoint: [["none", "__models__"]],
        custom_checkpoint: [["none", "__models__"]],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeControlnetModels",
    display_name: "Controlnet Models Selector v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeCustomPromptMode: {
    input: { required: {}, optional: { data: ["SRG_DATA_STREAM"] } },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeCustomPromptMode",
    display_name: "Custom Prompt Mode v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeFreeU: {
    input: {
      required: {
        freeu_mode: [
          [
            "none",
            "custom",
            "default",
            "subtle",
            "sdxl",
            "freeu_v2-sdxl",
            "detailed",
            "sd-2.1",
            "sd-1.5",
          ],
        ],
        b1: ["FLOAT", { default: 1.3, min: 1.0, max: 1.4, step: 0.01 }],
        b2: ["FLOAT", { default: 1.4, min: 1.2, max: 1.6, step: 0.01 }],
        s1: ["FLOAT", { default: 0.9, min: 0.0, max: 1.0, step: 0.05 }],
        s2: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.05 }],
        freeu_version: [["freeu_v1", "freeu_v2"]],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeFreeU",
    display_name: "FreeU v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeGenerationParameters: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551600 }],
        image_size_preset: [
          [
            "none - use settings",
            "1024x1024 (1:1)",
            "1152x896 (4:3)",
            "1216x832 (3:2)",
            "1344x768 (16:9)",
            "1536x640 (21:9)",
            "896x1152 (3:4)",
            "832x1216 (2:3)",
            "768x1344 (9:16)",
            "640x1536 (9:21)",
            "from source image",
          ],
        ],
        image_width: ["INT", { default: 1024, min: 0, max: 8192, step: 8 }],
        image_height: ["INT", { default: 1024, min: 0, max: 8192, step: 8 }],
        steps: ["INT", { default: 20, min: 1, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.5, max: 30.0, step: 0.5 }],
        sampler_preset: [
          [
            "none - use settings",
            "1 - DPM++ 2M Karras",
            "2 - Euler a",
            "3 - DPM++ 2M SDE Karras",
            "4 - DPM++ 3M SDE Exp",
            "5 - DDIM Uniform",
          ],
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
          { default: "dpmpp_2m" },
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
          { default: "karras" },
        ],
        base_vs_refiner_ratio: [
          "FLOAT",
          { default: 0.8, min: 0.0, max: 1.0, step: 0.05 },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeGenerationParameters",
    display_name: "Generation Parameters v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeHighResolution: {
    input: {
      required: {
        hires_mode: [["none", "simple - fast", "normal"], { default: "none" }],
        hires_scale: [["1.25x", "1.5x", "2x"], { default: "1.5x" }],
        hires_denoise: [
          "FLOAT",
          { default: 0.2, min: 0.0, max: 1.0, step: 0.01 },
        ],
        hires_softness: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.05 },
        ],
        hires_detail_boost: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        hires_contrast_factor: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        hires_saturation_factor: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        hires_latent_detailer: [
          ["none", "normal", "soft", "blurry", "soft blurry"],
          { default: "none" },
        ],
        final_upscale_size: [
          ["none", "1.2x", "1.25x", "1.333x", "1.5x", "2.0x", "3.0x", "4.0x"],
          { default: "none" },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeHighResolution",
    display_name: "High Resolution v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeImage2ImageAndInpainting: {
    input: {
      required: {
        denoise: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        inpaint_mask_blur: ["INT", { default: 16, min: 0, max: 24, step: 4 }],
        inpaint_mask_mode: [["masked - full", "uploaded - full"]],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeImage2ImageAndInpainting",
    display_name: "Image to Image and Inpainting v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeImageSaving: {
    input: {
      required: {
        save_parameters_file: ["BOOLEAN", { default: true }],
        save_folder: [
          [
            "none - don't save",
            "output",
            "output/%date%",
            "output/Searge-SDXL-%date%",
            "input",
          ],
          { default: "output/%date%" },
        ],
        save_generated_image: ["BOOLEAN", { default: true }],
        embed_workflow_in_generated: ["BOOLEAN", { default: true }],
        generated_image_name: [
          "STRING",
          { multiline: false, default: "generated" },
        ],
        save_high_res_image: ["BOOLEAN", { default: true }],
        embed_workflow_in_high_res: ["BOOLEAN", { default: true }],
        high_res_image_name: [
          "STRING",
          { multiline: false, default: "high-res" },
        ],
        save_upscaled_image: ["BOOLEAN", { default: true }],
        embed_workflow_in_upscaled: ["BOOLEAN", { default: true }],
        upscaled_image_name: [
          "STRING",
          { multiline: false, default: "upscaled" },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeImageSaving",
    display_name: "Image Saving v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeLoras: {
    input: {
      required: {
        lora_1: [["none", "__models__"]],
        lora_1_strength: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.05 },
        ],
        lora_2: [["none", "__models__"]],
        lora_2_strength: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.05 },
        ],
        lora_3: [["none", "__models__"]],
        lora_3_strength: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.05 },
        ],
        lora_4: [["none", "__models__"]],
        lora_4_strength: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.05 },
        ],
        lora_5: [["none", "__models__"]],
        lora_5_strength: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.05 },
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeLoras",
    display_name: "Lora Selector v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeModelSelector: {
    input: {
      required: {
        base_checkpoint: [["__models__"]],
        refiner_checkpoint: [["none", "__models__"]],
        vae_checkpoint: [
          ["from base model", "from refiner model", "__models__"],
        ],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeModelSelector",
    display_name: "Model Selector v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeOperatingMode: {
    input: {
      required: {
        workflow_mode: [
          ["none", "text-to-image", "image-to-image", "in-painting"],
          { default: "text-to-image" },
        ],
        prompting_mode: [
          [
            "default - all prompts",
            "custom",
            "main and neg. only",
            "main, sec., and neg.",
            "all except sec.",
            "ignore empty",
            "ignore all",
          ],
          { default: "default - all prompts" },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 4, step: 1 }],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeOperatingMode",
    display_name: "Operating Mode v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargePromptStyles: {
    input: { required: {}, optional: { data: ["SRG_DATA_STREAM"] } },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargePromptStyles",
    display_name: "Prompt Styles v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeUpscaleModels: {
    input: {
      required: {
        detail_processor: [["none", "__models__"]],
        high_res_upscaler: [["none", "__models__"]],
        primary_upscaler: [["none", "__models__"]],
        secondary_upscaler: [["none", "__models__"]],
      },
      optional: { data: ["SRG_DATA_STREAM"] },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeUpscaleModels",
    display_name: "Upscale Models Selector v2",
    description: "",
    category: "Searge/UI/Inputs",
    output_node: false,
  },
  SeargeMagicBox: {
    input: {
      required: {
        stage: [
          [
            "none - skip",
            "pre-process data",
            "load checkpoints",
            "apply loras",
            "prompt styling",
            "clip conditioning",
            "clip mixing",
            "apply controlnet",
            "latent inputs",
            "sampling",
            "latent detailer",
            "vae decode sampled",
            "high resolution",
            "hires detailer",
            "vae decode hi-res",
            "upscaling",
            "image saving",
          ],
          { default: "none - skip" },
        ],
        input_from: [["data stream", "custom stage & data stream"]],
        output_to: [["data stream", "custom stage & data stream"]],
      },
      optional: {
        data: ["SRG_DATA_STREAM"],
        custom_input: ["SRG_STAGE_INPUT"],
      },
    },
    output: ["SRG_DATA_STREAM", "SRG_STAGE_OUTPUT"],
    output_is_list: [false, false],
    output_name: ["data", "custom_output"],
    name: "SeargeMagicBox",
    display_name: "Searge's Magic Box for SDXL",
    description: "",
    category: "Searge/Magic",
    output_node: false,
  },
  SeargePipelineStart: {
    input: {
      required: { wf_version: [["4.0", "4.1", "4.2", "4.3"]] },
      optional: {
        data: ["SRG_DATA_STREAM"],
        additional_data: ["SRG_DATA_STREAM"],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargePipelineStart",
    display_name: "Magic Box Pipeline Start",
    description: "",
    category: "Searge/Magic",
    output_node: true,
  },
  SeargePipelineTerminator: {
    input: { required: {}, optional: { data: ["SRG_DATA_STREAM"] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SeargePipelineTerminator",
    display_name: "Magic Box Pipeline Terminator",
    description: "",
    category: "Searge/Magic",
    output_node: true,
  },
  SeargeCustomAfterVaeDecode: {
    input: { required: { custom_output: ["SRG_STAGE_OUTPUT"] }, optional: {} },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "SeargeCustomAfterVaeDecode",
    display_name: "After VAE Decode",
    description: "",
    category: "Searge/Magic/Custom Stages",
    output_node: false,
  },
  SeargeCustomAfterUpscaling: {
    input: { required: { custom_output: ["SRG_STAGE_OUTPUT"] }, optional: {} },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "SeargeCustomAfterUpscaling",
    display_name: "After Upscaling",
    description: "",
    category: "Searge/Magic/Custom Stages",
    output_node: false,
  },
  SeargeDebugPrinter: {
    input: {
      required: { enabled: ["BOOLEAN", { default: true }] },
      optional: {
        data: ["SRG_DATA_STREAM"],
        prefix: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["SRG_DATA_STREAM"],
    output_is_list: [false],
    output_name: ["data"],
    name: "SeargeDebugPrinter",
    display_name: "Debug Printer",
    description: "",
    category: "Searge/Debug",
    output_node: true,
  },
  SeargeSDXLSampler: {
    input: {
      required: {
        base_model: ["MODEL"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 30, min: 1, max: 1000 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 100.0, step: 0.5 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
          { default: "dpmpp_2m" },
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
          { default: "karras" },
        ],
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: [""],
    name: "SeargeSDXLSampler",
    display_name: "SDXL Sampler v1 (Searge)",
    description: "",
    category: "Searge/_deprecated_/Sampling",
    output_node: false,
  },
  SeargeSDXLSampler2: {
    input: {
      required: {
        base_model: ["MODEL"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551600 }],
        steps: ["INT", { default: 20, min: 1, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 30.0, step: 0.5 }],
        sampler_name: ["SAMPLER_NAME", { default: "ddim" }],
        scheduler: ["SCHEDULER_NAME", { default: "ddim_uniform" }],
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: {
        refiner_prep_steps: ["INT", { default: 0, min: 0, max: 10 }],
        noise_offset: ["INT", { default: 1, min: 0, max: 1 }],
        refiner_strength: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 1.0, step: 0.05 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "SeargeSDXLSampler2",
    display_name: "SDXL Sampler v2 (Searge)",
    description: "",
    category: "Searge/_deprecated_/Sampling",
    output_node: false,
  },
  SeargeSDXLSamplerV3: {
    input: {
      required: {
        base_model: ["MODEL"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551600 }],
        steps: ["INT", { default: 20, min: 1, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 30.0, step: 0.5 }],
        sampler_name: ["SAMPLER_NAME", { default: "ddim" }],
        scheduler: ["SCHEDULER_NAME", { default: "ddim_uniform" }],
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: {
        refiner_prep_steps: ["INT", { default: 0, min: 0, max: 10 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "SeargeSDXLSamplerV3",
    display_name: "SDXL Sampler v3 (Searge)",
    description: "",
    category: "Searge/_deprecated_/Sampling",
    output_node: false,
  },
  SeargeSDXLImage2ImageSampler: {
    input: {
      required: {
        base_model: ["MODEL"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        image: ["IMAGE"],
        vae: ["VAE"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551600 }],
        steps: ["INT", { default: 20, min: 0, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 30.0, step: 0.5 }],
        sampler_name: ["SAMPLER_NAME", { default: "ddim" }],
        scheduler: ["SCHEDULER_NAME", { default: "ddim_uniform" }],
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        denoise: ["FLOAT", { default: 0.25, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: {
        upscale_model: ["UPSCALE_MODEL"],
        scaled_width: ["INT", { default: 1536, min: 0, max: 8192, step: 8 }],
        scaled_height: ["INT", { default: 1536, min: 0, max: 8192, step: 8 }],
        noise_offset: ["INT", { default: 1, min: 0, max: 1 }],
        refiner_strength: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 1.0, step: 0.05 },
        ],
        softness: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SeargeSDXLImage2ImageSampler",
    display_name: "Image2Image Sampler v1 (Searge)",
    description: "",
    category: "Searge/_deprecated_/Sampling",
    output_node: false,
  },
  SeargeSDXLImage2ImageSampler2: {
    input: {
      required: {
        base_model: ["MODEL"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        image: ["IMAGE"],
        vae: ["VAE"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551600 }],
        steps: ["INT", { default: 20, min: 0, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 30.0, step: 0.5 }],
        sampler_name: ["SAMPLER_NAME", { default: "ddim" }],
        scheduler: ["SCHEDULER_NAME", { default: "ddim_uniform" }],
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        denoise: ["FLOAT", { default: 0.25, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: {
        upscale_model: ["UPSCALE_MODEL"],
        scaled_width: ["INT", { default: 1536, min: 0, max: 8192, step: 8 }],
        scaled_height: ["INT", { default: 1536, min: 0, max: 8192, step: 8 }],
        noise_offset: ["INT", { default: 1, min: 0, max: 1 }],
        refiner_strength: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 1.0, step: 0.05 },
        ],
        softness: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SeargeSDXLImage2ImageSampler2",
    display_name: "Image2Image Sampler v2 (Searge)",
    description: "",
    category: "Searge/_deprecated_/Sampling",
    output_node: false,
  },
  SeargeSamplerInputs: {
    input: {
      required: {
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
          { default: "ddim" },
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
          { default: "ddim_uniform" },
        ],
      },
    },
    output: ["SAMPLER_NAME", "SCHEDULER_NAME"],
    output_is_list: [false, false],
    output_name: ["sampler_name", "scheduler"],
    name: "SeargeSamplerInputs",
    display_name: "Sampler Settings",
    description: "",
    category: "Searge/_deprecated_/Inputs",
    output_node: false,
  },
  SeargeEnablerInputs: {
    input: {
      required: { state: [["disabled", "enabled"], { default: "enabled" }] },
    },
    output: ["ENABLE_STATE"],
    output_is_list: [false],
    output_name: ["state"],
    name: "SeargeEnablerInputs",
    display_name: "Enable / Disable",
    description: "",
    category: "Searge/_deprecated_/Inputs",
    output_node: false,
  },
  SeargeSaveFolderInputs: {
    input: {
      required: {
        save_to: [
          ["output folder", "input folder"],
          { default: "output folder" },
        ],
      },
    },
    output: ["SAVE_FOLDER"],
    output_is_list: [false],
    output_name: ["save_to"],
    name: "SeargeSaveFolderInputs",
    display_name: "Save Folder",
    description: "",
    category: "Searge/_deprecated_/Inputs",
    output_node: false,
  },
  SeargeSDXLPromptEncoder: {
    input: {
      required: {
        base_clip: ["CLIP"],
        refiner_clip: ["CLIP"],
        pos_g: ["STRING", { multiline: true, default: "POS_G" }],
        pos_l: ["STRING", { multiline: true, default: "POS_L" }],
        pos_r: ["STRING", { multiline: true, default: "POS_R" }],
        neg_g: ["STRING", { multiline: true, default: "NEG_G" }],
        neg_l: ["STRING", { multiline: true, default: "NEG_L" }],
        neg_r: ["STRING", { multiline: true, default: "NEG_R" }],
        base_width: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        base_height: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        target_width: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        target_height: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        pos_ascore: [
          "FLOAT",
          { default: 6.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        neg_ascore: [
          "FLOAT",
          { default: 2.5, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        refiner_width: ["INT", { default: 2048, min: 0, max: 8192, step: 8 }],
        refiner_height: ["INT", { default: 2048, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false, false],
    output_name: [
      "base_positive",
      "base_negative",
      "refiner_positive",
      "refiner_negative",
    ],
    name: "SeargeSDXLPromptEncoder",
    display_name: "SDXL Prompt Encoder (Searge)",
    description: "",
    category: "Searge/_deprecated_/ClipEncoding",
    output_node: false,
  },
  SeargeSDXLBasePromptEncoder: {
    input: {
      required: {
        base_clip: ["CLIP"],
        pos_g: ["STRING", { multiline: true, default: "POS_G" }],
        pos_l: ["STRING", { multiline: true, default: "POS_L" }],
        neg_g: ["STRING", { multiline: true, default: "NEG_G" }],
        neg_l: ["STRING", { multiline: true, default: "NEG_L" }],
        base_width: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        base_height: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        target_width: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
        target_height: ["INT", { default: 4096, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["base_positive", "base_negative"],
    name: "SeargeSDXLBasePromptEncoder",
    display_name: "SDXL Base Prompt Encoder (Searge)",
    description: "",
    category: "Searge/_deprecated_/ClipEncoding",
    output_node: false,
  },
  SeargeSDXLRefinerPromptEncoder: {
    input: {
      required: {
        refiner_clip: ["CLIP"],
        pos_r: ["STRING", { multiline: true, default: "POS_R" }],
        neg_r: ["STRING", { multiline: true, default: "NEG_R" }],
        pos_ascore: [
          "FLOAT",
          { default: 6.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        neg_ascore: [
          "FLOAT",
          { default: 2.5, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        refiner_width: ["INT", { default: 2048, min: 0, max: 8192, step: 8 }],
        refiner_height: ["INT", { default: 2048, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["refiner_positive", "refiner_negative"],
    name: "SeargeSDXLRefinerPromptEncoder",
    display_name: "SDXL Refiner Prompt Encoder (Searge)",
    description: "",
    category: "Searge/_deprecated_/ClipEncoding",
    output_node: false,
  },
  SeargePromptText: {
    input: {
      required: { prompt: ["STRING", { default: "", multiline: true }] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["prompt"],
    name: "SeargePromptText",
    display_name: "Prompt text input",
    description: "",
    category: "Searge/_deprecated_/Prompting",
    output_node: false,
  },
  SeargePromptCombiner: {
    input: {
      required: {
        prompt1: ["STRING", { default: "", multiline: true }],
        separator: ["STRING", { default: ", ", multiline: false }],
        prompt2: ["STRING", { default: "", multiline: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["combined prompt"],
    name: "SeargePromptCombiner",
    display_name: "Prompt combiner",
    description: "",
    category: "Searge/_deprecated_/Prompting",
    output_node: false,
  },
  SeargeIntegerConstant: {
    input: {
      required: {
        value: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["value"],
    name: "SeargeIntegerConstant",
    display_name: "Integer Constant",
    description: "",
    category: "Searge/_deprecated_/Integers",
    output_node: false,
  },
  SeargeIntegerPair: {
    input: {
      required: {
        value1: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        value2: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["value 1", "value 2"],
    name: "SeargeIntegerPair",
    display_name: "Integer Pair",
    description: "",
    category: "Searge/_deprecated_/Integers",
    output_node: false,
  },
  SeargeIntegerMath: {
    input: {
      required: {
        op: [
          ["a * b + c", "a + c", "a - c", "a * b", "a / b"],
          { default: "a * b + c" },
        ],
        a: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        b: ["INT", { default: 1, min: 0, max: 18446744073709551615 }],
        c: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["result"],
    name: "SeargeIntegerMath",
    display_name: "Integer Math",
    description: "",
    category: "Searge/_deprecated_/Integers",
    output_node: false,
  },
  SeargeIntegerScaler: {
    input: {
      required: {
        value: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        factor: ["FLOAT", { default: 1.0, step: 0.01 }],
        multiple_of: ["INT", { default: 1, min: 0, max: 65536 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["value"],
    name: "SeargeIntegerScaler",
    display_name: "Integer Scaler",
    description: "",
    category: "Searge/_deprecated_/Integers",
    output_node: false,
  },
  SeargeFloatConstant: {
    input: { required: { value: ["FLOAT", { default: 0.0, step: 0.01 }] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["value"],
    name: "SeargeFloatConstant",
    display_name: "Float Constant",
    description: "",
    category: "Searge/_deprecated_/Floats",
    output_node: false,
  },
  SeargeFloatPair: {
    input: {
      required: {
        value1: ["FLOAT", { default: 0.0, step: 0.01 }],
        value2: ["FLOAT", { default: 0.0, step: 0.01 }],
      },
    },
    output: ["FLOAT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["value 1", "value 2"],
    name: "SeargeFloatPair",
    display_name: "Float Pair",
    description: "",
    category: "Searge/_deprecated_/Floats",
    output_node: false,
  },
  SeargeFloatMath: {
    input: {
      required: {
        op: [
          ["a * b + c", "a + c", "a - c", "a * b", "a / b"],
          { default: "a * b + c" },
        ],
        a: ["FLOAT", { default: 0.0, step: 0.01 }],
        b: ["FLOAT", { default: 1.0, step: 0.01 }],
        c: ["FLOAT", { default: 0.0, step: 0.01 }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["result"],
    name: "SeargeFloatMath",
    display_name: "Float Math",
    description: "",
    category: "Searge/_deprecated_/Floats",
    output_node: false,
  },
  SeargeImageSave: {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "SeargeSDXL-%date%/Image" }],
        state: ["ENABLE_STATE", { default: "enabled" }],
        save_to: ["SAVE_FOLDER", { default: "output folder" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SeargeImageSave",
    display_name: "Save Image (Searge)",
    description: "",
    category: "Searge/_deprecated_/Files",
    output_node: true,
  },
  SeargeCheckpointLoader: {
    input: { required: { ckpt_name: ["CHECKPOINT_NAME"] } },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "SeargeCheckpointLoader",
    display_name: "Checkpoint Loader (Searge)",
    description: "",
    category: "Searge/_deprecated_/Files",
    output_node: false,
  },
  SeargeVAELoader: {
    input: { required: { vae_name: ["VAE_NAME"] } },
    output: ["VAE"],
    output_is_list: [false],
    output_name: ["VAE"],
    name: "SeargeVAELoader",
    display_name: "VAE Loader (Searge)",
    description: "",
    category: "Searge/_deprecated_/Files",
    output_node: false,
  },
  SeargeUpscaleModelLoader: {
    input: { required: { upscaler_name: ["UPSCALER_NAME"] } },
    output: ["UPSCALE_MODEL"],
    output_is_list: [false],
    output_name: ["UPSCALE_MODEL"],
    name: "SeargeUpscaleModelLoader",
    display_name: "Upscale Model Loader (Searge)",
    description: "",
    category: "Searge/_deprecated_/Files",
    output_node: false,
  },
  SeargeLoraLoader: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: ["LORA_NAME"],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP"],
    output_is_list: [false, false],
    output_name: ["MODEL", "CLIP"],
    name: "SeargeLoraLoader",
    display_name: "Lora Loader (Searge)",
    description: "",
    category: "Searge/_deprecated_/Files",
    output_node: false,
  },
  SeargeLatentMuxer3: {
    input: {
      required: {
        input0: ["LATENT"],
        input1: ["LATENT"],
        input2: ["LATENT"],
        input_selector: ["INT", { default: 0, min: 0, max: 2 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["output"],
    name: "SeargeLatentMuxer3",
    display_name: "3-Way Muxer for Latents",
    description: "",
    category: "Searge/_deprecated_/FlowControl",
    output_node: false,
  },
  SeargeConditioningMuxer2: {
    input: {
      required: {
        input0: ["CONDITIONING"],
        input1: ["CONDITIONING"],
        input_selector: ["INT", { default: 0, min: 0, max: 1 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["output"],
    name: "SeargeConditioningMuxer2",
    display_name: "2-Way Muxer for Conditioning",
    description: "",
    category: "Searge/_deprecated_/FlowControl",
    output_node: false,
  },
  SeargeConditioningMuxer5: {
    input: {
      required: {
        input0: ["CONDITIONING"],
        input1: ["CONDITIONING"],
        input2: ["CONDITIONING"],
        input3: ["CONDITIONING"],
        input4: ["CONDITIONING"],
        input_selector: ["INT", { default: 0, min: 0, max: 4 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["output"],
    name: "SeargeConditioningMuxer5",
    display_name: "5-Way Muxer for Conditioning",
    description: "",
    category: "Searge/_deprecated_/FlowControl",
    output_node: false,
  },
  SeargeParameterProcessor: {
    input: { required: { inputs: ["PARAMETER_INPUTS"] } },
    output: ["PARAMETERS"],
    output_is_list: [false],
    output_name: ["parameters"],
    name: "SeargeParameterProcessor",
    display_name: "Parameter Processor",
    description: "",
    category: "Searge/_deprecated_/UI",
    output_node: false,
  },
  SeargeStylePreprocessor: {
    input: {
      required: {
        inputs: ["PARAMETER_INPUTS"],
        active_style_name: ["STRING", { multiline: false, default: "" }],
        style_definitions: [
          "STRING",
          { multiline: true, default: "[unfinished work in progress]" },
        ],
      },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeStylePreprocessor",
    display_name: "Style Preprocessor (wip)",
    description: "",
    category: "Searge/_deprecated_/UI",
    output_node: false,
  },
  SeargeInput1: {
    input: {
      required: {
        main_prompt: ["STRING", { multiline: true, default: "" }],
        secondary_prompt: ["STRING", { multiline: true, default: "" }],
        style_prompt: ["STRING", { multiline: true, default: "" }],
        negative_prompt: ["STRING", { multiline: true, default: "" }],
        negative_style: ["STRING", { multiline: true, default: "" }],
      },
      optional: {
        inputs: ["PARAMETER_INPUTS"],
        image: ["IMAGE"],
        mask: ["MASK"],
      },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput1",
    display_name: "Prompts",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput2: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        image_width: ["INT", { default: 1024, min: 0, max: 8192, step: 8 }],
        image_height: ["INT", { default: 1024, min: 0, max: 8192, step: 8 }],
        steps: ["INT", { default: 20, min: 0, max: 200 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 30.0, step: 0.5 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
          { default: "ddim" },
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
          { default: "ddim_uniform" },
        ],
        save_image: [["disabled", "enabled"], { default: "enabled" }],
        save_directory: [
          ["output folder", "input folder"],
          { default: "output folder" },
        ],
      },
      optional: { inputs: ["PARAMETER_INPUTS"] },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput2",
    display_name: "Generation Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput3: {
    input: {
      required: {
        base_ratio: ["FLOAT", { default: 0.8, min: 0.0, max: 1.0, step: 0.01 }],
        refiner_strength: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 1.0, step: 0.05 },
        ],
        refiner_intensity: [["hard", "soft"], { default: "soft" }],
        precondition_steps: ["INT", { default: 0, min: 0, max: 10 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4 }],
        upscale_resolution_factor: [
          "FLOAT",
          { default: 2.0, min: 0.25, max: 4.0, step: 0.25 },
        ],
        save_upscaled_image: [["disabled", "enabled"], { default: "enabled" }],
      },
      optional: {
        inputs: ["PARAMETER_INPUTS"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput3",
    display_name: "Advanced Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput4: {
    input: {
      required: {
        base_model: [["__models__"]],
        refiner_model: [["__models__"]],
        vae_model: [["__models__"]],
        main_upscale_model: [["__models__"]],
        support_upscale_model: [["__models__"]],
        lora_model: [["__models__"]],
      },
      optional: { model_settings: ["MODEL_SETTINGS"] },
    },
    output: ["MODEL_NAMES"],
    output_is_list: [false],
    output_name: ["model_names"],
    name: "SeargeInput4",
    display_name: "Model Names",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput5: {
    input: {
      required: {
        base_conditioning_scale: [
          "FLOAT",
          { default: 2.0, min: 0.25, max: 4.0, step: 0.25 },
        ],
        refiner_conditioning_scale: [
          "FLOAT",
          { default: 2.0, min: 0.25, max: 4.0, step: 0.25 },
        ],
        style_prompt_power: [
          "FLOAT",
          { default: 0.33, min: 0.0, max: 1.0, step: 0.01 },
        ],
        negative_style_power: [
          "FLOAT",
          { default: 0.67, min: 0.0, max: 1.0, step: 0.01 },
        ],
        style_template: [
          ["none", "from preprocessor", "test"],
          { default: "none" },
        ],
      },
      optional: { inputs: ["PARAMETER_INPUTS"] },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput5",
    display_name: "Prompt Processing",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput6: {
    input: {
      required: {
        hires_fix: [["disabled", "enabled"], { default: "enabled" }],
        hrf_steps: ["INT", { default: 0, min: 0, max: 100 }],
        hrf_denoise: [
          "FLOAT",
          { default: 0.1, min: 0.0, max: 1.0, step: 0.01 },
        ],
        hrf_upscale_factor: [
          "FLOAT",
          { default: 1.5, min: 0.25, max: 4.0, step: 0.25 },
        ],
        hrf_intensity: [["hard", "soft"], { default: "soft" }],
        hrf_seed_offset: [["same", "distinct"], { default: "distinct" }],
        hrf_smoothness: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
      },
      optional: { inputs: ["PARAMETER_INPUTS"] },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput6",
    display_name: "HiResFix Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeInput7: {
    input: {
      required: {
        lora_strength: [
          "FLOAT",
          { default: 0.2, min: -10.0, max: 10.0, step: 0.05 },
        ],
        operation_mode: [
          ["text to image", "image to image", "inpainting"],
          { default: "text to image" },
        ],
        prompt_style: [
          [
            "simple",
            "3 prompts G+L-N",
            "subject focus",
            "style focus",
            "weighted",
            "overlay",
            "subject - style",
            "style - subject",
            "style only",
            "weighted - overlay",
            "overlay - weighted",
          ],
          { default: "simple" },
        ],
      },
      optional: { inputs: ["PARAMETER_INPUTS"] },
    },
    output: ["PARAMETER_INPUTS"],
    output_is_list: [false],
    output_name: ["inputs"],
    name: "SeargeInput7",
    display_name: "Misc Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Inputs",
    output_node: false,
  },
  SeargeOutput1: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: [
      "PARAMETERS",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "IMAGE",
      "MASK",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "parameters",
      "main_prompt",
      "secondary_prompt",
      "style_prompt",
      "negative_prompt",
      "negative_style",
      "image",
      "mask",
    ],
    name: "SeargeOutput1",
    display_name: "Prompts",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput2: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: [
      "PARAMETERS",
      "INT",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      "SAMPLER_NAME",
      "SCHEDULER_NAME",
      "ENABLE_STATE",
      "SAVE_FOLDER",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "parameters",
      "seed",
      "image_width",
      "image_height",
      "steps",
      "cfg",
      "sampler_name",
      "scheduler",
      "save_image",
      "save_directory",
    ],
    name: "SeargeOutput2",
    display_name: "Generation Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput3: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: [
      "PARAMETERS",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      "ENABLE_STATE",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "parameters",
      "denoise",
      "base_ratio",
      "refiner_strength",
      "noise_offset",
      "precondition_steps",
      "batch_size",
      "upscale_resolution_factor",
      "save_upscaled_image",
    ],
    name: "SeargeOutput3",
    display_name: "Advanced Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput4: {
    input: { required: { model_names: ["MODEL_NAMES"] } },
    output: [
      "MODEL_NAMES",
      "CHECKPOINT_NAME",
      "CHECKPOINT_NAME",
      "VAE_NAME",
      "UPSCALER_NAME",
      "UPSCALER_NAME",
      "LORA_NAME",
    ],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "model_names",
      "base_model",
      "refiner_model",
      "vae_model",
      "main_upscale_model",
      "support_upscale_model",
      "lora_model",
    ],
    name: "SeargeOutput4",
    display_name: "Model Names",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput5: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: ["PARAMETERS", "FLOAT", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "parameters",
      "base_conditioning_scale",
      "refiner_conditioning_scale",
      "style_prompt_power",
      "negative_style_power",
    ],
    name: "SeargeOutput5",
    display_name: "Prompt Processing",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput6: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: [
      "PARAMETERS",
      "INT",
      "FLOAT",
      "FLOAT",
      "INT",
      "INT",
      "ENABLE_STATE",
      "FLOAT",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "parameters",
      "hrf_steps",
      "hrf_denoise",
      "hrf_upscale_factor",
      "hrf_noise_offset",
      "hrf_seed",
      "hires_fix",
      "hrf_smoothness",
    ],
    name: "SeargeOutput6",
    display_name: "HiResFix Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeOutput7: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: ["PARAMETERS", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["parameters", "lora_strength"],
    name: "SeargeOutput7",
    display_name: "Misc Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Outputs",
    output_node: false,
  },
  SeargeGenerated1: {
    input: { required: { parameters: ["PARAMETERS"] } },
    output: ["PARAMETERS", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: [
      "parameters",
      "operation_selector",
      "prompt_style_selector",
      "prompt_style_group",
    ],
    name: "SeargeGenerated1",
    display_name: "Flow Control Parameters",
    description: "",
    category: "Searge/_deprecated_/UI/Generated",
    output_node: false,
  },
  "Context Big (rgthree)": {
    input: {
      required: {},
      optional: {
        base_ctx: ["RGTHREE_CONTEXT"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent: ["LATENT"],
        images: ["IMAGE"],
        seed: ["INT", { forceInput: true }],
        steps: ["INT", { forceInput: true }],
        step_refiner: ["INT", { forceInput: true }],
        cfg: ["FLOAT", { forceInput: true }],
        ckpt_name: [["__models__"], { forceInput: true }],
        sampler: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
          { forceInput: true },
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
          { forceInput: true },
        ],
        clip_width: ["INT", { forceInput: true }],
        clip_height: ["INT", { forceInput: true }],
        text_pos_g: ["STRING", { forceInput: true }],
        text_pos_l: ["STRING", { forceInput: true }],
        text_neg_g: ["STRING", { forceInput: true }],
        text_neg_l: ["STRING", { forceInput: true }],
        mask: ["MASK"],
        control_net: ["CONTROL_NET"],
      },
      hidden: {},
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      ["__models__"],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2",
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET",
    ],
    name: "Context Big (rgthree)",
    display_name: "Context Big (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Context (rgthree)": {
    input: {
      required: {},
      optional: {
        base_ctx: ["RGTHREE_CONTEXT"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent: ["LATENT"],
        images: ["IMAGE"],
        seed: ["INT", { forceInput: true }],
      },
      hidden: { version: "FLOAT" },
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
    ],
    name: "Context (rgthree)",
    display_name: "Context (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Context Switch (rgthree)": {
    input: {
      required: {},
      optional: {
        ctx_01: ["RGTHREE_CONTEXT"],
        ctx_02: ["RGTHREE_CONTEXT"],
        ctx_03: ["RGTHREE_CONTEXT"],
        ctx_04: ["RGTHREE_CONTEXT"],
        ctx_05: ["RGTHREE_CONTEXT"],
      },
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
    ],
    name: "Context Switch (rgthree)",
    display_name: "Context Switch (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Context Switch Big (rgthree)": {
    input: {
      required: {},
      optional: {
        ctx_01: ["RGTHREE_CONTEXT"],
        ctx_02: ["RGTHREE_CONTEXT"],
        ctx_03: ["RGTHREE_CONTEXT"],
        ctx_04: ["RGTHREE_CONTEXT"],
        ctx_05: ["RGTHREE_CONTEXT"],
      },
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      ["__models__"],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2",
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET",
    ],
    name: "Context Switch Big (rgthree)",
    display_name: "Context Switch Big (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Context Merge (rgthree)": {
    input: {
      required: {},
      optional: {
        ctx_01: ["RGTHREE_CONTEXT"],
        ctx_02: ["RGTHREE_CONTEXT"],
        ctx_03: ["RGTHREE_CONTEXT"],
        ctx_04: ["RGTHREE_CONTEXT"],
        ctx_05: ["RGTHREE_CONTEXT"],
      },
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
    ],
    name: "Context Merge (rgthree)",
    display_name: "Context Merge (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Context Merge Big (rgthree)": {
    input: {
      required: {},
      optional: {
        ctx_01: ["RGTHREE_CONTEXT"],
        ctx_02: ["RGTHREE_CONTEXT"],
        ctx_03: ["RGTHREE_CONTEXT"],
        ctx_04: ["RGTHREE_CONTEXT"],
        ctx_05: ["RGTHREE_CONTEXT"],
      },
    },
    output: [
      "RGTHREE_CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "IMAGE",
      "INT",
      "INT",
      "INT",
      "FLOAT",
      ["__models__"],
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2",
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
      ],
      "INT",
      "INT",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "MASK",
      "CONTROL_NET",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "CONTEXT",
      "MODEL",
      "CLIP",
      "VAE",
      "POSITIVE",
      "NEGATIVE",
      "LATENT",
      "IMAGE",
      "SEED",
      "STEPS",
      "STEP_REFINER",
      "CFG",
      "CKPT_NAME",
      "SAMPLER",
      "SCHEDULER",
      "CLIP_WIDTH",
      "CLIP_HEIGHT",
      "TEXT_POS_G",
      "TEXT_POS_L",
      "TEXT_NEG_G",
      "TEXT_NEG_L",
      "MASK",
      "CONTROL_NET",
    ],
    name: "Context Merge Big (rgthree)",
    display_name: "Context Merge Big (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Display Int (rgthree)": {
    input: { required: { input: ["INT", { forceInput: true }] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Display Int (rgthree)",
    display_name: "Display Int (rgthree)",
    description: "",
    category: "rgthree",
    output_node: true,
  },
  "Display Any (rgthree)": {
    input: { required: { source: ["*", {}] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Display Any (rgthree)",
    display_name: "Display Any (rgthree)",
    description: "",
    category: "rgthree",
    output_node: true,
  },
  "Lora Loader Stack (rgthree)": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_01: [["None", "__models__"]],
        strength_01: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_02: [["None", "__models__"]],
        strength_02: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_03: [["None", "__models__"]],
        strength_03: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_04: [["None", "__models__"]],
        strength_04: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP"],
    output_is_list: [false, false],
    output_name: ["MODEL", "CLIP"],
    name: "Lora Loader Stack (rgthree)",
    display_name: "Lora Loader Stack (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Seed (rgthree)": {
    input: {
      required: {
        seed: [
          "INT",
          { default: 0, min: -1125899906842624, max: 1125899906842624 },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["SEED"],
    name: "Seed (rgthree)",
    display_name: "Seed (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Image Inset Crop (rgthree)": {
    input: {
      required: {
        image: ["IMAGE"],
        measurement: [["Pixels", "Percentage"]],
        left: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        right: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        top: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
        bottom: ["INT", { default: 0, min: 0, max: 8192, step: 8 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Inset Crop (rgthree)",
    display_name: "Image Inset Crop (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Power Prompt (rgthree)": {
    input: {
      required: { prompt: ["STRING", { multiline: true }] },
      optional: {
        opt_model: ["MODEL"],
        opt_clip: ["CLIP"],
        insert_lora: [["CHOOSE", "DISABLE LORAS", "__models__"]],
        insert_embedding: [["CHOOSE", "__embeds__"]],
        insert_saved: [["CHOOSE"]],
      },
      hidden: { values_insert_saved: [["CHOOSE"]] },
    },
    output: ["CONDITIONING", "MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["CONDITIONING", "MODEL", "CLIP", "TEXT"],
    name: "Power Prompt (rgthree)",
    display_name: "Power Prompt (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Power Prompt - Simple (rgthree)": {
    input: {
      required: { prompt: ["STRING", { multiline: true }] },
      optional: {
        opt_clip: ["CLIP"],
        insert_embedding: [["CHOOSE", "__embeds__"]],
        insert_saved: [["CHOOSE"]],
      },
      hidden: { values_insert_saved: [["CHOOSE"]] },
    },
    output: ["CONDITIONING", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "TEXT"],
    name: "Power Prompt - Simple (rgthree)",
    display_name: "Power Prompt - Simple (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "KSampler Config (rgthree)": {
    input: {
      required: {
        steps_total: ["INT", { default: 30, min: 1, max: 8192, step: 1 }],
        refiner_step: ["INT", { default: 24, min: 1, max: 8192, step: 1 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0, step: 0.5 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
      },
    },
    output: [
      "INT",
      "INT",
      "FLOAT",
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2",
      ],
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
      ],
    ],
    output_is_list: [false, false, false, false, false],
    output_name: ["STEPS", "REFINER_STEP", "CFG", "SAMPLER", "SCHEDULER"],
    name: "KSampler Config (rgthree)",
    display_name: "KSampler Config (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "SDXL Empty Latent Image (rgthree)": {
    input: {
      required: {
        dimensions: [
          [
            "1536 x 640   (landscape)",
            "1344 x 768   (landscape)",
            "1216 x 832   (landscape)",
            "1152 x 896   (landscape)",
            "1024 x 1024  (square)",
            " 896 x 1152  (portrait)",
            " 832 x 1216  (portrait)",
            " 768 x 1344  (portrait)",
            " 640 x 1536  (portrait)",
          ],
          { default: "1024 x 1024  (square)" },
        ],
        clip_scale: ["FLOAT", { default: 2.0, min: 1.0, max: 10.0, step: 0.5 }],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["LATENT", "CLIP_WIDTH", "CLIP_HEIGHT"],
    name: "SDXL Empty Latent Image (rgthree)",
    display_name: "SDXL Empty Latent Image (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "SDXL Power Prompt - Positive (rgthree)": {
    input: {
      required: {
        prompt_g: ["STRING", { multiline: true }],
        prompt_l: ["STRING", { multiline: true }],
      },
      optional: {
        opt_model: ["MODEL"],
        opt_clip: ["CLIP"],
        opt_clip_width: [
          "INT",
          { forceInput: true, default: 1024.0, min: 0, max: 8192 },
        ],
        opt_clip_height: [
          "INT",
          { forceInput: true, default: 1024.0, min: 0, max: 8192 },
        ],
        insert_lora: [["CHOOSE", "DISABLE LORAS", "__models__"]],
        insert_embedding: [["CHOOSE", "__embeds__"]],
        insert_saved: [["CHOOSE"]],
        target_width: ["INT", { default: -1, min: -1, max: 8192 }],
        target_height: ["INT", { default: -1, min: -1, max: 8192 }],
        crop_width: ["INT", { default: -1, min: -1, max: 8192 }],
        crop_height: ["INT", { default: -1, min: -1, max: 8192 }],
      },
      hidden: { values_insert_saved: [["CHOOSE"]] },
    },
    output: ["CONDITIONING", "MODEL", "CLIP", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["CONDITIONING", "MODEL", "CLIP", "TEXT_G", "TEXT_L"],
    name: "SDXL Power Prompt - Positive (rgthree)",
    display_name: "SDXL Power Prompt - Positive (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "SDXL Power Prompt - Simple / Negative (rgthree)": {
    input: {
      required: {
        prompt_g: ["STRING", { multiline: true }],
        prompt_l: ["STRING", { multiline: true }],
      },
      optional: {
        opt_clip: ["CLIP"],
        opt_clip_width: [
          "INT",
          { forceInput: true, default: 1024.0, min: 0, max: 8192 },
        ],
        opt_clip_height: [
          "INT",
          { forceInput: true, default: 1024.0, min: 0, max: 8192 },
        ],
        insert_embedding: [["CHOOSE", "__embeds__"]],
        insert_saved: [["CHOOSE"]],
        target_width: ["INT", { default: -1, min: -1, max: 8192 }],
        target_height: ["INT", { default: -1, min: -1, max: 8192 }],
        crop_width: ["INT", { default: -1, min: -1, max: 8192 }],
        crop_height: ["INT", { default: -1, min: -1, max: 8192 }],
      },
      hidden: { values_insert_saved: [["CHOOSE"]] },
    },
    output: ["CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["CONDITIONING", "TEXT_G", "TEXT_L"],
    name: "SDXL Power Prompt - Simple / Negative (rgthree)",
    display_name: "SDXL Power Prompt - Simple / Negative (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Any Switch (rgthree)": {
    input: {
      required: {},
      optional: {
        any_01: ["*"],
        any_02: ["*"],
        any_03: ["*"],
        any_04: ["*"],
        any_05: ["*"],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "Any Switch (rgthree)",
    display_name: "Any Switch (rgthree)",
    description: "",
    category: "rgthree",
    output_node: false,
  },
  "Image Comparer (rgthree)": {
    input: {
      required: { image_a: ["IMAGE"] },
      optional: { image_b: ["IMAGE"] },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Comparer (rgthree)",
    display_name: "Image Comparer (rgthree)",
    description: "",
    category: "rgthree",
    output_node: true,
  },
  "comfy-qr-by-module-size": {
    input: {
      required: {
        protocol: [["Http", "Https", "None"], { default: "Https" }],
        text: ["STRING", { multiline: true }],
        module_size: ["INT", { default: 16, min: 1, max: 64, step: 1 }],
        max_image_size: ["INT", { default: 512, min: 64, max: 4096, step: 64 }],
        fill_hexcolor: ["STRING", { multiline: false, default: "#000000" }],
        back_hexcolor: ["STRING", { multiline: false, default: "#FFFFFF" }],
        error_correction: [
          ["Low", "Medium", "Quartile", "High"],
          { default: "High" },
        ],
        border: ["INT", { default: 1, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["QR_CODE", "QR_VERSION", "IMAGE_SIZE"],
    name: "comfy-qr-by-module-size",
    display_name: "QR Code",
    description: "",
    category: "ComfyQR",
    output_node: false,
  },
  "comfy-qr-by-image-size": {
    input: {
      required: {
        protocol: [["Http", "Https", "None"], { default: "Https" }],
        text: ["STRING", { multiline: true }],
        image_size: ["INT", { default: 512, min: 64, max: 4096, step: 64 }],
        fill_hexcolor: ["STRING", { multiline: false, default: "#000000" }],
        back_hexcolor: ["STRING", { multiline: false, default: "#FFFFFF" }],
        error_correction: [
          ["Low", "Medium", "Quartile", "High"],
          { default: "High" },
        ],
        border: ["INT", { default: 1, min: 0, max: 100, step: 1 }],
        resampling: [
          ["Bicubic", "Bilinear", "Box", "Hamming", "Lanczos", "Nearest"],
          { default: "Nearest" },
        ],
      },
    },
    output: ["IMAGE", "INT"],
    output_is_list: [false, false],
    output_name: ["QR_CODE", "QR_VERSION"],
    name: "comfy-qr-by-image-size",
    display_name: "QR Code (Conformed to Image Size)",
    description: "",
    category: "ComfyQR",
    output_node: false,
  },
  "comfy-qr-by-module-split": {
    input: {
      required: {
        protocol: [["Http", "Https", "None"], { default: "Https" }],
        text: ["STRING", { multiline: true }],
        module_size: ["INT", { default: 16, min: 1, max: 64, step: 1 }],
        max_image_size: ["INT", { default: 512, min: 64, max: 4096, step: 64 }],
        fill_hexcolor: ["STRING", { multiline: false, default: "#000000" }],
        back_hexcolor: ["STRING", { multiline: false, default: "#FFFFFF" }],
        error_correction: [
          ["Low", "Medium", "Quartile", "High"],
          { default: "High" },
        ],
        border: ["INT", { default: 1, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "MASK", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "QR_CODE",
      "MODULE_LAYER",
      "FINDER_LAYER",
      "FINDER_MASK",
      "QR_VERSION",
      "IMAGE_SIZE",
    ],
    name: "comfy-qr-by-module-split",
    display_name: "QR Code (Split)",
    description: "",
    category: "ComfyQR",
    output_node: false,
  },
  "comfy-qr-mask_errors": {
    input: {
      required: {
        source_qr: ["IMAGE"],
        modified_qr: ["IMAGE"],
        module_size: ["INT", { default: 16, min: 1, max: 64, step: 1 }],
        grayscale_method: [["mean", "luminance"], { default: "luminance" }],
        aggregate_method: [["mean"], { default: "mean" }],
        evaluate: [
          ["full_qr", "module_pattern", "finder_pattern"],
          { default: "module_pattern" },
        ],
        error_difficulty: ["FLOAT", { default: 0, min: 0, max: 1, step: 0.01 }],
        inverted_pattern: ["BOOLEAN", { default: false }],
        gamma: ["FLOAT", { default: 2.2, min: 0.1, max: 2.8, step: 0.1 }],
      },
    },
    output: ["MASK", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, true, true, true],
    output_name: ["QR_ERROR_MASK", "PERCENT_ERROR", "CORRELATION", "RMSE"],
    name: "comfy-qr-mask_errors",
    display_name: "Mask QR Errors",
    description: "",
    category: "ComfyQR",
    output_node: false,
  },
  SAMLoader: {
    input: {
      required: {
        model_name: [["__models__"]],
        device_mode: [["AUTO", "Prefer GPU", "CPU"]],
      },
    },
    output: ["SAM_MODEL"],
    output_is_list: [false],
    output_name: ["SAM_MODEL"],
    name: "SAMLoader",
    display_name: "SAMLoader (Impact)",
    description: "",
    category: "ImpactPack",
    output_node: false,
  },
  CLIPSegDetectorProvider: {
    input: {
      required: {
        text: ["STRING", { multiline: false }],
        blur: ["FLOAT", { min: 0, max: 15, step: 0.1, default: 7 }],
        threshold: ["FLOAT", { min: 0, max: 1, step: 0.05, default: 0.4 }],
        dilation_factor: ["INT", { min: 0, max: 10, step: 1, default: 4 }],
      },
    },
    output: ["BBOX_DETECTOR"],
    output_is_list: [false],
    output_name: ["BBOX_DETECTOR"],
    name: "CLIPSegDetectorProvider",
    display_name: "CLIPSegDetectorProvider",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ONNXDetectorProvider: {
    input: { required: { model_name: [["__models__"]] } },
    output: ["BBOX_DETECTOR"],
    output_is_list: [false],
    output_name: ["BBOX_DETECTOR"],
    name: "ONNXDetectorProvider",
    display_name: "ONNXDetectorProvider",
    description: "",
    category: "ImpactPack",
    output_node: false,
  },
  BitwiseAndMaskForEach: {
    input: { required: { base_segs: ["SEGS"], mask_segs: ["SEGS"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "BitwiseAndMaskForEach",
    display_name: "Bitwise(SEGS & SEGS)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  SubtractMaskForEach: {
    input: { required: { base_segs: ["SEGS"], mask_segs: ["SEGS"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "SubtractMaskForEach",
    display_name: "Bitwise(SEGS - SEGS)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  DetailerForEach: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        detailer_hook: ["DETAILER_HOOK"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "DetailerForEach",
    display_name: "Detailer (SEGS)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  DetailerForEachDebug: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        detailer_hook: ["DETAILER_HOOK"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [false, true, true, true, true],
    output_name: [
      "image",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images",
    ],
    name: "DetailerForEachDebug",
    display_name: "DetailerDebug (SEGS)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  DetailerForEachPipe: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        basic_pipe: ["BASIC_PIPE"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        detailer_hook: ["DETAILER_HOOK"],
        refiner_basic_pipe_opt: ["BASIC_PIPE"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"],
    output_is_list: [false, false, false, true],
    output_name: ["image", "segs", "basic_pipe", "cnet_images"],
    name: "DetailerForEachPipe",
    display_name: "Detailer (SEGS/pipe)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  DetailerForEachDebugPipe: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        basic_pipe: ["BASIC_PIPE"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        detailer_hook: ["DETAILER_HOOK"],
        refiner_basic_pipe_opt: ["BASIC_PIPE"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false, true, true, true, true],
    output_name: [
      "image",
      "segs",
      "basic_pipe",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images",
    ],
    name: "DetailerForEachDebugPipe",
    display_name: "DetailerDebug (SEGS/pipe)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  DetailerForEachPipeForAnimateDiff: {
    input: {
      required: {
        image_frames: ["IMAGE"],
        segs: ["SEGS"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        basic_pipe: ["BASIC_PIPE"],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
      },
      optional: {
        detailer_hook: ["DETAILER_HOOK"],
        refiner_basic_pipe_opt: ["BASIC_PIPE"],
      },
    },
    output: ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"],
    output_is_list: [false, false, false, true],
    output_name: ["image", "segs", "basic_pipe", "cnet_images"],
    name: "DetailerForEachPipeForAnimateDiff",
    display_name: "Detailer For AnimateDiff (SEGS/pipe)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  SAMDetectorCombined: {
    input: {
      required: {
        sam_model: ["SAM_MODEL"],
        segs: ["SEGS"],
        image: ["IMAGE"],
        detection_hint: [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none",
          ],
        ],
        dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        threshold: ["FLOAT", { default: 0.93, min: 0.0, max: 1.0, step: 0.01 }],
        bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
        mask_hint_use_negative: [["False", "Small", "Outter"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "SAMDetectorCombined",
    display_name: "SAMDetector (combined)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  SAMDetectorSegmented: {
    input: {
      required: {
        sam_model: ["SAM_MODEL"],
        segs: ["SEGS"],
        image: ["IMAGE"],
        detection_hint: [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none",
          ],
        ],
        dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        threshold: ["FLOAT", { default: 0.93, min: 0.0, max: 1.0, step: 0.01 }],
        bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
        mask_hint_use_negative: [["False", "Small", "Outter"]],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["combined_mask", "batch_masks"],
    name: "SAMDetectorSegmented",
    display_name: "SAMDetector (segmented)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  FaceDetailer: {
    input: {
      required: {
        image: ["IMAGE"],
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        bbox_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        bbox_dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
        bbox_crop_factor: [
          "FLOAT",
          { default: 3.0, min: 1.0, max: 10, step: 0.1 },
        ],
        sam_detection_hint: [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none",
          ],
        ],
        sam_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        sam_threshold: [
          "FLOAT",
          { default: 0.93, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sam_bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        sam_mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sam_mask_hint_use_negative: [["False", "Small", "Outter"]],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"],
    output_is_list: [false, true, true, false, false, true],
    output_name: [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images",
    ],
    name: "FaceDetailer",
    display_name: "FaceDetailer",
    description: "",
    category: "ImpactPack/Simple",
    output_node: false,
  },
  FaceDetailerPipe: {
    input: {
      required: {
        image: ["IMAGE"],
        detailer_pipe: ["DETAILER_PIPE"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        bbox_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        bbox_dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
        bbox_crop_factor: [
          "FLOAT",
          { default: 3.0, min: 1.0, max: 10, step: 0.1 },
        ],
        sam_detection_hint: [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none",
          ],
        ],
        sam_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        sam_threshold: [
          "FLOAT",
          { default: 0.93, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sam_bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        sam_mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sam_mask_hint_use_negative: [["False", "Small", "Outter"]],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"],
    output_is_list: [false, true, true, false, false, true],
    output_name: [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images",
    ],
    name: "FaceDetailerPipe",
    display_name: "FaceDetailer (pipe)",
    description: "",
    category: "ImpactPack/Simple",
    output_node: false,
  },
  MaskDetailerPipe: {
    input: {
      required: {
        image: ["IMAGE"],
        mask: ["MASK"],
        basic_pipe: ["BASIC_PIPE"],
        guide_size: ["FLOAT", { default: 384, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "mask bbox", label_off: "crop region" },
        ],
        max_size: ["FLOAT", { default: 1024, min: 64, max: 8192, step: 8 }],
        mask_mode: [
          "BOOLEAN",
          { default: true, label_on: "masked only", label_off: "whole" },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 10, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
        batch_size: ["INT", { default: 1, min: 1, max: 100 }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        refiner_basic_pipe_opt: ["BASIC_PIPE"],
        detailer_hook: ["DETAILER_HOOK"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE", "IMAGE", "IMAGE", "BASIC_PIPE", "BASIC_PIPE"],
    output_is_list: [false, true, true, false, false],
    output_name: [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "basic_pipe",
      "refiner_basic_pipe_opt",
    ],
    name: "MaskDetailerPipe",
    display_name: "MaskDetailer (pipe)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  ToDetailerPipe: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "ToDetailerPipe",
    display_name: "ToDetailerPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  ToDetailerPipeSDXL: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_clip: ["CLIP"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "ToDetailerPipeSDXL",
    display_name: "ToDetailerPipeSDXL",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  FromDetailerPipe: {
    input: { required: { detailer_pipe: ["DETAILER_PIPE"] } },
    output: [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
    ],
    name: "FromDetailerPipe",
    display_name: "FromDetailerPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  FromDetailerPipe_v2: {
    input: { required: { detailer_pipe: ["DETAILER_PIPE"] } },
    output: [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
    ],
    name: "FromDetailerPipe_v2",
    display_name: "FromDetailerPipe_v2",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  FromDetailerPipeSDXL: {
    input: { required: { detailer_pipe: ["DETAILER_PIPE"] } },
    output: [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
      "refiner_model",
      "refiner_clip",
      "refiner_positive",
      "refiner_negative",
    ],
    name: "FromDetailerPipeSDXL",
    display_name: "FromDetailer (SDXL/pipe)",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  ToBasicPipe: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
      },
    },
    output: ["BASIC_PIPE"],
    output_is_list: [false],
    output_name: ["basic_pipe"],
    name: "ToBasicPipe",
    display_name: "ToBasicPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  FromBasicPipe: {
    input: { required: { basic_pipe: ["BASIC_PIPE"] } },
    output: ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["model", "clip", "vae", "positive", "negative"],
    name: "FromBasicPipe",
    display_name: "FromBasicPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  FromBasicPipe_v2: {
    input: { required: { basic_pipe: ["BASIC_PIPE"] } },
    output: [
      "BASIC_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
    ],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["basic_pipe", "model", "clip", "vae", "positive", "negative"],
    name: "FromBasicPipe_v2",
    display_name: "FromBasicPipe_v2",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  BasicPipeToDetailerPipe: {
    input: {
      required: {
        basic_pipe: ["BASIC_PIPE"],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "BasicPipeToDetailerPipe",
    display_name: "BasicPipe -> DetailerPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  BasicPipeToDetailerPipeSDXL: {
    input: {
      required: {
        base_basic_pipe: ["BASIC_PIPE"],
        refiner_basic_pipe: ["BASIC_PIPE"],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "BasicPipeToDetailerPipeSDXL",
    display_name: "BasicPipe -> DetailerPipe (SDXL)",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  DetailerPipeToBasicPipe: {
    input: { required: { detailer_pipe: ["DETAILER_PIPE"] } },
    output: ["BASIC_PIPE", "BASIC_PIPE"],
    output_is_list: [false, false],
    output_name: ["base_basic_pipe", "refiner_basic_pipe"],
    name: "DetailerPipeToBasicPipe",
    display_name: "DetailerPipe -> BasicPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  EditBasicPipe: {
    input: {
      required: { basic_pipe: ["BASIC_PIPE"] },
      optional: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
      },
    },
    output: ["BASIC_PIPE"],
    output_is_list: [false],
    output_name: ["basic_pipe"],
    name: "EditBasicPipe",
    display_name: "Edit BasicPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  EditDetailerPipe: {
    input: {
      required: {
        detailer_pipe: ["DETAILER_PIPE"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        bbox_detector: ["BBOX_DETECTOR"],
        sam_model: ["SAM_MODEL"],
        segm_detector: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "EditDetailerPipe",
    display_name: "Edit DetailerPipe",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  EditDetailerPipeSDXL: {
    input: {
      required: {
        detailer_pipe: ["DETAILER_PIPE"],
        wildcard: ["STRING", { multiline: true, dynamicPrompts: false }],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
      optional: {
        model: ["MODEL"],
        clip: ["CLIP"],
        vae: ["VAE"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_clip: ["CLIP"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
        bbox_detector: ["BBOX_DETECTOR"],
        sam_model: ["SAM_MODEL"],
        segm_detector: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
    },
    output: ["DETAILER_PIPE"],
    output_is_list: [false],
    output_name: ["detailer_pipe"],
    name: "EditDetailerPipeSDXL",
    display_name: "Edit DetailerPipe (SDXL)",
    description: "",
    category: "ImpactPack/Pipe",
    output_node: false,
  },
  LatentPixelScale: {
    input: {
      required: {
        samples: ["LATENT"],
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        scale_factor: [
          "FLOAT",
          { default: 1.5, min: 0.1, max: 10000, step: 0.1 },
        ],
        vae: ["VAE"],
        use_tiled_vae: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
      },
      optional: { upscale_model_opt: ["UPSCALE_MODEL"] },
    },
    output: ["LATENT", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["LATENT", "IMAGE"],
    name: "LatentPixelScale",
    display_name: "Latent Scale (on Pixel Space)",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  PixelKSampleUpscalerProvider: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        model: ["MODEL"],
        vae: ["VAE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        use_tiled_vae: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
      optional: {
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "PixelKSampleUpscalerProvider",
    display_name: "PixelKSampleUpscalerProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  PixelKSampleUpscalerProviderPipe: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        use_tiled_vae: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        basic_pipe: ["BASIC_PIPE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
      optional: {
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "PixelKSampleUpscalerProviderPipe",
    display_name: "PixelKSampleUpscalerProviderPipe",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  IterativeLatentUpscale: {
    input: {
      required: {
        samples: ["LATENT"],
        upscale_factor: [
          "FLOAT",
          { default: 1.5, min: 1, max: 10000, step: 0.1 },
        ],
        steps: ["INT", { default: 3, min: 1, max: 10000, step: 1 }],
        temp_prefix: ["STRING", { default: "" }],
        upscaler: ["UPSCALER"],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["LATENT", "VAE"],
    output_is_list: [false, false],
    output_name: ["latent", "vae"],
    name: "IterativeLatentUpscale",
    display_name: "Iterative Upscale (Latent/on Pixel Space)",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  IterativeImageUpscale: {
    input: {
      required: {
        pixels: ["IMAGE"],
        upscale_factor: [
          "FLOAT",
          { default: 1.5, min: 1, max: 10000, step: 0.1 },
        ],
        steps: ["INT", { default: 3, min: 1, max: 10000, step: 1 }],
        temp_prefix: ["STRING", { default: "" }],
        upscaler: ["UPSCALER"],
        vae: ["VAE"],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "IterativeImageUpscale",
    display_name: "Iterative Upscale (Image)",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  PixelTiledKSampleUpscalerProvider: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        model: ["MODEL"],
        vae: ["VAE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        tile_width: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tile_height: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tiling_strategy: [["random", "padded", "simple"]],
      },
      optional: {
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "PixelTiledKSampleUpscalerProvider",
    display_name: "PixelTiledKSampleUpscalerProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  PixelTiledKSampleUpscalerProviderPipe: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        tile_width: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tile_height: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tiling_strategy: [["random", "padded", "simple"]],
        basic_pipe: ["BASIC_PIPE"],
      },
      optional: {
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "PixelTiledKSampleUpscalerProviderPipe",
    display_name: "PixelTiledKSampleUpscalerProviderPipe",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  TwoSamplersForMaskUpscalerProvider: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        full_sample_schedule: [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1",
          ],
        ],
        use_tiled_vae: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        base_sampler: ["KSAMPLER"],
        mask_sampler: ["KSAMPLER"],
        mask: ["MASK"],
        vae: ["VAE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
      optional: {
        full_sampler_opt: ["KSAMPLER"],
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_base_opt: ["PK_HOOK"],
        pk_hook_mask_opt: ["PK_HOOK"],
        pk_hook_full_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "TwoSamplersForMaskUpscalerProvider",
    display_name: "TwoSamplersForMask Upscaler Provider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  TwoSamplersForMaskUpscalerProviderPipe: {
    input: {
      required: {
        scale_method: [["nearest-exact", "bilinear", "lanczos", "area"]],
        full_sample_schedule: [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1",
          ],
        ],
        use_tiled_vae: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        base_sampler: ["KSAMPLER"],
        mask_sampler: ["KSAMPLER"],
        mask: ["MASK"],
        basic_pipe: ["BASIC_PIPE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
      optional: {
        full_sampler_opt: ["KSAMPLER"],
        upscale_model_opt: ["UPSCALE_MODEL"],
        pk_hook_base_opt: ["PK_HOOK"],
        pk_hook_mask_opt: ["PK_HOOK"],
        pk_hook_full_opt: ["PK_HOOK"],
      },
    },
    output: ["UPSCALER"],
    output_is_list: [false],
    output_name: ["UPSCALER"],
    name: "TwoSamplersForMaskUpscalerProviderPipe",
    display_name: "TwoSamplersForMask Upscaler Provider (pipe)",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  PixelKSampleHookCombine: {
    input: { required: { hook1: ["PK_HOOK"], hook2: ["PK_HOOK"] } },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "PixelKSampleHookCombine",
    display_name: "PixelKSampleHookCombine",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  DenoiseScheduleHookProvider: {
    input: {
      required: {
        schedule_for_iteration: [["simple"]],
        target_denoise: [
          "FLOAT",
          { default: 0.2, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "DenoiseScheduleHookProvider",
    display_name: "DenoiseScheduleHookProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  StepsScheduleHookProvider: {
    input: {
      required: {
        schedule_for_iteration: [["simple"]],
        target_steps: ["INT", { default: 20, min: 1, max: 10000 }],
      },
    },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "StepsScheduleHookProvider",
    display_name: "StepsScheduleHookProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  CfgScheduleHookProvider: {
    input: {
      required: {
        schedule_for_iteration: [["simple"]],
        target_cfg: ["FLOAT", { default: 3.0, min: 0.0, max: 100.0 }],
      },
    },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "CfgScheduleHookProvider",
    display_name: "CfgScheduleHookProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  NoiseInjectionHookProvider: {
    input: {
      required: {
        schedule_for_iteration: [["simple"]],
        source: [["CPU", "GPU"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        start_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 200.0, step: 0.01 },
        ],
        end_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 200.0, step: 0.01 },
        ],
      },
    },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "NoiseInjectionHookProvider",
    display_name: "NoiseInjectionHookProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  UnsamplerHookProvider: {
    input: {
      required: {
        model: ["MODEL"],
        steps: ["INT", { default: 25, min: 1, max: 10000 }],
        start_end_at_step: ["INT", { default: 21, min: 0, max: 10000 }],
        end_end_at_step: ["INT", { default: 24, min: 0, max: 10000 }],
        cfg: ["FLOAT", { default: 1.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        normalize: [["disable", "enable"]],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        schedule_for_iteration: [["simple"]],
      },
    },
    output: ["PK_HOOK"],
    output_is_list: [false],
    output_name: ["PK_HOOK"],
    name: "UnsamplerHookProvider",
    display_name: "UnsamplerHookProvider",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  CoreMLDetailerHookProvider: {
    input: {
      required: { mode: [["512x512", "768x768", "512x768", "768x512"]] },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "CoreMLDetailerHookProvider",
    display_name: "CoreMLDetailerHookProvider",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  PreviewDetailerHookProvider: {
    input: {
      required: { quality: ["INT", { default: 95, min: 20, max: 100 }] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "PreviewDetailerHookProvider",
    display_name: "PreviewDetailerHookProvider",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  DetailerHookCombine: {
    input: { required: { hook1: ["DETAILER_HOOK"], hook2: ["DETAILER_HOOK"] } },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "DetailerHookCombine",
    display_name: "DetailerHookCombine",
    description: "",
    category: "ImpactPack/Upscale",
    output_node: false,
  },
  NoiseInjectionDetailerHookProvider: {
    input: {
      required: {
        schedule_for_cycle: [["skip_start", "from_start"]],
        source: [["CPU", "GPU"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        start_strength: [
          "FLOAT",
          { default: 2.0, min: 0.0, max: 200.0, step: 0.01 },
        ],
        end_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 200.0, step: 0.01 },
        ],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "NoiseInjectionDetailerHookProvider",
    display_name: "NoiseInjectionDetailerHookProvider",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  UnsamplerDetailerHookProvider: {
    input: {
      required: {
        model: ["MODEL"],
        steps: ["INT", { default: 25, min: 1, max: 10000 }],
        start_end_at_step: ["INT", { default: 21, min: 0, max: 10000 }],
        end_end_at_step: ["INT", { default: 24, min: 0, max: 10000 }],
        cfg: ["FLOAT", { default: 1.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        normalize: [["disable", "enable"]],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        schedule_for_cycle: [["skip_start", "from_start"]],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "UnsamplerDetailerHookProvider",
    display_name: "UnsamplerDetailerHookProvider",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  DenoiseSchedulerDetailerHookProvider: {
    input: {
      required: {
        schedule_for_cycle: [["simple"]],
        target_denoise: [
          "FLOAT",
          { default: 0.3, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "DenoiseSchedulerDetailerHookProvider",
    display_name: "DenoiseSchedulerDetailerHookProvider",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  SEGSOrderedFilterDetailerHookProvider: {
    input: {
      required: {
        target: [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]],
        order: [
          "BOOLEAN",
          { default: true, label_on: "descending", label_off: "ascending" },
        ],
        take_start: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        take_count: [
          "INT",
          { default: 1, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "SEGSOrderedFilterDetailerHookProvider",
    display_name: "SEGSOrderedFilterDetailerHookProvider",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  SEGSRangeFilterDetailerHookProvider: {
    input: {
      required: {
        target: [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent",
          ],
        ],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "inside", label_off: "outside" },
        ],
        min_value: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        max_value: [
          "INT",
          { default: 67108864, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "SEGSRangeFilterDetailerHookProvider",
    display_name: "SEGSRangeFilterDetailerHookProvider",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  SEGSLabelFilterDetailerHookProvider: {
    input: {
      required: {
        segs: ["SEGS"],
        preset: [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush",
          ],
        ],
        labels: [
          "STRING",
          {
            multiline: true,
            placeholder:
              "List the types of segments to be allowed, separated by commas",
          },
        ],
      },
    },
    output: ["DETAILER_HOOK"],
    output_is_list: [false],
    output_name: ["DETAILER_HOOK"],
    name: "SEGSLabelFilterDetailerHookProvider",
    display_name: "SEGSLabelFilterDetailerHookProvider",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  BitwiseAndMask: {
    input: { required: { mask1: ["MASK"], mask2: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "BitwiseAndMask",
    display_name: "Bitwise(MASK & MASK)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  SubtractMask: {
    input: { required: { mask1: ["MASK"], mask2: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "SubtractMask",
    display_name: "Bitwise(MASK - MASK)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  AddMask: {
    input: { required: { mask1: ["MASK"], mask2: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "AddMask",
    display_name: "Bitwise(MASK + MASK)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  ImpactSegsAndMask: {
    input: { required: { segs: ["SEGS"], mask: ["MASK"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSegsAndMask",
    display_name: "Bitwise(SEGS & MASK)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  ImpactSegsAndMaskForEach: {
    input: { required: { segs: ["SEGS"], masks: ["MASK"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSegsAndMaskForEach",
    display_name: "Bitwise(SEGS & MASKS ForEach)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  EmptySegs: {
    input: { required: {} },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "EmptySegs",
    display_name: "EmptySegs",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  MediaPipeFaceMeshToSEGS: {
    input: {
      required: {
        image: ["IMAGE"],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        bbox_fill: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        crop_min_size: ["INT", { min: 10, max: 8192, step: 1, default: 50 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 1 }],
        dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        face: [
          "BOOLEAN",
          { default: true, label_on: "Enabled", label_off: "Disabled" },
        ],
        mouth: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        left_eyebrow: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        left_eye: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        left_pupil: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        right_eyebrow: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        right_eye: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
        right_pupil: [
          "BOOLEAN",
          { default: false, label_on: "Enabled", label_off: "Disabled" },
        ],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "MediaPipeFaceMeshToSEGS",
    display_name: "MediaPipe FaceMesh to SEGS",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  MaskToSEGS: {
    input: {
      required: {
        mask: ["MASK"],
        combined: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        bbox_fill: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        contour_fill: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "MaskToSEGS",
    display_name: "MASK to SEGS",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  MaskToSEGS_for_AnimateDiff: {
    input: {
      required: {
        mask: ["MASK"],
        combined: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        bbox_fill: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        contour_fill: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "MaskToSEGS_for_AnimateDiff",
    display_name: "MASK to SEGS for AnimateDiff",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  ToBinaryMask: {
    input: {
      required: {
        mask: ["MASK"],
        threshold: ["INT", { default: 20, min: 1, max: 255 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ToBinaryMask",
    display_name: "ToBinaryMask",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  MasksToMaskList: {
    input: { required: { masks: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [true],
    output_name: ["MASK"],
    name: "MasksToMaskList",
    display_name: "Masks to Mask List",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  MaskListToMaskBatch: {
    input: { required: { mask: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskListToMaskBatch",
    display_name: "Mask List to Masks",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  ImageListToImageBatch: {
    input: { required: { images: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageListToImageBatch",
    display_name: "Image List to Image Batch",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  SetDefaultImageForSEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        image: ["IMAGE"],
        override: ["BOOLEAN", { default: true }],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "SetDefaultImageForSEGS",
    display_name: "Set Default Image for SEGS",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  RemoveImageFromSEGS: {
    input: { required: { segs: ["SEGS"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "RemoveImageFromSEGS",
    display_name: "Remove Image from SEGS",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  BboxDetectorSEGS: {
    input: {
      required: {
        bbox_detector: ["BBOX_DETECTOR"],
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        labels: [
          "STRING",
          {
            multiline: true,
            default: "all",
            placeholder:
              "List the types of segments to be allowed, separated by commas",
          },
        ],
      },
      optional: { detailer_hook: ["DETAILER_HOOK"] },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "BboxDetectorSEGS",
    display_name: "BBOX Detector (SEGS)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  SegmDetectorSEGS: {
    input: {
      required: {
        segm_detector: ["SEGM_DETECTOR"],
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        labels: [
          "STRING",
          {
            multiline: true,
            default: "all",
            placeholder:
              "List the types of segments to be allowed, separated by commas",
          },
        ],
      },
      optional: { detailer_hook: ["DETAILER_HOOK"] },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "SegmDetectorSEGS",
    display_name: "SEGM Detector (SEGS)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  ONNXDetectorSEGS: {
    input: {
      required: {
        bbox_detector: ["BBOX_DETECTOR"],
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        labels: [
          "STRING",
          {
            multiline: true,
            default: "all",
            placeholder:
              "List the types of segments to be allowed, separated by commas",
          },
        ],
      },
      optional: { detailer_hook: ["DETAILER_HOOK"] },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ONNXDetectorSEGS",
    display_name: "ONNX Detector (SEGS/legacy) - use BBOXDetector",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  ImpactSimpleDetectorSEGS_for_AD: {
    input: {
      required: {
        bbox_detector: ["BBOX_DETECTOR"],
        image_frames: ["IMAGE"],
        bbox_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        bbox_dilation: ["INT", { default: 0, min: -255, max: 255, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        sub_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sub_dilation: ["INT", { default: 0, min: -255, max: 255, step: 1 }],
        sub_bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        sam_mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      optional: {
        masking_mode: [
          ["Pivot SEGS", "Combine neighboring frames", "Don't combine"],
        ],
        segs_pivot: [["Combined mask", "1st frame mask"]],
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSimpleDetectorSEGS_for_AD",
    display_name: "Simple Detector for AnimateDiff (SEGS)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  ImpactSimpleDetectorSEGS: {
    input: {
      required: {
        bbox_detector: ["BBOX_DETECTOR"],
        image: ["IMAGE"],
        bbox_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        bbox_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        sub_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sub_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        sub_bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        sam_mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      optional: {
        post_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSimpleDetectorSEGS",
    display_name: "Simple Detector (SEGS)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  ImpactSimpleDetectorSEGSPipe: {
    input: {
      required: {
        detailer_pipe: ["DETAILER_PIPE"],
        image: ["IMAGE"],
        bbox_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        bbox_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 100, step: 0.1 }],
        drop_size: ["INT", { min: 1, max: 8192, step: 1, default: 10 }],
        sub_threshold: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        sub_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        sub_bbox_expansion: ["INT", { default: 0, min: 0, max: 1000, step: 1 }],
        sam_mask_hint_threshold: [
          "FLOAT",
          { default: 0.7, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      optional: {
        post_dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSimpleDetectorSEGSPipe",
    display_name: "Simple Detector (SEGS/pipe)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  ImpactControlNetApplySEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        control_net: ["CONTROL_NET"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
      optional: {
        segs_preprocessor: ["SEGS_PREPROCESSOR"],
        control_image: ["IMAGE"],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactControlNetApplySEGS",
    display_name: "ControlNetApply (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactControlNetApplyAdvancedSEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        control_net: ["CONTROL_NET"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: {
        segs_preprocessor: ["SEGS_PREPROCESSOR"],
        control_image: ["IMAGE"],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactControlNetApplyAdvancedSEGS",
    display_name: "ControlNetApplyAdvanced (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactControlNetClearSEGS: {
    input: { required: { segs: ["SEGS"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactControlNetClearSEGS",
    display_name: "ImpactControlNetClearSEGS",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactIPAdapterApplySEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        ipadapter_pipe: ["IPADAPTER_PIPE"],
        weight: ["FLOAT", { default: 0.7, min: -1, max: 3, step: 0.05 }],
        noise: ["FLOAT", { default: 0.4, min: 0.0, max: 1.0, step: 0.01 }],
        weight_type: [
          ["original", "linear", "channel penalty"],
          { default: "channel penalty" },
        ],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 0.9, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
        faceid_v2: ["BOOLEAN", { default: false }],
        weight_v2: ["FLOAT", { default: 1.0, min: -1, max: 3, step: 0.05 }],
        context_crop_factor: [
          "FLOAT",
          { default: 1.2, min: 1.0, max: 100, step: 0.1 },
        ],
        reference_image: ["IMAGE"],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactIPAdapterApplySEGS",
    display_name: "IPAdapterApply (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactDecomposeSEGS: {
    input: { required: { segs: ["SEGS"] } },
    output: ["SEGS_HEADER", "SEG_ELT"],
    output_is_list: [false, true],
    output_name: ["SEGS_HEADER", "SEG_ELT"],
    name: "ImpactDecomposeSEGS",
    display_name: "Decompose (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactAssembleSEGS: {
    input: { required: { seg_header: ["SEGS_HEADER"], seg_elt: ["SEG_ELT"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactAssembleSEGS",
    display_name: "Assemble (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactFrom_SEG_ELT: {
    input: { required: { seg_elt: ["SEG_ELT"] } },
    output: [
      "SEG_ELT",
      "IMAGE",
      "MASK",
      "SEG_ELT_crop_region",
      "SEG_ELT_bbox",
      "SEG_ELT_control_net_wrapper",
      "FLOAT",
      "STRING",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "seg_elt",
      "cropped_image",
      "cropped_mask",
      "crop_region",
      "bbox",
      "control_net_wrapper",
      "confidence",
      "label",
    ],
    name: "ImpactFrom_SEG_ELT",
    display_name: "From SEG_ELT",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactEdit_SEG_ELT: {
    input: {
      required: { seg_elt: ["SEG_ELT"] },
      optional: {
        cropped_image_opt: ["IMAGE"],
        cropped_mask_opt: ["MASK"],
        crop_region_opt: ["SEG_ELT_crop_region"],
        bbox_opt: ["SEG_ELT_bbox"],
        control_net_wrapper_opt: ["SEG_ELT_control_net_wrapper"],
        confidence_opt: [
          "FLOAT",
          { min: 0, max: 1.0, step: 0.1, forceInput: true },
        ],
        label_opt: ["STRING", { multiline: false, forceInput: true }],
      },
    },
    output: ["SEG_ELT"],
    output_is_list: [false],
    output_name: ["SEG_ELT"],
    name: "ImpactEdit_SEG_ELT",
    display_name: "Edit SEG_ELT",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactDilate_Mask_SEG_ELT: {
    input: {
      required: {
        seg_elt: ["SEG_ELT"],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["SEG_ELT"],
    output_is_list: [false],
    output_name: ["SEG_ELT"],
    name: "ImpactDilate_Mask_SEG_ELT",
    display_name: "Dilate Mask (SEG_ELT)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactDilateMask: {
    input: {
      required: {
        mask: ["MASK"],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ImpactDilateMask",
    display_name: "Dilate Mask",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactGaussianBlurMask: {
    input: {
      required: {
        mask: ["MASK"],
        kernel_size: ["INT", { default: 10, min: 0, max: 100, step: 1 }],
        sigma: ["FLOAT", { default: 10.0, min: 0.1, max: 100.0, step: 0.1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ImpactGaussianBlurMask",
    display_name: "Gaussian Blur Mask",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactDilateMaskInSEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        dilation: ["INT", { default: 10, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactDilateMaskInSEGS",
    display_name: "Dilate Mask (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactGaussianBlurMaskInSEGS: {
    input: {
      required: {
        segs: ["SEGS"],
        kernel_size: ["INT", { default: 10, min: 0, max: 100, step: 1 }],
        sigma: ["FLOAT", { default: 10.0, min: 0.1, max: 100.0, step: 0.1 }],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactGaussianBlurMaskInSEGS",
    display_name: "Gaussian Blur Mask (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactScaleBy_BBOX_SEG_ELT: {
    input: {
      required: {
        seg: ["SEG_ELT"],
        scale_by: ["FLOAT", { default: 1.0, min: 0.01, max: 8.0, step: 0.01 }],
      },
    },
    output: ["SEG_ELT"],
    output_is_list: [false],
    output_name: ["SEG_ELT"],
    name: "ImpactScaleBy_BBOX_SEG_ELT",
    display_name: "ScaleBy BBOX (SEG_ELT)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  BboxDetectorCombined_v2: {
    input: {
      required: {
        bbox_detector: ["BBOX_DETECTOR"],
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        dilation: ["INT", { default: 4, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "BboxDetectorCombined_v2",
    display_name: "BBOX Detector (combined)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  SegmDetectorCombined_v2: {
    input: {
      required: {
        segm_detector: ["SEGM_DETECTOR"],
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        dilation: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "SegmDetectorCombined_v2",
    display_name: "SEGM Detector (combined)",
    description: "",
    category: "ImpactPack/Detector",
    output_node: false,
  },
  SegsToCombinedMask: {
    input: { required: { segs: ["SEGS"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "SegsToCombinedMask",
    display_name: "SEGS to MASK (combined)",
    description: "",
    category: "ImpactPack/Operation",
    output_node: false,
  },
  KSamplerProvider: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        basic_pipe: ["BASIC_PIPE"],
      },
    },
    output: ["KSAMPLER"],
    output_is_list: [false],
    output_name: ["KSAMPLER"],
    name: "KSamplerProvider",
    display_name: "KSamplerProvider",
    description: "",
    category: "ImpactPack/Sampler",
    output_node: false,
  },
  TwoSamplersForMask: {
    input: {
      required: {
        latent_image: ["LATENT"],
        base_sampler: ["KSAMPLER"],
        mask_sampler: ["KSAMPLER"],
        mask: ["MASK"],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "TwoSamplersForMask",
    display_name: "TwoSamplersForMask",
    description: "",
    category: "ImpactPack/Sampler",
    output_node: false,
  },
  TiledKSamplerProvider: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        tile_width: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tile_height: ["INT", { default: 512, min: 320, max: 8192, step: 64 }],
        tiling_strategy: [["random", "padded", "simple"]],
        basic_pipe: ["BASIC_PIPE"],
      },
    },
    output: ["KSAMPLER"],
    output_is_list: [false],
    output_name: ["KSAMPLER"],
    name: "TiledKSamplerProvider",
    display_name: "TiledKSamplerProvider",
    description: "",
    category: "ImpactPack/Sampler",
    output_node: false,
  },
  KSamplerAdvancedProvider: {
    input: {
      required: {
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sigma_factor: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        basic_pipe: ["BASIC_PIPE"],
      },
      optional: { sampler_opt: ["SAMPLER"] },
    },
    output: ["KSAMPLER_ADVANCED"],
    output_is_list: [false],
    output_name: ["KSAMPLER_ADVANCED"],
    name: "KSamplerAdvancedProvider",
    display_name: "KSamplerAdvancedProvider",
    description: "",
    category: "ImpactPack/Sampler",
    output_node: false,
  },
  TwoAdvancedSamplersForMask: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        samples: ["LATENT"],
        base_sampler: ["KSAMPLER_ADVANCED"],
        mask_sampler: ["KSAMPLER_ADVANCED"],
        mask: ["MASK"],
        overlap_factor: ["INT", { default: 10, min: 0, max: 10000 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "TwoAdvancedSamplersForMask",
    display_name: "TwoAdvancedSamplersForMask",
    description: "",
    category: "ImpactPack/Sampler",
    output_node: false,
  },
  PreviewBridge: {
    input: {
      required: { images: ["IMAGE"], image: ["STRING", { default: "" }] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "PreviewBridge",
    display_name: "Preview Bridge (Image)",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  PreviewBridgeLatent: {
    input: {
      required: {
        latent: ["LATENT"],
        image: ["STRING", { default: "" }],
        preview_method: [
          ["Latent2RGB-SDXL", "Latent2RGB-SD15", "TAESDXL", "TAESD15"],
        ],
      },
      optional: { vae_opt: ["VAE"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["LATENT", "MASK"],
    output_is_list: [false, false],
    output_name: ["LATENT", "MASK"],
    name: "PreviewBridgeLatent",
    display_name: "Preview Bridge (Latent)",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  ImageSender: {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ImgSender" }],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImageSender",
    display_name: "Image Sender",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  ImageReceiver: {
    input: {
      required: {
        image: [["__inputs__"]],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        save_to_workflow: ["BOOLEAN", { default: false }],
        image_data: ["STRING", { multiline: false }],
        trigger_always: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "ImageReceiver",
    display_name: "Image Receiver",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  LatentSender: {
    input: {
      required: {
        samples: ["LATENT"],
        filename_prefix: ["STRING", { default: "latents/LatentSender" }],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        preview_method: [
          ["Latent2RGB-SDXL", "Latent2RGB-SD15", "TAESDXL", "TAESD15"],
        ],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "LatentSender",
    display_name: "LatentSender",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  LatentReceiver: {
    input: {
      required: {
        latent: [[]],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        trigger_always: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentReceiver",
    display_name: "LatentReceiver",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImageMaskSwitch: {
    input: {
      required: {
        select: ["INT", { default: 1, min: 1, max: 4, step: 1 }],
        images1: ["IMAGE"],
      },
      optional: {
        mask1_opt: ["MASK"],
        images2_opt: ["IMAGE"],
        mask2_opt: ["MASK"],
        images3_opt: ["IMAGE"],
        mask3_opt: ["MASK"],
        images4_opt: ["IMAGE"],
        mask4_opt: ["MASK"],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "ImageMaskSwitch",
    display_name: "Switch (images, mask)",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  LatentSwitch: {
    input: {
      required: {
        select: ["INT", { default: 1, min: 1, max: 999999, step: 1 }],
        sel_mode: [
          "BOOLEAN",
          {
            default: true,
            label_on: "select_on_prompt",
            label_off: "select_on_execution",
            forceInput: false,
          },
        ],
      },
      optional: { input1: ["*"] },
      hidden: { unique_id: "UNIQUE_ID", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["*", "STRING", "INT"],
    output_is_list: [false, false, false],
    output_name: ["selected_value", "selected_label", "selected_index"],
    name: "LatentSwitch",
    display_name: "Switch (latent/legacy)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  SEGSSwitch: {
    input: {
      required: {
        select: ["INT", { default: 1, min: 1, max: 999999, step: 1 }],
        sel_mode: [
          "BOOLEAN",
          {
            default: true,
            label_on: "select_on_prompt",
            label_off: "select_on_execution",
            forceInput: false,
          },
        ],
      },
      optional: { input1: ["*"] },
      hidden: { unique_id: "UNIQUE_ID", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["*", "STRING", "INT"],
    output_is_list: [false, false, false],
    output_name: ["selected_value", "selected_label", "selected_index"],
    name: "SEGSSwitch",
    display_name: "Switch (SEGS/legacy)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSwitch: {
    input: {
      required: {
        select: ["INT", { default: 1, min: 1, max: 999999, step: 1 }],
        sel_mode: [
          "BOOLEAN",
          {
            default: true,
            label_on: "select_on_prompt",
            label_off: "select_on_execution",
            forceInput: false,
          },
        ],
      },
      optional: { input1: ["*"] },
      hidden: { unique_id: "UNIQUE_ID", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["*", "STRING", "INT"],
    output_is_list: [false, false, false],
    output_name: ["selected_value", "selected_label", "selected_index"],
    name: "ImpactSwitch",
    display_name: "Switch (Any)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactInversedSwitch: {
    input: {
      required: {
        select: ["INT", { default: 1, min: 1, max: 999999, step: 1 }],
        input: ["*"],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ImpactInversedSwitch",
    display_name: "Inversed Switch (Any)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactWildcardProcessor: {
    input: {
      required: {
        wildcard_text: ["STRING", { multiline: true, dynamicPrompts: false }],
        populated_text: ["STRING", { multiline: true, dynamicPrompts: false }],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Populate", label_off: "Fixed" },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "ImpactWildcardProcessor",
    display_name: "ImpactWildcardProcessor",
    description: "",
    category: "ImpactPack/Prompt",
    output_node: false,
  },
  ImpactWildcardEncode: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        wildcard_text: ["STRING", { multiline: true, dynamicPrompts: false }],
        populated_text: ["STRING", { multiline: true, dynamicPrompts: false }],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Populate", label_off: "Fixed" },
        ],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["MODEL", "CLIP", "CONDITIONING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["model", "clip", "conditioning", "populated_text"],
    name: "ImpactWildcardEncode",
    display_name: "ImpactWildcardEncode",
    description: "",
    category: "ImpactPack/Prompt",
    output_node: false,
  },
  SEGSDetailer: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        guide_size: ["FLOAT", { default: 256, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 768, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        noise_mask: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        force_inpaint: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        basic_pipe: ["BASIC_PIPE"],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
        batch_size: ["INT", { default: 1, min: 1, max: 100 }],
        cycle: ["INT", { default: 1, min: 1, max: 10, step: 1 }],
      },
      optional: {
        refiner_basic_pipe_opt: ["BASIC_PIPE"],
        inpaint_model: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        noise_mask_feather: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["SEGS", "IMAGE"],
    output_is_list: [false, true],
    output_name: ["segs", "cnet_images"],
    name: "SEGSDetailer",
    display_name: "SEGSDetailer",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  SEGSPaste: {
    input: {
      required: {
        image: ["IMAGE"],
        segs: ["SEGS"],
        feather: ["INT", { default: 5, min: 0, max: 100, step: 1 }],
        alpha: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
      },
      optional: { ref_image_opt: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SEGSPaste",
    display_name: "SEGSPaste",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  SEGSPreview: {
    input: {
      required: {
        segs: ["SEGS"],
        alpha_mode: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        min_alpha: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.01 }],
      },
      optional: { fallback_image_opt: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "SEGSPreview",
    display_name: "SEGSPreview",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  SEGSPreviewCNet: {
    input: { required: { segs: ["SEGS"] } },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "SEGSPreviewCNet",
    display_name: "SEGSPreview (CNET Image)",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  SEGSToImageList: {
    input: {
      required: { segs: ["SEGS"] },
      optional: { fallback_image_opt: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "SEGSToImageList",
    display_name: "SEGSToImageList",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSToMaskList: {
    input: { required: { segs: ["SEGS"] } },
    output: ["MASK"],
    output_is_list: [true],
    output_name: ["MASK"],
    name: "ImpactSEGSToMaskList",
    display_name: "SEGS to Mask List",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSToMaskBatch: {
    input: { required: { segs: ["SEGS"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ImpactSEGSToMaskBatch",
    display_name: "SEGS to Mask Batch",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSConcat: {
    input: { required: { segs1: ["SEGS"] } },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSEGSConcat",
    display_name: "SEGS Concat",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSPicker: {
    input: {
      required: {
        picks: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            "pysssss.autocomplete": false,
          },
        ],
        segs: ["SEGS"],
      },
      optional: { fallback_image_opt: ["IMAGE"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSEGSPicker",
    display_name: "Picker (SEGS)",
    description: "",
    category: "ImpactPack/Util",
    output_node: true,
  },
  ImpactMakeTileSEGS: {
    input: {
      required: {
        images: ["IMAGE"],
        bbox_size: ["INT", { default: 512, min: 64, max: 4096, step: 8 }],
        crop_factor: ["FLOAT", { default: 3.0, min: 1.0, max: 10, step: 0.1 }],
        min_overlap: ["INT", { default: 5, min: 0, max: 512, step: 1 }],
        filter_segs_dilation: [
          "INT",
          { default: 20, min: -255, max: 255, step: 1 },
        ],
        mask_irregularity: [
          "FLOAT",
          { default: 0, min: 0, max: 1.0, step: 0.01 },
        ],
        irregular_mask_mode: [
          [
            "Reuse fast",
            "Reuse quality",
            "All random fast",
            "All random quality",
          ],
        ],
      },
      optional: { filter_in_segs_opt: ["SEGS"], filter_out_segs_opt: ["SEGS"] },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactMakeTileSEGS",
    display_name: "Make Tile SEGS",
    description: "",
    category: "ImpactPack/__for_testing",
    output_node: false,
  },
  SEGSDetailerForAnimateDiff: {
    input: {
      required: {
        image_frames: ["IMAGE"],
        segs: ["SEGS"],
        guide_size: ["FLOAT", { default: 256, min: 64, max: 8192, step: 8 }],
        guide_size_for: [
          "BOOLEAN",
          { default: true, label_on: "bbox", label_off: "crop_region" },
        ],
        max_size: ["FLOAT", { default: 768, min: 64, max: 8192, step: 8 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.5, min: 0.0001, max: 1.0, step: 0.01 }],
        basic_pipe: ["BASIC_PIPE"],
        refiner_ratio: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0 }],
      },
      optional: { refiner_basic_pipe_opt: ["BASIC_PIPE"] },
    },
    output: ["SEGS", "IMAGE"],
    output_is_list: [false, true],
    output_name: ["segs", "cnet_images"],
    name: "SEGSDetailerForAnimateDiff",
    display_name: "SEGSDetailer For AnimateDiff (SEGS/pipe)",
    description: "",
    category: "ImpactPack/Detailer",
    output_node: false,
  },
  ImpactKSamplerBasicPipe: {
    input: {
      required: {
        basic_pipe: ["BASIC_PIPE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["BASIC_PIPE", "LATENT", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["BASIC_PIPE", "LATENT", "VAE"],
    name: "ImpactKSamplerBasicPipe",
    display_name: "KSampler (pipe)",
    description: "",
    category: "sampling",
    output_node: false,
  },
  ImpactKSamplerAdvancedBasicPipe: {
    input: {
      required: {
        basic_pipe: ["BASIC_PIPE"],
        add_noise: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        return_with_leftover_noise: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["BASIC_PIPE", "LATENT", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["BASIC_PIPE", "LATENT", "VAE"],
    name: "ImpactKSamplerAdvancedBasicPipe",
    display_name: "KSampler (Advanced/pipe)",
    description: "",
    category: "sampling",
    output_node: false,
  },
  ReencodeLatent: {
    input: {
      required: {
        samples: ["LATENT"],
        tile_mode: [
          ["None", "Both", "Decode(input) only", "Encode(output) only"],
        ],
        input_vae: ["VAE"],
        output_vae: ["VAE"],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "ReencodeLatent",
    display_name: "Reencode Latent",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ReencodeLatentPipe: {
    input: {
      required: {
        samples: ["LATENT"],
        tile_mode: [
          ["None", "Both", "Decode(input) only", "Encode(output) only"],
        ],
        input_basic_pipe: ["BASIC_PIPE"],
        output_basic_pipe: ["BASIC_PIPE"],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "ReencodeLatentPipe",
    display_name: "Reencode Latent (pipe)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactImageBatchToImageList: {
    input: { required: { image: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "ImpactImageBatchToImageList",
    display_name: "Image batch to Image List",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactMakeImageList: {
    input: { required: { image1: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["IMAGE"],
    name: "ImpactMakeImageList",
    display_name: "Make Image List",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactMakeImageBatch: {
    input: { required: { image1: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImpactMakeImageBatch",
    display_name: "Make Image Batch",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  RegionalSampler: {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        seed_2nd: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        seed_2nd_mode: [
          [
            "ignore",
            "fixed",
            "seed+seed_2nd",
            "seed-seed_2nd",
            "increment",
            "decrement",
            "randomize",
          ],
        ],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        base_only_steps: ["INT", { default: 2, min: 0, max: 10000 }],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        samples: ["LATENT"],
        base_sampler: ["KSAMPLER_ADVANCED"],
        regional_prompts: ["REGIONAL_PROMPTS"],
        overlap_factor: ["INT", { default: 10, min: 0, max: 10000 }],
        restore_latent: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        additional_mode: [
          ["DISABLE", "ratio additional", "ratio between"],
          { default: "ratio between" },
        ],
        additional_sampler: [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm",
          ],
        ],
        additional_sigma_ratio: [
          "FLOAT",
          { default: 0.3, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "RegionalSampler",
    display_name: "RegionalSampler",
    description: "",
    category: "ImpactPack/Regional",
    output_node: false,
  },
  RegionalSamplerAdvanced: {
    input: {
      required: {
        add_noise: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        overlap_factor: ["INT", { default: 10, min: 0, max: 10000 }],
        restore_latent: [
          "BOOLEAN",
          { default: true, label_on: "enabled", label_off: "disabled" },
        ],
        return_with_leftover_noise: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        latent_image: ["LATENT"],
        base_sampler: ["KSAMPLER_ADVANCED"],
        regional_prompts: ["REGIONAL_PROMPTS"],
        additional_mode: [
          ["DISABLE", "ratio additional", "ratio between"],
          { default: "ratio between" },
        ],
        additional_sampler: [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm",
          ],
        ],
        additional_sigma_ratio: [
          "FLOAT",
          { default: 0.3, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "RegionalSamplerAdvanced",
    display_name: "RegionalSamplerAdvanced",
    description: "",
    category: "ImpactPack/Regional",
    output_node: false,
  },
  CombineRegionalPrompts: {
    input: { required: { regional_prompts1: ["REGIONAL_PROMPTS"] } },
    output: ["REGIONAL_PROMPTS"],
    output_is_list: [false],
    output_name: ["REGIONAL_PROMPTS"],
    name: "CombineRegionalPrompts",
    display_name: "CombineRegionalPrompts",
    description: "",
    category: "ImpactPack/Regional",
    output_node: false,
  },
  RegionalPrompt: {
    input: {
      required: { mask: ["MASK"], advanced_sampler: ["KSAMPLER_ADVANCED"] },
    },
    output: ["REGIONAL_PROMPTS"],
    output_is_list: [false],
    output_name: ["REGIONAL_PROMPTS"],
    name: "RegionalPrompt",
    display_name: "RegionalPrompt",
    description: "",
    category: "ImpactPack/Regional",
    output_node: false,
  },
  ImpactCombineConditionings: {
    input: { required: { conditioning1: ["CONDITIONING"] } },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ImpactCombineConditionings",
    display_name: "Combine Conditionings",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactConcatConditionings: {
    input: { required: { conditioning1: ["CONDITIONING"] } },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ImpactConcatConditionings",
    display_name: "Concat Conditionings",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSLabelAssign: {
    input: {
      required: {
        segs: ["SEGS"],
        labels: [
          "STRING",
          {
            multiline: true,
            placeholder:
              "List the label to be assigned in order of segs, separated by commas",
          },
        ],
      },
    },
    output: ["SEGS"],
    output_is_list: [false],
    output_name: ["SEGS"],
    name: "ImpactSEGSLabelAssign",
    display_name: "SEGS Assign (label)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSLabelFilter: {
    input: {
      required: {
        segs: ["SEGS"],
        preset: [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush",
          ],
        ],
        labels: [
          "STRING",
          {
            multiline: true,
            placeholder:
              "List the types of segments to be allowed, separated by commas",
          },
        ],
      },
    },
    output: ["SEGS", "SEGS"],
    output_is_list: [false, false],
    output_name: ["filtered_SEGS", "remained_SEGS"],
    name: "ImpactSEGSLabelFilter",
    display_name: "SEGS Filter (label)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSRangeFilter: {
    input: {
      required: {
        segs: ["SEGS"],
        target: [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent",
          ],
        ],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "inside", label_off: "outside" },
        ],
        min_value: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        max_value: [
          "INT",
          { default: 67108864, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["SEGS", "SEGS"],
    output_is_list: [false, false],
    output_name: ["filtered_SEGS", "remained_SEGS"],
    name: "ImpactSEGSRangeFilter",
    display_name: "SEGS Filter (range)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactSEGSOrderedFilter: {
    input: {
      required: {
        segs: ["SEGS"],
        target: [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]],
        order: [
          "BOOLEAN",
          { default: true, label_on: "descending", label_off: "ascending" },
        ],
        take_start: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
        take_count: [
          "INT",
          { default: 1, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["SEGS", "SEGS"],
    output_is_list: [false, false],
    output_name: ["filtered_SEGS", "remained_SEGS"],
    name: "ImpactSEGSOrderedFilter",
    display_name: "SEGS Filter (ordered)",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactCompare: {
    input: {
      required: {
        cmp: [
          ["a = b", "a <> b", "a > b", "a < b", "a >= b", "a <= b", "tt", "ff"],
        ],
        a: ["*"],
        b: ["*"],
      },
    },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "ImpactCompare",
    display_name: "ImpactCompare",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactConditionalBranch: {
    input: {
      required: { cond: ["BOOLEAN"], tt_value: ["*"], ff_value: ["*"] },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ImpactConditionalBranch",
    display_name: "ImpactConditionalBranch",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactConditionalBranchSelMode: {
    input: {
      required: {
        cond: ["BOOLEAN"],
        sel_mode: [
          "BOOLEAN",
          {
            default: true,
            label_on: "select_on_prompt",
            label_off: "select_on_execution",
          },
        ],
      },
      optional: { tt_value: ["*"], ff_value: ["*"] },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ImpactConditionalBranchSelMode",
    display_name: "ImpactConditionalBranchSelMode",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactIfNone: {
    input: { required: {}, optional: { signal: ["*"], any_input: ["*"] } },
    output: ["*", "BOOLEAN"],
    output_is_list: [false, false],
    output_name: ["signal_opt", "bool"],
    name: "ImpactIfNone",
    display_name: "ImpactIfNone",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactConvertDataType: {
    input: { required: { value: ["*"] } },
    output: ["STRING", "FLOAT", "INT", "BOOLEAN"],
    output_is_list: [false, false, false, false],
    output_name: ["STRING", "FLOAT", "INT", "BOOLEAN"],
    name: "ImpactConvertDataType",
    display_name: "ImpactConvertDataType",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactLogicalOperators: {
    input: {
      required: {
        operator: [["and", "or", "xor"]],
        bool_a: ["BOOLEAN", { forceInput: true }],
        bool_b: ["BOOLEAN", { forceInput: true }],
      },
    },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "ImpactLogicalOperators",
    display_name: "ImpactLogicalOperators",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactInt: {
    input: {
      required: {
        value: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "ImpactInt",
    display_name: "ImpactInt",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactFloat: {
    input: {
      required: {
        value: [
          "FLOAT",
          { default: 1.0, min: -3.402823466e38, max: 3.402823466e38 },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "ImpactFloat",
    display_name: "ImpactFloat",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactValueSender: {
    input: {
      required: {
        value: ["*"],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
      optional: { signal_opt: ["*"] },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal"],
    name: "ImpactValueSender",
    display_name: "ImpactValueSender",
    description: "",
    category: "ImpactPack/Logic",
    output_node: true,
  },
  ImpactValueReceiver: {
    input: {
      required: {
        typ: [["STRING", "INT", "FLOAT", "BOOLEAN"]],
        value: ["STRING", { default: "" }],
        link_id: [
          "INT",
          { default: 0, min: 0, max: 9223372036854775807, step: 1 },
        ],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ImpactValueReceiver",
    display_name: "ImpactValueReceiver",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactImageInfo: {
    input: { required: { value: ["IMAGE"] } },
    output: ["INT", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["batch", "height", "width", "channel"],
    name: "ImpactImageInfo",
    display_name: "ImpactImageInfo",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: false,
  },
  ImpactLatentInfo: {
    input: { required: { value: ["LATENT"] } },
    output: ["INT", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["batch", "height", "width", "channel"],
    name: "ImpactLatentInfo",
    display_name: "ImpactLatentInfo",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: false,
  },
  ImpactMinMax: {
    input: {
      required: {
        mode: ["BOOLEAN", { default: true, label_on: "max", label_off: "min" }],
        a: ["*"],
        b: ["*"],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "ImpactMinMax",
    display_name: "ImpactMinMax",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: false,
  },
  ImpactNeg: {
    input: { required: { value: ["BOOLEAN", { forceInput: true }] } },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "ImpactNeg",
    display_name: "ImpactNeg",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactConditionalStopIteration: {
    input: { required: { cond: ["BOOLEAN", { forceInput: true }] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImpactConditionalStopIteration",
    display_name: "ImpactConditionalStopIteration",
    description: "",
    category: "ImpactPack/Logic",
    output_node: true,
  },
  ImpactStringSelector: {
    input: {
      required: {
        strings: ["STRING", { multiline: true }],
        multiline: [
          "BOOLEAN",
          { default: false, label_on: "enabled", label_off: "disabled" },
        ],
        select: [
          "INT",
          { min: 0, max: 9223372036854775807, step: 1, default: 0 },
        ],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "ImpactStringSelector",
    display_name: "String Selector",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  RemoveNoiseMask: {
    input: { required: { samples: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "RemoveNoiseMask",
    display_name: "Remove Noise Mask",
    description: "",
    category: "ImpactPack/Util",
    output_node: false,
  },
  ImpactLogger: {
    input: {
      required: { data: ["*", ""] },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImpactLogger",
    display_name: "ImpactLogger",
    description: "",
    category: "ImpactPack/Debug",
    output_node: true,
  },
  ImpactDummyInput: {
    input: { required: {} },
    output: ["*"],
    output_is_list: [false],
    output_name: ["*"],
    name: "ImpactDummyInput",
    display_name: "ImpactDummyInput",
    description: "",
    category: "ImpactPack/Debug",
    output_node: false,
  },
  ImpactQueueTrigger: {
    input: {
      required: {
        signal: ["*"],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Trigger", label_off: "Don't trigger" },
        ],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal_opt"],
    name: "ImpactQueueTrigger",
    display_name: "Queue Trigger",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactQueueTriggerCountdown: {
    input: {
      required: {
        count: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        total: ["INT", { default: 10, min: 1, max: 18446744073709551615 }],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Trigger", label_off: "Don't trigger" },
        ],
      },
      optional: { signal: ["*"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["*", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["signal_opt", "count", "total"],
    name: "ImpactQueueTriggerCountdown",
    display_name: "Queue Trigger (Countdown)",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactSetWidgetValue: {
    input: {
      required: {
        signal: ["*"],
        node_id: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        widget_name: ["STRING", { multiline: false }],
      },
      optional: {
        boolean_value: ["BOOLEAN", { forceInput: true }],
        int_value: ["INT", { forceInput: true }],
        float_value: ["FLOAT", { forceInput: true }],
        string_value: ["STRING", { forceInput: true }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal_opt"],
    name: "ImpactSetWidgetValue",
    display_name: "Set Widget Value",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactNodeSetMuteState: {
    input: {
      required: {
        signal: ["*"],
        node_id: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        set_state: [
          "BOOLEAN",
          { default: true, label_on: "active", label_off: "mute" },
        ],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal_opt"],
    name: "ImpactNodeSetMuteState",
    display_name: "Set Mute State",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactControlBridge: {
    input: {
      required: {
        value: ["*"],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Active", label_off: "Mute/Bypass" },
        ],
        behavior: [
          "BOOLEAN",
          { default: true, label_on: "Mute", label_off: "Bypass" },
        ],
      },
      hidden: {
        unique_id: "UNIQUE_ID",
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["value"],
    name: "ImpactControlBridge",
    display_name: "Control Bridge",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactIsNotEmptySEGS: {
    input: { required: { segs: ["SEGS"] } },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "ImpactIsNotEmptySEGS",
    display_name: "SEGS isn't Empty",
    description: "",
    category: "ImpactPack/Logic",
    output_node: false,
  },
  ImpactSleep: {
    input: {
      required: {
        signal: ["*"],
        seconds: ["FLOAT", { default: 0.5, min: 0, max: 3600 }],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal_opt"],
    name: "ImpactSleep",
    display_name: "Sleep",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactRemoteBoolean: {
    input: {
      required: {
        node_id: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        widget_name: ["STRING", { multiline: false }],
        value: [
          "BOOLEAN",
          { default: true, label_on: "True", label_off: "False" },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImpactRemoteBoolean",
    display_name: "Remote Boolean (on prompt)",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactRemoteInt: {
    input: {
      required: {
        node_id: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        widget_name: ["STRING", { multiline: false }],
        value: [
          "INT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ImpactRemoteInt",
    display_name: "Remote Int (on prompt)",
    description: "",
    category: "ImpactPack/Logic/_for_test",
    output_node: true,
  },
  ImpactHFTransformersClassifierProvider: {
    input: {
      required: {
        preset_repo_id: [
          [
            "rizvandwiki/gender-classification-2",
            "NTQAI/pedestrian_gender_recognition",
            "Leilab/gender_class",
            "ProjectPersonal/GenderClassifier",
            "crangana/trained-gender",
            "cledoux42/GenderNew_v002",
            "ivensamdh/genderage2",
            "Manual repo id",
          ],
        ],
        manual_repo_id: ["STRING", { multiline: false }],
        device_mode: [["AUTO", "Prefer GPU", "CPU"]],
      },
    },
    output: ["TRANSFORMERS_CLASSIFIER"],
    output_is_list: [false],
    output_name: ["TRANSFORMERS_CLASSIFIER"],
    name: "ImpactHFTransformersClassifierProvider",
    display_name: "HF Transformers Classifier Provider",
    description: "",
    category: "ImpactPack/HuggingFace",
    output_node: false,
  },
  ImpactSEGSClassify: {
    input: {
      required: {
        classifier: ["TRANSFORMERS_CLASSIFIER"],
        segs: ["SEGS"],
        preset_expr: [
          [
            "#Female > #Male",
            "#Female < #Male",
            "female > 0.5",
            "male > 0.5",
            "Age16to25 > 0.1",
            "Age50to69 > 0.1",
            "Manual expr",
          ],
        ],
        manual_expr: ["STRING", { multiline: false }],
      },
      optional: { ref_image_opt: ["IMAGE"] },
    },
    output: ["SEGS", "SEGS"],
    output_is_list: [false, false],
    output_name: ["filtered_SEGS", "remained_SEGS"],
    name: "ImpactSEGSClassify",
    display_name: "SEGS Classify",
    description: "",
    category: "ImpactPack/HuggingFace",
    output_node: false,
  },
  UltralyticsDetectorProvider: {
    input: { required: { model_name: [["__models__"]] } },
    output: ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    output_is_list: [false, false],
    output_name: ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    name: "UltralyticsDetectorProvider",
    display_name: "UltralyticsDetectorProvider",
    description: "",
    category: "ImpactPack",
    output_node: false,
  },
  TimestepKeyframe: {
    input: {
      required: {
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: {
        prev_timestep_kf: ["TIMESTEP_KEYFRAME"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.001 }],
        cn_weights: ["CONTROL_NET_WEIGHTS"],
        latent_keyframe: ["LATENT_KEYFRAME"],
        null_latent_kf_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        inherit_missing: ["BOOLEAN", { default: true }],
        guarantee_usage: ["BOOLEAN", { default: true }],
        mask_optional: ["MASK"],
      },
    },
    output: ["TIMESTEP_KEYFRAME"],
    output_is_list: [false],
    output_name: ["TIMESTEP_KF"],
    name: "TimestepKeyframe",
    display_name:
      "Timestep Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    output_node: false,
  },
  LatentKeyframe: {
    input: {
      required: {
        batch_index: ["INT", { default: 0, min: -1000, max: 1000, step: 1 }],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.001 }],
      },
      optional: { prev_latent_kf: ["LATENT_KEYFRAME"] },
    },
    output: ["LATENT_KEYFRAME"],
    output_is_list: [false],
    output_name: ["LATENT_KF"],
    name: "LatentKeyframe",
    display_name:
      "Latent Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    output_node: false,
  },
  LatentKeyframeGroup: {
    input: {
      required: {
        index_strengths: ["STRING", { multiline: true, default: "" }],
      },
      optional: {
        prev_latent_kf: ["LATENT_KEYFRAME"],
        latent_optional: ["LATENT"],
        print_keyframes: ["BOOLEAN", { default: false }],
      },
    },
    output: ["LATENT_KEYFRAME"],
    output_is_list: [false],
    output_name: ["LATENT_KF"],
    name: "LatentKeyframeGroup",
    display_name:
      "Latent Keyframe Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    output_node: false,
  },
  LatentKeyframeBatchedGroup: {
    input: {
      required: {
        float_strengths: [
          "FLOAT",
          { default: -1, min: -1, step: 0.001, forceInput: true },
        ],
      },
      optional: {
        prev_latent_kf: ["LATENT_KEYFRAME"],
        print_keyframes: ["BOOLEAN", { default: false }],
      },
    },
    output: ["LATENT_KEYFRAME"],
    output_is_list: [false],
    output_name: ["LATENT_KF"],
    name: "LatentKeyframeBatchedGroup",
    display_name:
      "Latent Keyframe Batched Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    output_node: false,
  },
  LatentKeyframeTiming: {
    input: {
      required: {
        batch_index_from: [
          "INT",
          { default: 0, min: -10000, max: 10000, step: 1 },
        ],
        batch_index_to_excl: [
          "INT",
          { default: 0, min: -10000, max: 10000, step: 1 },
        ],
        strength_from: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        strength_to: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        interpolation: [["linear", "ease-in", "ease-out", "ease-in-out"]],
      },
      optional: {
        prev_latent_kf: ["LATENT_KEYFRAME"],
        print_keyframes: ["BOOLEAN", { default: false }],
      },
    },
    output: ["LATENT_KEYFRAME"],
    output_is_list: [false],
    output_name: ["LATENT_KF"],
    name: "LatentKeyframeTiming",
    display_name:
      "Latent Keyframe Interpolation \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
    output_node: false,
  },
  ACN_AdvancedControlNetApply: {
    input: {
      required: {
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: {
        mask_optional: ["MASK"],
        timestep_kf: ["TIMESTEP_KEYFRAME"],
        latent_kf_override: ["LATENT_KEYFRAME"],
        weights_override: ["CONTROL_NET_WEIGHTS"],
        model_optional: ["MODEL"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "MODEL"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "model_opt"],
    name: "ACN_AdvancedControlNetApply",
    display_name:
      "Apply Advanced ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category: "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    output_node: false,
  },
  ControlNetLoaderAdvanced: {
    input: {
      required: { control_net_name: [["__models__"]] },
      optional: { timestep_keyframe: ["TIMESTEP_KEYFRAME"] },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "ControlNetLoaderAdvanced",
    display_name:
      "Load Advanced ControlNet Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category: "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    output_node: false,
  },
  DiffControlNetLoaderAdvanced: {
    input: {
      required: { model: ["MODEL"], control_net_name: [["__models__"]] },
      optional: { timestep_keyframe: ["TIMESTEP_KEYFRAME"] },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "DiffControlNetLoaderAdvanced",
    display_name:
      "Load Advanced ControlNet Model (diff) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category: "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    output_node: false,
  },
  ScaledSoftControlNetWeights: {
    input: {
      required: {
        base_multiplier: [
          "FLOAT",
          { default: 0.825, min: 0.0, max: 1.0, step: 0.001 },
        ],
        flip_weights: ["BOOLEAN", { default: false }],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "ScaledSoftControlNetWeights",
    display_name:
      "Scaled Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    output_node: false,
  },
  ScaledSoftMaskedUniversalWeights: {
    input: {
      required: {
        mask: ["MASK"],
        min_base_multiplier: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        max_base_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "ScaledSoftMaskedUniversalWeights",
    display_name:
      "Scaled Soft Masked Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    output_node: false,
  },
  SoftControlNetWeights: {
    input: {
      required: {
        weight_00: [
          "FLOAT",
          { default: 0.09941396206337118, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_01: [
          "FLOAT",
          { default: 0.12050177219802567, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_02: [
          "FLOAT",
          { default: 0.14606275417942507, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_03: [
          "FLOAT",
          { default: 0.17704576264172736, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_04: [
          "FLOAT",
          { default: 0.214600924414215, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_05: [
          "FLOAT",
          { default: 0.26012233262329093, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_06: [
          "FLOAT",
          { default: 0.3152997971191405, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_07: [
          "FLOAT",
          { default: 0.3821815722656249, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_08: [
          "FLOAT",
          { default: 0.4632503906249999, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_09: [
          "FLOAT",
          { default: 0.561515625, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_10: [
          "FLOAT",
          { default: 0.6806249999999999, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_11: [
          "FLOAT",
          { default: 0.825, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_12: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        flip_weights: ["BOOLEAN", { default: false }],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "SoftControlNetWeights",
    display_name:
      "ControlNet Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
    output_node: false,
  },
  CustomControlNetWeights: {
    input: {
      required: {
        weight_00: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_01: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_02: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_03: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_04: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_05: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_06: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_07: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_08: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_09: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_10: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_11: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_12: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        flip_weights: ["BOOLEAN", { default: false }],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "CustomControlNetWeights",
    display_name:
      "ControlNet Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
    output_node: false,
  },
  SoftT2IAdapterWeights: {
    input: {
      required: {
        weight_00: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_01: [
          "FLOAT",
          { default: 0.62, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_02: [
          "FLOAT",
          { default: 0.825, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_03: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        flip_weights: ["BOOLEAN", { default: false }],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "SoftT2IAdapterWeights",
    display_name:
      "T2IAdapter Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
    output_node: false,
  },
  CustomT2IAdapterWeights: {
    input: {
      required: {
        weight_00: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_01: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_02: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        weight_03: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        flip_weights: ["BOOLEAN", { default: false }],
      },
    },
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "CustomT2IAdapterWeights",
    display_name:
      "T2IAdapter Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
    output_node: false,
  },
  ACN_DefaultUniversalWeights: {
    input: {},
    output: ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"],
    output_is_list: [false, false],
    output_name: ["CN_WEIGHTS", "TK_SHORTCUT"],
    name: "ACN_DefaultUniversalWeights",
    display_name:
      "Force Default Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
    output_node: false,
  },
  ACN_SparseCtrlRGBPreprocessor: {
    input: {
      required: { image: ["IMAGE"], vae: ["VAE"], latent_size: ["LATENT"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["proc_IMAGE"],
    name: "ACN_SparseCtrlRGBPreprocessor",
    display_name:
      "RGB SparseCtrl \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/preprocess",
    output_node: false,
  },
  ACN_SparseCtrlLoaderAdvanced: {
    input: {
      required: {
        sparsectrl_name: [["__models__"]],
        use_motion: ["BOOLEAN", { default: true }],
        motion_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        motion_scale: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
      },
      optional: {
        sparse_method: ["SPARSE_METHOD"],
        tk_optional: ["TIMESTEP_KEYFRAME"],
      },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "ACN_SparseCtrlLoaderAdvanced",
    display_name:
      "Load SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    output_node: false,
  },
  ACN_SparseCtrlMergedLoaderAdvanced: {
    input: {
      required: {
        sparsectrl_name: [["__models__"]],
        control_net_name: [["__models__"]],
        use_motion: ["BOOLEAN", { default: true }],
        motion_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        motion_scale: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
      },
      optional: {
        sparse_method: ["SPARSE_METHOD"],
        tk_optional: ["TIMESTEP_KEYFRAME"],
      },
    },
    output: ["CONTROL_NET"],
    output_is_list: [false],
    output_name: ["CONTROL_NET"],
    name: "ACN_SparseCtrlMergedLoaderAdvanced",
    display_name:
      "Load Merged SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/experimental",
    output_node: false,
  },
  ACN_SparseCtrlIndexMethodNode: {
    input: { required: { indexes: ["STRING", { default: "0" }] } },
    output: ["SPARSE_METHOD"],
    output_is_list: [false],
    output_name: ["SPARSE_METHOD"],
    name: "ACN_SparseCtrlIndexMethodNode",
    display_name:
      "SparseCtrl Index Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    output_node: false,
  },
  ACN_SparseCtrlSpreadMethodNode: {
    input: {
      required: { spread: [["uniform", "starting", "ending", "center"]] },
    },
    output: ["SPARSE_METHOD"],
    output_is_list: [false],
    output_name: ["SPARSE_METHOD"],
    name: "ACN_SparseCtrlSpreadMethodNode",
    display_name:
      "SparseCtrl Spread Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
    output_node: false,
  },
  LoadImagesFromDirectory: {
    input: {
      required: { directory: ["STRING", { default: "" }] },
      optional: {
        image_load_cap: ["INT", { default: 0, min: 0, step: 1 }],
        start_index: ["INT", { default: 0, min: 0, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "INT"],
    name: "LoadImagesFromDirectory",
    display_name:
      "Load Images [DEPRECATED] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
    description: "",
    category:
      "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/deprecated",
    output_node: false,
  },
  BNK_CutoffBasePrompt: {
    input: {
      required: { text: ["STRING", { multiline: true }], clip: ["CLIP"] },
    },
    output: ["CLIPREGION"],
    output_is_list: [false],
    output_name: ["CLIPREGION"],
    name: "BNK_CutoffBasePrompt",
    display_name: "Cutoff Base Prompt",
    description: "",
    category: "conditioning/cutoff",
    output_node: false,
  },
  BNK_CutoffSetRegions: {
    input: {
      required: {
        clip_regions: ["CLIPREGION"],
        region_text: ["STRING", { multiline: true }],
        target_text: ["STRING", { multiline: false }],
        weight: ["FLOAT", { default: 1.0, min: -10.0, max: 10.0, step: 0.05 }],
      },
    },
    output: ["CLIPREGION"],
    output_is_list: [false],
    output_name: ["CLIPREGION"],
    name: "BNK_CutoffSetRegions",
    display_name: "Cutoff Set Regions",
    description: "",
    category: "conditioning/cutoff",
    output_node: false,
  },
  BNK_CutoffRegionsToConditioning: {
    input: {
      required: {
        clip_regions: ["CLIPREGION"],
        mask_token: ["STRING", { multiline: false, default: "" }],
        strict_mask: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        start_from_masked: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_CutoffRegionsToConditioning",
    display_name: "Cutoff Regions To Conditioning",
    description: "",
    category: "conditioning/cutoff",
    output_node: false,
  },
  BNK_CutoffRegionsToConditioning_ADV: {
    input: {
      required: {
        clip_regions: ["CLIPREGION"],
        mask_token: ["STRING", { multiline: false, default: "" }],
        strict_mask: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        start_from_masked: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05 },
        ],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [["comfy", "A1111", "compel", "comfy++"]],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_CutoffRegionsToConditioning_ADV",
    display_name: "Cutoff Regions To Conditioning (ADV)",
    description: "",
    category: "conditioning/cutoff",
    output_node: false,
  },
  UltimateSDUpscale: {
    input: {
      required: {
        image: ["IMAGE"],
        model: ["MODEL"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        vae: ["VAE"],
        upscale_by: ["FLOAT", { default: 2, min: 0.05, max: 4, step: 0.05 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000, step: 1 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.01 }],
        upscale_model: ["UPSCALE_MODEL"],
        mode_type: [["Linear", "Chess", "None"]],
        tile_width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        tile_height: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        mask_blur: ["INT", { default: 8, min: 0, max: 64, step: 1 }],
        tile_padding: ["INT", { default: 32, min: 0, max: 8192, step: 8 }],
        seam_fix_mode: [
          ["None", "Band Pass", "Half Tile", "Half Tile + Intersections"],
        ],
        seam_fix_denoise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        seam_fix_width: ["INT", { default: 64, min: 0, max: 8192, step: 8 }],
        seam_fix_mask_blur: ["INT", { default: 8, min: 0, max: 64, step: 1 }],
        seam_fix_padding: ["INT", { default: 16, min: 0, max: 8192, step: 8 }],
        force_uniform_tiles: ["BOOLEAN", { default: true }],
        tiled_decode: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "UltimateSDUpscale",
    display_name: "Ultimate SD Upscale",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  UltimateSDUpscaleNoUpscale: {
    input: {
      required: {
        upscaled_image: ["IMAGE"],
        model: ["MODEL"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        vae: ["VAE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000, step: 1 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 0.2, min: 0.0, max: 1.0, step: 0.01 }],
        mode_type: [["Linear", "Chess", "None"]],
        tile_width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        tile_height: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        mask_blur: ["INT", { default: 8, min: 0, max: 64, step: 1 }],
        tile_padding: ["INT", { default: 32, min: 0, max: 8192, step: 8 }],
        seam_fix_mode: [
          ["None", "Band Pass", "Half Tile", "Half Tile + Intersections"],
        ],
        seam_fix_denoise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        seam_fix_width: ["INT", { default: 64, min: 0, max: 8192, step: 8 }],
        seam_fix_mask_blur: ["INT", { default: 8, min: 0, max: 64, step: 1 }],
        seam_fix_padding: ["INT", { default: 16, min: 0, max: 8192, step: 8 }],
        force_uniform_tiles: ["BOOLEAN", { default: true }],
        tiled_decode: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "UltimateSDUpscaleNoUpscale",
    display_name: "Ultimate SD Upscale (No Upscale)",
    description: "",
    category: "image/upscaling",
    output_node: false,
  },
  INTConstant: {
    input: {
      required: {
        value: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["value"],
    name: "INTConstant",
    display_name: "INT Constant",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  FloatConstant: {
    input: {
      required: {
        value: [
          "FLOAT",
          {
            default: 0.0,
            min: -18446744073709551615,
            max: 18446744073709551615,
            step: 0.001,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["value"],
    name: "FloatConstant",
    display_name: "Float Constant",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ConditioningMultiCombine: {
    input: {
      required: {
        inputcount: ["INT", { default: 2, min: 2, max: 20, step: 1 }],
        conditioning_1: ["CONDITIONING"],
        conditioning_2: ["CONDITIONING"],
      },
    },
    output: ["CONDITIONING", "INT"],
    output_is_list: [false, false],
    output_name: ["combined", "inputcount"],
    name: "ConditioningMultiCombine",
    display_name: "Conditioning Multi Combine",
    description: "",
    category: "KJNodes/masking/conditioning",
    output_node: false,
  },
  ConditioningSetMaskAndCombine: {
    input: {
      required: {
        positive_1: ["CONDITIONING"],
        negative_1: ["CONDITIONING"],
        positive_2: ["CONDITIONING"],
        negative_2: ["CONDITIONING"],
        mask_1: ["MASK"],
        mask_2: ["MASK"],
        mask_1_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_2_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        set_cond_area: [["default", "mask bounds"]],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["combined_positive", "combined_negative"],
    name: "ConditioningSetMaskAndCombine",
    display_name: "ConditioningSetMaskAndCombine",
    description: "",
    category: "KJNodes/masking/conditioning",
    output_node: false,
  },
  ConditioningSetMaskAndCombine3: {
    input: {
      required: {
        positive_1: ["CONDITIONING"],
        negative_1: ["CONDITIONING"],
        positive_2: ["CONDITIONING"],
        negative_2: ["CONDITIONING"],
        positive_3: ["CONDITIONING"],
        negative_3: ["CONDITIONING"],
        mask_1: ["MASK"],
        mask_2: ["MASK"],
        mask_3: ["MASK"],
        mask_1_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_2_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_3_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        set_cond_area: [["default", "mask bounds"]],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["combined_positive", "combined_negative"],
    name: "ConditioningSetMaskAndCombine3",
    display_name: "ConditioningSetMaskAndCombine3",
    description: "",
    category: "KJNodes/masking/conditioning",
    output_node: false,
  },
  ConditioningSetMaskAndCombine4: {
    input: {
      required: {
        positive_1: ["CONDITIONING"],
        negative_1: ["CONDITIONING"],
        positive_2: ["CONDITIONING"],
        negative_2: ["CONDITIONING"],
        positive_3: ["CONDITIONING"],
        negative_3: ["CONDITIONING"],
        positive_4: ["CONDITIONING"],
        negative_4: ["CONDITIONING"],
        mask_1: ["MASK"],
        mask_2: ["MASK"],
        mask_3: ["MASK"],
        mask_4: ["MASK"],
        mask_1_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_2_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_3_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_4_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        set_cond_area: [["default", "mask bounds"]],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["combined_positive", "combined_negative"],
    name: "ConditioningSetMaskAndCombine4",
    display_name: "ConditioningSetMaskAndCombine4",
    description: "",
    category: "KJNodes/masking/conditioning",
    output_node: false,
  },
  ConditioningSetMaskAndCombine5: {
    input: {
      required: {
        positive_1: ["CONDITIONING"],
        negative_1: ["CONDITIONING"],
        positive_2: ["CONDITIONING"],
        negative_2: ["CONDITIONING"],
        positive_3: ["CONDITIONING"],
        negative_3: ["CONDITIONING"],
        positive_4: ["CONDITIONING"],
        negative_4: ["CONDITIONING"],
        positive_5: ["CONDITIONING"],
        negative_5: ["CONDITIONING"],
        mask_1: ["MASK"],
        mask_2: ["MASK"],
        mask_3: ["MASK"],
        mask_4: ["MASK"],
        mask_5: ["MASK"],
        mask_1_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_2_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_3_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_4_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        mask_5_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        set_cond_area: [["default", "mask bounds"]],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["combined_positive", "combined_negative"],
    name: "ConditioningSetMaskAndCombine5",
    display_name: "ConditioningSetMaskAndCombine5",
    description: "",
    category: "KJNodes/masking/conditioning",
    output_node: false,
  },
  GrowMaskWithBlur: {
    input: {
      required: {
        mask: ["MASK"],
        expand: ["INT", { default: 0, min: -8192, max: 8192, step: 1 }],
        incremental_expandrate: [
          "INT",
          { default: 0, min: 0, max: 100, step: 1 },
        ],
        tapered_corners: ["BOOLEAN", { default: true }],
        flip_input: ["BOOLEAN", { default: false }],
        use_cuda: ["BOOLEAN", { default: true }],
        blur_radius: ["INT", { default: 0, min: 0, max: 999, step: 1 }],
        sigma: ["FLOAT", { default: 1.0, min: 0.1, max: 10.0, step: 0.1 }],
        lerp_alpha: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        decay_factor: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["mask", "mask_inverted"],
    name: "GrowMaskWithBlur",
    display_name: "GrowMaskWithBlur",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  ColorToMask: {
    input: {
      required: {
        images: ["IMAGE"],
        invert: ["BOOLEAN", { default: false }],
        red: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        green: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        blue: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        threshold: ["INT", { default: 10, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "ColorToMask",
    display_name: "ColorToMask",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  CreateGradientMask: {
    input: {
      required: {
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        width: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "CreateGradientMask",
    display_name: "CreateGradientMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateTextMask: {
    input: {
      required: {
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 1, min: 1, max: 4096, step: 1 }],
        text_x: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
        text_y: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
        font_size: ["INT", { default: 32, min: 8, max: 4096, step: 1 }],
        font_color: ["STRING", { default: "white" }],
        text: ["STRING", { default: "HELLO!" }],
        font_path: ["STRING", { default: "fonts\\TTNorms-Black.otf" }],
        width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        start_rotation: ["INT", { default: 0, min: 0, max: 359, step: 1 }],
        end_rotation: ["INT", { default: 0, min: -359, max: 359, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "CreateTextMask",
    display_name: "CreateTextMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateAudioMask: {
    input: {
      required: {
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        scale: ["FLOAT", { default: 0.5, min: 0.0, max: 2.0, step: 0.01 }],
        audio_path: ["STRING", { default: "audio.wav" }],
        width: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CreateAudioMask",
    display_name: "CreateAudioMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateFadeMask: {
    input: {
      required: {
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 2, min: 2, max: 255, step: 1 }],
        width: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        interpolation: [["linear", "ease_in", "ease_out", "ease_in_out"]],
        start_level: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        midpoint_level: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        end_level: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.01 }],
        midpoint_frame: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "CreateFadeMask",
    display_name: "CreateFadeMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateFadeMaskAdvanced: {
    input: {
      required: {
        points_string: [
          "STRING",
          { default: "0:(0.0),\n7:(1.0),\n15:(0.0)\n", multiline: true },
        ],
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 16, min: 2, max: 255, step: 1 }],
        width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        interpolation: [["linear", "ease_in", "ease_out", "ease_in_out"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "CreateFadeMaskAdvanced",
    display_name: "CreateFadeMaskAdvanced",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateFluidMask: {
    input: {
      required: {
        invert: ["BOOLEAN", { default: false }],
        frames: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        width: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 256, min: 16, max: 4096, step: 1 }],
        inflow_count: ["INT", { default: 3, min: 0, max: 255, step: 1 }],
        inflow_velocity: ["INT", { default: 1, min: 0, max: 255, step: 1 }],
        inflow_radius: ["INT", { default: 8, min: 0, max: 255, step: 1 }],
        inflow_padding: ["INT", { default: 50, min: 0, max: 255, step: 1 }],
        inflow_duration: ["INT", { default: 60, min: 0, max: 255, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "CreateFluidMask",
    display_name: "CreateFluidMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  VRAM_Debug: {
    input: {
      required: {
        model: ["MODEL"],
        empty_cuda_cache: ["BOOLEAN", { default: false }],
      },
      optional: { clip_vision: ["CLIP_VISION"] },
    },
    output: ["MODEL", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["model", "freemem_before", "freemem_after"],
    name: "VRAM_Debug",
    display_name: "VRAM Debug",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  SomethingToString: {
    input: { required: { input: ["*", { forceinput: true, default: "" }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "SomethingToString",
    display_name: "SomethingToString",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  CrossFadeImages: {
    input: {
      required: {
        images_1: ["IMAGE"],
        images_2: ["IMAGE"],
        interpolation: [
          [
            "linear",
            "ease_in",
            "ease_out",
            "ease_in_out",
            "bounce",
            "elastic",
            "glitchy",
            "exponential_ease_out",
          ],
        ],
        transition_start_index: [
          "INT",
          { default: 1, min: 0, max: 4096, step: 1 },
        ],
        transitioning_frames: [
          "INT",
          { default: 1, min: 0, max: 4096, step: 1 },
        ],
        start_level: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        end_level: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CrossFadeImages",
    display_name: "CrossFadeImages",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  EmptyLatentImagePresets: {
    input: {
      required: {
        dimensions: [
          [
            "512 x 512",
            "768 x 512",
            "960 x 512",
            "1024 x 512",
            "1536 x 640",
            "1536 x 640",
            "1344 x 768",
            "1216 x 832",
            "1152 x 896",
            "1024 x 1024",
          ],
          { default: "512 x 512" },
        ],
        invert: ["BOOLEAN", { default: false }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["Latent", "Width", "Height"],
    name: "EmptyLatentImagePresets",
    display_name: "EmptyLatentImagePresets",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ColorMatch: {
    input: {
      required: {
        image_ref: ["IMAGE"],
        image_target: ["IMAGE"],
        method: [
          ["mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"],
          { default: "mkl" },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "ColorMatch",
    display_name: "ColorMatch",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  GetImageRangeFromBatch: {
    input: {
      required: {
        images: ["IMAGE"],
        start_index: ["INT", { default: 0, min: -1, max: 4096, step: 1 }],
        num_frames: ["INT", { default: 1, min: 1, max: 4096, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "GetImageRangeFromBatch",
    display_name: "GetImageRangeFromBatch",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  SaveImageWithAlpha: {
    input: {
      required: {
        images: ["IMAGE"],
        mask: ["MASK"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SaveImageWithAlpha",
    display_name: "SaveImageWithAlpha",
    description: "",
    category: "image",
    output_node: true,
  },
  ReverseImageBatch: {
    input: { required: { images: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ReverseImageBatch",
    display_name: "ReverseImageBatch",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ImageGridComposite2x2: {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        image3: ["IMAGE"],
        image4: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageGridComposite2x2",
    display_name: "ImageGridComposite2x2",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ImageGridComposite3x3: {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        image3: ["IMAGE"],
        image4: ["IMAGE"],
        image5: ["IMAGE"],
        image6: ["IMAGE"],
        image7: ["IMAGE"],
        image8: ["IMAGE"],
        image9: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageGridComposite3x3",
    display_name: "ImageGridComposite3x3",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ImageConcanate: {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        direction: [["right", "down", "left", "up"], { default: "right" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageConcanate",
    display_name: "ImageConcanate",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ImageBatchTestPattern: {
    input: {
      required: {
        batch_size: ["INT", { default: 1, min: 1, max: 255, step: 1 }],
        start_from: ["INT", { default: 1, min: 1, max: 255, step: 1 }],
        width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBatchTestPattern",
    display_name: "ImageBatchTestPattern",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ReplaceImagesInBatch: {
    input: {
      required: {
        original_images: ["IMAGE"],
        replacement_images: ["IMAGE"],
        start_index: ["INT", { default: 1, min: 0, max: 4096, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ReplaceImagesInBatch",
    display_name: "ReplaceImagesInBatch",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  BatchCropFromMask: {
    input: {
      required: {
        original_images: ["IMAGE"],
        masks: ["MASK"],
        crop_size_mult: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.001 },
        ],
        bbox_smooth_alpha: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE", "IMAGE", "BBOX", "INT", "INT"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "original_images",
      "cropped_images",
      "bboxes",
      "width",
      "height",
    ],
    name: "BatchCropFromMask",
    display_name: "BatchCropFromMask",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  BatchCropFromMaskAdvanced: {
    input: {
      required: {
        original_images: ["IMAGE"],
        masks: ["MASK"],
        crop_size_mult: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        bbox_smooth_alpha: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: [
      "IMAGE",
      "IMAGE",
      "MASK",
      "IMAGE",
      "MASK",
      "BBOX",
      "BBOX",
      "INT",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "original_images",
      "cropped_images",
      "cropped_masks",
      "combined_crop_image",
      "combined_crop_masks",
      "bboxes",
      "combined_bounding_box",
      "bbox_width",
      "bbox_height",
    ],
    name: "BatchCropFromMaskAdvanced",
    display_name: "BatchCropFromMaskAdvanced",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  BatchUncrop: {
    input: {
      required: {
        original_images: ["IMAGE"],
        cropped_images: ["IMAGE"],
        bboxes: ["BBOX"],
        border_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_rescale: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        border_top: ["BOOLEAN", { default: true }],
        border_bottom: ["BOOLEAN", { default: true }],
        border_left: ["BOOLEAN", { default: true }],
        border_right: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "BatchUncrop",
    display_name: "BatchUncrop",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  BatchUncropAdvanced: {
    input: {
      required: {
        original_images: ["IMAGE"],
        cropped_images: ["IMAGE"],
        cropped_masks: ["MASK"],
        combined_crop_mask: ["MASK"],
        bboxes: ["BBOX"],
        border_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
        crop_rescale: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        use_combined_mask: ["BOOLEAN", { default: false }],
        use_square_mask: ["BOOLEAN", { default: true }],
      },
      optional: { combined_bounding_box: ["BBOX", { default: null }] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "BatchUncropAdvanced",
    display_name: "BatchUncropAdvanced",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  BatchCLIPSeg: {
    input: {
      required: {
        images: ["IMAGE"],
        text: ["STRING", { multiline: false }],
        threshold: [
          "FLOAT",
          { default: 0.15, min: 0.0, max: 10.0, step: 0.01 },
        ],
        binary_mask: ["BOOLEAN", { default: true }],
        combine_mask: ["BOOLEAN", { default: false }],
        use_cuda: ["BOOLEAN", { default: true }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["Mask"],
    name: "BatchCLIPSeg",
    display_name: "BatchCLIPSeg",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  RoundMask: {
    input: { required: { mask: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "RoundMask",
    display_name: "RoundMask",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  ResizeMask: {
    input: {
      required: {
        mask: ["MASK"],
        width: [
          "INT",
          { default: 512, min: 0, max: 8192, step: 8, display: "number" },
        ],
        height: [
          "INT",
          { default: 512, min: 0, max: 8192, step: 8, display: "number" },
        ],
        keep_proportions: ["BOOLEAN", { default: false }],
      },
    },
    output: ["MASK", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["mask", "width", "height"],
    name: "ResizeMask",
    display_name: "ResizeMask",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  OffsetMask: {
    input: {
      required: {
        mask: ["MASK"],
        x: [
          "INT",
          { default: 0, min: -4096, max: 8192, step: 1, display: "number" },
        ],
        y: [
          "INT",
          { default: 0, min: -4096, max: 8192, step: 1, display: "number" },
        ],
        angle: [
          "INT",
          { default: 0, min: -360, max: 360, step: 1, display: "number" },
        ],
        duplication_factor: [
          "INT",
          { default: 1, min: 1, max: 1000, step: 1, display: "number" },
        ],
        roll: ["BOOLEAN", { default: false }],
        incremental: ["BOOLEAN", { default: false }],
        padding_mode: [["empty", "border", "reflection"], { default: "empty" }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["mask"],
    name: "OffsetMask",
    display_name: "OffsetMask",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  WidgetToString: {
    input: {
      required: {
        id: ["INT", { default: 0 }],
        widget_name: ["STRING", { multiline: false }],
        return_all: ["BOOLEAN", { default: false }],
      },
      hidden: { extra_pnginfo: "EXTRA_PNGINFO", prompt: "PROMPT" },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "WidgetToString",
    display_name: "WidgetToString",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  CreateShapeMask: {
    input: {
      required: {
        shape: [["circle", "square", "triangle"], { default: "circle" }],
        frames: ["INT", { default: 1, min: 1, max: 4096, step: 1 }],
        location_x: ["INT", { default: 256, min: 0, max: 4096, step: 1 }],
        location_y: ["INT", { default: 256, min: 0, max: 4096, step: 1 }],
        size: ["INT", { default: 128, min: 8, max: 4096, step: 1 }],
        grow: ["INT", { default: 0, min: -512, max: 512, step: 1 }],
        frame_width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        frame_height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["mask", "mask_inverted"],
    name: "CreateShapeMask",
    display_name: "CreateShapeMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateVoronoiMask: {
    input: {
      required: {
        frames: ["INT", { default: 16, min: 2, max: 4096, step: 1 }],
        num_points: ["INT", { default: 15, min: 1, max: 4096, step: 1 }],
        line_width: ["INT", { default: 4, min: 1, max: 4096, step: 1 }],
        speed: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        frame_width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        frame_height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["mask", "mask_inverted"],
    name: "CreateVoronoiMask",
    display_name: "CreateVoronoiMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  CreateMagicMask: {
    input: {
      required: {
        frames: ["INT", { default: 16, min: 2, max: 4096, step: 1 }],
        depth: ["INT", { default: 12, min: 1, max: 500, step: 1 }],
        distortion: [
          "FLOAT",
          { default: 1.5, min: 0.0, max: 100.0, step: 0.01 },
        ],
        seed: ["INT", { default: 123, min: 0, max: 99999999, step: 1 }],
        transitions: ["INT", { default: 1, min: 1, max: 20, step: 1 }],
        frame_width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        frame_height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
      },
    },
    output: ["MASK", "MASK"],
    output_is_list: [false, false],
    output_name: ["mask", "mask_inverted"],
    name: "CreateMagicMask",
    display_name: "CreateMagicMask",
    description: "",
    category: "KJNodes/masking/generate",
    output_node: false,
  },
  BboxToInt: {
    input: {
      required: {
        bboxes: ["BBOX"],
        index: ["INT", { default: 0, min: 0, max: 99999999, step: 1 }],
      },
    },
    output: ["INT", "INT", "INT", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["x_min", "y_min", "width", "height", "center_x", "center_y"],
    name: "BboxToInt",
    display_name: "BboxToInt",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  SplitBboxes: {
    input: {
      required: {
        bboxes: ["BBOX"],
        index: ["INT", { default: 0, min: 0, max: 99999999, step: 1 }],
      },
    },
    output: ["BBOX", "BBOX"],
    output_is_list: [false, false],
    output_name: ["bboxes_a", "bboxes_b"],
    name: "SplitBboxes",
    display_name: "SplitBboxes",
    description: "",
    category: "KJNodes/masking",
    output_node: false,
  },
  ImageGrabPIL: {
    input: {
      required: {
        x: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
        y: ["INT", { default: 0, min: 0, max: 4096, step: 1 }],
        width: ["INT", { default: 512, min: 0, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 0, max: 4096, step: 1 }],
        num_frames: ["INT", { default: 1, min: 1, max: 255, step: 1 }],
        delay: ["FLOAT", { default: 0.1, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "ImageGrabPIL",
    display_name: "ImageGrabPIL",
    description: "",
    category: "KJNodes/experimental",
    output_node: false,
  },
  DummyLatentOut: {
    input: { required: { latent: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "DummyLatentOut",
    display_name: "DummyLatentOut",
    description: "",
    category: "KJNodes",
    output_node: true,
  },
  NormalizeLatent: {
    input: { required: { latent: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "NormalizeLatent",
    display_name: "NormalizeLatent",
    description: "",
    category: "KJNodes/noise",
    output_node: true,
  },
  FlipSigmasAdjusted: {
    input: { required: { sigmas: ["SIGMAS"] } },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "FlipSigmasAdjusted",
    display_name: "FlipSigmasAdjusted",
    description: "",
    category: "KJNodes/noise",
    output_node: false,
  },
  InjectNoiseToLatent: {
    input: {
      required: {
        latents: ["LATENT"],
        strength: [
          "FLOAT",
          { default: 0.1, min: 0.0, max: 200.0, step: 0.0001 },
        ],
        noise: ["LATENT"],
        normalize: ["BOOLEAN", { default: false }],
        average: ["BOOLEAN", { default: false }],
      },
      optional: { mask: ["MASK"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "InjectNoiseToLatent",
    display_name: "InjectNoiseToLatent",
    description: "",
    category: "KJNodes/noise",
    output_node: false,
  },
  AddLabel: {
    input: {
      required: {
        image: ["IMAGE"],
        text_x: ["INT", { default: 10, min: 0, max: 4096, step: 1 }],
        text_y: ["INT", { default: 2, min: 0, max: 4096, step: 1 }],
        height: ["INT", { default: 48, min: 0, max: 4096, step: 1 }],
        font_size: ["INT", { default: 32, min: 0, max: 4096, step: 1 }],
        font_color: ["STRING", { default: "white" }],
        label_color: ["STRING", { default: "black" }],
        font: ["STRING", { default: "TTNorms-Black.otf" }],
        text: ["STRING", { default: "Text" }],
        direction: [["up", "down"], { default: "up" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "AddLabel",
    display_name: "AddLabel",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ReferenceOnlySimple3: {
    input: {
      required: {
        model: ["MODEL"],
        reference: ["LATENT"],
        reference2: ["LATENT"],
        input: ["LATENT"],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["MODEL", "LATENT"],
    output_is_list: [false, false],
    output_name: ["MODEL", "LATENT"],
    name: "ReferenceOnlySimple3",
    display_name: "ReferenceOnlySimple3",
    description: "",
    category: "KJNodes/experiments",
    output_node: false,
  },
  SoundReactive: {
    input: {
      required: {
        sound_level: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 99999, step: 0.01 },
        ],
        start_range_hz: ["INT", { default: 150, min: 0, max: 9999, step: 1 }],
        end_range_hz: ["INT", { default: 2000, min: 0, max: 9999, step: 1 }],
        multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 99999, step: 0.01 },
        ],
        smoothing_factor: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
        normalize: ["BOOLEAN", { default: false }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["sound_level", "sound_level_int"],
    name: "SoundReactive",
    display_name: "SoundReactive",
    description: "",
    category: "KJNodes/experimental",
    output_node: false,
  },
  GenerateNoise: {
    input: {
      required: {
        width: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        height: ["INT", { default: 512, min: 16, max: 4096, step: 1 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
        seed: [
          "INT",
          { default: 123, min: 0, max: 18446744073709551615, step: 1 },
        ],
        multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 4096, step: 0.01 },
        ],
        constant_batch_noise: ["BOOLEAN", { default: false }],
        normalize: ["BOOLEAN", { default: false }],
      },
      optional: { model: ["MODEL"], sigmas: ["SIGMAS"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "GenerateNoise",
    display_name: "GenerateNoise",
    description: "",
    category: "KJNodes/noise",
    output_node: false,
  },
  StableZero123_BatchSchedule: {
    input: {
      required: {
        clip_vision: ["CLIP_VISION"],
        init_image: ["IMAGE"],
        vae: ["VAE"],
        width: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 256, min: 16, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
        interpolation: [["linear", "ease_in", "ease_out", "ease_in_out"]],
        azimuth_points_string: [
          "STRING",
          { default: "0:(0.0),\n7:(1.0),\n15:(0.0)\n", multiline: true },
        ],
        elevation_points_string: [
          "STRING",
          { default: "0:(0.0),\n7:(0.0),\n15:(0.0)\n", multiline: true },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "latent"],
    name: "StableZero123_BatchSchedule",
    display_name: "StableZero123_BatchSchedule",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  GetImagesFromBatchIndexed: {
    input: {
      required: {
        images: ["IMAGE"],
        indexes: ["STRING", { default: "0, 1, 2", multiline: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "GetImagesFromBatchIndexed",
    display_name: "GetImagesFromBatchIndexed",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  ImageBatchRepeatInterleaving: {
    input: {
      required: {
        images: ["IMAGE"],
        repeats: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBatchRepeatInterleaving",
    display_name: "ImageBatchRepeatInterleaving",
    description: "",
    category: "KJNodes",
    output_node: false,
  },
  LoraLoaderTagsQuery: {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 2.0, step: 0.1 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 2.0, step: 0.1 },
        ],
        query_tags: ["BOOLEAN", { default: true }],
        tags_out: ["BOOLEAN", { default: true }],
        print_tags: ["BOOLEAN", { default: false }],
        bypass: ["BOOLEAN", { default: false }],
        force_fetch: ["BOOLEAN", { default: false }],
      },
      optional: { opt_prompt: ["STRING", { forceInput: true }] },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "STRING"],
    name: "LoraLoaderTagsQuery",
    display_name: "LoraLoaderTagsQuery",
    description: "",
    category: "loaders",
    output_node: false,
  },
  "XY Input: Lora Block Weight //Inspire": {
    input: {
      required: {
        category_filter: [["All", ""]],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        inverse: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        A: ["FLOAT", { default: 1.0, min: -10.0, max: 10.0, step: 0.01 }],
        B: ["FLOAT", { default: 1.0, min: -10.0, max: 10.0, step: 0.01 }],
        preset: [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "@SD-FULL-TEST:17",
            "@SD-BLOCK1-TEST:17,12,1",
            "@SD-BLOCK2-TEST:17,12,2",
            "@SD-BLOCK3-TEST:17,12,3",
            "@SD-BLOCK4-TEST:17,12,4",
            "@SD-BLOCK5-TEST:17,12,5",
            "@SD-BLOCK6-TEST:17,12,6",
            "@SD-BLOCK7-TEST:17,12,7",
            "@SD-BLOCK8-TEST:17,12,8",
            "@SD-BLOCK9-TEST:17,12,9",
            "@SD-BLOCK10-TEST:17,12,10",
            "@SD-BLOCK11-TEST:17,12,11",
            "@SD-BLOCK12-TEST:17,12,12",
            "@SD-BLOCK13-TEST:17,12,13",
            "@SD-BLOCK14-TEST:17,12,14",
            "@SD-BLOCK15-TEST:17,12,15",
            "@SD-BLOCK16-TEST:17,12,16",
            "@SD-BLOCK17-TEST:17,12,17",
            "@SD-LyC-FULL-TEST:27",
            "@SDXL-FULL-TEST:12",
            "@SDXL-LyC-FULL-TEST:21",
          ],
        ],
        block_vectors: [
          "STRING",
          {
            multiline: true,
            default:
              "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL",
            placeholder: "{target vector}/{reference vector}",
            "pysssss.autocomplete": false,
          },
        ],
        heatmap_palette: [["viridis", "magma", "plasma", "inferno", "cividis"]],
        heatmap_alpha: [
          "FLOAT",
          { default: 0.8, min: 0.0, max: 1.0, step: 0.01 },
        ],
        heatmap_strength: [
          "FLOAT",
          { default: 1.5, min: 0.0, max: 10.0, step: 0.01 },
        ],
        xyplot_mode: [["Simple", "Diff", "Diff+Heatmap"]],
      },
    },
    output: ["XY", "XY"],
    output_is_list: [false, false],
    output_name: ["X (vectors)", "Y (effect_compares)"],
    name: "XY Input: Lora Block Weight //Inspire",
    display_name: "XY Input: Lora Block Weight",
    description: "",
    category: "InspirePack/LoraBlockWeight",
    output_node: false,
  },
  "LoraLoaderBlockWeight //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        category_filter: [["All", ""]],
        lora_name: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        inverse: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        A: ["FLOAT", { default: 4.0, min: -10.0, max: 10.0, step: 0.01 }],
        B: ["FLOAT", { default: 1.0, min: -10.0, max: 10.0, step: 0.01 }],
        preset: [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
          ],
        ],
        block_vector: [
          "STRING",
          {
            multiline: true,
            placeholder: "block weight vectors",
            default: "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "pysssss.autocomplete": false,
          },
        ],
        bypass: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["model", "clip", "populated_vector"],
    name: "LoraLoaderBlockWeight //Inspire",
    display_name: "Lora Loader (Block Weight)",
    description: "",
    category: "InspirePack/LoraBlockWeight",
    output_node: false,
  },
  "LoraBlockInfo //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_name: [["__models__"]],
        block_info: ["STRING", { multiline: true }],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "LoraBlockInfo //Inspire",
    display_name: "Lora Block Info",
    description: "",
    category: "InspirePack/LoraBlockWeight",
    output_node: true,
  },
  "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        detect_hand: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        detect_body: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        detect_face: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        resolution_upscale_by: [
          "FLOAT",
          { default: 1.0, min: 0.5, max: 100, step: 0.1 },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "OpenPose Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "DWPreprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        detect_hand: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        detect_body: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        detect_face: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        resolution_upscale_by: [
          "FLOAT",
          { default: 1.0, min: 0.5, max: 100, step: 0.1 },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "DWPreprocessor_Provider_for_SEGS //Inspire",
    display_name: "DWPreprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        a: [
          "FLOAT",
          {
            default: 6.283185307179586,
            min: 0.0,
            max: 15.707963267948966,
            step: 0.05,
          },
        ],
        bg_threshold: ["FLOAT", { default: 0.1, min: 0, max: 1, step: 0.05 }],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "MiDaS Depth Map Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        rm_nearest: ["FLOAT", { default: 0.0, min: 0.0, max: 100, step: 0.1 }],
        rm_background: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 100, step: 0.1 },
        ],
      },
      optional: {
        boost: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "LeReS Depth Map Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "Canny_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        low_threshold: [
          "FLOAT",
          { default: 0.4, min: 0.01, max: 0.99, step: 0.01 },
        ],
        high_threshold: [
          "FLOAT",
          { default: 0.8, min: 0.01, max: 0.99, step: 0.01 },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "Canny_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "Canny Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        max_faces: ["INT", { default: 10, min: 1, max: 50, step: 1 }],
        min_confidence: [
          "FLOAT",
          { default: 0.5, min: 0.01, max: 1.0, step: 0.01 },
        ],
        resolution_upscale_by: [
          "FLOAT",
          { default: 1.0, min: 0.5, max: 100, step: 0.1 },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "MediaPipe FaceMesh Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "HEDPreprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        safe: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "HEDPreprocessor_Provider_for_SEGS //Inspire",
    display_name: "HED Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        safe: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
    display_name: "Fake Scribble Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    input: { required: {} },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "AnimeLineArt Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    input: { required: {} },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "Manga2Anime LineArt Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        coarse: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "LineArt Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "Color_Preprocessor_Provider_for_SEGS //Inspire": {
    input: { required: {} },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "Color_Preprocessor_Provider_for_SEGS //Inspire",
    display_name: "Color Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "InpaintPreprocessor_Provider_for_SEGS //Inspire": {
    input: { required: {} },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "InpaintPreprocessor_Provider_for_SEGS //Inspire",
    display_name: "Inpaint Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "TilePreprocessor_Provider_for_SEGS //Inspire": {
    input: {
      required: {
        pyrUp_iters: ["INT", { default: 3, min: 1, max: 10, step: 1 }],
      },
    },
    output: ["SEGS_PREPROCESSOR"],
    output_is_list: [false],
    output_name: ["SEGS_PREPROCESSOR"],
    name: "TilePreprocessor_Provider_for_SEGS //Inspire",
    display_name: "Tile Preprocessor Provider (SEGS)",
    description: "",
    category: "InspirePack/SEGS/ControlNet",
    output_node: false,
  },
  "MediaPipeFaceMeshDetectorProvider //Inspire": {
    input: {
      required: {
        max_faces: ["INT", { default: 10, min: 1, max: 50, step: 1 }],
        face: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        mouth: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        left_eyebrow: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        left_eye: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        left_pupil: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        right_eyebrow: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        right_eye: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        right_pupil: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    output_is_list: [false, false],
    output_name: ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    name: "MediaPipeFaceMeshDetectorProvider //Inspire",
    display_name: "MediaPipeFaceMesh Detector Provider",
    description: "",
    category: "InspirePack/Detector",
    output_node: false,
  },
  "KSampler //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        noise_mode: [["GPU(=A1111)", "CPU"]],
        batch_seed_mode: [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05",
          ],
        ],
        variation_seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        variation_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSampler //Inspire",
    display_name: "KSampler (inspire)",
    description: "",
    category: "InspirePack/a1111_compat",
    output_node: false,
  },
  "KSamplerAdvanced //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.5, round: 0.01 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        noise_mode: [["GPU(=A1111)", "CPU"]],
        return_with_leftover_noise: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        batch_seed_mode: [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05",
          ],
        ],
        variation_seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        variation_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      optional: { noise_opt: ["NOISE"] },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSamplerAdvanced //Inspire",
    display_name: "KSamplerAdvanced (inspire)",
    description: "",
    category: "InspirePack/a1111_compat",
    output_node: false,
  },
  "LoadPromptsFromDir //Inspire": {
    input: { required: { prompt_dir: [["example"]] } },
    output: ["ZIPPED_PROMPT"],
    output_is_list: [true],
    output_name: ["ZIPPED_PROMPT"],
    name: "LoadPromptsFromDir //Inspire",
    display_name: "Load Prompts From Dir (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: false,
  },
  "LoadPromptsFromFile //Inspire": {
    input: {
      required: {
        prompt_file: [["example/prompt2.txt", "example/prompt1.txt"]],
      },
    },
    output: ["ZIPPED_PROMPT"],
    output_is_list: [true],
    output_name: ["ZIPPED_PROMPT"],
    name: "LoadPromptsFromFile //Inspire",
    display_name: "Load Prompts From File (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: false,
  },
  "LoadSinglePromptFromFile //Inspire": {
    input: {
      required: {
        prompt_file: [["example/prompt2.txt", "example/prompt1.txt"]],
        index: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["ZIPPED_PROMPT"],
    output_is_list: [true],
    output_name: ["ZIPPED_PROMPT"],
    name: "LoadSinglePromptFromFile //Inspire",
    display_name: "Load Single Prompt From File (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: false,
  },
  "UnzipPrompt //Inspire": {
    input: { required: { zipped_prompt: ["ZIPPED_PROMPT"] } },
    output: ["STRING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["positive", "negative", "name"],
    name: "UnzipPrompt //Inspire",
    display_name: "Unzip Prompt (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: false,
  },
  "ZipPrompt //Inspire": {
    input: {
      required: {
        positive: ["STRING", { forceInput: true, multiline: true }],
        negative: ["STRING", { forceInput: true, multiline: true }],
      },
      optional: {
        name_opt: ["STRING", { forceInput: true, multiline: false }],
      },
    },
    output: ["ZIPPED_PROMPT"],
    output_is_list: [false],
    output_name: ["ZIPPED_PROMPT"],
    name: "ZipPrompt //Inspire",
    display_name: "Zip Prompt (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: false,
  },
  "PromptExtractor //Inspire": {
    input: {
      required: {
        image: [["__inputs__"], { image_upload: true }],
        positive_id: ["STRING", {}],
        negative_id: ["STRING", {}],
        info: ["STRING", { multiline: true }],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "PromptExtractor //Inspire",
    display_name: "Prompt Extractor (Inspire)",
    description: "",
    category: "InspirePack/prompt",
    output_node: true,
  },
  "GlobalSeed //Inspire": {
    input: {
      required: {
        value: ["INT", { default: 0, min: 0, max: 1125899906842624 }],
        mode: [
          "BOOLEAN",
          {
            default: true,
            label_on: "control_before_generate",
            label_off: "control_after_generate",
          },
        ],
        action: [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node",
          ],
        ],
        last_seed: ["STRING", { default: "" }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "GlobalSeed //Inspire",
    display_name: "Global Seed (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: true,
  },
  "GlobalSampler //Inspire": {
    input: {
      required: {
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "GlobalSampler //Inspire",
    display_name: "Global Sampler (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: true,
  },
  "BindImageListPromptList //Inspire": {
    input: {
      required: {
        images: ["IMAGE"],
        zipped_prompts: ["ZIPPED_PROMPT"],
        default_positive: [
          "STRING",
          { multiline: true, placeholder: "default positive" },
        ],
        default_negative: [
          "STRING",
          { multiline: true, placeholder: "default negative" },
        ],
      },
    },
    output: ["IMAGE", "STRING", "STRING", "STRING"],
    output_is_list: [true, true, true],
    output_name: ["image", "positive", "negative", "prompt_label"],
    name: "BindImageListPromptList //Inspire",
    display_name: "Bind [ImageList, PromptList] (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: false,
  },
  "WildcardEncode //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
          { default: "comfy++" },
        ],
        wildcard_text: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            placeholder: "Wildcard Prmopt (User Input)",
          },
        ],
        populated_text: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            placeholder: "Populated Prmopt (Will be generated automatically)",
          },
        ],
        mode: [
          "BOOLEAN",
          { default: true, label_on: "Populate", label_off: "Fixed" },
        ],
        "Select to add LoRA": [
          ["Select the LoRA to add to the text", "__models__"],
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["MODEL", "CLIP", "CONDITIONING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["model", "clip", "conditioning", "populated_text"],
    name: "WildcardEncode //Inspire",
    display_name: "Wildcard Encode (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: false,
  },
  "PromptBuilder //Inspire": {
    input: {
      required: {
        category: [
          [
            "Angle of View",
            "Artists",
            "Character Types",
            "Colors",
            "Composition",
            "Composition Form",
            "Lighting",
            "Negative",
            "Picture Effect",
            "Picture Quality",
            "Setting",
            "Shot",
            "Style",
            "#PLACEHOLDER",
          ],
        ],
        preset: [["#PRESET"]],
        text: ["STRING", { multiline: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "PromptBuilder //Inspire",
    display_name: "Prompt Builder (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: false,
  },
  "SeedExplorer //Inspire": {
    input: {
      required: {
        latent: ["LATENT"],
        seed_prompt: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            "pysssss.autocomplete": false,
          },
        ],
        enable_additional: [
          "BOOLEAN",
          { default: true, label_on: "true", label_off: "false" },
        ],
        additional_seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        additional_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        noise_mode: [["GPU(=A1111)", "CPU"]],
        initial_batch_seed_mode: [["incremental", "comfy"]],
      },
    },
    output: ["NOISE"],
    output_is_list: [false],
    output_name: ["NOISE"],
    name: "SeedExplorer //Inspire",
    display_name: "Seed Explorer (Inspire)",
    description: "",
    category: "InspirePack/Prompt",
    output_node: false,
  },
  "ListCounter //Inspire": {
    input: {
      required: {
        signal: ["*"],
        base_value: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "ListCounter //Inspire",
    display_name: "List Counter (Inspire)",
    description: "",
    category: "InspirePack/Util",
    output_node: false,
  },
  "CLIPTextEncodeWithWeight //Inspire": {
    input: {
      required: {
        text: ["STRING", { multiline: true }],
        clip: ["CLIP"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        add_weight: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncodeWithWeight //Inspire",
    display_name: "CLIPTextEncodeWithWeight (Inspire)",
    description: "",
    category: "InspirePack/Util",
    output_node: false,
  },
  "LoadImagesFromDir //Inspire": {
    input: {
      required: { directory: ["STRING", { default: "" }] },
      optional: {
        image_load_cap: ["INT", { default: 0, min: 0, step: 1 }],
        start_index: ["INT", { default: 0, min: 0, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "INT"],
    name: "LoadImagesFromDir //Inspire",
    display_name: "Load Image Batch From Dir (Inspire)",
    description: "",
    category: "image",
    output_node: false,
  },
  "LoadImageListFromDir //Inspire": {
    input: {
      required: { directory: ["STRING", { default: "" }] },
      optional: {
        image_load_cap: ["INT", { default: 0, min: 0, step: 1 }],
        start_index: ["INT", { default: 0, min: 0, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [true, true],
    output_name: ["IMAGE", "MASK"],
    name: "LoadImageListFromDir //Inspire",
    display_name: "Load Image List From Dir (Inspire)",
    description: "",
    category: "image",
    output_node: false,
  },
  "LoadImage //Inspire": {
    input: {
      required: {
        image: [["__inputs__", "#DATA"], { image_upload: true }],
        image_data: ["STRING", { multiline: false }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "LoadImage //Inspire",
    display_name: "LoadImage //Inspire",
    description: "",
    category: "InspirePack/image",
    output_node: false,
  },
  "ChangeImageBatchSize //Inspire": {
    input: {
      required: {
        image: ["IMAGE"],
        batch_size: ["INT", { default: 1, min: 1, max: 4096, step: 1 }],
        mode: [["simple"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ChangeImageBatchSize //Inspire",
    display_name: "Change Image Batch Size (Inspire)",
    description: "",
    category: "InspirePack/image",
    output_node: false,
  },
  "RegionalPromptSimple //Inspire": {
    input: {
      required: {
        basic_pipe: ["BASIC_PIPE"],
        mask: ["MASK"],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        wildcard_prompt: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            placeholder: "wildcard prompt",
          },
        ],
        controlnet_in_pipe: [
          "BOOLEAN",
          { default: false, label_on: "Keep", label_off: "Override" },
        ],
      },
    },
    output: ["REGIONAL_PROMPTS"],
    output_is_list: [false],
    output_name: ["REGIONAL_PROMPTS"],
    name: "RegionalPromptSimple //Inspire",
    display_name: "Regional Prompt Simple (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalPromptColorMask //Inspire": {
    input: {
      required: {
        basic_pipe: ["BASIC_PIPE"],
        color_mask: ["IMAGE"],
        mask_color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        wildcard_prompt: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            placeholder: "wildcard prompt",
          },
        ],
        controlnet_in_pipe: [
          "BOOLEAN",
          { default: false, label_on: "Keep", label_off: "Override" },
        ],
      },
    },
    output: ["REGIONAL_PROMPTS", "MASK"],
    output_is_list: [false, false],
    output_name: ["REGIONAL_PROMPTS", "MASK"],
    name: "RegionalPromptColorMask //Inspire",
    display_name: "Regional Prompt By Color Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalConditioningSimple //Inspire": {
    input: {
      required: {
        clip: ["CLIP"],
        mask: ["MASK"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        set_cond_area: [["default", "mask bounds"]],
        prompt: ["STRING", { multiline: true, placeholder: "prompt" }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "RegionalConditioningSimple //Inspire",
    display_name: "Regional Conditioning Simple (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalConditioningColorMask //Inspire": {
    input: {
      required: {
        clip: ["CLIP"],
        color_mask: ["IMAGE"],
        mask_color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        set_cond_area: [["default", "mask bounds"]],
        prompt: ["STRING", { multiline: true, placeholder: "prompt" }],
      },
    },
    output: ["CONDITIONING", "MASK"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "MASK"],
    name: "RegionalConditioningColorMask //Inspire",
    display_name: "Regional Conditioning By Color Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalIPAdapterMask //Inspire": {
    input: {
      required: {
        mask: ["MASK"],
        image: ["IMAGE"],
        weight: ["FLOAT", { default: 0.7, min: -1, max: 3, step: 0.05 }],
        noise: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
    },
    output: ["REGIONAL_IPADAPTER"],
    output_is_list: [false],
    output_name: ["REGIONAL_IPADAPTER"],
    name: "RegionalIPAdapterMask //Inspire",
    display_name: "Regional IPAdapter Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalIPAdapterColorMask //Inspire": {
    input: {
      required: {
        color_mask: ["IMAGE"],
        mask_color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        image: ["IMAGE"],
        weight: ["FLOAT", { default: 0.7, min: -1, max: 3, step: 0.05 }],
        noise: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
    },
    output: ["REGIONAL_IPADAPTER", "MASK"],
    output_is_list: [false, false],
    output_name: ["REGIONAL_IPADAPTER", "MASK"],
    name: "RegionalIPAdapterColorMask //Inspire",
    display_name: "Regional IPAdapter By Color Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalIPAdapterEncodedMask //Inspire": {
    input: {
      required: {
        mask: ["MASK"],
        embeds: ["embeds"],
        weight: ["FLOAT", { default: 0.7, min: -1, max: 3, step: 0.05 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
    },
    output: ["REGIONAL_IPADAPTER"],
    output_is_list: [false],
    output_name: ["REGIONAL_IPADAPTER"],
    name: "RegionalIPAdapterEncodedMask //Inspire",
    display_name: "Regional IPAdapter Encoded Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalIPAdapterEncodedColorMask //Inspire": {
    input: {
      required: {
        color_mask: ["IMAGE"],
        mask_color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        embeds: ["EMBEDS"],
        weight: ["FLOAT", { default: 0.7, min: -1, max: 3, step: 0.05 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
    },
    output: ["REGIONAL_IPADAPTER", "MASK"],
    output_is_list: [false, false],
    output_name: ["REGIONAL_IPADAPTER", "MASK"],
    name: "RegionalIPAdapterEncodedColorMask //Inspire",
    display_name: "Regional IPAdapter Encoded By Color Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalSeedExplorerMask //Inspire": {
    input: {
      required: {
        mask: ["MASK"],
        noise: ["NOISE"],
        seed_prompt: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            "pysssss.autocomplete": false,
          },
        ],
        enable_additional: [
          "BOOLEAN",
          { default: true, label_on: "true", label_off: "false" },
        ],
        additional_seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        additional_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        noise_mode: [["GPU(=A1111)", "CPU"]],
      },
    },
    output: ["NOISE"],
    output_is_list: [false],
    output_name: ["NOISE"],
    name: "RegionalSeedExplorerMask //Inspire",
    display_name: "Regional Seed Explorer By Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "RegionalSeedExplorerColorMask //Inspire": {
    input: {
      required: {
        color_mask: ["IMAGE"],
        mask_color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        noise: ["NOISE"],
        seed_prompt: [
          "STRING",
          {
            multiline: true,
            dynamicPrompts: false,
            "pysssss.autocomplete": false,
          },
        ],
        enable_additional: [
          "BOOLEAN",
          { default: true, label_on: "true", label_off: "false" },
        ],
        additional_seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        additional_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        noise_mode: [["GPU(=A1111)", "CPU"]],
      },
    },
    output: ["NOISE", "MASK"],
    output_is_list: [false, false],
    output_name: ["NOISE", "MASK"],
    name: "RegionalSeedExplorerColorMask //Inspire",
    display_name: "Regional Seed Explorer By Color Mask (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "ToIPAdapterPipe //Inspire": {
    input: {
      required: {
        ipadapter: ["IPADAPTER"],
        clip_vision: ["CLIP_VISION"],
        model: ["MODEL"],
      },
    },
    output: ["IPADAPTER_PIPE"],
    output_is_list: [false],
    output_name: ["IPADAPTER_PIPE"],
    name: "ToIPAdapterPipe //Inspire",
    display_name: "ToIPAdapterPipe (Inspire)",
    description: "",
    category: "InspirePack/Util",
    output_node: false,
  },
  "FromIPAdapterPipe //Inspire": {
    input: { required: { ipadapter_pipe: ["IPADAPTER_PIPE"] } },
    output: ["IPADAPTER", "CLIP_VISION", "MODEL"],
    output_is_list: [false, false, false],
    output_name: ["IPADAPTER", "CLIP_VISION", "MODEL"],
    name: "FromIPAdapterPipe //Inspire",
    display_name: "FromIPAdapterPipe (Inspire)",
    description: "",
    category: "InspirePack/Util",
    output_node: false,
  },
  "ApplyRegionalIPAdapters //Inspire": {
    input: {
      required: {
        ipadapter_pipe: ["IPADAPTER_PIPE"],
        regional_ipadapter1: ["REGIONAL_IPADAPTER"],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ApplyRegionalIPAdapters //Inspire",
    display_name: "Apply Regional IPAdapters (Inspire)",
    description: "",
    category: "InspirePack/Regional",
    output_node: false,
  },
  "KSamplerProgress //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        noise_mode: [["GPU(=A1111)", "CPU"]],
        interval: ["INT", { default: 1, min: 1, max: 10000 }],
        omit_start_latent: [
          "BOOLEAN",
          { default: true, label_on: "True", label_off: "False" },
        ],
      },
    },
    output: ["LATENT", "LATENT"],
    output_is_list: [false, false],
    output_name: ["latent", "progress_latent"],
    name: "KSamplerProgress //Inspire",
    display_name: "KSampler Progress (Inspire)",
    description: "",
    category: "InspirePack/analysis",
    output_node: false,
  },
  "KSamplerAdvancedProgress //Inspire": {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.5, round: 0.01 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        noise_mode: [["GPU(=A1111)", "CPU"]],
        return_with_leftover_noise: [
          "BOOLEAN",
          { default: false, label_on: "enable", label_off: "disable" },
        ],
        interval: ["INT", { default: 1, min: 1, max: 10000 }],
        omit_start_latent: [
          "BOOLEAN",
          { default: false, label_on: "True", label_off: "False" },
        ],
      },
      optional: { prev_progress_latent_opt: ["LATENT"] },
    },
    output: ["LATENT", "LATENT"],
    output_is_list: [false, false],
    output_name: ["latent", "progress_latent"],
    name: "KSamplerAdvancedProgress //Inspire",
    display_name: "KSampler Advanced Progress (Inspire)",
    description: "",
    category: "InspirePack/analysis",
    output_node: false,
  },
  "CacheBackendData //Inspire": {
    input: {
      required: {
        key: [
          "STRING",
          {
            multiline: false,
            placeholder:
              "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)",
          },
        ],
        tag: [
          "STRING",
          { multiline: false, placeholder: "Tag: short description" },
        ],
        data: ["*"],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["data opt"],
    name: "CacheBackendData //Inspire",
    display_name: "Cache Backend Data (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "CacheBackendDataNumberKey //Inspire": {
    input: {
      required: {
        key: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        tag: [
          "STRING",
          { multiline: false, placeholder: "Tag: short description" },
        ],
        data: ["*"],
      },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["data opt"],
    name: "CacheBackendDataNumberKey //Inspire",
    display_name: "Cache Backend Data [NumberKey] (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "CacheBackendDataList //Inspire": {
    input: {
      required: {
        key: [
          "STRING",
          {
            multiline: false,
            placeholder:
              "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)",
          },
        ],
        tag: [
          "STRING",
          { multiline: false, placeholder: "Tag: short description" },
        ],
        data: ["*"],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["data opt"],
    name: "CacheBackendDataList //Inspire",
    display_name: "Cache Backend Data List (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "CacheBackendDataNumberKeyList //Inspire": {
    input: {
      required: {
        key: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        tag: [
          "STRING",
          { multiline: false, placeholder: "Tag: short description" },
        ],
        data: ["*"],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["data opt"],
    name: "CacheBackendDataNumberKeyList //Inspire",
    display_name: "Cache Backend Data List [NumberKey] (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "RetrieveBackendData //Inspire": {
    input: {
      required: {
        key: [
          "STRING",
          {
            multiline: false,
            placeholder:
              "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)",
          },
        ],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["data"],
    name: "RetrieveBackendData //Inspire",
    display_name: "Retrieve Backend Data (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: false,
  },
  "RetrieveBackendDataNumberKey //Inspire": {
    input: {
      required: {
        key: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["data"],
    name: "RetrieveBackendDataNumberKey //Inspire",
    display_name: "Retrieve Backend Data [NumberKey] (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: false,
  },
  "RemoveBackendData //Inspire": {
    input: {
      required: {
        key: [
          "STRING",
          { multiline: false, placeholder: "Input data key ('*' = clear all)" },
        ],
      },
      optional: { signal_opt: ["*"] },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal"],
    name: "RemoveBackendData //Inspire",
    display_name: "Remove Backend Data (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "RemoveBackendDataNumberKey //Inspire": {
    input: {
      required: {
        key: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      optional: { signal_opt: ["*"] },
    },
    output: ["*"],
    output_is_list: [false],
    output_name: ["signal"],
    name: "RemoveBackendDataNumberKey //Inspire",
    display_name: "Remove Backend Data [NumberKey] (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "ShowCachedInfo //Inspire": {
    input: {
      required: {
        cache_info: ["STRING", { multiline: true, default: "" }],
        key: ["STRING", { multiline: false, default: "" }],
      },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ShowCachedInfo //Inspire",
    display_name: "Show Cached Info (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: true,
  },
  "CheckpointLoaderSimpleShared //Inspire": {
    input: {
      required: {
        ckpt_name: [["__models__"]],
        key_opt: [
          "STRING",
          {
            multiline: false,
            placeholder: "If empty, use 'ckpt_name' as the key.",
          },
        ],
      },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["model", "clip", "vae", "cache key"],
    name: "CheckpointLoaderSimpleShared //Inspire",
    display_name: "Shared Checkpoint Loader (Inspire)",
    description: "",
    category: "InspirePack/Backend",
    output_node: false,
  },
  "FloatRange //Inspire": {
    input: {
      required: {
        start: ["FLOAT", { default: 0.0, min: -100.0, max: 100.0, step: 1e-9 }],
        stop: ["FLOAT", { default: 1.0, min: -100.0, max: 100.0, step: 1e-9 }],
        step: ["FLOAT", { default: 0.01, min: 0.0, max: 100.0, step: 1e-9 }],
        limit: ["INT", { default: 100, min: 2, max: 4096, step: 1 }],
        ensure_end: [
          "BOOLEAN",
          { default: true, label_on: "enable", label_off: "disable" },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [true],
    output_name: ["FLOAT"],
    name: "FloatRange //Inspire",
    display_name: "Float Range (Inspire)",
    description: "",
    category: "InspirePack/util",
    output_node: false,
  },
  "ConcatConditioningsWithMultiplier //Inspire": {
    input: {
      required: { conditioning1: ["CONDITIONING"] },
      optional: {
        multiplier1: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConcatConditioningsWithMultiplier //Inspire",
    display_name: "Concat Conditionings with Multiplier (Inspire)",
    description: "",
    category: "InspirePack/__for_testing",
    output_node: false,
  },
  CLIPSeg: {
    input: {
      required: { image: ["IMAGE"], text: ["STRING", { multiline: false }] },
      optional: {
        blur: ["FLOAT", { min: 0, max: 15, step: 0.1, default: 7 }],
        threshold: ["FLOAT", { min: 0, max: 1, step: 0.05, default: 0.4 }],
        dilation_factor: ["INT", { min: 0, max: 10, step: 1, default: 4 }],
      },
    },
    output: ["MASK", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["Mask", "Heatmap Mask", "BW Mask"],
    name: "CLIPSeg",
    display_name: "CLIPSeg",
    description: "",
    category: "image",
    output_node: false,
  },
  CombineSegMasks: {
    input: {
      required: { input_image: ["IMAGE"], mask_1: ["MASK"], mask_2: ["MASK"] },
      optional: { mask_3: ["MASK"] },
    },
    output: ["MASK", "IMAGE", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["Combined Mask", "Heatmap Mask", "BW Mask"],
    name: "CombineSegMasks",
    display_name: "CombineSegMasks",
    description: "",
    category: "image",
    output_node: false,
  },
  DynamiCrafterLoader: {
    input: {
      required: {
        resolution: [
          ["576_1024", "320_512", "256_256"],
          { default: "576_1024" },
        ],
        frame_length: ["INT", { default: 16 }],
      },
    },
    output: ["DynamiCrafter"],
    output_is_list: [false],
    output_name: ["model"],
    name: "DynamiCrafterLoader",
    display_name: "DynamiCrafterLoader",
    description: "",
    category: "DynamiCrafter",
    output_node: false,
  },
  "DynamiCrafter Simple": {
    input: {
      required: {
        model: ["DynamiCrafter"],
        image: ["IMAGE"],
        prompt: ["STRING", { default: "" }],
        steps: ["INT", { default: 50 }],
        cfg_scale: ["FLOAT", { default: 7.5 }],
        eta: ["FLOAT", { default: 1.0 }],
        motion: ["INT", { default: 3 }],
        seed: ["INT", { default: 123 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "DynamiCrafter Simple",
    display_name: "DynamiCrafter Simple",
    description: "",
    category: "DynamiCrafter",
    output_node: false,
  },
  TilePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        pyrUp_iters: ["INT", { default: 3, min: 1, max: 10, step: 1 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "TilePreprocessor",
    display_name: "Tile",
    description: "",
    category: "ControlNet Preprocessors/others",
    output_node: false,
  },
  AnimeFace_SemSegPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        remove_background_using_abg: ["BOOLEAN", { default: true }],
        resolution: ["INT", { default: 512, min: 512, max: 512, step: 64 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "ABG_CHARACTER_MASK (MASK)"],
    name: "AnimeFace_SemSegPreprocessor",
    display_name: "Anime Face Segmentor",
    description: "",
    category: "ControlNet Preprocessors/Semantic Segmentation",
    output_node: false,
  },
  BinaryPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        bin_threshold: ["INT", { default: 100, min: 0, max: 255, step: 1 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "BinaryPreprocessor",
    display_name: "Binary Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  "Zoe-DepthMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Zoe-DepthMapPreprocessor",
    display_name: "Zoe Depth Map",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  InpaintPreprocessor: {
    input: { required: { image: ["IMAGE"], mask: ["MASK"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "InpaintPreprocessor",
    display_name: "Inpaint Preprocessor",
    description: "",
    category: "ControlNet Preprocessors/others",
    output_node: false,
  },
  ColorPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ColorPreprocessor",
    display_name: "Color Pallete",
    description: "",
    category: "ControlNet Preprocessors/T2IAdapter-only",
    output_node: false,
  },
  DepthAnythingPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        ckpt_name: [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth",
          ],
          { default: "depth_anything_vitl14.pth" },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "DepthAnythingPreprocessor",
    display_name: "Depth Anything",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  Zoe_DepthAnythingPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        environment: [["indoor", "outdoor"], { default: "indoor" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Zoe_DepthAnythingPreprocessor",
    display_name: "Zoe Depth Anything",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  DensePosePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        model: [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript",
          ],
          { default: "densepose_r50_fpn_dl.torchscript" },
        ],
        cmap: [
          ["Viridis (MagicAnimate)", "Parula (CivitAI)"],
          { default: "Viridis (MagicAnimate)" },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "DensePosePreprocessor",
    display_name: "DensePose Estimator",
    description: "",
    category: "ControlNet Preprocessors/Faces and Poses Estimators",
    output_node: false,
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "OneFormer-COCO-SemSegPreprocessor",
    display_name: "OneFormer COCO Segmentor",
    description: "",
    category: "ControlNet Preprocessors/Semantic Segmentation",
    output_node: false,
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "OneFormer-ADE20K-SemSegPreprocessor",
    display_name: "OneFormer ADE20K Segmentor",
    description: "",
    category: "ControlNet Preprocessors/Semantic Segmentation",
    output_node: false,
  },
  "M-LSDPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        score_threshold: [
          "FLOAT",
          { default: 0.1, min: 0.01, max: 2.0, step: 0.01 },
        ],
        dist_threshold: [
          "FLOAT",
          { default: 0.1, min: 0.01, max: 20.0, step: 0.01 },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "M-LSDPreprocessor",
    display_name: "M-LSD Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  DWPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        detect_hand: [["enable", "disable"], { default: "enable" }],
        detect_body: [["enable", "disable"], { default: "enable" }],
        detect_face: [["enable", "disable"], { default: "enable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
        bbox_detector: [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx",
          ],
          { default: "yolox_l.onnx" },
        ],
        pose_estimator: [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx",
          ],
          { default: "dw-ll_ucoco_384_bs5.torchscript.pt" },
        ],
      },
    },
    output: ["IMAGE", "POSE_KEYPOINT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "POSE_KEYPOINT"],
    name: "DWPreprocessor",
    display_name: "DWPose Estimator",
    description: "",
    category: "ControlNet Preprocessors/Faces and Poses Estimators",
    output_node: false,
  },
  AnimalPosePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        bbox_detector: [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx",
          ],
          { default: "yolox_l.torchscript.pt" },
        ],
        pose_estimator: [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx",
          ],
          { default: "rtmpose-m_ap10k_256_bs5.torchscript.pt" },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE", "POSE_KEYPOINT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "POSE_KEYPOINT"],
    name: "AnimalPosePreprocessor",
    display_name: "AnimalPose Estimator (AP10K)",
    description: "",
    category: "ControlNet Preprocessors/Faces and Poses Estimators",
    output_node: false,
  },
  "MediaPipe-FaceMeshPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        max_faces: ["INT", { default: 10, min: 1, max: 50, step: 1 }],
        min_confidence: [
          "FLOAT",
          { default: 0.5, min: 0.01, max: 1.0, step: 0.01 },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "MediaPipe-FaceMeshPreprocessor",
    display_name: "MediaPipe Face Mesh",
    description: "",
    category: "ControlNet Preprocessors/Faces and Poses Estimators",
    output_node: false,
  },
  LineArtPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        coarse: [["disable", "enable"], { default: "disable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "LineArtPreprocessor",
    display_name: "Realistic Lineart",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  "MiDaS-NormalMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        a: [
          "FLOAT",
          {
            default: 6.283185307179586,
            min: 0.0,
            max: 15.707963267948966,
            step: 0.05,
          },
        ],
        bg_threshold: ["FLOAT", { default: 0.1, min: 0, max: 1, step: 0.05 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "MiDaS-NormalMapPreprocessor",
    display_name: "MiDaS Normal Map",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  "MiDaS-DepthMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        a: [
          "FLOAT",
          {
            default: 6.283185307179586,
            min: 0.0,
            max: 15.707963267948966,
            step: 0.05,
          },
        ],
        bg_threshold: ["FLOAT", { default: 0.1, min: 0, max: 1, step: 0.05 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "MiDaS-DepthMapPreprocessor",
    display_name: "MiDaS Depth Map",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  CannyEdgePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        low_threshold: ["INT", { default: 100, min: 0, max: 255, step: 1 }],
        high_threshold: ["INT", { default: 200, min: 0, max: 255, step: 1 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CannyEdgePreprocessor",
    display_name: "Canny Edge",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  ShufflePreprocessor: {
    input: {
      required: {
        image: ["IMAGE"],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ShufflePreprocessor",
    display_name: "Content Shuffle",
    description: "",
    category: "ControlNet Preprocessors/T2IAdapter-only",
    output_node: false,
  },
  AnimeLineArtPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "AnimeLineArtPreprocessor",
    display_name: "Anime Lineart",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  SAMPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SAMPreprocessor",
    display_name: "SAM Segmentor",
    description: "",
    category: "ControlNet Preprocessors/others",
    output_node: false,
  },
  HEDPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        safe: [["enable", "disable"], { default: "enable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "HEDPreprocessor",
    display_name: "HED Soft-Edge Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  FakeScribblePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        safe: [["enable", "disable"], { default: "enable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FakeScribblePreprocessor",
    display_name: "Fake Scribble Lines (aka scribble_hed)",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  ScribblePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ScribblePreprocessor",
    display_name: "Scribble Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  Scribble_XDoG_Preprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        threshold: ["INT", { default: 32, min: 1, max: 64, step: 1 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Scribble_XDoG_Preprocessor",
    display_name: "Scribble XDoG Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  DiffusionEdge_Preprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        environment: [["indoor", "urban", "natrual"], { default: "indoor" }],
        patch_batch_size: ["INT", { default: 4, min: 1, max: 16 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "DiffusionEdge_Preprocessor",
    display_name:
      "Diffusion Edge (batch size \u2191 => speed \u2191, VRAM \u2191)",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  SavePoseKpsAsJsonFile: {
    input: {
      required: {
        pose_kps: ["POSE_KEYPOINT"],
        filename_prefix: ["STRING", { default: "PoseKeypoint" }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SavePoseKpsAsJsonFile",
    display_name: "Save Pose Keypoints",
    description: "",
    category: "ControlNet Preprocessors/Pose Keypoint Postprocess",
    output_node: true,
  },
  FacialPartColoringFromPoseKps: {
    input: {
      required: {
        pose_kps: ["POSE_KEYPOINT"],
        mode: [["point", "polygon"], { default: "polygon" }],
        skin: ["STRING", { default: "rgb(0, 153, 255)", multiline: false }],
        left_eye: ["STRING", { default: "rgb(0, 204, 153)", multiline: false }],
        right_eye: [
          "STRING",
          { default: "rgb(255, 153, 0)", multiline: false },
        ],
        nose: ["STRING", { default: "rgb(255, 102, 255)", multiline: false }],
        upper_lip: ["STRING", { default: "rgb(102, 0, 51)", multiline: false }],
        inner_mouth: [
          "STRING",
          { default: "rgb(255, 204, 255)", multiline: false },
        ],
        lower_lip: [
          "STRING",
          { default: "rgb(255, 0, 102)", multiline: false },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FacialPartColoringFromPoseKps",
    display_name: "Colorize Facial Parts from PoseKPS",
    description: "",
    category: "ControlNet Preprocessors/Pose Keypoint Postprocess",
    output_node: false,
  },
  PiDiNetPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        safe: [["enable", "disable"], { default: "enable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "PiDiNetPreprocessor",
    display_name: "PiDiNet Soft-Edge Lines",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  OpenposePreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        detect_hand: [["enable", "disable"], { default: "enable" }],
        detect_body: [["enable", "disable"], { default: "enable" }],
        detect_face: [["enable", "disable"], { default: "enable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE", "POSE_KEYPOINT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "POSE_KEYPOINT"],
    name: "OpenposePreprocessor",
    display_name: "OpenPose Pose",
    description: "",
    category: "ControlNet Preprocessors/Faces and Poses Estimators",
    output_node: false,
  },
  "LeReS-DepthMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        rm_nearest: ["FLOAT", { default: 0.0, min: 0.0, max: 100, step: 0.1 }],
        rm_background: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 100, step: 0.1 },
        ],
        boost: [["enable", "disable"], { default: "disable" }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "LeReS-DepthMapPreprocessor",
    display_name: "LeReS Depth Map (enable boost for leres++)",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  Unimatch_OptFlowPreprocessor: {
    input: {
      required: {
        ckpt_name: [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth",
          ],
          { default: "gmflow-scale2-regrefine6-mixdata.pth" },
        ],
        backward_flow: ["BOOLEAN", { default: false }],
        bidirectional_flow: ["BOOLEAN", { default: false }],
      },
    },
    output: ["OPTICAL_FLOW", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["OPTICAL_FLOW", "PREVIEW_IMAGE"],
    name: "Unimatch_OptFlowPreprocessor",
    display_name: "Unimatch Optical Flow",
    description: "",
    category: "ControlNet Preprocessors/Optical Flow",
    output_node: false,
  },
  MaskOptFlow: {
    input: { required: { optical_flow: ["OPTICAL_FLOW"], mask: ["MASK"] } },
    output: ["OPTICAL_FLOW", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["OPTICAL_FLOW", "PREVIEW_IMAGE"],
    name: "MaskOptFlow",
    display_name: "Mask Optical Flow (DragNUWA)",
    description: "",
    category: "ControlNet Preprocessors/Optical Flow",
    output_node: false,
  },
  "UniFormer-SemSegPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "UniFormer-SemSegPreprocessor",
    display_name: "UniFormer Segmentor",
    description: "",
    category: "ControlNet Preprocessors/Semantic Segmentation",
    output_node: false,
  },
  SemSegPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SemSegPreprocessor",
    display_name: "Semantic Segmentor (legacy, alias for UniFormer)",
    description: "",
    category: "ControlNet Preprocessors/Semantic Segmentation",
    output_node: false,
  },
  "MeshGraphormer-DepthMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        mask_bbox_padding: ["INT", { default: 30, min: 0, max: 100 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
        mask_type: [
          ["based_on_depth", "tight_bboxes", "original"],
          { default: "based_on_depth" },
        ],
        mask_expand: ["INT", { default: 5, min: -2048, max: 2048, step: 1 }],
        rand_seed: ["INT", { default: 88, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "INPAINTING_MASK"],
    name: "MeshGraphormer-DepthMapPreprocessor",
    display_name: "MeshGraphormer Hand Refiner",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  Manga2Anime_LineArt_Preprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Manga2Anime_LineArt_Preprocessor",
    display_name: "Manga Lineart (aka lineart_anime_denoise)",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  "BAE-NormalMapPreprocessor": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "BAE-NormalMapPreprocessor",
    display_name: "BAE Normal Map",
    description: "",
    category: "ControlNet Preprocessors/Normal and Depth Estimators",
    output_node: false,
  },
  TEEDPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        safe_steps: ["INT", { default: 2, min: 0, max: 10 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "TEEDPreprocessor",
    display_name: "TEEDPreprocessor",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  LineartStandardPreprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        guassian_sigma: ["FLOAT", { default: 6.0, min: 0.0, max: 100.0 }],
        intensity_threshold: ["INT", { default: 8, min: 0, max: 16 }],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "LineartStandardPreprocessor",
    display_name: "Standard Lineart",
    description: "",
    category: "ControlNet Preprocessors/Line Extractors",
    output_node: false,
  },
  AIO_Preprocessor: {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        preprocessor: [
          [
            "TilePreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "BinaryPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "ColorPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DensePosePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "M-LSDPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "LineArtPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DiffusionEdge_Preprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "PiDiNetPreprocessor",
            "OpenposePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "BAE-NormalMapPreprocessor",
            "TEEDPreprocessor",
            "LineartStandardPreprocessor",
          ],
          { default: "CannyEdgePreprocessor" },
        ],
        resolution: ["INT", { default: 512, min: 64, max: 2048, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "AIO_Preprocessor",
    display_name: "AIO Aux Preprocessor",
    description: "",
    category: "ControlNet Preprocessors",
    output_node: false,
  },
  PixelPerfectResolution: {
    input: {
      required: {
        original_image: ["IMAGE"],
        image_gen_width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        image_gen_height: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 8 },
        ],
        resize_mode: [
          ["Just Resize", "Crop and Resize", "Resize and Fill"],
          { default: "Just Resize" },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["RESOLUTION (INT)"],
    name: "PixelPerfectResolution",
    display_name: "Pixel Perfect Resolution",
    description: "",
    category: "ControlNet Preprocessors",
    output_node: false,
  },
  ImageGenResolutionFromImage: {
    input: { required: { image: ["IMAGE"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"],
    name: "ImageGenResolutionFromImage",
    display_name: "Generation Resolution From Image",
    description: "",
    category: "ControlNet Preprocessors",
    output_node: false,
  },
  ImageGenResolutionFromLatent: {
    input: { required: { latent: ["LATENT"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"],
    name: "ImageGenResolutionFromLatent",
    display_name: "Generation Resolution From Latent",
    description: "",
    category: "ControlNet Preprocessors",
    output_node: false,
  },
  HintImageEnchance: {
    input: {
      required: {
        hint_image: ["IMAGE"],
        image_gen_width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        image_gen_height: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 8 },
        ],
        resize_mode: [
          ["Just Resize", "Crop and Resize", "Resize and Fill"],
          { default: "Just Resize" },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "HintImageEnchance",
    display_name: "Enchance And Resize Hint Images",
    description: "",
    category: "ControlNet Preprocessors",
    output_node: false,
  },
  ADE_AnimateDiffLoRALoader: {
    input: {
      required: {
        lora_name: [["__models__"]],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.001 }],
      },
      optional: { prev_motion_lora: ["MOTION_LORA"] },
    },
    output: ["MOTION_LORA"],
    output_is_list: [false],
    output_name: ["MOTION_LORA"],
    name: "ADE_AnimateDiffLoRALoader",
    display_name: "Load AnimateDiff LoRA \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    output_node: false,
  },
  ADE_AnimateDiffSamplingSettings: {
    input: {
      required: {
        batch_offset: ["INT", { default: 0, min: 0, max: 9007199254740991 }],
        noise_type: [
          ["default", "constant", "empty", "repeated_context", "FreeNoise"],
        ],
        seed_gen: [["comfy", "auto1111"]],
        seed_offset: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
      },
      optional: {
        noise_layers: ["NOISE_LAYERS"],
        iteration_opts: ["ITERATION_OPTS"],
        seed_override: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        adapt_denoise_steps: ["BOOLEAN", { default: false }],
        custom_cfg: ["CUSTOM_CFG"],
        sigma_schedule: ["SIGMA_SCHEDULE"],
      },
    },
    output: ["SAMPLE_SETTINGS"],
    output_is_list: [false],
    output_name: ["settings"],
    name: "ADE_AnimateDiffSamplingSettings",
    display_name: "Sample Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    output_node: false,
  },
  ADE_AnimateDiffKeyframe: {
    input: {
      required: {
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: {
        prev_ad_keyframes: ["AD_KEYFRAMES"],
        scale_multival: ["MULTIVAL"],
        effect_multival: ["MULTIVAL"],
        inherit_missing: ["BOOLEAN", { default: true }],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
      },
    },
    output: ["AD_KEYFRAMES"],
    output_is_list: [false],
    output_name: ["AD_KEYFRAMES"],
    name: "ADE_AnimateDiffKeyframe",
    display_name: "AnimateDiff Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    output_node: false,
  },
  ADE_MultivalDynamic: {
    input: {
      required: {
        float_val: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
      optional: { mask_optional: ["MASK"] },
    },
    output: ["MULTIVAL"],
    output_is_list: [false],
    output_name: ["MULTIVAL"],
    name: "ADE_MultivalDynamic",
    display_name: "Multival Dynamic \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
    output_node: false,
  },
  ADE_MultivalScaledMask: {
    input: {
      required: {
        min_float_val: ["FLOAT", { default: 0.0, min: 0.0, step: 0.001 }],
        max_float_val: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        mask: ["MASK"],
      },
      optional: { scaling: [["absolute", "relative"]] },
    },
    output: ["MULTIVAL"],
    output_is_list: [false],
    output_name: ["MULTIVAL"],
    name: "ADE_MultivalScaledMask",
    display_name: "Multival Scaled Mask \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
    output_node: false,
  },
  ADE_StandardStaticContextOptions: {
    input: {
      required: {
        context_length: ["INT", { default: 16, min: 1, max: 128 }],
        context_overlap: ["INT", { default: 4, min: 0, max: 128 }],
      },
      optional: {
        fuse_method: [["pyramid", "relative", "flat"]],
        use_on_equal_length: ["BOOLEAN", { default: false }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
        view_opts: ["VIEW_OPTS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_StandardStaticContextOptions",
    display_name:
      "Context Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    output_node: false,
  },
  ADE_StandardUniformContextOptions: {
    input: {
      required: {
        context_length: ["INT", { default: 16, min: 1, max: 128 }],
        context_stride: ["INT", { default: 1, min: 1, max: 32 }],
        context_overlap: ["INT", { default: 4, min: 0, max: 128 }],
      },
      optional: {
        fuse_method: [["pyramid", "flat"]],
        use_on_equal_length: ["BOOLEAN", { default: false }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
        view_opts: ["VIEW_OPTS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_StandardUniformContextOptions",
    display_name:
      "Context Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    output_node: false,
  },
  ADE_LoopedUniformContextOptions: {
    input: {
      required: {
        context_length: ["INT", { default: 16, min: 1, max: 128 }],
        context_stride: ["INT", { default: 1, min: 1, max: 32 }],
        context_overlap: ["INT", { default: 4, min: 0, max: 128 }],
        closed_loop: ["BOOLEAN", { default: false }],
      },
      optional: {
        fuse_method: [["pyramid", "flat"]],
        use_on_equal_length: ["BOOLEAN", { default: false }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
        view_opts: ["VIEW_OPTS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_LoopedUniformContextOptions",
    display_name:
      "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    output_node: false,
  },
  ADE_ViewsOnlyContextOptions: {
    input: {
      required: { view_opts_req: ["VIEW_OPTS"] },
      optional: {
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_ViewsOnlyContextOptions",
    display_name:
      "Context Options\u25c6Views Only [VRAM\u21c8] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    output_node: false,
  },
  ADE_BatchedContextOptions: {
    input: {
      required: { context_length: ["INT", { default: 16, min: 1, max: 128 }] },
      optional: {
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_BatchedContextOptions",
    display_name:
      "Context Options\u25c6Batched [Non-AD] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
    output_node: false,
  },
  ADE_AnimateDiffUniformContextOptions: {
    input: {
      required: {
        context_length: ["INT", { default: 16, min: 1, max: 128 }],
        context_stride: ["INT", { default: 1, min: 1, max: 32 }],
        context_overlap: ["INT", { default: 4, min: 0, max: 128 }],
        context_schedule: [["uniform"]],
        closed_loop: ["BOOLEAN", { default: false }],
      },
      optional: {
        fuse_method: [["pyramid", "flat"], { default: "flat" }],
        use_on_equal_length: ["BOOLEAN", { default: false }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
        prev_context: ["CONTEXT_OPTIONS"],
        view_opts: ["VIEW_OPTS"],
      },
    },
    output: ["CONTEXT_OPTIONS"],
    output_is_list: [false],
    output_name: ["CONTEXT_OPTS"],
    name: "ADE_AnimateDiffUniformContextOptions",
    display_name:
      "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_StandardStaticViewOptions: {
    input: {
      required: {
        view_length: ["INT", { default: 16, min: 1, max: 128 }],
        view_overlap: ["INT", { default: 4, min: 0, max: 128 }],
      },
      optional: { fuse_method: [["pyramid", "flat"]] },
    },
    output: ["VIEW_OPTS"],
    output_is_list: [false],
    output_name: ["VIEW_OPTS"],
    name: "ADE_StandardStaticViewOptions",
    display_name:
      "View Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    output_node: false,
  },
  ADE_StandardUniformViewOptions: {
    input: {
      required: {
        view_length: ["INT", { default: 16, min: 1, max: 128 }],
        view_stride: ["INT", { default: 1, min: 1, max: 32 }],
        view_overlap: ["INT", { default: 4, min: 0, max: 128 }],
      },
      optional: { fuse_method: [["pyramid", "flat"]] },
    },
    output: ["VIEW_OPTS"],
    output_is_list: [false],
    output_name: ["VIEW_OPTS"],
    name: "ADE_StandardUniformViewOptions",
    display_name:
      "View Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    output_node: false,
  },
  ADE_LoopedUniformViewOptions: {
    input: {
      required: {
        view_length: ["INT", { default: 16, min: 1, max: 128 }],
        view_stride: ["INT", { default: 1, min: 1, max: 32 }],
        view_overlap: ["INT", { default: 4, min: 0, max: 128 }],
        closed_loop: ["BOOLEAN", { default: false }],
      },
      optional: {
        fuse_method: [["pyramid", "flat"]],
        use_on_equal_length: ["BOOLEAN", { default: false }],
      },
    },
    output: ["VIEW_OPTS"],
    output_is_list: [false],
    output_name: ["VIEW_OPTS"],
    name: "ADE_LoopedUniformViewOptions",
    display_name:
      "View Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
    output_node: false,
  },
  ADE_IterationOptsDefault: {
    input: {
      required: { iterations: ["INT", { default: 1, min: 1 }] },
      optional: {
        iter_batch_offset: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991 },
        ],
        iter_seed_offset: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
      },
    },
    output: ["ITERATION_OPTS"],
    output_is_list: [false],
    output_name: ["ITERATION_OPTS"],
    name: "ADE_IterationOptsDefault",
    display_name:
      "Default Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
    output_node: false,
  },
  ADE_IterationOptsFreeInit: {
    input: {
      required: {
        iterations: ["INT", { default: 2, min: 1 }],
        filter: [["gaussian", "butterworth", "ideal", "box"]],
        d_s: ["FLOAT", { default: 0.25, min: 0.0, max: 1.0, step: 0.001 }],
        d_t: ["FLOAT", { default: 0.25, min: 0.0, max: 1.0, step: 0.001 }],
        n_butterworth: ["INT", { default: 4, min: 1, max: 100 }],
        sigma_step: ["INT", { default: 999, min: 1, max: 999 }],
        apply_to_1st_iter: ["BOOLEAN", { default: false }],
        init_type: [
          ["FreeInit [sampler sigma]", "FreeInit [model sigma]", "DinkInit_v1"],
        ],
      },
      optional: {
        iter_batch_offset: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991 },
        ],
        iter_seed_offset: [
          "INT",
          { default: 1, min: -9007199254740991, max: 9007199254740991 },
        ],
      },
    },
    output: ["ITERATION_OPTS"],
    output_is_list: [false],
    output_name: ["ITERATION_OPTS"],
    name: "ADE_IterationOptsFreeInit",
    display_name:
      "FreeInit Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
    output_node: false,
  },
  ADE_NoiseLayerAdd: {
    input: {
      required: {
        batch_offset: ["INT", { default: 0, min: 0, max: 9007199254740991 }],
        noise_type: [
          ["default", "constant", "empty", "repeated_context", "FreeNoise"],
        ],
        seed_gen_override: [["use existing", "comfy", "auto1111"]],
        seed_offset: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
        noise_weight: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 10.0, step: 0.001 },
        ],
      },
      optional: {
        prev_noise_layers: ["NOISE_LAYERS"],
        mask_optional: ["MASK"],
        seed_override: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
      },
    },
    output: ["NOISE_LAYERS"],
    output_is_list: [false],
    output_name: ["NOISE_LAYERS"],
    name: "ADE_NoiseLayerAdd",
    display_name: "Noise Layer [Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    output_node: false,
  },
  ADE_NoiseLayerAddWeighted: {
    input: {
      required: {
        batch_offset: ["INT", { default: 0, min: 0, max: 9007199254740991 }],
        noise_type: [
          ["default", "constant", "empty", "repeated_context", "FreeNoise"],
        ],
        seed_gen_override: [["use existing", "comfy", "auto1111"]],
        seed_offset: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
        noise_weight: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 10.0, step: 0.001 },
        ],
        balance_multiplier: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
      optional: {
        prev_noise_layers: ["NOISE_LAYERS"],
        mask_optional: ["MASK"],
        seed_override: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
      },
    },
    output: ["NOISE_LAYERS"],
    output_is_list: [false],
    output_name: ["NOISE_LAYERS"],
    name: "ADE_NoiseLayerAddWeighted",
    display_name:
      "Noise Layer [Add Weighted] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    output_node: false,
  },
  ADE_NoiseLayerReplace: {
    input: {
      required: {
        batch_offset: ["INT", { default: 0, min: 0, max: 9007199254740991 }],
        noise_type: [
          ["default", "constant", "empty", "repeated_context", "FreeNoise"],
        ],
        seed_gen_override: [["use existing", "comfy", "auto1111"]],
        seed_offset: [
          "INT",
          { default: 0, min: -9007199254740991, max: 9007199254740991 },
        ],
      },
      optional: {
        prev_noise_layers: ["NOISE_LAYERS"],
        mask_optional: ["MASK"],
        seed_override: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
      },
    },
    output: ["NOISE_LAYERS"],
    output_is_list: [false],
    output_name: ["NOISE_LAYERS"],
    name: "ADE_NoiseLayerReplace",
    display_name: "Noise Layer [Replace] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
    output_node: false,
  },
  ADE_AnimateDiffSettings: {
    input: { optional: { pe_adjust: ["PE_ADJUST"] } },
    output: ["AD_SETTINGS"],
    output_is_list: [false],
    output_name: ["AD_SETTINGS"],
    name: "ADE_AnimateDiffSettings",
    display_name: "AnimateDiff Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings",
    output_node: false,
  },
  ADE_AdjustPESweetspotStretch: {
    input: {
      required: {
        sweetspot: ["INT", { default: 16, min: 0, max: 9007199254740991 }],
        new_sweetspot: ["INT", { default: 16, min: 0, max: 9007199254740991 }],
        print_adjustment: ["BOOLEAN", { default: false }],
      },
      optional: { prev_pe_adjust: ["PE_ADJUST"] },
    },
    output: ["PE_ADJUST"],
    output_is_list: [false],
    output_name: ["PE_ADJUST"],
    name: "ADE_AdjustPESweetspotStretch",
    display_name:
      "Adjust PE [Sweetspot Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    output_node: false,
  },
  ADE_AdjustPEFullStretch: {
    input: {
      required: {
        pe_stretch: ["INT", { default: 0, min: 0, max: 9007199254740991 }],
        print_adjustment: ["BOOLEAN", { default: false }],
      },
      optional: { prev_pe_adjust: ["PE_ADJUST"] },
    },
    output: ["PE_ADJUST"],
    output_is_list: [false],
    output_name: ["PE_ADJUST"],
    name: "ADE_AdjustPEFullStretch",
    display_name:
      "Adjust PE [Full Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    output_node: false,
  },
  ADE_AdjustPEManual: {
    input: {
      required: {
        cap_initial_pe_length: ["INT", { default: 0, min: 0, step: 1 }],
        interpolate_pe_to_length: ["INT", { default: 0, min: 0, step: 1 }],
        initial_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
        final_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
        print_adjustment: ["BOOLEAN", { default: false }],
      },
      optional: { prev_pe_adjust: ["PE_ADJUST"] },
    },
    output: ["PE_ADJUST"],
    output_is_list: [false],
    output_name: ["PE_ADJUST"],
    name: "ADE_AdjustPEManual",
    display_name: "Adjust PE [Manual] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
    output_node: false,
  },
  ADE_CustomCFG: {
    input: { required: { cfg_multival: ["MULTIVAL"] } },
    output: ["CUSTOM_CFG"],
    output_is_list: [false],
    output_name: ["CUSTOM_CFG"],
    name: "ADE_CustomCFG",
    display_name: "Custom CFG \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings",
    output_node: false,
  },
  ADE_CustomCFGKeyframe: {
    input: {
      required: {
        cfg_multival: ["MULTIVAL"],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        guarantee_steps: ["INT", { default: 1, min: 0, max: 9007199254740991 }],
      },
      optional: { prev_custom_cfg: ["CUSTOM_CFG"] },
    },
    output: ["CUSTOM_CFG"],
    output_is_list: [false],
    output_name: ["CUSTOM_CFG"],
    name: "ADE_CustomCFGKeyframe",
    display_name: "Custom CFG Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings",
    output_node: false,
  },
  ADE_SigmaSchedule: {
    input: {
      required: {
        beta_schedule: [
          [
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
        ],
      },
    },
    output: ["SIGMA_SCHEDULE"],
    output_is_list: [false],
    output_name: ["SIGMA_SCHEDULE"],
    name: "ADE_SigmaSchedule",
    display_name: "Create Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    output_node: false,
  },
  ADE_RawSigmaSchedule: {
    input: {
      required: {
        raw_beta_schedule: [
          ["linear", "sqrt_linear", "sqrt", "cosine", "squaredcos_cap_v2"],
        ],
        linear_start: [
          "FLOAT",
          { default: 0.00085, min: 0.0, max: 1.0, step: 1e-6 },
        ],
        linear_end: [
          "FLOAT",
          { default: 0.012, min: 0.0, max: 1.0, step: 1e-6 },
        ],
        sampling: [["eps", "v_prediction", "lcm"]],
        lcm_original_timesteps: ["INT", { default: 50, min: 1, max: 1000 }],
        lcm_zsnr: ["BOOLEAN", { default: false }],
      },
    },
    output: ["SIGMA_SCHEDULE"],
    output_is_list: [false],
    output_name: ["SIGMA_SCHEDULE"],
    name: "ADE_RawSigmaSchedule",
    display_name:
      "Create Raw Sigma Schedule \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    output_node: false,
  },
  ADE_SigmaScheduleWeightedAverage: {
    input: {
      required: {
        schedule_A: ["SIGMA_SCHEDULE"],
        schedule_B: ["SIGMA_SCHEDULE"],
        weight_A: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.001 }],
      },
    },
    output: ["SIGMA_SCHEDULE"],
    output_is_list: [false],
    output_name: ["SIGMA_SCHEDULE"],
    name: "ADE_SigmaScheduleWeightedAverage",
    display_name:
      "Sigma Schedule Weighted Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    output_node: false,
  },
  ADE_SigmaScheduleWeightedAverageInterp: {
    input: {
      required: {
        schedule_A: ["SIGMA_SCHEDULE"],
        schedule_B: ["SIGMA_SCHEDULE"],
        weight_A_Start: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.001 },
        ],
        weight_A_End: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.001 },
        ],
        interpolation: [["linear", "ease_in", "ease_out", "ease_in_out"]],
      },
    },
    output: ["SIGMA_SCHEDULE"],
    output_is_list: [false],
    output_name: ["SIGMA_SCHEDULE"],
    name: "ADE_SigmaScheduleWeightedAverageInterp",
    display_name:
      "Sigma Schedule Interpolated Mean \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    output_node: false,
  },
  ADE_SigmaScheduleSplitAndCombine: {
    input: {
      required: {
        schedule_Start: ["SIGMA_SCHEDULE"],
        schedule_End: ["SIGMA_SCHEDULE"],
        idx_split_percent: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
    },
    output: ["SIGMA_SCHEDULE"],
    output_is_list: [false],
    output_name: ["SIGMA_SCHEDULE"],
    name: "ADE_SigmaScheduleSplitAndCombine",
    display_name:
      "Sigma Schedule Split Combine \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/sample settings/sigma schedule",
    output_node: false,
  },
  ADE_AnimateDiffUnload: {
    input: { required: { model: ["MODEL"] } },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ADE_AnimateDiffUnload",
    display_name: "AnimateDiff Unload \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    output_node: false,
  },
  ADE_EmptyLatentImageLarge: {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 64, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 262144 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "ADE_EmptyLatentImageLarge",
    display_name:
      "Empty Latent Image (Big Batch) \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    output_node: false,
  },
  CheckpointLoaderSimpleWithNoiseSelect: {
    input: {
      required: {
        ckpt_name: [["__models__"]],
        beta_schedule: [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
          { default: "use existing" },
        ],
      },
      optional: {
        use_custom_scale_factor: ["BOOLEAN", { default: false }],
        scale_factor: [
          "FLOAT",
          { default: 0.18215, min: 0.0, max: 1.0, step: 1e-5 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "VAE"],
    name: "CheckpointLoaderSimpleWithNoiseSelect",
    display_name:
      "Load Checkpoint w/ Noise Select \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
    output_node: false,
  },
  ADE_AnimateDiffLoaderGen1: {
    input: {
      required: {
        model: ["MODEL"],
        model_name: [["__models__"]],
        beta_schedule: [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
          { default: "autoselect" },
        ],
      },
      optional: {
        context_options: ["CONTEXT_OPTIONS"],
        motion_lora: ["MOTION_LORA"],
        ad_settings: ["AD_SETTINGS"],
        ad_keyframes: ["AD_KEYFRAMES"],
        sample_settings: ["SAMPLE_SETTINGS"],
        scale_multival: ["MULTIVAL"],
        effect_multival: ["MULTIVAL"],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ADE_AnimateDiffLoaderGen1",
    display_name:
      "AnimateDiff Loader \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
    output_node: false,
  },
  ADE_AnimateDiffLoaderWithContext: {
    input: {
      required: {
        model: ["MODEL"],
        model_name: [["__models__"]],
        beta_schedule: [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
          { default: "autoselect" },
        ],
      },
      optional: {
        context_options: ["CONTEXT_OPTIONS"],
        motion_lora: ["MOTION_LORA"],
        ad_settings: ["AD_SETTINGS"],
        sample_settings: ["SAMPLE_SETTINGS"],
        motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        apply_v2_models_properly: ["BOOLEAN", { default: true }],
        ad_keyframes: ["AD_KEYFRAMES"],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ADE_AnimateDiffLoaderWithContext",
    display_name:
      "AnimateDiff Loader [Legacy] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
    output_node: false,
  },
  ADE_AnimateDiffModelSettings_Release: {
    input: {
      required: {
        min_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        max_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
      optional: { mask_motion_scale: ["MASK"] },
    },
    output: ["AD_SETTINGS"],
    output_is_list: [false],
    output_name: ["AD_SETTINGS"],
    name: "ADE_AnimateDiffModelSettings_Release",
    display_name:
      "[DEPR] Motion Model Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_AnimateDiffModelSettingsSimple: {
    input: {
      required: { motion_pe_stretch: ["INT", { default: 0, min: 0, step: 1 }] },
      optional: {
        mask_motion_scale: ["MASK"],
        min_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        max_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
    },
    output: ["AD_SETTINGS"],
    output_is_list: [false],
    output_name: ["AD_SETTINGS"],
    name: "ADE_AnimateDiffModelSettingsSimple",
    display_name:
      "[DEPR] Motion Model Settings (Simple) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_AnimateDiffModelSettings: {
    input: {
      required: {
        pe_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        other_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        motion_pe_stretch: ["INT", { default: 0, min: 0, step: 1 }],
        cap_initial_pe_length: ["INT", { default: 0, min: 0, step: 1 }],
        interpolate_pe_to_length: ["INT", { default: 0, min: 0, step: 1 }],
        initial_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
        final_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
      },
      optional: {
        mask_motion_scale: ["MASK"],
        min_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        max_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
    },
    output: ["AD_SETTINGS"],
    output_is_list: [false],
    output_name: ["AD_SETTINGS"],
    name: "ADE_AnimateDiffModelSettings",
    display_name:
      "[DEPR] Motion Model Settings (Advanced) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_AnimateDiffModelSettingsAdvancedAttnStrengths: {
    input: {
      required: {
        pe_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_q_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_k_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_v_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_out_weight_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        attn_out_bias_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        other_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.0001 },
        ],
        motion_pe_stretch: ["INT", { default: 0, min: 0, step: 1 }],
        cap_initial_pe_length: ["INT", { default: 0, min: 0, step: 1 }],
        interpolate_pe_to_length: ["INT", { default: 0, min: 0, step: 1 }],
        initial_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
        final_pe_idx_offset: ["INT", { default: 0, min: 0, step: 1 }],
      },
      optional: {
        mask_motion_scale: ["MASK"],
        min_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
        max_motion_scale: ["FLOAT", { default: 1.0, min: 0.0, step: 0.001 }],
      },
    },
    output: ["AD_SETTINGS"],
    output_is_list: [false],
    output_name: ["AD_SETTINGS"],
    name: "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
    display_name:
      "[DEPR] Motion Model Settings (Adv. Attn) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_UseEvolvedSampling: {
    input: {
      required: {
        model: ["MODEL"],
        beta_schedule: [
          [
            "autoselect",
            "use existing",
            "sqrt_linear (AnimateDiff)",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
          { default: "autoselect" },
        ],
      },
      optional: {
        m_models: ["M_MODELS"],
        context_options: ["CONTEXT_OPTIONS"],
        sample_settings: ["SAMPLE_SETTINGS"],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ADE_UseEvolvedSampling",
    display_name:
      "Use Evolved Sampling \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    output_node: false,
  },
  ADE_ApplyAnimateDiffModelSimple: {
    input: {
      required: { motion_model: ["MOTION_MODEL_ADE"] },
      optional: {
        motion_lora: ["MOTION_LORA"],
        scale_multival: ["MULTIVAL"],
        effect_multival: ["MULTIVAL"],
        ad_keyframes: ["AD_KEYFRAMES"],
      },
    },
    output: ["M_MODELS"],
    output_is_list: [false],
    output_name: ["M_MODELS"],
    name: "ADE_ApplyAnimateDiffModelSimple",
    display_name:
      "Apply AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    output_node: false,
  },
  ADE_ApplyAnimateDiffModel: {
    input: {
      required: {
        motion_model: ["MOTION_MODEL_ADE"],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: {
        motion_lora: ["MOTION_LORA"],
        scale_multival: ["MULTIVAL"],
        effect_multival: ["MULTIVAL"],
        ad_keyframes: ["AD_KEYFRAMES"],
        prev_m_models: ["M_MODELS"],
      },
    },
    output: ["M_MODELS"],
    output_is_list: [false],
    output_name: ["M_MODELS"],
    name: "ADE_ApplyAnimateDiffModel",
    display_name:
      "Apply AnimateDiff Model (Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    output_node: false,
  },
  ADE_LoadAnimateDiffModel: {
    input: {
      required: { model_name: [["__models__"]] },
      optional: { ad_settings: ["AD_SETTINGS"] },
    },
    output: ["MOTION_MODEL_ADE"],
    output_is_list: [false],
    output_name: ["MOTION_MODEL"],
    name: "ADE_LoadAnimateDiffModel",
    display_name:
      "Load AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
    description: "",
    category:
      "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
    output_node: false,
  },
  AnimateDiffLoaderV1: {
    input: {
      required: {
        model: ["MODEL"],
        latents: ["LATENT"],
        model_name: [["__models__"]],
        unlimited_area_hack: ["BOOLEAN", { default: false }],
        beta_schedule: [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
        ],
      },
    },
    output: ["MODEL", "LATENT"],
    output_is_list: [false, false],
    output_name: ["MODEL", "LATENT"],
    name: "AnimateDiffLoaderV1",
    display_name:
      "AnimateDiff Loader [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_AnimateDiffLoaderV1Advanced: {
    input: {
      required: {
        model: ["MODEL"],
        latents: ["LATENT"],
        model_name: [["__models__"]],
        unlimited_area_hack: ["BOOLEAN", { default: false }],
        context_length: ["INT", { default: 16, min: 0, max: 1000 }],
        context_stride: ["INT", { default: 1, min: 1, max: 1000 }],
        context_overlap: ["INT", { default: 4, min: 0, max: 1000 }],
        context_schedule: [["uniform"]],
        closed_loop: ["BOOLEAN", { default: false }],
        beta_schedule: [
          [
            "sqrt_linear (AnimateDiff)",
            "use existing",
            "autoselect",
            "linear (AnimateDiff-SDXL)",
            "linear (HotshotXL/default)",
            "avg(sqrt_linear,linear)",
            "lcm avg(sqrt_linear,linear)",
            "lcm",
            "lcm[100_ots]",
            "lcm >> sqrt_linear",
            "sqrt",
            "cosine",
            "squaredcos_cap_v2",
          ],
        ],
      },
    },
    output: ["MODEL", "LATENT"],
    output_is_list: [false, false],
    output_name: ["MODEL", "LATENT"],
    name: "ADE_AnimateDiffLoaderV1Advanced",
    display_name:
      "AnimateDiff Loader (Advanced) [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "",
    output_node: false,
  },
  ADE_AnimateDiffCombine: {
    input: {
      required: {
        images: ["IMAGE"],
        frame_rate: ["INT", { default: 8, min: 1, max: 24, step: 1 }],
        loop_count: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        filename_prefix: ["STRING", { default: "AnimateDiff" }],
        format: [["image/gif", "image/webp", "video/__mod"]],
        pingpong: ["BOOLEAN", { default: false }],
        save_image: ["BOOLEAN", { default: true }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["GIF"],
    output_is_list: [false],
    output_name: ["GIF"],
    name: "ADE_AnimateDiffCombine",
    display_name:
      "AnimateDiff Combine [DEPRECATED, Use Video Combine (VHS) Instead!] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
    description: "",
    category: "",
    output_node: true,
  },
  RecommendedResCalc: {
    input: {
      required: {
        desiredXSIZE: ["INT", { default: 1024, min: 0, max: 8192, step: 2 }],
        desiredYSIZE: ["INT", { default: 1024, min: 0, max: 8192, step: 2 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "recomm width",
      "recomm height",
      "upscale factor",
      "reverse upscale for 4x",
      "reverse upscale for 2x",
    ],
    name: "RecommendedResCalc",
    display_name: "Recommended Resolution Calculator",
    description: "",
    category: "utils",
    output_node: false,
  },
  "Checkpoint Selector": {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: [["__models__"]],
    output_is_list: [false],
    output_name: ["ckpt_name"],
    name: "Checkpoint Selector",
    display_name: "Checkpoint Selector",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Save Image w/Metadata": {
    input: {
      required: {
        images: ["IMAGE"],
        filename: ["STRING", { default: "%time_%seed", multiline: false }],
        extension: [["png", "jpeg", "webp"]],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        modelname: [["__models__"]],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
      },
      optional: {
        positive: ["STRING", { default: "unknown", multiline: true }],
        negative: ["STRING", { default: "unknown", multiline: true }],
        seed_value: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        width: ["INT", { default: 512, min: 1, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 8 }],
        lossless_webp: ["BOOLEAN", { default: true }],
        quality_jpeg_or_webp: ["INT", { default: 100, min: 1, max: 100 }],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Image w/Metadata",
    display_name: "Save Image w/Metadata",
    description: "",
    category: "ImageSaverTools",
    output_node: true,
  },
  "Sampler Selector": {
    input: {
      required: {
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
      },
    },
    output: [
      [
        "euler",
        "euler_ancestral",
        "heun",
        "heunpp2",
        "dpm_2",
        "dpm_2_ancestral",
        "lms",
        "dpm_fast",
        "dpm_adaptive",
        "dpmpp_2s_ancestral",
        "dpmpp_sde",
        "dpmpp_sde_gpu",
        "dpmpp_2m",
        "dpmpp_2m_sde",
        "dpmpp_2m_sde_gpu",
        "dpmpp_3m_sde",
        "dpmpp_3m_sde_gpu",
        "ddpm",
        "lcm",
        "ddim",
        "uni_pc",
        "uni_pc_bh2",
      ],
    ],
    output_is_list: [false],
    output_name: ["sampler_name"],
    name: "Sampler Selector",
    display_name: "Sampler Selector",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Scheduler Selector": {
    input: {
      required: {
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
      },
    },
    output: [
      [
        "normal",
        "karras",
        "exponential",
        "sgm_uniform",
        "simple",
        "ddim_uniform",
      ],
    ],
    output_is_list: [false],
    output_name: ["scheduler"],
    name: "Scheduler Selector",
    display_name: "Scheduler Selector",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Seed Generator": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Seed Generator",
    display_name: "Seed Generator",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "String Literal": {
    input: {
      required: { string: ["STRING", { default: "", multiline: true }] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "String Literal",
    display_name: "String Literal",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Width/Height Literal": {
    input: {
      required: { int: ["INT", { default: 512, min: 1, max: 8192, step: 8 }] },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Width/Height Literal",
    display_name: "Width/Height Literal",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Cfg Literal": {
    input: {
      required: { float: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }] },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Cfg Literal",
    display_name: "Cfg Literal",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  "Int Literal": {
    input: { required: { int: ["INT", { default: 0, min: 0, max: 1000000 }] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Int Literal",
    display_name: "Int Literal",
    description: "",
    category: "ImageSaverTools/utils",
    output_node: false,
  },
  SDXLPromptStyler: {
    input: {
      required: {
        text_positive: ["STRING", { default: "", multiline: true }],
        text_negative: ["STRING", { default: "", multiline: true }],
        style: [
          [
            "base",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
          ],
        ],
        log_prompt: [
          "BOOLEAN",
          { default: true, label_on: "yes", label_off: "no" },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["text_positive", "text_negative"],
    name: "SDXLPromptStyler",
    display_name: "SDXL Prompt Styler",
    description: "",
    category: "utils",
    output_node: false,
  },
  SDXLPromptStylerAdvanced: {
    input: {
      required: {
        text_positive_g: ["STRING", { default: "", multiline: true }],
        text_positive_l: ["STRING", { default: "", multiline: true }],
        text_negative: ["STRING", { default: "", multiline: true }],
        style: [
          [
            "base",
            "ads-advertising",
            "ads-automotive",
            "ads-corporate",
            "ads-fashion editorial",
            "ads-food photography",
            "ads-gourmet food photography",
            "ads-luxury",
            "ads-real estate",
            "ads-retail",
            "artstyle-abstract",
            "artstyle-abstract expressionism",
            "artstyle-art deco",
            "artstyle-art nouveau",
            "artstyle-constructivist",
            "artstyle-cubist",
            "artstyle-expressionist",
            "artstyle-graffiti",
            "artstyle-hyperrealism",
            "artstyle-impressionist",
            "artstyle-pointillism",
            "artstyle-pop art",
            "artstyle-psychedelic",
            "artstyle-renaissance",
            "artstyle-steampunk",
            "artstyle-surrealist",
            "artstyle-typography",
            "artstyle-watercolor",
            "futuristic-biomechanical",
            "futuristic-biomechanical cyberpunk",
            "futuristic-cybernetic",
            "futuristic-cybernetic robot",
            "futuristic-cyberpunk cityscape",
            "futuristic-futuristic",
            "futuristic-retro cyberpunk",
            "futuristic-retro futurism",
            "futuristic-sci-fi",
            "futuristic-vaporwave",
            "game-bubble bobble",
            "game-cyberpunk game",
            "game-fighting game",
            "game-gta",
            "game-mario",
            "game-minecraft",
            "game-pokemon",
            "game-retro arcade",
            "game-retro game",
            "game-rpg fantasy game",
            "game-strategy game",
            "game-streetfighter",
            "game-zelda",
            "misc-architectural",
            "misc-disco",
            "misc-dreamscape",
            "misc-dystopian",
            "misc-fairy tale",
            "misc-gothic",
            "misc-grunge",
            "misc-horror",
            "misc-kawaii",
            "misc-lovecraftian",
            "misc-macabre",
            "misc-manga",
            "misc-metropolis",
            "misc-minimalist",
            "misc-monochrome",
            "misc-nautical",
            "misc-space",
            "misc-stained glass",
            "misc-techwear fashion",
            "misc-tribal",
            "misc-zentangle",
            "papercraft-collage",
            "papercraft-flat papercut",
            "papercraft-kirigami",
            "papercraft-paper mache",
            "papercraft-paper quilling",
            "papercraft-papercut collage",
            "papercraft-papercut shadow box",
            "papercraft-stacked papercut",
            "papercraft-thick layered papercut",
            "photo-alien",
            "photo-film noir",
            "photo-glamour",
            "photo-hdr",
            "photo-iphone photographic",
            "photo-long exposure",
            "photo-neon noir",
            "photo-silhouette",
            "photo-tilt-shift",
            "sai-3d-model",
            "sai-analog film",
            "sai-anime",
            "sai-cinematic",
            "sai-comic book",
            "sai-craft clay",
            "sai-digital art",
            "sai-enhance",
            "sai-fantasy art",
            "sai-isometric",
            "sai-line art",
            "sai-lowpoly",
            "sai-neonpunk",
            "sai-origami",
            "sai-photographic",
            "sai-pixel art",
            "sai-texture",
          ],
        ],
        negative_prompt_to: [["Both", "G only", "L only"], { default: "Both" }],
        log_prompt: [
          "BOOLEAN",
          { default: true, label_on: "yes", label_off: "no" },
        ],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "text_positive_g",
      "text_positive_l",
      "text_positive",
      "text_negative_g",
      "text_negative_l",
      "text_negative",
    ],
    name: "SDXLPromptStylerAdvanced",
    display_name: "SDXL Prompt Styler Advanced",
    description: "",
    category: "utils",
    output_node: false,
  },
  "Seed Everywhere": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { id: "UNIQUE_ID" },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Seed Everywhere",
    display_name: "Seed Everywhere",
    description: "",
    category: "everywhere",
    output_node: true,
  },
  "Anything Everywhere": {
    input: {
      required: {},
      optional: { anything: ["*", {}] },
      hidden: { id: "UNIQUE_ID" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Anything Everywhere",
    display_name: "Anything Everywhere",
    description: "",
    category: "everywhere",
    output_node: true,
  },
  "Anything Everywhere3": {
    input: {
      required: {},
      optional: {
        anything: ["*", {}],
        anything2: ["*", {}],
        anything3: ["*", {}],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Anything Everywhere3",
    display_name: "Anything Everywhere3",
    description: "",
    category: "everywhere",
    output_node: true,
  },
  "Anything Everywhere?": {
    input: {
      required: {},
      optional: {
        anything: ["*", {}],
        title_regex: ["STRING", { default: ".*" }],
        input_regex: ["STRING", { default: ".*" }],
        group_regex: ["STRING", { default: ".*" }],
      },
      hidden: { id: "UNIQUE_ID" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Anything Everywhere?",
    display_name: "Anything Everywhere?",
    description: "",
    category: "everywhere",
    output_node: true,
  },
  "Prompts Everywhere": {
    input: { required: {}, optional: { "+ve": ["*", {}], "-ve": ["*", {}] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Prompts Everywhere",
    display_name: "Prompts Everywhere",
    description: "",
    category: "everywhere",
    output_node: true,
  },
  "Simple String": {
    input: { required: { string: ["STRING", { default: "" }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Simple String",
    display_name: "Simple String",
    description: "",
    category: "everywhere",
    output_node: false,
  },
  Compare: {
    input: {
      required: {
        a: ["*", { default: 0 }],
        b: ["*", { default: 0 }],
        comparison: [
          ["a == b", "a != b", "a < b", "a > b", "a <= b", "a >= b"],
          { default: "a == b" },
        ],
      },
    },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: "BOOLEAN",
    name: "Compare",
    display_name: "Compare",
    description: "",
    category: "Logic",
    output_node: false,
  },
  Int: {
    input: { required: { Number: ["STRING", {}] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Int",
    display_name: "Int",
    description: "",
    category: "Literals",
    output_node: false,
  },
  Float: {
    input: { required: { Number: ["STRING", {}] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Float",
    display_name: "Float",
    description: "",
    category: "Literals",
    output_node: false,
  },
  Bool: {
    input: { required: { value: ["BOOLEAN", { default: false }] } },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "Bool",
    display_name: "Bool",
    description: "",
    category: "Logic",
    output_node: false,
  },
  String: {
    input: { required: { String: ["STRING", { multiline: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "String",
    display_name: "String",
    description: "",
    category: "Literals",
    output_node: false,
  },
  "If ANY execute A else B": {
    input: { required: { ANY: ["*"], IF_TRUE: ["*"], IF_FALSE: ["*"] } },
    output: ["*"],
    output_is_list: [false],
    output_name: "?",
    name: "If ANY execute A else B",
    display_name: "If",
    description: "",
    category: "Logic",
    output_node: false,
  },
  DebugPrint: {
    input: { required: { ANY: ["{}"] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "DebugPrint",
    display_name: "DebugPrint",
    description: "",
    category: "Logic",
    output_node: true,
  },
  Lerp: {
    input: {
      required: {
        num_Images: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Lerp",
    display_name: "Lerp \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  SinWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "SinWave",
    display_name: "SinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  InvSinWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "InvSinWave",
    display_name: "InvSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  CosWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "CosWave",
    display_name: "CosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  InvCosWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "InvCosWave",
    display_name: "InvCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  SquareWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "SquareWave",
    display_name: "SquareWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  SawtoothWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        step_increment: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        start_value: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "SawtoothWave",
    display_name: "SawtoothWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  TriangleWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "TriangleWave",
    display_name: "TriangleWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  AbsCosWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        max_value: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "AbsCosWave",
    display_name: "AbsCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  AbsSinWave: {
    input: {
      required: {
        phase: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        amplitude: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        max_value: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 9999.0, step: 0.05 },
        ],
        current_frame: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "AbsSinWave",
    display_name: "AbsSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
    output_node: false,
  },
  PromptSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              '"0" :"",\n"12" :"",\n"24" :"",\n"36" :"",\n"48" :"",\n"60" :"",\n"72" :"",\n"84" :"",\n"96" :"",\n"108" :"",\n"120" :""\n',
          },
        ],
        clip: ["CLIP"],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text: ["STRING", { multiline: true }],
        app_text: ["STRING", { multiline: true }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["POS", "NEG"],
    name: "PromptSchedule",
    display_name: "Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  ValueSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n",
          },
        ],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "ValueSchedule",
    display_name: "Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  PromptScheduleNodeFlow: {
    input: {
      required: {
        text: ["STRING", { multiline: true }],
        num_frames: [
          "INT",
          { default: 24.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
      optional: {
        in_text: ["STRING", { multiline: false }],
        max_frames: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "STRING"],
    name: "PromptScheduleNodeFlow",
    display_name:
      "Prompt Schedule NodeFlow \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  PromptScheduleNodeFlowEnd: {
    input: {
      required: {
        text: ["STRING", { multiline: false, forceInput: true }],
        clip: ["CLIP"],
        max_frames: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
        print_output: ["BOOLEAN", { default: false }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
      },
      optional: {
        pre_text: ["STRING", { multiline: true, default: "PRE" }],
        app_text: ["STRING", { multiline: true, default: "APP" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["POS", "NEG"],
    name: "PromptScheduleNodeFlowEnd",
    display_name:
      "Prompt Schedule NodeFlow End \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  PromptScheduleEncodeSDXL: {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text_g: ["STRING", { multiline: true, default: "CLIP_G" }],
        clip: ["CLIP"],
        text_l: ["STRING", { multiline: true, default: "CLIP_L" }],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text_G: ["STRING", { multiline: true, default: "PRE_G" }],
        app_text_G: ["STRING", { multiline: true, default: "APP_G" }],
        pre_text_L: ["STRING", { multiline: true, default: "PRE_L" }],
        app_text_L: ["STRING", { multiline: true, default: "APP_L" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "PromptScheduleEncodeSDXL",
    display_name: "Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  StringSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              '"0" :"",\n"12" :"",\n"24" :"",\n"36" :"",\n"48" :"",\n"60" :"",\n"72" :"",\n"84" :"",\n"96" :"",\n"108" :"",\n"120" :""\n',
          },
        ],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 999999.0, step: 1.0 },
        ],
      },
      optional: {
        pre_text: ["STRING", { multiline: true, default: "PRE" }],
        app_text: ["STRING", { multiline: true, default: "APP" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "StringSchedule",
    display_name: "String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
    output_node: false,
  },
  BatchPromptSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              '"0" :"",\n"12" :"",\n"24" :"",\n"36" :"",\n"48" :"",\n"60" :"",\n"72" :"",\n"84" :"",\n"96" :"",\n"108" :"",\n"120" :""\n',
          },
        ],
        clip: ["CLIP"],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text: ["STRING", { multiline: true, default: "PRE" }],
        app_text: ["STRING", { multiline: true, default: "APP" }],
        start_frame: ["INT", { default: 0, min: 0, max: 9999, step: 1 }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["POS", "NEG"],
    name: "BatchPromptSchedule",
    display_name: "Batch Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchValueSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n",
          },
        ],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "BatchValueSchedule",
    display_name: "Batch Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchPromptScheduleEncodeSDXL: {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text_g: ["STRING", { multiline: true, default: "CLIP_G" }],
        clip: ["CLIP"],
        text_l: ["STRING", { multiline: true, default: "CLIP_L" }],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text_G: ["STRING", { multiline: true, default: "PRE_G" }],
        app_text_G: ["STRING", { multiline: true, default: "APP_G" }],
        pre_text_L: ["STRING", { multiline: true, default: "PRE_L" }],
        app_text_L: ["STRING", { multiline: true, default: "APP_L" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BatchPromptScheduleEncodeSDXL",
    display_name:
      "Batch Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchStringSchedule: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              '"0" :"",\n"12" :"",\n"24" :"",\n"36" :"",\n"48" :"",\n"60" :"",\n"72" :"",\n"84" :"",\n"96" :"",\n"108" :"",\n"120" :""\n',
          },
        ],
        max_frames: [
          "INT",
          { default: 120.0, min: 1.0, max: 999999.0, step: 1.0 },
        ],
      },
      optional: {
        pre_text: ["STRING", { multiline: true, default: "PRE" }],
        app_text: ["STRING", { multiline: true, default: "APP" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "BatchStringSchedule",
    display_name: "Batch String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchValueScheduleLatentInput: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n",
          },
        ],
        num_latents: ["LATENT"],
      },
    },
    output: ["FLOAT", "INT", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["FLOAT", "INT", "LATENT"],
    name: "BatchValueScheduleLatentInput",
    display_name:
      "Batch Value Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchPromptScheduleSDXLLatentInput: {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text_g: ["STRING", { multiline: true, default: "CLIP_G" }],
        clip: ["CLIP"],
        text_l: ["STRING", { multiline: true, default: "CLIP_L" }],
        num_latents: ["LATENT"],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text_G: ["STRING", { multiline: true, default: "PRE_G" }],
        app_text_G: ["STRING", { multiline: true, default: "APP_G" }],
        pre_text_L: ["STRING", { multiline: true, default: "PRE_L" }],
        app_text_L: ["STRING", { multiline: true, default: "APP_L" }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING", "LATENT"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "LATENT"],
    name: "BatchPromptScheduleSDXLLatentInput",
    display_name:
      "Batch Prompt Schedule SDXL (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  BatchPromptScheduleLatentInput: {
    input: {
      required: {
        text: [
          "STRING",
          {
            multiline: true,
            default:
              '"0" :"",\n"12" :"",\n"24" :"",\n"36" :"",\n"48" :"",\n"60" :"",\n"72" :"",\n"84" :"",\n"96" :"",\n"108" :"",\n"120" :""\n',
          },
        ],
        clip: ["CLIP"],
        num_latents: ["LATENT"],
        print_output: ["BOOLEAN", { default: false }],
      },
      optional: {
        pre_text: ["STRING", { multiline: true, default: "PRE" }],
        app_text: ["STRING", { multiline: true, default: "APP" }],
        start_frame: ["INT", { default: 0.0, min: 0, max: 9999, step: 1 }],
        pw_a: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_b: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_c: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
        pw_d: ["FLOAT", { default: 0.0, min: -9999.0, max: 9999.0, step: 0.1 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "LATENT"],
    output_is_list: [false, false, false],
    output_name: ["POS", "NEG", "INPUT_LATENTS"],
    name: "BatchPromptScheduleLatentInput",
    display_name:
      "Batch Prompt Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  ImageBatchFromValueSchedule: {
    input: {
      required: {
        images: ["IMAGE"],
        values: [
          "FLOAT",
          { default: 1.0, min: -1.0, max: 1.0, label: "values" },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageBatchFromValueSchedule",
    display_name:
      "Image Batch From Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category:
      "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
    output_node: false,
  },
  StringConcatenate: {
    input: {
      required: {
        text_a: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_a: ["INT", { default: 0 }],
        text_b: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_b: ["INT", { default: 12 }],
      },
      optional: {
        text_c: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_c: ["INT", { default: 24 }],
        text_d: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_d: ["INT", { default: 36 }],
        text_e: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_e: ["INT", { default: 48 }],
        text_f: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_f: ["INT", { default: 60 }],
        text_g: ["STRING", { forceInput: true, multiline: true, default: "" }],
        frame_g: ["INT", { default: 72 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "StringConcatenate",
    display_name: "String Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    output_node: false,
  },
  "Init FizzFrame": {
    input: {
      required: {
        frame: ["INT", { default: 0, min: 0 }],
        positive_text: ["STRING", { multiline: true }],
      },
      optional: {
        negative_text: ["STRING", { multiline: true }],
        general_positive: ["STRING", { multiline: true }],
        general_negative: ["STRING", { multiline: true }],
        previous_frame: ["FIZZFRAME", { forceInput: true }],
        clip: ["CLIP"],
      },
    },
    output: ["FIZZFRAME", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false],
    output_name: ["FIZZFRAME", "CONDITIONING", "CONDITIONING"],
    name: "Init FizzFrame",
    display_name: "Init Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    output_node: false,
  },
  FizzFrame: {
    input: {
      required: {
        frame: ["INT", { default: 0, min: 0 }],
        previous_frame: ["FIZZFRAME", { forceInput: true }],
        positive_text: ["STRING", { multiline: true }],
      },
      optional: { negative_text: ["STRING", { multiline: true }] },
    },
    output: ["FIZZFRAME", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false],
    output_name: ["FIZZFRAME", "CONDITIONING", "CONDITIONING"],
    name: "FizzFrame",
    display_name: "Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    output_node: false,
  },
  FizzFrameConcatenate: {
    input: { required: { frame: ["FIZZFRAME", { forceInput: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "FizzFrameConcatenate",
    display_name: "Frame Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
    output_node: false,
  },
  ConcatStringSingle: {
    input: {
      required: {
        string_a: [
          "STRING",
          { forceInput: true, default: "", multiline: true },
        ],
        string_b: [
          "STRING",
          { forceInput: true, default: "", multiline: true },
        ],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "ConcatStringSingle",
    display_name: "Concat String (Single) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    output_node: false,
  },
  convertKeyframeKeysToBatchKeys: {
    input: {
      required: {
        input: ["INT", { forceInput: true, default: 0 }],
        num_latents: ["INT", { default: 16 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "convertKeyframeKeysToBatchKeys",
    display_name:
      "Keyframe Keys To Batch Keys \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    output_node: false,
  },
  CalculateFrameOffset: {
    input: {
      required: {
        current_frame: ["INT", { default: 0, min: 0 }],
        max_frames: ["INT", { default: 18, min: 0 }],
        num_latent_inputs: ["INT", { default: 4, min: 0 }],
        index: ["INT", { default: 4, min: 0 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CalculateFrameOffset",
    display_name: "Calculate Frame Offset \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
    description: "",
    category: "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
    output_node: false,
  },
  Integer: {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Integer",
    display_name: "Integer",
    description: "",
    category: "Derfuu_Nodes/Variables",
    output_node: false,
  },
  Text: {
    input: { required: { Text: ["STRING", { default: "" }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text",
    display_name: "Text",
    description: "",
    category: "Derfuu_Nodes/Variables",
    output_node: false,
  },
  "Text box": {
    input: { required: { Text: ["STRING", { default: "", multiline: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text box",
    display_name: "Text box",
    description: "",
    category: "Derfuu_Nodes/Variables",
    output_node: false,
  },
  "Float debug print": {
    input: {
      required: {
        Prefix: ["STRING", { default: "" }],
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Float debug print",
    display_name: "Float debug print",
    description: "",
    category: "Derfuu_Nodes/Debug",
    output_node: true,
  },
  "Int debug print": {
    input: {
      required: {
        Prefix: ["STRING", { default: "" }],
        Value: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Int debug print",
    display_name: "Int debug print",
    description: "",
    category: "Derfuu_Nodes/Debug",
    output_node: true,
  },
  "Tuple debug print": {
    input: {
      required: { Prefix: ["STRING", { default: "" }], Values: ["TUPLE"] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Tuple debug print",
    display_name: "Tuple debug print",
    description: "",
    category: "Derfuu_Nodes/Debug",
    output_node: true,
  },
  "String debug print": {
    input: {
      required: {
        Prefix: ["STRING", { default: "" }],
        Text: ["STRING", { default: "" }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "String debug print",
    display_name: "String debug print",
    description: "",
    category: "Derfuu_Nodes/Debug",
    output_node: true,
  },
  Random: {
    input: {
      required: {
        Value_A: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Value_B: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Random",
    display_name: "Random",
    description: "",
    category: "Derfuu_Nodes/Functions",
    output_node: false,
  },
  Tuple: {
    input: {
      required: {
        Value_A: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Value_B: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        round_: [["No", "Yes", "Ceil", "Floor"]],
      },
    },
    output: ["TUPLE"],
    output_is_list: [false],
    output_name: ["TUPLE"],
    name: "Tuple",
    display_name: "Tuple",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Int to tuple": {
    input: {
      required: {
        Value_A: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
        Value_B: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
      },
    },
    output: ["TUPLE"],
    output_is_list: [false],
    output_name: ["TUPLE"],
    name: "Int to tuple",
    display_name: "Int to tuple",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Tuple to floats": {
    input: { required: { Tuple: ["TUPLE"] } },
    output: ["FLOAT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "FLOAT"],
    name: "Tuple to floats",
    display_name: "Tuple to floats",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Tuple to ints": {
    input: { required: { Tuple: ["TUPLE"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["INT", "INT"],
    name: "Tuple to ints",
    display_name: "Tuple to ints",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Tuple swap": {
    input: { required: { Tuple: ["TUPLE"] } },
    output: ["TUPLE"],
    output_is_list: [false],
    output_name: ["TUPLE"],
    name: "Tuple swap",
    display_name: "Tuple swap",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Tuple multiply": {
    input: {
      required: {
        Tuple: ["TUPLE"],
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["TUPLE"],
    output_is_list: [false],
    output_name: ["TUPLE"],
    name: "Tuple multiply",
    display_name: "Tuple multiply",
    description: "",
    category: "Derfuu_Nodes/Tuples",
    output_node: false,
  },
  "Int to float": {
    input: {
      required: {
        Value: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Int to float",
    display_name: "Int to float",
    description: "",
    category: "Derfuu_Nodes/Functions/Converters",
    output_node: false,
  },
  Ceil: {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Ceil",
    display_name: "Ceil",
    description: "",
    category: "Derfuu_Nodes/Functions/Converters",
    output_node: false,
  },
  Floor: {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Floor",
    display_name: "Floor",
    description: "",
    category: "Derfuu_Nodes/Functions/Converters",
    output_node: false,
  },
  "Absolute value": {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        negative_out: [[false, true]],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Absolute value",
    display_name: "Absolute value",
    description: "",
    category: "Derfuu_Nodes/Functions/Converters",
    output_node: false,
  },
  "Get latent size": {
    input: { required: { latent: ["LATENT"], original: [[false, true]] } },
    output: ["INT", "INT", "TUPLE"],
    output_is_list: [false, false, false],
    output_name: ["INT", "INT", "TUPLE"],
    name: "Get latent size",
    display_name: "Get latent size",
    description: "",
    category: "Derfuu_Nodes/Functions",
    output_node: false,
  },
  "Get image size": {
    input: { required: { image: ["IMAGE"] } },
    output: ["INT", "INT", "TUPLE"],
    output_is_list: [false, false, false],
    output_name: ["INT", "INT", "TUPLE"],
    name: "Get image size",
    display_name: "Get image size",
    description: "",
    category: "Derfuu_Nodes/Functions",
    output_node: false,
  },
  Sum: {
    input: {
      required: {
        Value_A: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Value_B: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Sum",
    display_name: "Sum",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  Subtract: {
    input: {
      required: {
        Value_A: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Value_B: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Subtract",
    display_name: "Subtract",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  Multiply: {
    input: {
      required: {
        Value_A: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Value_B: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Multiply",
    display_name: "Multiply",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  Divide: {
    input: {
      required: {
        Numerator: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Denominator: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Divide",
    display_name: "Divide",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  Power: {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        Exponent: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Power",
    display_name: "Power",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  "Square root": {
    input: {
      required: {
        Value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["FLOAT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "FLOAT"],
    name: "Square root",
    display_name: "Square root",
    description: "",
    category: "Derfuu_Nodes/Math",
    output_node: false,
  },
  Sinus: {
    input: {
      required: {
        value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        type_: [["RAD", "DEG"]],
        arcSin: [[false, true]],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Sinus",
    display_name: "Sinus",
    description: "",
    category: "Derfuu_Nodes/Math/Trigonometry",
    output_node: false,
  },
  Cosines: {
    input: {
      required: {
        value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        type_: [["RAD", "DEG"]],
        arcCos: [[false, true]],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Cosines",
    display_name: "Cosines",
    description: "",
    category: "Derfuu_Nodes/Math/Trigonometry",
    output_node: false,
  },
  Tangent: {
    input: {
      required: {
        value: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        type_: [["RAD", "DEG"]],
        arcTan: [[false, true]],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Tangent",
    display_name: "Tangent",
    description: "",
    category: "Derfuu_Nodes/Math/Trigonometry",
    output_node: false,
  },
  "Latent Scale by ratio": {
    input: {
      required: {
        latent: ["LATENT"],
        modifier: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        scale_method: [["nearest-exact", "bilinear", "area"]],
        crop: [["disabled", "center"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Scale by ratio",
    display_name: "Latent Scale by ratio",
    description: "",
    category: "Derfuu_Nodes/Modded nodes/Latent",
    output_node: false,
  },
  "Latent Scale to side": {
    input: {
      required: {
        latent: ["LATENT"],
        side_length: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
        side: [["Longest", "Width", "Height"]],
        scale_method: [["nearest-exact", "bilinear", "area"]],
        crop: [["disabled", "center"]],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Scale to side",
    display_name: "Latent Scale to side",
    description: "",
    category: "Derfuu_Nodes/Modded nodes/Latent",
    output_node: false,
  },
  "Image scale by ratio": {
    input: {
      required: {
        image: ["IMAGE"],
        upscale_by: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        crop: [["disabled", "center"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image scale by ratio",
    display_name: "Image scale by ratio",
    description: "",
    category: "Derfuu_Nodes/Modded nodes/Image",
    output_node: false,
  },
  "Image scale to side": {
    input: {
      required: {
        image: ["IMAGE"],
        side_length: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
        side: [["Longest", "Width", "Height"]],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        crop: [["disabled", "center"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image scale to side",
    display_name: "Image scale to side",
    description: "",
    category: "Derfuu_Nodes/Modded nodes/Image",
    output_node: false,
  },
  "Conditioning area scale by ratio": {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        modifier: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
        strength_modifier: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "Conditioning area scale by ratio",
    display_name: "Conditioning area scale by ratio",
    description: "",
    category: "Derfuu_Nodes/Modded nodes/Conditions",
    output_node: false,
  },
  "ConditioningSetArea with tuples": {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        size_tuple: ["TUPLE"],
        offset_tuple: ["TUPLE"],
        strength: [
          "FLOAT",
          {
            default: 1,
            min: -1.7976931348623157e308,
            max: 1.7976931348623157e308,
            step: 0.01,
          },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "ConditioningSetArea with tuples",
    display_name: "ConditioningSetArea with tuples",
    description: "",
    category: "Derfuu_Nodes/Tuples/Modded nodes/Conditioning",
    output_node: false,
  },
  "LatentComposite with tuples": {
    input: {
      required: {
        samples_to: ["LATENT"],
        samples_from: ["LATENT"],
        position_tuple: ["TUPLE"],
        feather: [
          "INT",
          {
            default: 1,
            min: -9223372036854775807,
            max: 9223372036854775807,
            step: 1,
          },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentComposite with tuples",
    display_name: "LatentComposite with tuples",
    description: "",
    category: "Derfuu_Nodes/Tuples/Modded nodes/Latents",
    output_node: false,
  },
  CCSR_Upscale: {
    input: {
      required: {
        ccsr_model: ["CCSRMODEL"],
        image: ["IMAGE"],
        resize_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"],
          { default: "lanczos" },
        ],
        scale_by: ["FLOAT", { default: 1.0, min: 0.01, max: 20.0, step: 0.01 }],
        steps: ["INT", { default: 45, min: 3, max: 4096, step: 1 }],
        t_max: ["FLOAT", { default: 0.6667, min: 0, max: 1, step: 0.01 }],
        t_min: ["FLOAT", { default: 0.3333, min: 0, max: 1, step: 0.01 }],
        sampling_method: [
          ["ccsr", "ccsr_tiled_mixdiff", "ccsr_tiled_vae_gaussian_weights"],
          { default: "ccsr_tiled_mixdiff" },
        ],
        tile_size: ["INT", { default: 512, min: 1, max: 4096, step: 1 }],
        tile_stride: ["INT", { default: 256, min: 1, max: 4096, step: 1 }],
        vae_tile_size_encode: [
          "INT",
          { default: 1024, min: 2, max: 4096, step: 8 },
        ],
        vae_tile_size_decode: [
          "INT",
          { default: 1024, min: 2, max: 4096, step: 8 },
        ],
        color_fix_type: [["none", "adain", "wavelet"], { default: "adain" }],
        keep_model_loaded: ["BOOLEAN", { default: false }],
        seed: [
          "INT",
          { default: 123, min: 0, max: 18446744073709551615, step: 1 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["upscaled_image"],
    name: "CCSR_Upscale",
    display_name: "CCSR_Upscale",
    description: "",
    category: "CCSR",
    output_node: false,
  },
  CCSR_Model_Select: {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["CCSRMODEL"],
    output_is_list: [false],
    output_name: ["ccsr_model"],
    name: "CCSR_Model_Select",
    display_name: "CCSR_Model_Select",
    description: "",
    category: "CCSR",
    output_node: false,
  },
  VHS_VideoCombine: {
    input: {
      required: {
        images: ["IMAGE"],
        frame_rate: ["INT", { default: 8, min: 1, step: 1 }],
        loop_count: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        filename_prefix: ["STRING", { default: "AnimateDiff" }],
        format: [
          [
            "image/gif",
            "image/webp",
            "video/16bit-png",
            "video/ProRes",
            [
              "video/av1-webm",
              [
                ["pix_fmt", ["yuv420p10le", "yuv420p"]],
                ["crf", "INT", { default: 23, min: 0, max: 100, step: 1 }],
                ["input_color_depth", ["8bit", "16bit"]],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
            [
              "video/h264-mp4",
              [
                ["pix_fmt", ["yuv420p", "yuv420p10le"]],
                ["crf", "INT", { default: 19, min: 0, max: 100, step: 1 }],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
            [
              "video/h265-mp4",
              [
                ["pix_fmt", ["yuv420p10le", "yuv420p"]],
                ["crf", "INT", { default: 22, min: 0, max: 100, step: 1 }],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
            [
              "video/nvenc_h264-mp4",
              [
                ["pix_fmt", ["yuv420p", "yuv420p10le"]],
                ["bitrate", "INT", { default: 10, min: 1, max: 999, step: 1 }],
                ["megabit", "BOOLEAN", { default: true }],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
            [
              "video/nvenc_hevc-mp4",
              [
                ["pix_fmt", ["yuv420p", "yuv420p10le"]],
                ["bitrate", "INT", { default: 10, min: 1, max: 999, step: 1 }],
                ["megabit", "BOOLEAN", { default: true }],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
            [
              "video/webm",
              [
                ["crf", "INT", { default: 20, min: 0, max: 100, step: 1 }],
                ["save_metadata", "BOOLEAN", { default: true }],
              ],
            ],
          ],
        ],
        pingpong: ["BOOLEAN", { default: false }],
        save_output: ["BOOLEAN", { default: true }],
      },
      optional: { audio: ["VHS_AUDIO"], batch_manager: ["VHS_BatchManager"] },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        unique_id: "UNIQUE_ID",
      },
    },
    output: ["VHS_FILENAMES"],
    output_is_list: [false],
    output_name: ["Filenames"],
    name: "VHS_VideoCombine",
    display_name:
      "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: true,
  },
  VHS_LoadVideo: {
    input: {
      required: {
        video: [["__inputs__"]],
        force_rate: ["INT", { default: 0, min: 0, max: 60, step: 1 }],
        force_size: [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512",
          ],
        ],
        custom_width: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        custom_height: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        frame_load_cap: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        skip_first_frames: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
      optional: { batch_manager: ["VHS_BatchManager"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["IMAGE", "INT", "VHS_AUDIO"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "frame_count", "audio"],
    name: "VHS_LoadVideo",
    display_name:
      "Load Video (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_LoadVideoPath: {
    input: {
      required: {
        video: [["__inputs__"]],
        force_rate: ["INT", { default: 0, min: 0, max: 60, step: 1 }],
        force_size: [
          [
            "Disabled",
            "Custom Height",
            "Custom Width",
            "Custom",
            "256x?",
            "?x256",
            "256x256",
            "512x?",
            "?x512",
            "512x512",
          ],
        ],
        custom_width: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        custom_height: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        frame_load_cap: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        skip_first_frames: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
      optional: { batch_manager: ["VHS_BatchManager"] },
      hidden: { unique_id: "UNIQUE_ID" },
    },
    output: ["IMAGE", "INT", "VHS_AUDIO"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "frame_count", "audio"],
    name: "VHS_LoadVideoPath",
    display_name:
      "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_LoadImages: {
    input: {
      required: { directory: [["__inputs__"]] },
      optional: {
        image_load_cap: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        skip_first_images: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["IMAGE", "MASK", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "INT"],
    name: "VHS_LoadImages",
    display_name:
      "Load Images (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_LoadImagesPath: {
    input: {
      required: { directory: [["__inputs__"]] },
      optional: {
        image_load_cap: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        skip_first_images: [
          "INT",
          { default: 0, min: 0, max: 9007199254740991, step: 1 },
        ],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["IMAGE", "MASK", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "INT"],
    name: "VHS_LoadImagesPath",
    display_name:
      "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_LoadAudio: {
    input: {
      required: { audio_file: [["__inputs__"]] },
      optional: { seek_seconds: ["FLOAT", { default: 0, min: 0 }] },
    },
    output: ["VHS_AUDIO"],
    output_is_list: [false],
    output_name: ["audio"],
    name: "VHS_LoadAudio",
    display_name:
      "Load Audio (Path)\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_PruneOutputs: {
    input: {
      required: {
        filenames: ["VHS_FILENAMES"],
        options: [["Intermediate", "Intermediate and Utility"]],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "VHS_PruneOutputs",
    display_name:
      "Prune Outputs \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: true,
  },
  VHS_BatchManager: {
    input: {
      required: {
        frames_per_batch: ["INT", { default: 16, min: 1, max: 128, step: 1 }],
      },
      hidden: { prompt: "PROMPT", unique_id: "UNIQUE_ID" },
    },
    output: ["VHS_BatchManager"],
    output_is_list: [false],
    output_name: ["VHS_BatchManager"],
    name: "VHS_BatchManager",
    display_name:
      "Batch Manager \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    output_node: false,
  },
  VHS_SplitLatents: {
    input: {
      required: {
        latents: ["LATENT"],
        split_index: [
          "INT",
          {
            default: 0,
            step: 1,
            min: -9007199254740991,
            max: 9007199254740991,
          },
        ],
      },
    },
    output: ["LATENT", "INT", "LATENT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["LATENT_A", "A_count", "LATENT_B", "B_count"],
    name: "VHS_SplitLatents",
    display_name:
      "Split Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    output_node: false,
  },
  VHS_SplitImages: {
    input: {
      required: {
        images: ["IMAGE"],
        split_index: [
          "INT",
          {
            default: 0,
            step: 1,
            min: -9007199254740991,
            max: 9007199254740991,
          },
        ],
      },
    },
    output: ["IMAGE", "INT", "IMAGE", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["IMAGE_A", "A_count", "IMAGE_B", "B_count"],
    name: "VHS_SplitImages",
    display_name:
      "Split Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    output_node: false,
  },
  VHS_SplitMasks: {
    input: {
      required: {
        mask: ["MASK"],
        split_index: [
          "INT",
          {
            default: 0,
            step: 1,
            min: -9007199254740991,
            max: 9007199254740991,
          },
        ],
      },
    },
    output: ["MASK", "INT", "MASK", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["MASK_A", "A_count", "MASK_B", "B_count"],
    name: "VHS_SplitMasks",
    display_name:
      "Split Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    output_node: false,
  },
  VHS_MergeLatents: {
    input: {
      required: {
        latents_A: ["LATENT"],
        latents_B: ["LATENT"],
        merge_strategy: [
          ["match A", "match B", "match smaller", "match larger"],
        ],
        scale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"],
        ],
        crop: [["disabled", "center"]],
      },
    },
    output: ["LATENT", "INT"],
    output_is_list: [false, false],
    output_name: ["LATENT", "count"],
    name: "VHS_MergeLatents",
    display_name:
      "Merge Latent Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    output_node: false,
  },
  VHS_MergeImages: {
    input: {
      required: {
        images_A: ["IMAGE"],
        images_B: ["IMAGE"],
        merge_strategy: [
          ["match A", "match B", "match smaller", "match larger"],
        ],
        scale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"],
        ],
        crop: [["disabled", "center"]],
      },
    },
    output: ["IMAGE", "INT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "count"],
    name: "VHS_MergeImages",
    display_name:
      "Merge Image Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    output_node: false,
  },
  VHS_MergeMasks: {
    input: {
      required: {
        mask_A: ["MASK"],
        mask_B: ["MASK"],
        merge_strategy: [
          ["match A", "match B", "match smaller", "match larger"],
        ],
        scale_method: [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"],
        ],
        crop: [["disabled", "center"]],
      },
    },
    output: ["MASK", "INT"],
    output_is_list: [false, false],
    output_name: ["MASK", "count"],
    name: "VHS_MergeMasks",
    display_name:
      "Merge Mask Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    output_node: false,
  },
  VHS_SelectEveryNthLatent: {
    input: {
      required: {
        latents: ["LATENT"],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["LATENT", "INT"],
    output_is_list: [false, false],
    output_name: ["LATENT", "count"],
    name: "VHS_SelectEveryNthLatent",
    display_name:
      "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    output_node: false,
  },
  VHS_SelectEveryNthImage: {
    input: {
      required: {
        images: ["IMAGE"],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["IMAGE", "INT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "count"],
    name: "VHS_SelectEveryNthImage",
    display_name:
      "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    output_node: false,
  },
  VHS_SelectEveryNthMask: {
    input: {
      required: {
        mask: ["MASK"],
        select_every_nth: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["MASK", "INT"],
    output_is_list: [false, false],
    output_name: ["MASK", "count"],
    name: "VHS_SelectEveryNthMask",
    display_name:
      "Select Every Nth Mask \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    output_node: false,
  },
  VHS_GetLatentCount: {
    input: { required: { latents: ["LATENT"] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["count"],
    name: "VHS_GetLatentCount",
    display_name:
      "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    output_node: false,
  },
  VHS_GetImageCount: {
    input: { required: { images: ["IMAGE"] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["count"],
    name: "VHS_GetImageCount",
    display_name:
      "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    output_node: false,
  },
  VHS_GetMaskCount: {
    input: { required: { mask: ["MASK"] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["count"],
    name: "VHS_GetMaskCount",
    display_name:
      "Get Mask Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    output_node: false,
  },
  VHS_DuplicateLatents: {
    input: {
      required: {
        latents: ["LATENT"],
        multiply_by: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["LATENT", "INT"],
    output_is_list: [false, false],
    output_name: ["LATENT", "count"],
    name: "VHS_DuplicateLatents",
    display_name:
      "Duplicate Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
    output_node: false,
  },
  VHS_DuplicateImages: {
    input: {
      required: {
        images: ["IMAGE"],
        multiply_by: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["IMAGE", "INT"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "count"],
    name: "VHS_DuplicateImages",
    display_name:
      "Duplicate Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
    output_node: false,
  },
  VHS_DuplicateMasks: {
    input: {
      required: {
        mask: ["MASK"],
        multiply_by: [
          "INT",
          { default: 1, min: 1, max: 9007199254740991, step: 1 },
        ],
      },
    },
    output: ["MASK", "INT"],
    output_is_list: [false, false],
    output_name: ["MASK", "count"],
    name: "VHS_DuplicateMasks",
    display_name:
      "Duplicate Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
    output_node: false,
  },
  VHS_VAEEncodeBatched: {
    input: {
      required: {
        pixels: ["IMAGE"],
        vae: ["VAE"],
        per_batch: ["INT", { default: 16, min: 1 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "VHS_VAEEncodeBatched",
    display_name:
      "VAE Encode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
    output_node: false,
  },
  VHS_VAEDecodeBatched: {
    input: {
      required: {
        samples: ["LATENT"],
        vae: ["VAE"],
        per_batch: ["INT", { default: 16, min: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "VHS_VAEDecodeBatched",
    display_name:
      "VAE Decode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
    description: "",
    category:
      "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
    output_node: false,
  },
  BNK_CLIPTextEncodeAdvanced: {
    input: {
      required: {
        text: ["STRING", { multiline: true }],
        clip: ["CLIP"],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_CLIPTextEncodeAdvanced",
    display_name: "CLIP Text Encode (Advanced)",
    description: "",
    category: "conditioning/advanced",
    output_node: false,
  },
  BNK_CLIPTextEncodeSDXLAdvanced: {
    input: {
      required: {
        text_l: ["STRING", { multiline: true }],
        text_g: ["STRING", { multiline: true }],
        clip: ["CLIP"],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        balance: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_CLIPTextEncodeSDXLAdvanced",
    display_name: "CLIP Text Encode SDXL (Advanced)",
    description: "",
    category: "conditioning/advanced",
    output_node: false,
  },
  BNK_AddCLIPSDXLParams: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_AddCLIPSDXLParams",
    display_name: "Add CLIP SDXL Params",
    description: "",
    category: "conditioning/advanced",
    output_node: false,
  },
  BNK_AddCLIPSDXLRParams: {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        ascore: ["FLOAT", { default: 6.0, min: 0.0, max: 1000.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "BNK_AddCLIPSDXLRParams",
    display_name: "Add CLIP SDXL Refiner Params",
    description: "",
    category: "conditioning/advanced",
    output_node: false,
  },
  "Text Utils - Join Strings": {
    input: {
      required: {
        text1: ["STRING", { default: "" }],
        text2: ["STRING", { default: "" }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["TEXT"],
    name: "Text Utils - Join Strings",
    display_name: "Join Strings",
    description: "",
    category: "text utility",
    output_node: false,
  },
  "Text Utils - Split String to List": {
    input: {
      required: {
        text: ["STRING", { default: "" }],
        separator: ["STRING", { default: "/" }],
      },
    },
    output: ["STRING"],
    output_is_list: [true],
    output_name: ["TEXT"],
    name: "Text Utils - Split String to List",
    display_name: "Split String to List",
    description: "",
    category: "text utility",
    output_node: false,
  },
  "Text Utils - Join String List": {
    input: {
      required: {
        texts: ["STRING", { forceInput: true }],
        separator: ["STRING", { default: "/" }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["TEXT"],
    name: "Text Utils - Join String List",
    display_name: "Join String List",
    description: "",
    category: "text utility",
    output_node: false,
  },
  "Text Utils - Join N-Elements of String List": {
    input: {
      required: {
        texts: ["STRING", { forceInput: true }],
        separator: ["STRING", { default: "/" }],
        n: ["INT", { default: 1, min: 0, max: 10000, step: 1 }],
        start_from: [["front", "back"]],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["TEXT"],
    name: "Text Utils - Join N-Elements of String List",
    display_name: "Join N-Element of String List",
    description: "",
    category: "text utility",
    output_node: false,
  },
  KSamplerRAVE: {
    input: {
      required: {
        model: ["MODEL"],
        grid_size: ["INT", { default: 3, min: 2, max: 8 }],
        pad_grid: ["BOOLEAN", { default: false }],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        add_noise: ["BOOLEAN", { default: false }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 7.0, min: 0.0, max: 100.0, step: 0.1, round: 0.1 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSamplerRAVE",
    display_name: "KSampler (RAVE)",
    description: "",
    category: "RAVE",
    output_node: false,
  },
  ImageGridCompose: {
    input: {
      required: {
        images: ["IMAGE"],
        x_dim: ["INT", { default: 3, min: 2, max: 8 }],
        pad_grid: ["BOOLEAN", { default: false }],
        random: ["BOOLEAN", { default: false }],
        rs: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageGridCompose",
    display_name: "ImageGridCompose",
    description: "",
    category: "RAVE/Image",
    output_node: false,
  },
  ImageGridDecompose: {
    input: {
      required: {
        images: ["IMAGE"],
        x_dim: ["INT", { default: 3, min: 2, max: 8 }],
        pad_grid: ["BOOLEAN", { default: false }],
        random: ["BOOLEAN", { default: false }],
        rs: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageGridDecompose",
    display_name: "ImageGridDecompose",
    description: "",
    category: "RAVE/Image",
    output_node: false,
  },
  LatentGridCompose: {
    input: {
      required: {
        latents: ["LATENT"],
        x_dim: ["INT", { default: 3, min: 2, max: 8 }],
        pad_grid: ["BOOLEAN", { default: false }],
        random: ["BOOLEAN", { default: false }],
        rs: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentGridCompose",
    display_name: "LatentGridCompose",
    description: "",
    category: "RAVE/Latent",
    output_node: false,
  },
  LatentGridDecompose: {
    input: {
      required: {
        latents: ["LATENT"],
        x_dim: ["INT", { default: 3, min: 2, max: 8 }],
        pad_grid: ["BOOLEAN", { default: false }],
        random: ["BOOLEAN", { default: false }],
        rs: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "LatentGridDecompose",
    display_name: "LatentGridDecompose",
    description: "",
    category: "RAVE/Latent",
    output_node: false,
  },
  "KSampler (Efficient)": {
    input: {
      required: {
        model: ["MODEL"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        preview_method: [
          ["auto", "latent2rgb", "taesd", "vae_decoded_only", "none"],
        ],
        vae_decode: [["true", "true (tiled)", "false"]],
      },
      optional: { optional_vae: ["VAE"], script: ["SCRIPT"] },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
      },
    },
    output: ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "IMAGE"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE",
    ],
    name: "KSampler (Efficient)",
    display_name: "KSampler (Efficient)",
    description: "",
    category: "Efficiency Nodes/Sampling",
    output_node: true,
  },
  "KSampler Adv. (Efficient)": {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: [["enable", "disable"]],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        return_with_leftover_noise: [["disable", "enable"]],
        preview_method: [["auto", "latent2rgb", "taesd", "none"]],
        vae_decode: [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)",
          ],
        ],
      },
      optional: { optional_vae: ["VAE"], script: ["SCRIPT"] },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
      },
    },
    output: ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "IMAGE"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "IMAGE",
    ],
    name: "KSampler Adv. (Efficient)",
    display_name: "KSampler Adv. (Efficient)",
    description: "",
    category: "Efficiency Nodes/Sampling",
    output_node: true,
  },
  "KSampler SDXL (Eff.)": {
    input: {
      required: {
        sdxl_tuple: ["SDXL_TUPLE"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        refine_at_step: ["INT", { default: -1, min: -1, max: 10000 }],
        preview_method: [["auto", "latent2rgb", "taesd", "none"]],
        vae_decode: [
          [
            "true",
            "true (tiled)",
            "false",
            "output only",
            "output only (tiled)",
          ],
        ],
      },
      optional: { optional_vae: ["VAE"], script: ["SCRIPT"] },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
      },
    },
    output: ["SDXL_TUPLE", "LATENT", "VAE", "IMAGE"],
    output_is_list: [false, false, false, false],
    output_name: ["SDXL_TUPLE", "LATENT", "VAE", "IMAGE"],
    name: "KSampler SDXL (Eff.)",
    display_name: "KSampler SDXL (Eff.)",
    description: "",
    category: "Efficiency Nodes/Sampling",
    output_node: true,
  },
  "Efficient Loader": {
    input: {
      required: {
        ckpt_name: [["__models__"]],
        vae_name: [["Baked VAE", "__models__"]],
        clip_skip: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        lora_name: [["None", "__models__"]],
        lora_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        positive: ["STRING", { default: "CLIP_POSITIVE", multiline: true }],
        negative: ["STRING", { default: "CLIP_NEGATIVE", multiline: true }],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        empty_latent_width: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 64 },
        ],
        empty_latent_height: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 64 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 262144 }],
      },
      optional: {
        lora_stack: ["LORA_STACK"],
        cnet_stack: ["CONTROL_NET_STACK"],
      },
      hidden: { prompt: "PROMPT", my_unique_id: "UNIQUE_ID" },
    },
    output: [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES",
    ],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "MODEL",
      "CONDITIONING+",
      "CONDITIONING-",
      "LATENT",
      "VAE",
      "CLIP",
      "DEPENDENCIES",
    ],
    name: "Efficient Loader",
    display_name: "Efficient Loader",
    description: "",
    category: "Efficiency Nodes/Loaders",
    output_node: false,
  },
  "Eff. Loader SDXL": {
    input: {
      required: {
        base_ckpt_name: [["__models__"]],
        base_clip_skip: ["INT", { default: -2, min: -24, max: -1, step: 1 }],
        refiner_ckpt_name: [["None", "__models__"]],
        refiner_clip_skip: ["INT", { default: -2, min: -24, max: -1, step: 1 }],
        positive_ascore: [
          "FLOAT",
          { default: 6.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        negative_ascore: [
          "FLOAT",
          { default: 2.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        vae_name: [["Baked VAE", "__models__"]],
        positive: ["STRING", { default: "CLIP_POSITIVE", multiline: true }],
        negative: ["STRING", { default: "CLIP_NEGATIVE", multiline: true }],
        token_normalization: [["none", "mean", "length", "length+mean"]],
        weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        empty_latent_width: [
          "INT",
          { default: 1024, min: 64, max: 8192, step: 64 },
        ],
        empty_latent_height: [
          "INT",
          { default: 1024, min: 64, max: 8192, step: 64 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
      optional: {
        lora_stack: ["LORA_STACK"],
        cnet_stack: ["CONTROL_NET_STACK"],
      },
      hidden: { prompt: "PROMPT", my_unique_id: "UNIQUE_ID" },
    },
    output: ["SDXL_TUPLE", "LATENT", "VAE", "DEPENDENCIES"],
    output_is_list: [false, false, false, false],
    output_name: ["SDXL_TUPLE", "LATENT", "VAE", "DEPENDENCIES"],
    name: "Eff. Loader SDXL",
    display_name: "Eff. Loader SDXL",
    description: "",
    category: "Efficiency Nodes/Loaders",
    output_node: false,
  },
  "LoRA Stacker": {
    input: {
      required: {
        input_mode: [["simple", "advanced"]],
        lora_count: ["INT", { default: 3, min: 0, max: 50, step: 1 }],
        lora_name_1: [["None", "__models__"]],
        lora_wt_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_2: [["None", "__models__"]],
        lora_wt_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_3: [["None", "__models__"]],
        lora_wt_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_4: [["None", "__models__"]],
        lora_wt_4: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_4: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_4: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_5: [["None", "__models__"]],
        lora_wt_5: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_5: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_5: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_6: [["None", "__models__"]],
        lora_wt_6: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_6: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_6: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_7: [["None", "__models__"]],
        lora_wt_7: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_7: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_7: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_8: [["None", "__models__"]],
        lora_wt_8: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_8: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_8: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_9: [["None", "__models__"]],
        lora_wt_9: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_9: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_9: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_10: [["None", "__models__"]],
        lora_wt_10: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_10: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_10: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_11: [["None", "__models__"]],
        lora_wt_11: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_11: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_11: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_12: [["None", "__models__"]],
        lora_wt_12: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_12: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_12: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_13: [["None", "__models__"]],
        lora_wt_13: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_13: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_13: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_14: [["None", "__models__"]],
        lora_wt_14: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_14: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_14: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_15: [["None", "__models__"]],
        lora_wt_15: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_15: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_15: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_16: [["None", "__models__"]],
        lora_wt_16: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_16: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_16: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_17: [["None", "__models__"]],
        lora_wt_17: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_17: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_17: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_18: [["None", "__models__"]],
        lora_wt_18: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_18: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_18: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_19: [["None", "__models__"]],
        lora_wt_19: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_19: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_19: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_20: [["None", "__models__"]],
        lora_wt_20: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_20: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_20: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_21: [["None", "__models__"]],
        lora_wt_21: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_21: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_21: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_22: [["None", "__models__"]],
        lora_wt_22: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_22: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_22: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_23: [["None", "__models__"]],
        lora_wt_23: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_23: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_23: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_24: [["None", "__models__"]],
        lora_wt_24: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_24: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_24: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_25: [["None", "__models__"]],
        lora_wt_25: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_25: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_25: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_26: [["None", "__models__"]],
        lora_wt_26: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_26: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_26: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_27: [["None", "__models__"]],
        lora_wt_27: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_27: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_27: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_28: [["None", "__models__"]],
        lora_wt_28: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_28: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_28: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_29: [["None", "__models__"]],
        lora_wt_29: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_29: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_29: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_30: [["None", "__models__"]],
        lora_wt_30: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_30: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_30: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_31: [["None", "__models__"]],
        lora_wt_31: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_31: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_31: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_32: [["None", "__models__"]],
        lora_wt_32: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_32: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_32: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_33: [["None", "__models__"]],
        lora_wt_33: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_33: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_33: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_34: [["None", "__models__"]],
        lora_wt_34: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_34: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_34: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_35: [["None", "__models__"]],
        lora_wt_35: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_35: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_35: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_36: [["None", "__models__"]],
        lora_wt_36: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_36: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_36: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_37: [["None", "__models__"]],
        lora_wt_37: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_37: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_37: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_38: [["None", "__models__"]],
        lora_wt_38: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_38: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_38: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_39: [["None", "__models__"]],
        lora_wt_39: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_39: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_39: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_40: [["None", "__models__"]],
        lora_wt_40: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_40: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_40: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_41: [["None", "__models__"]],
        lora_wt_41: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_41: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_41: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_42: [["None", "__models__"]],
        lora_wt_42: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_42: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_42: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_43: [["None", "__models__"]],
        lora_wt_43: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_43: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_43: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_44: [["None", "__models__"]],
        lora_wt_44: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_44: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_44: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_45: [["None", "__models__"]],
        lora_wt_45: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_45: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_45: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_46: [["None", "__models__"]],
        lora_wt_46: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_46: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_46: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_47: [["None", "__models__"]],
        lora_wt_47: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_47: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_47: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_48: [["None", "__models__"]],
        lora_wt_48: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_48: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_48: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_49: [["None", "__models__"]],
        lora_wt_49: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        model_str_49: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_49: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["LORA_STACK"],
    output_is_list: [false],
    output_name: ["LORA_STACK"],
    name: "LoRA Stacker",
    display_name: "LoRA Stacker",
    description: "",
    category: "Efficiency Nodes/Stackers",
    output_node: false,
  },
  "Control Net Stacker": {
    input: {
      required: {
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
      },
      optional: { cnet_stack: ["CONTROL_NET_STACK"] },
    },
    output: ["CONTROL_NET_STACK"],
    output_is_list: [false],
    output_name: ["CNET_STACK"],
    name: "Control Net Stacker",
    display_name: "Control Net Stacker",
    description: "",
    category: "Efficiency Nodes/Stackers",
    output_node: false,
  },
  "Apply ControlNet Stack": {
    input: {
      required: { positive: ["CONDITIONING"], negative: ["CONDITIONING"] },
      optional: { cnet_stack: ["CONTROL_NET_STACK"] },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING+", "CONDITIONING-"],
    name: "Apply ControlNet Stack",
    display_name: "Apply ControlNet Stack",
    description: "",
    category: "Efficiency Nodes/Stackers",
    output_node: false,
  },
  "Unpack SDXL Tuple": {
    input: { required: { sdxl_tuple: ["SDXL_TUPLE"] } },
    output: [
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "BASE_MODEL",
      "BASE_CLIP",
      "BASE_CONDITIONING+",
      "BASE_CONDITIONING-",
      "REFINER_MODEL",
      "REFINER_CLIP",
      "REFINER_CONDITIONING+",
      "REFINER_CONDITIONING-",
    ],
    name: "Unpack SDXL Tuple",
    display_name: "Unpack SDXL Tuple",
    description: "",
    category: "Efficiency Nodes/Misc",
    output_node: false,
  },
  "Pack SDXL Tuple": {
    input: {
      required: {
        base_model: ["MODEL"],
        base_clip: ["CLIP"],
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        refiner_model: ["MODEL"],
        refiner_clip: ["CLIP"],
        refiner_positive: ["CONDITIONING"],
        refiner_negative: ["CONDITIONING"],
      },
    },
    output: ["SDXL_TUPLE"],
    output_is_list: [false],
    output_name: ["SDXL_TUPLE"],
    name: "Pack SDXL Tuple",
    display_name: "Pack SDXL Tuple",
    description: "",
    category: "Efficiency Nodes/Misc",
    output_node: false,
  },
  "XY Plot": {
    input: {
      required: {
        grid_spacing: ["INT", { default: 0, min: 0, max: 500, step: 5 }],
        XY_flip: [["False", "True"]],
        Y_label_orientation: [["Horizontal", "Vertical"]],
        cache_models: [["True", "False"]],
        ksampler_output_image: [["Images", "Plot"]],
      },
      optional: { dependencies: ["DEPENDENCIES"], X: ["XY"], Y: ["XY"] },
      hidden: { my_unique_id: "UNIQUE_ID" },
    },
    output: ["SCRIPT"],
    output_is_list: [false],
    output_name: ["SCRIPT"],
    name: "XY Plot",
    display_name: "XY Plot",
    description: "",
    category: "Efficiency Nodes/Scripts",
    output_node: false,
  },
  "XY Input: Seeds++ Batch": {
    input: {
      required: { batch_count: ["INT", { default: 3, min: 0, max: 50 }] },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Seeds++ Batch",
    display_name: "XY Input: Seeds++ Batch",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Add/Return Noise": {
    input: {
      required: { XY_type: [["add_noise", "return_with_leftover_noise"]] },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Add/Return Noise",
    display_name: "XY Input: Add/Return Noise",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Steps": {
    input: {
      required: {
        target_parameter: [
          ["steps", "start_at_step", "end_at_step", "refine_at_step"],
        ],
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_step: ["INT", { default: 10, min: 1, max: 10000 }],
        last_step: ["INT", { default: 20, min: 1, max: 10000 }],
        first_start_step: ["INT", { default: 0, min: 0, max: 10000 }],
        last_start_step: ["INT", { default: 10, min: 0, max: 10000 }],
        first_end_step: ["INT", { default: 10, min: 0, max: 10000 }],
        last_end_step: ["INT", { default: 20, min: 0, max: 10000 }],
        first_refine_step: ["INT", { default: 10, min: 0, max: 10000 }],
        last_refine_step: ["INT", { default: 20, min: 0, max: 10000 }],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Steps",
    display_name: "XY Input: Steps",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: CFG Scale": {
    input: {
      required: {
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_cfg: ["FLOAT", { default: 7.0, min: 0.0, max: 100.0 }],
        last_cfg: ["FLOAT", { default: 9.0, min: 0.0, max: 100.0 }],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: CFG Scale",
    display_name: "XY Input: CFG Scale",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Sampler/Scheduler": {
    input: {
      required: {
        target_parameter: [["sampler", "scheduler", "sampler & scheduler"]],
        input_count: ["INT", { default: 3, min: 0, max: 50, step: 1 }],
        sampler_1: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_1: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_2: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_2: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_3: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_3: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_4: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_4: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_5: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_5: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_6: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_6: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_7: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_7: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_8: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_8: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_9: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_9: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_10: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_10: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_11: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_11: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_12: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_12: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_13: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_13: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_14: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_14: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_15: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_15: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_16: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_16: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_17: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_17: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_18: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_18: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_19: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_19: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_20: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_20: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_21: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_21: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_22: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_22: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_23: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_23: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_24: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_24: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_25: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_25: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_26: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_26: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_27: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_27: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_28: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_28: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_29: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_29: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_30: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_30: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_31: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_31: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_32: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_32: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_33: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_33: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_34: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_34: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_35: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_35: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_36: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_36: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_37: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_37: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_38: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_38: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_39: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_39: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_40: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_40: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_41: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_41: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_42: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_42: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_43: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_43: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_44: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_44: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_45: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_45: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_46: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_46: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_47: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_47: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_48: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_48: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_49: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_49: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        sampler_50: [
          [
            "None",
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler_50: [
          [
            "None",
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Sampler/Scheduler",
    display_name: "XY Input: Sampler/Scheduler",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Denoise": {
    input: {
      required: {
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_denoise: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        last_denoise: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Denoise",
    display_name: "XY Input: Denoise",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: VAE": {
    input: {
      required: {
        input_mode: [["VAE Names", "VAE Batch"]],
        batch_path: [
          "STRING",
          { default: "/example_folder", multiline: false },
        ],
        subdirectories: ["BOOLEAN", { default: false }],
        batch_sort: [["ascending", "descending"]],
        batch_max: ["INT", { default: -1, min: -1, max: 50, step: 1 }],
        vae_count: ["INT", { default: 3, min: 0, max: 50, step: 1 }],
        vae_name_1: [["None", "Baked VAE", "__models__"]],
        vae_name_2: [["None", "Baked VAE", "__models__"]],
        vae_name_3: [["None", "Baked VAE", "__models__"]],
        vae_name_4: [["None", "Baked VAE", "__models__"]],
        vae_name_5: [["None", "Baked VAE", "__models__"]],
        vae_name_6: [["None", "Baked VAE", "__models__"]],
        vae_name_7: [["None", "Baked VAE", "__models__"]],
        vae_name_8: [["None", "Baked VAE", "__models__"]],
        vae_name_9: [["None", "Baked VAE", "__models__"]],
        vae_name_10: [["None", "Baked VAE", "__models__"]],
        vae_name_11: [["None", "Baked VAE", "__models__"]],
        vae_name_12: [["None", "Baked VAE", "__models__"]],
        vae_name_13: [["None", "Baked VAE", "__models__"]],
        vae_name_14: [["None", "Baked VAE", "__models__"]],
        vae_name_15: [["None", "Baked VAE", "__models__"]],
        vae_name_16: [["None", "Baked VAE", "__models__"]],
        vae_name_17: [["None", "Baked VAE", "__models__"]],
        vae_name_18: [["None", "Baked VAE", "__models__"]],
        vae_name_19: [["None", "Baked VAE", "__models__"]],
        vae_name_20: [["None", "Baked VAE", "__models__"]],
        vae_name_21: [["None", "Baked VAE", "__models__"]],
        vae_name_22: [["None", "Baked VAE", "__models__"]],
        vae_name_23: [["None", "Baked VAE", "__models__"]],
        vae_name_24: [["None", "Baked VAE", "__models__"]],
        vae_name_25: [["None", "Baked VAE", "__models__"]],
        vae_name_26: [["None", "Baked VAE", "__models__"]],
        vae_name_27: [["None", "Baked VAE", "__models__"]],
        vae_name_28: [["None", "Baked VAE", "__models__"]],
        vae_name_29: [["None", "Baked VAE", "__models__"]],
        vae_name_30: [["None", "Baked VAE", "__models__"]],
        vae_name_31: [["None", "Baked VAE", "__models__"]],
        vae_name_32: [["None", "Baked VAE", "__models__"]],
        vae_name_33: [["None", "Baked VAE", "__models__"]],
        vae_name_34: [["None", "Baked VAE", "__models__"]],
        vae_name_35: [["None", "Baked VAE", "__models__"]],
        vae_name_36: [["None", "Baked VAE", "__models__"]],
        vae_name_37: [["None", "Baked VAE", "__models__"]],
        vae_name_38: [["None", "Baked VAE", "__models__"]],
        vae_name_39: [["None", "Baked VAE", "__models__"]],
        vae_name_40: [["None", "Baked VAE", "__models__"]],
        vae_name_41: [["None", "Baked VAE", "__models__"]],
        vae_name_42: [["None", "Baked VAE", "__models__"]],
        vae_name_43: [["None", "Baked VAE", "__models__"]],
        vae_name_44: [["None", "Baked VAE", "__models__"]],
        vae_name_45: [["None", "Baked VAE", "__models__"]],
        vae_name_46: [["None", "Baked VAE", "__models__"]],
        vae_name_47: [["None", "Baked VAE", "__models__"]],
        vae_name_48: [["None", "Baked VAE", "__models__"]],
        vae_name_49: [["None", "Baked VAE", "__models__"]],
        vae_name_50: [["None", "Baked VAE", "__models__"]],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: VAE",
    display_name: "XY Input: VAE",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Prompt S/R": {
    input: {
      required: {
        target_prompt: [["positive", "negative"]],
        search_txt: ["STRING", { default: "", multiline: false }],
        replace_count: ["INT", { default: 3, min: 0, max: 49 }],
        replace_1: ["STRING", { default: "", multiline: false }],
        replace_2: ["STRING", { default: "", multiline: false }],
        replace_3: ["STRING", { default: "", multiline: false }],
        replace_4: ["STRING", { default: "", multiline: false }],
        replace_5: ["STRING", { default: "", multiline: false }],
        replace_6: ["STRING", { default: "", multiline: false }],
        replace_7: ["STRING", { default: "", multiline: false }],
        replace_8: ["STRING", { default: "", multiline: false }],
        replace_9: ["STRING", { default: "", multiline: false }],
        replace_10: ["STRING", { default: "", multiline: false }],
        replace_11: ["STRING", { default: "", multiline: false }],
        replace_12: ["STRING", { default: "", multiline: false }],
        replace_13: ["STRING", { default: "", multiline: false }],
        replace_14: ["STRING", { default: "", multiline: false }],
        replace_15: ["STRING", { default: "", multiline: false }],
        replace_16: ["STRING", { default: "", multiline: false }],
        replace_17: ["STRING", { default: "", multiline: false }],
        replace_18: ["STRING", { default: "", multiline: false }],
        replace_19: ["STRING", { default: "", multiline: false }],
        replace_20: ["STRING", { default: "", multiline: false }],
        replace_21: ["STRING", { default: "", multiline: false }],
        replace_22: ["STRING", { default: "", multiline: false }],
        replace_23: ["STRING", { default: "", multiline: false }],
        replace_24: ["STRING", { default: "", multiline: false }],
        replace_25: ["STRING", { default: "", multiline: false }],
        replace_26: ["STRING", { default: "", multiline: false }],
        replace_27: ["STRING", { default: "", multiline: false }],
        replace_28: ["STRING", { default: "", multiline: false }],
        replace_29: ["STRING", { default: "", multiline: false }],
        replace_30: ["STRING", { default: "", multiline: false }],
        replace_31: ["STRING", { default: "", multiline: false }],
        replace_32: ["STRING", { default: "", multiline: false }],
        replace_33: ["STRING", { default: "", multiline: false }],
        replace_34: ["STRING", { default: "", multiline: false }],
        replace_35: ["STRING", { default: "", multiline: false }],
        replace_36: ["STRING", { default: "", multiline: false }],
        replace_37: ["STRING", { default: "", multiline: false }],
        replace_38: ["STRING", { default: "", multiline: false }],
        replace_39: ["STRING", { default: "", multiline: false }],
        replace_40: ["STRING", { default: "", multiline: false }],
        replace_41: ["STRING", { default: "", multiline: false }],
        replace_42: ["STRING", { default: "", multiline: false }],
        replace_43: ["STRING", { default: "", multiline: false }],
        replace_44: ["STRING", { default: "", multiline: false }],
        replace_45: ["STRING", { default: "", multiline: false }],
        replace_46: ["STRING", { default: "", multiline: false }],
        replace_47: ["STRING", { default: "", multiline: false }],
        replace_48: ["STRING", { default: "", multiline: false }],
        replace_49: ["STRING", { default: "", multiline: false }],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Prompt S/R",
    display_name: "XY Input: Prompt S/R",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Aesthetic Score": {
    input: {
      required: {
        target_ascore: [["positive", "negative"]],
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_ascore: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
        last_ascore: [
          "FLOAT",
          { default: 10.0, min: 0.0, max: 1000.0, step: 0.01 },
        ],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Aesthetic Score",
    display_name: "XY Input: Aesthetic Score",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Refiner On/Off": {
    input: {
      required: {
        refine_at_percent: [
          "FLOAT",
          { default: 0.8, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Refiner On/Off",
    display_name: "XY Input: Refiner On/Off",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Checkpoint": {
    input: {
      required: {
        target_ckpt: [["Base", "Refiner"]],
        input_mode: [
          [
            "Ckpt Names",
            "Ckpt Names+ClipSkip",
            "Ckpt Names+ClipSkip+VAE",
            "Checkpoint Batch",
          ],
        ],
        batch_path: [
          "STRING",
          { default: "/example_folder", multiline: false },
        ],
        subdirectories: ["BOOLEAN", { default: false }],
        batch_sort: [["ascending", "descending"]],
        batch_max: ["INT", { default: -1, min: -1, max: 50, step: 1 }],
        ckpt_count: ["INT", { default: 3, min: 0, max: 50, step: 1 }],
        ckpt_name_1: [["None", "__models__"]],
        clip_skip_1: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_1: [["Baked VAE", "__models__"]],
        ckpt_name_2: [["None", "__models__"]],
        clip_skip_2: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_2: [["Baked VAE", "__models__"]],
        ckpt_name_3: [["None", "__models__"]],
        clip_skip_3: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_3: [["Baked VAE", "__models__"]],
        ckpt_name_4: [["None", "__models__"]],
        clip_skip_4: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_4: [["Baked VAE", "__models__"]],
        ckpt_name_5: [["None", "__models__"]],
        clip_skip_5: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_5: [["Baked VAE", "__models__"]],
        ckpt_name_6: [["None", "__models__"]],
        clip_skip_6: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_6: [["Baked VAE", "__models__"]],
        ckpt_name_7: [["None", "__models__"]],
        clip_skip_7: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_7: [["Baked VAE", "__models__"]],
        ckpt_name_8: [["None", "__models__"]],
        clip_skip_8: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_8: [["Baked VAE", "__models__"]],
        ckpt_name_9: [["None", "__models__"]],
        clip_skip_9: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_9: [["Baked VAE", "__models__"]],
        ckpt_name_10: [["None", "__models__"]],
        clip_skip_10: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_10: [["Baked VAE", "__models__"]],
        ckpt_name_11: [["None", "__models__"]],
        clip_skip_11: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_11: [["Baked VAE", "__models__"]],
        ckpt_name_12: [["None", "__models__"]],
        clip_skip_12: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_12: [["Baked VAE", "__models__"]],
        ckpt_name_13: [["None", "__models__"]],
        clip_skip_13: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_13: [["Baked VAE", "__models__"]],
        ckpt_name_14: [["None", "__models__"]],
        clip_skip_14: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_14: [["Baked VAE", "__models__"]],
        ckpt_name_15: [["None", "__models__"]],
        clip_skip_15: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_15: [["Baked VAE", "__models__"]],
        ckpt_name_16: [["None", "__models__"]],
        clip_skip_16: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_16: [["Baked VAE", "__models__"]],
        ckpt_name_17: [["None", "__models__"]],
        clip_skip_17: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_17: [["Baked VAE", "__models__"]],
        ckpt_name_18: [["None", "__models__"]],
        clip_skip_18: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_18: [["Baked VAE", "__models__"]],
        ckpt_name_19: [["None", "__models__"]],
        clip_skip_19: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_19: [["Baked VAE", "__models__"]],
        ckpt_name_20: [["None", "__models__"]],
        clip_skip_20: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_20: [["Baked VAE", "__models__"]],
        ckpt_name_21: [["None", "__models__"]],
        clip_skip_21: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_21: [["Baked VAE", "__models__"]],
        ckpt_name_22: [["None", "__models__"]],
        clip_skip_22: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_22: [["Baked VAE", "__models__"]],
        ckpt_name_23: [["None", "__models__"]],
        clip_skip_23: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_23: [["Baked VAE", "__models__"]],
        ckpt_name_24: [["None", "__models__"]],
        clip_skip_24: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_24: [["Baked VAE", "__models__"]],
        ckpt_name_25: [["None", "__models__"]],
        clip_skip_25: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_25: [["Baked VAE", "__models__"]],
        ckpt_name_26: [["None", "__models__"]],
        clip_skip_26: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_26: [["Baked VAE", "__models__"]],
        ckpt_name_27: [["None", "__models__"]],
        clip_skip_27: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_27: [["Baked VAE", "__models__"]],
        ckpt_name_28: [["None", "__models__"]],
        clip_skip_28: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_28: [["Baked VAE", "__models__"]],
        ckpt_name_29: [["None", "__models__"]],
        clip_skip_29: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_29: [["Baked VAE", "__models__"]],
        ckpt_name_30: [["None", "__models__"]],
        clip_skip_30: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_30: [["Baked VAE", "__models__"]],
        ckpt_name_31: [["None", "__models__"]],
        clip_skip_31: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_31: [["Baked VAE", "__models__"]],
        ckpt_name_32: [["None", "__models__"]],
        clip_skip_32: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_32: [["Baked VAE", "__models__"]],
        ckpt_name_33: [["None", "__models__"]],
        clip_skip_33: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_33: [["Baked VAE", "__models__"]],
        ckpt_name_34: [["None", "__models__"]],
        clip_skip_34: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_34: [["Baked VAE", "__models__"]],
        ckpt_name_35: [["None", "__models__"]],
        clip_skip_35: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_35: [["Baked VAE", "__models__"]],
        ckpt_name_36: [["None", "__models__"]],
        clip_skip_36: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_36: [["Baked VAE", "__models__"]],
        ckpt_name_37: [["None", "__models__"]],
        clip_skip_37: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_37: [["Baked VAE", "__models__"]],
        ckpt_name_38: [["None", "__models__"]],
        clip_skip_38: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_38: [["Baked VAE", "__models__"]],
        ckpt_name_39: [["None", "__models__"]],
        clip_skip_39: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_39: [["Baked VAE", "__models__"]],
        ckpt_name_40: [["None", "__models__"]],
        clip_skip_40: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_40: [["Baked VAE", "__models__"]],
        ckpt_name_41: [["None", "__models__"]],
        clip_skip_41: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_41: [["Baked VAE", "__models__"]],
        ckpt_name_42: [["None", "__models__"]],
        clip_skip_42: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_42: [["Baked VAE", "__models__"]],
        ckpt_name_43: [["None", "__models__"]],
        clip_skip_43: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_43: [["Baked VAE", "__models__"]],
        ckpt_name_44: [["None", "__models__"]],
        clip_skip_44: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_44: [["Baked VAE", "__models__"]],
        ckpt_name_45: [["None", "__models__"]],
        clip_skip_45: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_45: [["Baked VAE", "__models__"]],
        ckpt_name_46: [["None", "__models__"]],
        clip_skip_46: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_46: [["Baked VAE", "__models__"]],
        ckpt_name_47: [["None", "__models__"]],
        clip_skip_47: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_47: [["Baked VAE", "__models__"]],
        ckpt_name_48: [["None", "__models__"]],
        clip_skip_48: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_48: [["Baked VAE", "__models__"]],
        ckpt_name_49: [["None", "__models__"]],
        clip_skip_49: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_49: [["Baked VAE", "__models__"]],
        ckpt_name_50: [["None", "__models__"]],
        clip_skip_50: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        vae_name_50: [["Baked VAE", "__models__"]],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Checkpoint",
    display_name: "XY Input: Checkpoint",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Clip Skip": {
    input: {
      required: {
        target_ckpt: [["Base", "Refiner"]],
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_clip_skip: ["INT", { default: -1, min: -24, max: -1, step: 1 }],
        last_clip_skip: ["INT", { default: -3, min: -24, max: -1, step: 1 }],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Clip Skip",
    display_name: "XY Input: Clip Skip",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: LoRA": {
    input: {
      required: {
        input_mode: [["LoRA Names", "LoRA Names+Weights", "LoRA Batch"]],
        batch_path: [
          "STRING",
          { default: "/example_folder", multiline: false },
        ],
        subdirectories: ["BOOLEAN", { default: false }],
        batch_sort: [["ascending", "descending"]],
        batch_max: ["INT", { default: -1, min: -1, max: 50, step: 1 }],
        lora_count: ["INT", { default: 3, min: 0, max: 50, step: 1 }],
        model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_1: [["None", "__models__"]],
        model_str_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_2: [["None", "__models__"]],
        model_str_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_3: [["None", "__models__"]],
        model_str_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_4: [["None", "__models__"]],
        model_str_4: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_4: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_5: [["None", "__models__"]],
        model_str_5: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_5: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_6: [["None", "__models__"]],
        model_str_6: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_6: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_7: [["None", "__models__"]],
        model_str_7: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_7: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_8: [["None", "__models__"]],
        model_str_8: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_8: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_9: [["None", "__models__"]],
        model_str_9: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_9: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_10: [["None", "__models__"]],
        model_str_10: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_10: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_11: [["None", "__models__"]],
        model_str_11: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_11: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_12: [["None", "__models__"]],
        model_str_12: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_12: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_13: [["None", "__models__"]],
        model_str_13: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_13: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_14: [["None", "__models__"]],
        model_str_14: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_14: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_15: [["None", "__models__"]],
        model_str_15: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_15: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_16: [["None", "__models__"]],
        model_str_16: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_16: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_17: [["None", "__models__"]],
        model_str_17: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_17: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_18: [["None", "__models__"]],
        model_str_18: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_18: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_19: [["None", "__models__"]],
        model_str_19: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_19: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_20: [["None", "__models__"]],
        model_str_20: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_20: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_21: [["None", "__models__"]],
        model_str_21: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_21: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_22: [["None", "__models__"]],
        model_str_22: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_22: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_23: [["None", "__models__"]],
        model_str_23: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_23: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_24: [["None", "__models__"]],
        model_str_24: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_24: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_25: [["None", "__models__"]],
        model_str_25: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_25: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_26: [["None", "__models__"]],
        model_str_26: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_26: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_27: [["None", "__models__"]],
        model_str_27: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_27: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_28: [["None", "__models__"]],
        model_str_28: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_28: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_29: [["None", "__models__"]],
        model_str_29: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_29: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_30: [["None", "__models__"]],
        model_str_30: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_30: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_31: [["None", "__models__"]],
        model_str_31: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_31: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_32: [["None", "__models__"]],
        model_str_32: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_32: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_33: [["None", "__models__"]],
        model_str_33: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_33: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_34: [["None", "__models__"]],
        model_str_34: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_34: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_35: [["None", "__models__"]],
        model_str_35: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_35: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_36: [["None", "__models__"]],
        model_str_36: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_36: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_37: [["None", "__models__"]],
        model_str_37: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_37: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_38: [["None", "__models__"]],
        model_str_38: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_38: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_39: [["None", "__models__"]],
        model_str_39: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_39: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_40: [["None", "__models__"]],
        model_str_40: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_40: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_41: [["None", "__models__"]],
        model_str_41: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_41: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_42: [["None", "__models__"]],
        model_str_42: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_42: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_43: [["None", "__models__"]],
        model_str_43: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_43: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_44: [["None", "__models__"]],
        model_str_44: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_44: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_45: [["None", "__models__"]],
        model_str_45: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_45: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_46: [["None", "__models__"]],
        model_str_46: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_46: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_47: [["None", "__models__"]],
        model_str_47: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_47: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_48: [["None", "__models__"]],
        model_str_48: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_48: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_49: [["None", "__models__"]],
        model_str_49: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_49: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_50: [["None", "__models__"]],
        model_str_50: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_str_50: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: LoRA",
    display_name: "XY Input: LoRA",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: LoRA Plot": {
    input: {
      required: {
        input_mode: [
          [
            "X: LoRA Batch, Y: LoRA Weight",
            "X: LoRA Batch, Y: Model Strength",
            "X: LoRA Batch, Y: Clip Strength",
            "X: Model Strength, Y: Clip Strength",
          ],
        ],
        lora_name: [["None", "__models__"]],
        model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        X_batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        X_batch_path: [
          "STRING",
          { default: "/example_folder", multiline: false },
        ],
        X_subdirectories: ["BOOLEAN", { default: false }],
        X_batch_sort: [["ascending", "descending"]],
        X_first_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        X_last_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        Y_batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        Y_first_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        Y_last_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["XY", "XY"],
    output_is_list: [false, false],
    output_name: ["X", "Y"],
    name: "XY Input: LoRA Plot",
    display_name: "XY Input: LoRA Plot",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: LoRA Stacks": {
    input: {
      required: { node_state: [["Enabled"]] },
      optional: {
        lora_stack_1: ["LORA_STACK"],
        lora_stack_2: ["LORA_STACK"],
        lora_stack_3: ["LORA_STACK"],
        lora_stack_4: ["LORA_STACK"],
        lora_stack_5: ["LORA_STACK"],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: LoRA Stacks",
    display_name: "XY Input: LoRA Stacks",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Control Net": {
    input: {
      required: {
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        target_parameter: [["strength", "start_percent", "end_percent"]],
        batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        first_strength: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        last_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        first_start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        last_start_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        first_end_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        last_end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
      optional: { cnet_stack: ["CONTROL_NET_STACK"] },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Control Net",
    display_name: "XY Input: Control Net",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Control Net Plot": {
    input: {
      required: {
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        plot_type: [
          [
            "X: Strength, Y: Start%",
            "X: Strength, Y: End%",
            "X: Start%, Y: Strength",
            "X: Start%, Y: End%",
            "X: End%, Y: Strength",
            "X: End%, Y: Start%",
          ],
        ],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        start_percent: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        end_percent: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        X_batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        X_first_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        X_last_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        Y_batch_count: ["INT", { default: 3, min: 0, max: 50 }],
        Y_first_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
        Y_last_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { cnet_stack: ["CONTROL_NET_STACK"] },
    },
    output: ["XY", "XY"],
    output_is_list: [false, false],
    output_name: ["X", "Y"],
    name: "XY Input: Control Net Plot",
    display_name: "XY Input: Control Net Plot",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "XY Input: Manual XY Entry": {
    input: {
      required: {
        plot_type: [
          [
            "Nothing",
            "Seeds++ Batch",
            "Steps",
            "StartStep",
            "EndStep",
            "CFG Scale",
            "Sampler",
            "Scheduler",
            "Denoise",
            "VAE",
            "Positive Prompt S/R",
            "Negative Prompt S/R",
            "Checkpoint",
            "Clip Skip",
            "LoRA",
          ],
        ],
        plot_value: ["STRING", { default: "", multiline: true }],
      },
    },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "XY Input: Manual XY Entry",
    display_name: "XY Input: Manual XY Entry",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "Manual XY Entry Info": {
    input: {
      required: {
        notes: [
          "STRING",
          {
            default:
              "_____________SYNTAX_____________\n(X/Y_types)     (X/Y_values)\nSeeds++ Batch   batch_count\nSteps           steps_1;steps_2;...\nStartStep       start_step_1;start_step_2;...\nEndStep         end_step_1;end_step_2;...\nCFG Scale       cfg_1;cfg_2;...\nSampler(1)      sampler_1;sampler_2;...\nSampler(2)      sampler_1,scheduler_1;...\nSampler(3)      sampler_1;...;,default_scheduler\nScheduler       scheduler_1;scheduler_2;...\nDenoise         denoise_1;denoise_2;...\nVAE             vae_1;vae_2;vae_3;...\n+Prompt S/R     search_txt;replace_1;replace_2;...\n-Prompt S/R     search_txt;replace_1;replace_2;...\nCheckpoint(1)   ckpt_1;ckpt_2;ckpt_3;...\nCheckpoint(2)   ckpt_1,clip_skip_1;...\nCheckpoint(3)   ckpt_1;ckpt_2;...;,default_clip_skip\nClip Skip       clip_skip_1;clip_skip_2;...\nLoRA(1)         lora_1;lora_2;lora_3;...\nLoRA(2)         lora_1;...;,default_model_str,default_clip_str\nLoRA(3)         lora_1,model_str_1,clip_str_1;...\n\n____________SAMPLERS____________\neuler;\neuler_ancestral;\nheun;\nheunpp2;\ndpm_2;\ndpm_2_ancestral;\nlms;\ndpm_fast;\ndpm_adaptive;\ndpmpp_2s_ancestral;\ndpmpp_sde;\ndpmpp_sde_gpu;\ndpmpp_2m;\ndpmpp_2m_sde;\ndpmpp_2m_sde_gpu;\ndpmpp_3m_sde;\ndpmpp_3m_sde_gpu;\nddpm;\nlcm;\nddim;\nuni_pc;\nuni_pc_bh2\n\n___________SCHEDULERS___________\nnormal;\nkarras;\nexponential;\nsgm_uniform;\nsimple;\nddim_uniform\n\n_____________VAES_______________\n__models__\n\n___________CHECKPOINTS__________\n__models__\n\n_____________LORAS______________\n__models__\n",
            multiline: true,
          },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Manual XY Entry Info",
    display_name: "Manual XY Entry Info",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "Join XY Inputs of Same Type": {
    input: { required: { XY_1: ["XY"], XY_2: ["XY"] } },
    output: ["XY"],
    output_is_list: [false],
    output_name: ["X or Y"],
    name: "Join XY Inputs of Same Type",
    display_name: "Join XY Inputs of Same Type",
    description: "",
    category: "Efficiency Nodes/XY Inputs",
    output_node: false,
  },
  "Image Overlay": {
    input: {
      required: {
        base_image: ["IMAGE"],
        overlay_image: ["IMAGE"],
        overlay_resize: [
          [
            "None",
            "Fit",
            "Resize by rescale_factor",
            "Resize to width & heigth",
          ],
        ],
        resize_method: [["nearest-exact", "bilinear", "area"]],
        rescale_factor: [
          "FLOAT",
          { default: 1, min: 0.01, max: 16.0, step: 0.1 },
        ],
        width: ["INT", { default: 512, min: 0, max: 8192, step: 64 }],
        height: ["INT", { default: 512, min: 0, max: 8192, step: 64 }],
        x_offset: ["INT", { default: 0, min: -48000, max: 48000, step: 10 }],
        y_offset: ["INT", { default: 0, min: -48000, max: 48000, step: 10 }],
        rotation: ["INT", { default: 0, min: -180, max: 180, step: 5 }],
        opacity: ["FLOAT", { default: 0, min: 0, max: 100, step: 5 }],
      },
      optional: { optional_mask: ["MASK"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Overlay",
    display_name: "Image Overlay",
    description: "",
    category: "Efficiency Nodes/Image",
    output_node: false,
  },
  "Noise Control Script": {
    input: {
      required: {
        rng_source: [["cpu", "gpu", "nv"]],
        cfg_denoiser: ["BOOLEAN", { default: false }],
        add_seed_noise: ["BOOLEAN", { default: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        weight: ["FLOAT", { default: 0.015, min: 0, max: 1, step: 0.001 }],
      },
      optional: { script: ["SCRIPT"] },
    },
    output: ["SCRIPT"],
    output_is_list: [false],
    output_name: ["SCRIPT"],
    name: "Noise Control Script",
    display_name: "Noise Control Script",
    description: "",
    category: "Efficiency Nodes/Scripts",
    output_node: false,
  },
  "HighRes-Fix Script": {
    input: {
      required: {
        upscale_type: [["latent", "pixel"]],
        hires_ckpt_name: [["(use same)", "__models__"]],
        latent_upscaler: [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp",
            "city96.v1",
            "city96.xl",
            "ttl_nn.SDXL",
            "ttl_nn.SD 1.x",
          ],
        ],
        pixel_upscaler: [["__models__"]],
        upscale_by: [
          "FLOAT",
          { default: 1.25, min: 0.01, max: 8.0, step: 0.05 },
        ],
        use_same_seed: ["BOOLEAN", { default: true }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        hires_steps: ["INT", { default: 12, min: 1, max: 10000 }],
        denoise: ["FLOAT", { default: 0.56, min: 0.0, max: 1.0, step: 0.01 }],
        iterations: ["INT", { default: 1, min: 0, max: 5, step: 1 }],
        use_controlnet: ["BOOLEAN", { default: false }],
        control_net_name: [["__models__"]],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
        preprocessor: [
          [
            "TilePreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "BinaryPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "ColorPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DensePosePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "M-LSDPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "LineArtPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DiffusionEdge_Preprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "PiDiNetPreprocessor",
            "OpenposePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "BAE-NormalMapPreprocessor",
            "TEEDPreprocessor",
            "LineartStandardPreprocessor",
          ],
          { default: "CannyEdgePreprocessor" },
        ],
        preprocessor_imgs: ["BOOLEAN", { default: false }],
      },
      optional: { script: ["SCRIPT"] },
      hidden: { my_unique_id: "UNIQUE_ID" },
    },
    output: ["SCRIPT"],
    output_is_list: [false],
    output_name: ["SCRIPT"],
    name: "HighRes-Fix Script",
    display_name: "HighRes-Fix Script",
    description: "",
    category: "Efficiency Nodes/Scripts",
    output_node: false,
  },
  "Tiled Upscaler Script": {
    input: {
      required: {
        upscale_by: [
          "FLOAT",
          { default: 1.25, min: 0.01, max: 8.0, step: 0.05 },
        ],
        tile_size: ["INT", { default: 512, min: 256, max: 8192, step: 64 }],
        tiling_strategy: [
          ["random", "random strict", "padded", "simple", "none"],
        ],
        tiling_steps: ["INT", { default: 30, min: 1, max: 10000 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        denoise: ["FLOAT", { default: 0.4, min: 0.0, max: 1.0, step: 0.01 }],
        use_controlnet: ["BOOLEAN", { default: false }],
        tile_controlnet: [["__models__"]],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
      optional: { script: ["SCRIPT"] },
    },
    output: ["SCRIPT"],
    output_is_list: [false],
    output_name: ["SCRIPT"],
    name: "Tiled Upscaler Script",
    display_name: "Tiled Upscaler Script",
    description: "",
    category: "Efficiency Nodes/Scripts",
    output_node: false,
  },
  "LoRA Stack to String converter": {
    input: { required: { lora_stack: ["LORA_STACK"] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["LoRA string"],
    name: "LoRA Stack to String converter",
    display_name: "LoRA Stack to String converter",
    description: "",
    category: "Efficiency Nodes/Misc",
    output_node: false,
  },
  "Mask By Text": {
    input: {
      required: {
        image: ["IMAGE"],
        prompt: ["STRING", { multiline: true }],
        negative_prompt: ["STRING", { multiline: true }],
        precision: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        normalize: [["no", "yes"]],
      },
    },
    output: ["IMAGE", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "IMAGE"],
    name: "Mask By Text",
    display_name: "Mask By Text",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Mask Morphology": {
    input: {
      required: {
        image: ["IMAGE"],
        distance: ["INT", { default: 5, min: 0, max: 128, step: 1 }],
        op: [["dilate", "erode", "open", "close"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Mask Morphology",
    display_name: "Mask Morphology",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Combine Masks": {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        op: [
          [
            "union (max)",
            "intersection (min)",
            "difference",
            "multiply",
            "multiply_alpha",
            "add",
            "greater_or_equal",
            "greater",
          ],
        ],
        clamp_result: [["yes", "no"]],
        round_result: [["no", "yes"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Combine Masks",
    display_name: "Combine Masks",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Unary Mask Op": {
    input: {
      required: {
        image: ["IMAGE"],
        op: [["invert", "average", "round", "clamp", "abs"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Unary Mask Op",
    display_name: "Unary Mask Op",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Unary Image Op": {
    input: {
      required: {
        image: ["IMAGE"],
        op: [["invert", "average", "round", "clamp", "abs"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Unary Image Op",
    display_name: "Unary Image Op",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  Blur: {
    input: {
      required: {
        image: ["IMAGE"],
        radius: ["INT", { default: 10, min: 0, max: 48, step: 1 }],
        sigma_factor: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 3.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Blur",
    display_name: "Blur",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Image To Mask": {
    input: { required: { image: ["IMAGE"], method: [["intensity", "alpha"]] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "Image To Mask",
    display_name: "Image To Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Mix Images By Mask": {
    input: {
      required: { image1: ["IMAGE"], image2: ["IMAGE"], mask: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Mix Images By Mask",
    display_name: "Mix Images By Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Mix Color By Mask": {
    input: {
      required: {
        image: ["IMAGE"],
        r: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        g: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        b: ["INT", { default: 0, min: 0, max: 255, step: 1 }],
        mask: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Mix Color By Mask",
    display_name: "Mix Color By Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Mask To Region": {
    input: {
      required: {
        mask: ["IMAGE"],
        padding: ["INT", { default: 0, min: 0, max: 1048576, step: 1 }],
        constraints: [
          ["keep_ratio", "keep_ratio_divisible", "multiple_of", "ignore"],
        ],
        constraint_x: ["INT", { default: 64, min: 2, max: 1048576, step: 1 }],
        constraint_y: ["INT", { default: 64, min: 2, max: 1048576, step: 1 }],
        min_width: ["INT", { default: 0, min: 0, max: 1048576, step: 1 }],
        min_height: ["INT", { default: 0, min: 0, max: 1048576, step: 1 }],
        batch_behavior: [["match_ratio", "match_size"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Mask To Region",
    display_name: "Mask To Region",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Cut By Mask": {
    input: {
      required: {
        image: ["IMAGE"],
        mask: ["IMAGE"],
        force_resize_width: [
          "INT",
          { default: 0, min: 0, max: 1048576, step: 1 },
        ],
        force_resize_height: [
          "INT",
          { default: 0, min: 0, max: 1048576, step: 1 },
        ],
      },
      optional: { mask_mapping_optional: ["MASK_MAPPING"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Cut By Mask",
    display_name: "Cut By Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Paste By Mask": {
    input: {
      required: {
        image_base: ["IMAGE"],
        image_to_paste: ["IMAGE"],
        mask: ["IMAGE"],
        resize_behavior: [
          [
            "resize",
            "keep_ratio_fill",
            "keep_ratio_fit",
            "source_size",
            "source_size_unmasked",
          ],
        ],
      },
      optional: { mask_mapping_optional: ["MASK_MAPPING"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Paste By Mask",
    display_name: "Paste By Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Get Image Size": {
    input: { required: { image: ["IMAGE"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["INT", "INT"],
    name: "Get Image Size",
    display_name: "Get Image Size",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Change Channel Count": {
    input: { required: { image: ["IMAGE"], kind: [["mask", "RGB", "RGBA"]] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Change Channel Count",
    display_name: "Change Channel Count",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Constant Mask": {
    input: {
      required: {
        value: ["FLOAT", { default: 0.0, min: -8.0, max: 8.0, step: 0.01 }],
        explicit_height: ["INT", { default: 0, min: 0, max: 1048576, step: 1 }],
        explicit_width: ["INT", { default: 0, min: 0, max: 1048576, step: 1 }],
      },
      optional: { copy_image_size: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Constant Mask",
    display_name: "Constant Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Prune By Mask": {
    input: { required: { image: ["IMAGE"], mask: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Prune By Mask",
    display_name: "Prune By Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Separate Mask Components": {
    input: { required: { mask: ["IMAGE"] } },
    output: ["IMAGE", "MASK_MAPPING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK_MAPPING"],
    name: "Separate Mask Components",
    display_name: "Separate Mask Components",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Create Rect Mask": {
    input: {
      required: {
        mode: [["percent", "pixels"]],
        origin: [["topleft", "bottomleft", "topright", "bottomright"]],
        x: ["FLOAT", { default: 0, min: 0, max: 1048576, step: 1 }],
        y: ["FLOAT", { default: 0, min: 0, max: 1048576, step: 1 }],
        width: ["FLOAT", { default: 50, min: 0, max: 1048576, step: 1 }],
        height: ["FLOAT", { default: 50, min: 0, max: 1048576, step: 1 }],
        image_width: ["INT", { default: 512, min: 64, max: 1048576, step: 64 }],
        image_height: [
          "INT",
          { default: 512, min: 64, max: 1048576, step: 64 },
        ],
      },
      optional: { copy_image_size: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Create Rect Mask",
    display_name: "Create Rect Mask",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Make Image Batch": {
    input: {
      required: { image1: ["IMAGE"] },
      optional: {
        image2: ["IMAGE"],
        image3: ["IMAGE"],
        image4: ["IMAGE"],
        image5: ["IMAGE"],
        image6: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Make Image Batch",
    display_name: "Make Image Batch",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Create QR Code": {
    input: {
      required: {
        text: ["STRING", { multiline: true }],
        size: ["INT", { default: 512, min: 64, max: 4096, step: 64 }],
        qr_version: ["INT", { default: 1, min: 1, max: 40, step: 1 }],
        error_correction: [["L", "M", "Q", "H"], { default: "H" }],
        box_size: ["INT", { default: 10, min: 1, max: 100, step: 1 }],
        border: ["INT", { default: 4, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Create QR Code",
    display_name: "Create QR Code",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  "Convert Color Space": {
    input: {
      required: {
        in_space: [["RGB", "HSV", "HSL"]],
        out_space: [["RGB", "HSV", "HSL"]],
        image: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Convert Color Space",
    display_name: "Convert Color Space",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  MasqueradeIncrementer: {
    input: {
      required: {
        seed: [
          "INT",
          { default: 0, min: -1, max: 18446744073709551615, step: 1 },
        ],
        max_value: [
          "INT",
          { default: 1, min: 1, max: 18446744073709551615, step: 1 },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "MasqueradeIncrementer",
    display_name: "Incrementer",
    description: "",
    category: "Masquerade Nodes",
    output_node: false,
  },
  SimpleMath: {
    input: {
      optional: {
        a: ["INT,FLOAT", { default: 0.0, step: 0.1 }],
        b: ["INT,FLOAT", { default: 0.0, step: 0.1 }],
      },
      required: { value: ["STRING", { multiline: false, default: "" }] },
    },
    output: ["INT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["INT", "FLOAT"],
    name: "SimpleMath",
    display_name: "Math op",
    description: "",
    category: "utils",
    output_node: false,
  },
  SimpleMathDebug: {
    input: {
      required: { value: ["*", {}] },
      optional: { prefix: ["STRING", { multiline: false, default: "Value:" }] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "SimpleMathDebug",
    display_name: "Math debug",
    description: "",
    category: "utils",
    output_node: true,
  },
  KepStringLiteral: {
    input: { required: { String: ["STRING", { multiline: true }] } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "KepStringLiteral",
    display_name: "String",
    description: "",
    category: "Literals",
    output_node: false,
  },
  Operation: {
    input: {
      required: {
        "A Type": [["Int", "Float"]],
        "B Type": [["Int", "Float"]],
        Operation: [["A+B", "A-B", "A*B", "A/B"]],
      },
      optional: {
        "A - Int": ["INT", { forceInput: true }],
        "A - Float": ["FLOAT", { forceInput: true }],
        "B - Int": ["INT", { forceInput: true }],
        "B - Float": ["FLOAT", { forceInput: true }],
      },
    },
    output: ["INT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["INT", "FLOAT"],
    name: "Operation",
    display_name: "Operation",
    description: "",
    category: "Literals",
    output_node: false,
  },
  Checkpoint: {
    input: {
      required: {
        literal: ["STRING", { multiline: true, default: "__models__" }],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["Selected Checkpoints"],
    name: "Checkpoint",
    display_name: "Checkpoint",
    description: "",
    category: "List Stuff",
    output_node: false,
  },
  Lora: {
    input: {
      required: {
        literal: ["STRING", { multiline: true, default: "__models__" }],
      },
    },
    output: ["*"],
    output_is_list: [true],
    output_name: ["Selected Loras"],
    name: "Lora",
    display_name: "Lora",
    description: "",
    category: "List Stuff",
    output_node: false,
  },
  CM_BoolToInt: {
    input: { required: { a: ["BOOL", { default: false }] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CM_BoolToInt",
    display_name: "BoolToInt",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_IntToBool: {
    input: { required: { a: ["INT", { default: 0 }] } },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_IntToBool",
    display_name: "IntToBool",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_FloatToInt: {
    input: { required: { a: ["FLOAT", { default: 0.0 }] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CM_FloatToInt",
    display_name: "FloatToInt",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_IntToFloat: {
    input: { required: { a: ["INT", { default: 0 }] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_IntToFloat",
    display_name: "IntToFloat",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_IntToNumber: {
    input: { required: { a: ["INT", { default: 0 }] } },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "CM_IntToNumber",
    display_name: "IntToNumber",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_NumberToInt: {
    input: { required: { a: ["NUMBER", { default: 0.0 }] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CM_NumberToInt",
    display_name: "NumberToInt",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_FloatToNumber: {
    input: { required: { a: ["FLOAT", { default: 0.0 }] } },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "CM_FloatToNumber",
    display_name: "FloatToNumber",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_NumberToFloat: {
    input: { required: { a: ["NUMBER", { default: 0.0 }] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_NumberToFloat",
    display_name: "NumberToFloat",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_ComposeVec2: {
    input: {
      required: {
        x: ["FLOAT", { default: 0.0 }],
        y: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["VEC2"],
    output_is_list: [false],
    output_name: ["VEC2"],
    name: "CM_ComposeVec2",
    display_name: "ComposeVec2",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_ComposeVec3: {
    input: {
      required: {
        x: ["FLOAT", { default: 0.0 }],
        y: ["FLOAT", { default: 0.0 }],
        z: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["VEC3"],
    output_is_list: [false],
    output_name: ["VEC3"],
    name: "CM_ComposeVec3",
    display_name: "ComposeVec3",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_ComposeVec4: {
    input: {
      required: {
        x: ["FLOAT", { default: 0.0 }],
        y: ["FLOAT", { default: 0.0 }],
        z: ["FLOAT", { default: 0.0 }],
        w: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["VEC4"],
    output_is_list: [false],
    output_name: ["VEC4"],
    name: "CM_ComposeVec4",
    display_name: "ComposeVec4",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_BreakoutVec2: {
    input: { required: { a: ["VEC2", { default: [0.0, 0.0] }] } },
    output: ["FLOAT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "FLOAT"],
    name: "CM_BreakoutVec2",
    display_name: "BreakoutVec2",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_BreakoutVec3: {
    input: { required: { a: ["VEC3", { default: [0.0, 0.0, 0.0] }] } },
    output: ["FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false],
    output_name: ["FLOAT", "FLOAT", "FLOAT"],
    name: "CM_BreakoutVec3",
    display_name: "BreakoutVec3",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_BreakoutVec4: {
    input: { required: { a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }] } },
    output: ["FLOAT", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false, false],
    output_name: ["FLOAT", "FLOAT", "FLOAT", "FLOAT"],
    name: "CM_BreakoutVec4",
    display_name: "BreakoutVec4",
    description: "",
    category: "math/conversion",
    output_node: false,
  },
  CM_BoolUnaryOperation: {
    input: { required: { op: [["Not"]], a: ["BOOL", { default: false }] } },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_BoolUnaryOperation",
    display_name: "BoolUnaryOperation",
    description: "",
    category: "math/bool",
    output_node: false,
  },
  CM_BoolBinaryOperation: {
    input: {
      required: {
        op: [["Nor", "Xor", "Nand", "And", "Xnor", "Or", "Eq", "Neq"]],
        a: ["BOOL", { default: false }],
        b: ["BOOL", { default: false }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_BoolBinaryOperation",
    display_name: "BoolBinaryOperation",
    description: "",
    category: "math/bool",
    output_node: false,
  },
  CM_IntUnaryOperation: {
    input: {
      required: {
        op: [["Abs", "Neg", "Inc", "Dec", "Sqr", "Cube", "Not", "Factorial"]],
        a: ["INT", { default: 0 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CM_IntUnaryOperation",
    display_name: "IntUnaryOperation",
    description: "",
    category: "math/int",
    output_node: false,
  },
  CM_IntUnaryCondition: {
    input: {
      required: {
        op: [
          [
            "IsZero",
            "IsNonZero",
            "IsPositive",
            "IsNegative",
            "IsEven",
            "IsOdd",
          ],
        ],
        a: ["INT", { default: 0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_IntUnaryCondition",
    display_name: "IntUnaryCondition",
    description: "",
    category: "math/int",
    output_node: false,
  },
  CM_IntBinaryOperation: {
    input: {
      required: {
        op: [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "And",
            "Nand",
            "Or",
            "Nor",
            "Xor",
            "Xnor",
            "Shl",
            "Shr",
            "Max",
            "Min",
          ],
        ],
        a: ["INT", { default: 0 }],
        b: ["INT", { default: 0 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "CM_IntBinaryOperation",
    display_name: "IntBinaryOperation",
    description: "",
    category: "math/int",
    output_node: false,
  },
  CM_IntBinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq", "Gt", "Lt", "Geq", "Leq"]],
        a: ["INT", { default: 0 }],
        b: ["INT", { default: 0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_IntBinaryCondition",
    display_name: "IntBinaryCondition",
    description: "",
    category: "math/int",
    output_node: false,
  },
  CM_FloatUnaryOperation: {
    input: {
      required: {
        op: [
          [
            "Neg",
            "Inc",
            "Dec",
            "Abs",
            "Sqr",
            "Cube",
            "Sqrt",
            "Exp",
            "Ln",
            "Log10",
            "Log2",
            "Sin",
            "Cos",
            "Tan",
            "Asin",
            "Acos",
            "Atan",
            "Sinh",
            "Cosh",
            "Tanh",
            "Asinh",
            "Acosh",
            "Atanh",
            "Round",
            "Floor",
            "Ceil",
            "Trunc",
            "Erf",
            "Erfc",
            "Gamma",
            "Radians",
            "Degrees",
          ],
        ],
        a: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_FloatUnaryOperation",
    display_name: "FloatUnaryOperation",
    description: "",
    category: "math/float",
    output_node: false,
  },
  CM_FloatUnaryCondition: {
    input: {
      required: {
        op: [
          [
            "IsZero",
            "IsPositive",
            "IsNegative",
            "IsNonZero",
            "IsPositiveInfinity",
            "IsNegativeInfinity",
            "IsNaN",
            "IsFinite",
            "IsInfinite",
            "IsEven",
            "IsOdd",
          ],
        ],
        a: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_FloatUnaryCondition",
    display_name: "FloatUnaryCondition",
    description: "",
    category: "math/float",
    output_node: false,
  },
  CM_FloatBinaryOperation: {
    input: {
      required: {
        op: [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "FloorDiv",
            "Max",
            "Min",
            "Log",
            "Atan2",
          ],
        ],
        a: ["FLOAT", { default: 0.0 }],
        b: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_FloatBinaryOperation",
    display_name: "FloatBinaryOperation",
    description: "",
    category: "math/float",
    output_node: false,
  },
  CM_FloatBinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq", "Gt", "Gte", "Lt", "Lte"]],
        a: ["FLOAT", { default: 0.0 }],
        b: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_FloatBinaryCondition",
    display_name: "FloatBinaryCondition",
    description: "",
    category: "math/float",
    output_node: false,
  },
  CM_NumberUnaryOperation: {
    input: {
      required: {
        op: [
          [
            "Neg",
            "Inc",
            "Dec",
            "Abs",
            "Sqr",
            "Cube",
            "Sqrt",
            "Exp",
            "Ln",
            "Log10",
            "Log2",
            "Sin",
            "Cos",
            "Tan",
            "Asin",
            "Acos",
            "Atan",
            "Sinh",
            "Cosh",
            "Tanh",
            "Asinh",
            "Acosh",
            "Atanh",
            "Round",
            "Floor",
            "Ceil",
            "Trunc",
            "Erf",
            "Erfc",
            "Gamma",
            "Radians",
            "Degrees",
          ],
        ],
        a: ["NUMBER", { default: 0.0 }],
      },
    },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "CM_NumberUnaryOperation",
    display_name: "NumberUnaryOperation",
    description: "",
    category: "math/number",
    output_node: false,
  },
  CM_NumberUnaryCondition: {
    input: {
      required: {
        op: [
          [
            "IsZero",
            "IsPositive",
            "IsNegative",
            "IsNonZero",
            "IsPositiveInfinity",
            "IsNegativeInfinity",
            "IsNaN",
            "IsFinite",
            "IsInfinite",
            "IsEven",
            "IsOdd",
          ],
        ],
        a: ["NUMBER", { default: 0.0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_NumberUnaryCondition",
    display_name: "NumberUnaryCondition",
    description: "",
    category: "math/number",
    output_node: false,
  },
  CM_NumberBinaryOperation: {
    input: {
      required: {
        op: [
          [
            "Add",
            "Sub",
            "Mul",
            "Div",
            "Mod",
            "Pow",
            "FloorDiv",
            "Max",
            "Min",
            "Log",
            "Atan2",
          ],
        ],
        a: ["NUMBER", { default: 0.0 }],
        b: ["NUMBER", { default: 0.0 }],
      },
    },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "CM_NumberBinaryOperation",
    display_name: "NumberBinaryOperation",
    description: "",
    category: "math/number",
    output_node: false,
  },
  CM_NumberBinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq", "Gt", "Gte", "Lt", "Lte"]],
        a: ["NUMBER", { default: 0.0 }],
        b: ["NUMBER", { default: 0.0 }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_NumberBinaryCondition",
    display_name: "NumberBinaryCondition",
    description: "",
    category: "math/float",
    output_node: false,
  },
  CM_Vec2UnaryOperation: {
    input: {
      required: {
        op: [["Neg", "Normalize"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
      },
    },
    output: ["VEC2"],
    output_is_list: [false],
    output_name: ["VEC2"],
    name: "CM_Vec2UnaryOperation",
    display_name: "Vec2UnaryOperation",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2UnaryCondition: {
    input: {
      required: {
        op: [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec2UnaryCondition",
    display_name: "Vec2UnaryCondition",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2ToScalarUnaryOperation: {
    input: {
      required: { op: [["Norm"]], a: ["VEC2", { default: [0.0, 0.0] }] },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec2ToScalarUnaryOperation",
    display_name: "Vec2ToScalarUnaryOperation",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2BinaryOperation: {
    input: {
      required: {
        op: [["Add", "Sub", "Cross"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
        b: ["VEC2", { default: [0.0, 0.0] }],
      },
    },
    output: ["VEC2"],
    output_is_list: [false],
    output_name: ["VEC2"],
    name: "CM_Vec2BinaryOperation",
    display_name: "Vec2BinaryOperation",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2BinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
        b: ["VEC2", { default: [0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec2BinaryCondition",
    display_name: "Vec2BinaryCondition",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2ToScalarBinaryOperation: {
    input: {
      required: {
        op: [["Dot", "Distance"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
        b: ["VEC2", { default: [0.0, 0.0] }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec2ToScalarBinaryOperation",
    display_name: "Vec2ToScalarBinaryOperation",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec2ScalarOperation: {
    input: {
      required: {
        op: [["Mul", "Div"]],
        a: ["VEC2", { default: [0.0, 0.0] }],
        b: ["FLOAT"],
      },
    },
    output: ["VEC2"],
    output_is_list: [false],
    output_name: ["VEC2"],
    name: "CM_Vec2ScalarOperation",
    display_name: "Vec2ScalarOperation",
    description: "",
    category: "math/vec2",
    output_node: false,
  },
  CM_Vec3UnaryOperation: {
    input: {
      required: {
        op: [["Neg", "Normalize"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
      },
    },
    output: ["VEC3"],
    output_is_list: [false],
    output_name: ["VEC3"],
    name: "CM_Vec3UnaryOperation",
    display_name: "Vec3UnaryOperation",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3UnaryCondition: {
    input: {
      required: {
        op: [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec3UnaryCondition",
    display_name: "Vec3UnaryCondition",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3ToScalarUnaryOperation: {
    input: {
      required: { op: [["Norm"]], a: ["VEC3", { default: [0.0, 0.0, 0.0] }] },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec3ToScalarUnaryOperation",
    display_name: "Vec3ToScalarUnaryOperation",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3BinaryOperation: {
    input: {
      required: {
        op: [["Add", "Sub", "Cross"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
        b: ["VEC3", { default: [0.0, 0.0, 0.0] }],
      },
    },
    output: ["VEC3"],
    output_is_list: [false],
    output_name: ["VEC3"],
    name: "CM_Vec3BinaryOperation",
    display_name: "Vec3BinaryOperation",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3BinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
        b: ["VEC3", { default: [0.0, 0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec3BinaryCondition",
    display_name: "Vec3BinaryCondition",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3ToScalarBinaryOperation: {
    input: {
      required: {
        op: [["Dot", "Distance"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
        b: ["VEC3", { default: [0.0, 0.0, 0.0] }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec3ToScalarBinaryOperation",
    display_name: "Vec3ToScalarBinaryOperation",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec3ScalarOperation: {
    input: {
      required: {
        op: [["Mul", "Div"]],
        a: ["VEC3", { default: [0.0, 0.0, 0.0] }],
        b: ["FLOAT"],
      },
    },
    output: ["VEC3"],
    output_is_list: [false],
    output_name: ["VEC3"],
    name: "CM_Vec3ScalarOperation",
    display_name: "Vec3ScalarOperation",
    description: "",
    category: "math/vec3",
    output_node: false,
  },
  CM_Vec4UnaryOperation: {
    input: {
      required: {
        op: [["Neg", "Normalize"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["VEC4"],
    output_is_list: [false],
    output_name: ["VEC4"],
    name: "CM_Vec4UnaryOperation",
    display_name: "Vec4UnaryOperation",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4UnaryCondition: {
    input: {
      required: {
        op: [["IsZero", "IsNotZero", "IsNormalized", "IsNotNormalized"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec4UnaryCondition",
    display_name: "Vec4UnaryCondition",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4ToScalarUnaryOperation: {
    input: {
      required: {
        op: [["Norm"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec4ToScalarUnaryOperation",
    display_name: "Vec4ToScalarUnaryOperation",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4BinaryOperation: {
    input: {
      required: {
        op: [["Add", "Sub", "Cross"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
        b: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["VEC4"],
    output_is_list: [false],
    output_name: ["VEC4"],
    name: "CM_Vec4BinaryOperation",
    display_name: "Vec4BinaryOperation",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4BinaryCondition: {
    input: {
      required: {
        op: [["Eq", "Neq"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
        b: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["BOOL"],
    output_is_list: [false],
    output_name: ["BOOL"],
    name: "CM_Vec4BinaryCondition",
    display_name: "Vec4BinaryCondition",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4ToScalarBinaryOperation: {
    input: {
      required: {
        op: [["Dot", "Distance"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
        b: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "CM_Vec4ToScalarBinaryOperation",
    display_name: "Vec4ToScalarBinaryOperation",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_Vec4ScalarOperation: {
    input: {
      required: {
        op: [["Mul", "Div"]],
        a: ["VEC4", { default: [0.0, 0.0, 0.0, 0.0] }],
        b: ["FLOAT"],
      },
    },
    output: ["VEC4"],
    output_is_list: [false],
    output_name: ["VEC4"],
    name: "CM_Vec4ScalarOperation",
    display_name: "Vec4ScalarOperation",
    description: "",
    category: "math/vec4",
    output_node: false,
  },
  CM_SDXLResolution: {
    input: {
      required: {
        resolution: [
          [
            "1024x1024",
            "1152x896",
            "896x1152",
            "1216x832",
            "832x1216",
            "1344x768",
            "768x1344",
            "1536x640",
            "640x1536",
          ],
        ],
      },
    },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "CM_SDXLResolution",
    display_name: "SDXLResolution",
    description: "",
    category: "math/graphics",
    output_node: false,
  },
  CM_NearestSDXLResolution: {
    input: { required: { image: ["IMAGE"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "CM_NearestSDXLResolution",
    display_name: "NearestSDXLResolution",
    description: "",
    category: "math/graphics",
    output_node: false,
  },
  "KSampler Gradually Adding More Denoise (efficient)": {
    input: {
      required: {
        model: ["MODEL"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        start_denoise: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        denoise_increment: [
          "FLOAT",
          { default: 0.1, min: 0.0, max: 1.0, step: 0.1 },
        ],
        denoise_increment_steps: ["INT", { default: 20, min: 1, max: 10000 }],
      },
      optional: { optional_vae: ["VAE"] },
    },
    output: ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE"],
    output_is_list: [false, false, false, false, false],
    output_name: ["MODEL", "CONDITIONING+", "CONDITIONING-", "LATENT", "VAE"],
    name: "KSampler Gradually Adding More Denoise (efficient)",
    display_name: "KSampler Gradually Adding More Denoise (efficient)",
    description: "",
    category: "ComfyUI-Frame-Interpolation/others",
    output_node: true,
  },
  "GMFSS Fortuna VFI": {
    input: {
      required: {
        ckpt_name: [["GMFSS_fortuna_union", "GMFSS_fortuna"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "GMFSS Fortuna VFI",
    display_name: "GMFSS Fortuna VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "IFRNet VFI": {
    input: {
      required: {
        ckpt_name: [["IFRNet_S_Vimeo90K.pth", "IFRNet_L_Vimeo90K.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
        scale_factor: [[0.25, 0.5, 1.0, 2.0, 4.0], { default: 1.0 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "IFRNet VFI",
    display_name: "IFRNet VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "IFUnet VFI": {
    input: {
      required: {
        ckpt_name: [["IFUNet.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
        scale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100, step: 0.1 },
        ],
        ensemble: ["BOOLEAN", { default: true }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "IFUnet VFI",
    display_name: "IFUnet VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "M2M VFI": {
    input: {
      required: {
        ckpt_name: [["M2M.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "M2M VFI",
    display_name: "M2M VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "RIFE VFI": {
    input: {
      required: {
        ckpt_name: [
          [
            "rife40.pth",
            "rife41.pth",
            "rife42.pth",
            "rife43.pth",
            "rife44.pth",
            "rife45.pth",
            "rife46.pth",
            "rife47.pth",
            "rife48.pth",
            "rife49.pth",
          ],
          { default: "rife47.pth" },
        ],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 1 }],
        fast_mode: ["BOOLEAN", { default: true }],
        ensemble: ["BOOLEAN", { default: true }],
        scale_factor: [[0.25, 0.5, 1.0, 2.0, 4.0], { default: 1.0 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "RIFE VFI",
    display_name: "RIFE VFI (recommend rife47 and rife49)",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "Sepconv VFI": {
    input: {
      required: {
        ckpt_name: [["sepconv.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Sepconv VFI",
    display_name: "Sepconv VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "AMT VFI": {
    input: {
      required: {
        ckpt_name: [["amt-s.pth", "amt-l.pth", "amt-g.pth", "gopro_amt-s.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 1, min: 1, max: 100 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "AMT VFI",
    display_name: "AMT VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "FILM VFI": {
    input: {
      required: {
        ckpt_name: [["film_net_fp32.pt"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FILM VFI",
    display_name: "FILM VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "Make Interpolation State List": {
    input: {
      required: {
        frame_indices: ["STRING", { multiline: true, default: "1,2,3" }],
        is_skip_list: ["BOOLEAN", { default: true }],
      },
    },
    output: ["INTERPOLATION_STATES"],
    output_is_list: [false],
    output_name: ["INTERPOLATION_STATES"],
    name: "Make Interpolation State List",
    display_name: "Make Interpolation State List",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "STMFNet VFI": {
    input: {
      required: {
        ckpt_name: [["stmfnet.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 2 }],
        duplicate_first_last_frames: ["BOOLEAN", { default: false }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "STMFNet VFI",
    display_name: "STMFNet VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "FLAVR VFI": {
    input: {
      required: {
        ckpt_name: [["FLAVR_2x.pth", "FLAVR_4x.pth", "FLAVR_8x.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 2 }],
        duplicate_first_last_frames: ["BOOLEAN", { default: false }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FLAVR VFI",
    display_name: "FLAVR VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  "CAIN VFI": {
    input: {
      required: {
        ckpt_name: [["pretrained_cain.pth"]],
        frames: ["IMAGE"],
        clear_cache_after_n_frames: ["INT", { default: 10, min: 1, max: 1000 }],
        multiplier: ["INT", { default: 2, min: 2, max: 1000 }],
      },
      optional: {
        optional_interpolation_states: ["INTERPOLATION_STATES"],
        cache_in_fp16: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CAIN VFI",
    display_name: "CAIN VFI",
    description: "",
    category: "ComfyUI-Frame-Interpolation/VFI",
    output_node: false,
  },
  InstantIDModelLoader: {
    input: { required: { instantid_file: [["__models__"]] } },
    output: ["INSTANTID"],
    output_is_list: [false],
    output_name: ["INSTANTID"],
    name: "InstantIDModelLoader",
    display_name: "Load InstantID Model",
    description: "",
    category: "InstantID",
    output_node: false,
  },
  InstantIDFaceAnalysis: {
    input: { required: { provider: [["CPU", "CUDA", "ROCM"]] } },
    output: ["FACEANALYSIS"],
    output_is_list: [false],
    output_name: ["FACEANALYSIS"],
    name: "InstantIDFaceAnalysis",
    display_name: "InstantID Face Analysis",
    description: "",
    category: "InstantID",
    output_node: false,
  },
  ApplyInstantID: {
    input: {
      required: {
        instantid: ["INSTANTID"],
        insightface: ["FACEANALYSIS"],
        image_features: ["IMAGE"],
        model: ["MODEL"],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        weight: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
      },
      optional: { attn_mask: ["MASK"] },
    },
    output: ["MODEL", "CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "POSITIVE", "NEGATIVE"],
    name: "ApplyInstantID",
    display_name: "Apply InstantID",
    description: "",
    category: "InstantID",
    output_node: false,
  },
  FaceKeypointsPreprocessor: {
    input: { required: { faceanalysis: ["FACEANALYSIS"], image: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FaceKeypointsPreprocessor",
    display_name: "Face Keypoints Preprocessor",
    description: "",
    category: "InstantID",
    output_node: false,
  },
  "Checkpoint Loader w/Name (WLSH)": {
    input: { required: { ckpt_name: [["__models__"]] } },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "modelname"],
    name: "Checkpoint Loader w/Name (WLSH)",
    display_name: "Checkpoint Loader w/Name (WLSH)",
    description: "",
    category: "WLSH Nodes/loaders",
    output_node: false,
  },
  "KSamplerAdvanced (WLSH)": {
    input: {
      required: {
        model: ["MODEL"],
        add_noise: [["enable", "disable"]],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        latent_image: ["LATENT"],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        return_with_leftover_noise: [["disable", "enable"]],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT", "INFO"],
    output_is_list: [false, false],
    output_name: ["LATENT", "INFO"],
    name: "KSamplerAdvanced (WLSH)",
    display_name: "KSamplerAdvanced (WLSH)",
    description: "",
    category: "WLSH Nodes/sampling",
    output_node: false,
  },
  "CLIP Positive-Negative (WLSH)": {
    input: {
      required: {
        clip: ["CLIP"],
        positive_text: ["STRING", { default: "", multiline: true }],
        negative_text: ["STRING", { default: "", multiline: true }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "CLIP Positive-Negative (WLSH)",
    display_name: "CLIP Positive-Negative (WLSH)",
    description: "",
    category: "WLSH Nodes/conditioning",
    output_node: false,
  },
  "CLIP Positive-Negative w/Text (WLSH)": {
    input: {
      required: {
        positive: ["STRING", { multiline: true }],
        negative: ["STRING", { multiline: true }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["positive", "negative", "positive_text", "negative_text"],
    name: "CLIP Positive-Negative w/Text (WLSH)",
    display_name: "CLIP Positive-Negative w/Text (WLSH)",
    description: "",
    category: "WLSH Nodes/conditioning",
    output_node: false,
  },
  "CLIP Positive-Negative XL (WLSH)": {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        positive_g: ["STRING", { multiline: true, default: "POS_G" }],
        positive_l: ["STRING", { multiline: true, default: "POS_L" }],
        negative_g: ["STRING", { multiline: true, default: "NEG_G" }],
        negative_l: ["STRING", { multiline: true, default: "NEG_L" }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "CLIP Positive-Negative XL (WLSH)",
    display_name: "CLIP Positive-Negative XL (WLSH)",
    description: "",
    category: "WLSH Nodes/conditioning",
    output_node: false,
  },
  "CLIP Positive-Negative XL w/Text (WLSH)": {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192 }],
        target_width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        target_height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        positive_g: ["STRING", { multiline: true, default: "POS_G" }],
        positive_l: ["STRING", { multiline: true, default: "POS_L" }],
        negative_g: ["STRING", { multiline: true, default: "NEG_G" }],
        negative_l: ["STRING", { multiline: true, default: "NEG_L" }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["positive", "negative", "positive_text", "negative_text"],
    name: "CLIP Positive-Negative XL w/Text (WLSH)",
    display_name: "CLIP Positive-Negative XL w/Text (WLSH)",
    description: "",
    category: "WLSH Nodes/conditioning",
    output_node: false,
  },
  "CLIP +/- w/Text Unified (WLSH)": {
    input: {
      required: {
        positive: ["STRING", { multiline: true, default: "" }],
        negative: ["STRING", { multiline: true, default: "" }],
        clip: ["CLIP"],
        conditioner: [["SD1.5", "SDXL"]],
      },
      optional: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["positive", "negative", "positive_text", "negative_text"],
    name: "CLIP +/- w/Text Unified (WLSH)",
    display_name: "CLIP +/- w/Text Unified (WLSH)",
    description: "",
    category: "WLSH Nodes/conditioning",
    output_node: false,
  },
  "Empty Latent by Pixels (WLSH)": {
    input: {
      required: {
        aspect: [
          [
            "1:1",
            "5:4",
            "4:3",
            "3:2",
            "16:10",
            "16:9",
            "19:9",
            "21:9",
            "2:1",
            "3:1",
            "4:1",
          ],
        ],
        direction: [["landscape", "portrait"]],
        megapixels: [
          "FLOAT",
          { default: 1.0, min: 0.01, max: 16.0, step: 0.01 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["latent", "width", "height"],
    name: "Empty Latent by Pixels (WLSH)",
    display_name: "Empty Latent by Pixels (WLSH)",
    description: "",
    category: "WLSH Nodes/latent",
    output_node: false,
  },
  "Empty Latent by Ratio (WLSH)": {
    input: {
      required: {
        aspect: [
          [
            "1:1",
            "5:4",
            "4:3",
            "3:2",
            "16:10",
            "16:9",
            "19:9",
            "21:9",
            "2:1",
            "3:1",
            "4:1",
          ],
        ],
        direction: [["landscape", "portrait"]],
        shortside: ["INT", { default: 512, min: 64, max: 8192, step: 64 }],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["latent", "width", "height"],
    name: "Empty Latent by Ratio (WLSH)",
    display_name: "Empty Latent by Ratio (WLSH)",
    description: "",
    category: "WLSH Nodes/latent",
    output_node: false,
  },
  "Empty Latent by Size (WLSH)": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 16, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 16, max: 8192, step: 8 }],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["latent", "width", "height"],
    name: "Empty Latent by Size (WLSH)",
    display_name: "Empty Latent by Size (WLSH)",
    description: "",
    category: "WLSH Nodes/latent",
    output_node: false,
  },
  "SDXL Quick Empty Latent (WLSH)": {
    input: {
      required: {
        resolution: [
          ["1024x1024", "1152x896", "1216x832", "1344x768", "1536x640"],
        ],
        direction: [["landscape", "portrait"]],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["latent", "width", "height"],
    name: "SDXL Quick Empty Latent (WLSH)",
    display_name: "SDXL Quick Empty Latent (WLSH)",
    description: "",
    category: "WLSH Nodes/latent",
    output_node: false,
  },
  "Image Load with Metadata (WLSH)": {
    input: {
      required: {
        verbose: [["true", "false"]],
        image: [["__inputs__"], { image_upload: true }],
      },
    },
    output: ["IMAGE", "STRING", "STRING", "INT", "INT", "FLOAT", "INT", "INT"],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "image",
      "positive",
      "negative",
      "seed",
      "steps",
      "cfg",
      "width",
      "height",
    ],
    name: "Image Load with Metadata (WLSH)",
    display_name: "Image Load with Metadata (WLSH)",
    description: "",
    category: "WLSH Nodes/image",
    output_node: false,
  },
  "Grayscale Image (WLSH)": {
    input: { required: { original: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["grayscale"],
    name: "Grayscale Image (WLSH)",
    display_name: "Grayscale Image (WLSH)",
    description: "",
    category: "WLSH Nodes/image",
    output_node: false,
  },
  "Generate Border Mask (WLSH)": {
    input: {
      required: {
        image: ["IMAGE"],
        direction: [["left", "right", "up", "down"]],
        pixels: ["INT", { default: 128, min: 32, max: 512, step: 32 }],
        overlap: ["INT", { default: 64, min: 16, max: 256, step: 16 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Generate Border Mask (WLSH)",
    display_name: "Generate Border Mask (WLSH)",
    description: "",
    category: "WLSH Nodes/inpainting",
    output_node: false,
  },
  "Outpaint to Image (WLSH)": {
    input: {
      required: {
        image: ["IMAGE"],
        direction: [["left", "right", "up", "down"]],
        pixels: ["INT", { default: 128, min: 32, max: 512, step: 32 }],
        mask_padding: ["INT", { default: 12, min: 0, max: 64, step: 4 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "Outpaint to Image (WLSH)",
    display_name: "Outpaint to Image (WLSH)",
    description: "",
    category: "WLSH Nodes/inpainting",
    output_node: false,
  },
  "VAE Encode for Inpaint w/Padding (WLSH)": {
    input: {
      required: {
        pixels: ["IMAGE"],
        vae: ["VAE"],
        mask: ["MASK"],
        mask_padding: ["INT", { default: 24, min: 6, max: 128, step: 2 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "VAE Encode for Inpaint w/Padding (WLSH)",
    display_name: "VAE Encode for Inpaint w/Padding (WLSH)",
    description: "",
    category: "WLSH Nodes/inpainting",
    output_node: false,
  },
  "Image Scale By Factor (WLSH)": {
    input: {
      required: {
        original: ["IMAGE"],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        factor: ["FLOAT", { default: 2.0, min: 0.1, max: 8.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Scale By Factor (WLSH)",
    display_name: "Image Scale By Factor (WLSH)",
    description: "",
    category: "WLSH Nodes/upscaling",
    output_node: false,
  },
  "Image Scale by Shortside (WLSH)": {
    input: {
      required: {
        original: ["IMAGE"],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        shortside: ["INT", { default: 512, min: 32, max: 4096, step: 32 }],
      },
    },
    output: ["IMAGE", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "width", "height"],
    name: "Image Scale by Shortside (WLSH)",
    display_name: "Image Scale by Shortside (WLSH)",
    description: "",
    category: "WLSH Nodes/upscaling",
    output_node: false,
  },
  "SDXL Quick Image Scale (WLSH)": {
    input: {
      required: {
        original: ["IMAGE"],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        resolution: [
          ["1024x1024", "1152x896", "1216x832", "1344x768", "1536x640"],
        ],
        direction: [["landscape", "portrait"]],
        crop: [["disabled", "center"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "SDXL Quick Image Scale (WLSH)",
    display_name: "SDXL Quick Image Scale (WLSH)",
    description: "",
    category: "WLSH Nodes/upscaling",
    output_node: false,
  },
  "Upscale by Factor with Model (WLSH)": {
    input: {
      required: {
        upscale_model: ["UPSCALE_MODEL"],
        image: ["IMAGE"],
        upscale_method: [["nearest-exact", "bilinear", "area"]],
        factor: ["FLOAT", { default: 2.0, min: 0.1, max: 8.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Upscale by Factor with Model (WLSH)",
    display_name: "Upscale by Factor with Model (WLSH)",
    description: "",
    category: "WLSH Nodes/upscaling",
    output_node: false,
  },
  "Multiply Integer (WLSH)": {
    input: {
      required: {
        number: ["INT", { default: 2, min: 1, max: 10000, forceInput: true }],
        multiplier: ["INT", { default: 2, min: 1, max: 10000 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Multiply Integer (WLSH)",
    display_name: "Multiply Integer (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "Quick Resolution Multiply (WLSH)": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 16, max: 8192, forceInput: true }],
        height: ["INT", { default: 512, min: 16, max: 8192, forceInput: true }],
        multiplier: ["INT", { default: 2, min: 1, max: 10000 }],
      },
    },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "Quick Resolution Multiply (WLSH)",
    display_name: "Quick Resolution Multiply (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "Resolutions by Ratio (WLSH)": {
    input: {
      required: {
        aspect: [
          [
            "1:1",
            "5:4",
            "4:3",
            "3:2",
            "16:10",
            "16:9",
            "21:9",
            "2:1",
            "3:1",
            "4:1",
          ],
        ],
        direction: [["landscape", "portrait"]],
        shortside: ["INT", { default: 512, min: 64, max: 8192, step: 64 }],
      },
    },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "Resolutions by Ratio (WLSH)",
    display_name: "Resolutions by Ratio (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "Seed to Number (WLSH)": {
    input: { required: { seed: ["SEED"] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Seed to Number (WLSH)",
    display_name: "Seed to Number (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "Seed and Int (WLSH)": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT", "SEED"],
    output_is_list: [false, false],
    output_name: ["INT", "SEED"],
    name: "Seed and Int (WLSH)",
    display_name: "Seed and Int (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "SDXL Steps (WLSH)": {
    input: {
      required: {
        precondition: ["INT", { default: 3, min: 1, max: 10000 }],
        base: ["INT", { default: 12, min: 1, max: 10000 }],
        total: ["INT", { default: 20, min: 1, max: 10000 }],
      },
    },
    output: ["INT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["pre", "base", "total"],
    name: "SDXL Steps (WLSH)",
    display_name: "SDXL Steps (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "SDXL Resolutions (WLSH)": {
    input: {
      required: {
        resolution: [
          ["1024x1024", "1152x896", "1216x832", "1344x768", "1536x640"],
        ],
        direction: [["landscape", "portrait"]],
      },
    },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "SDXL Resolutions (WLSH)",
    display_name: "SDXL Resolutions (WLSH)",
    description: "",
    category: "WLSH Nodes/number",
    output_node: false,
  },
  "Build Filename String (WLSH)": {
    input: {
      required: {
        filename: ["STRING", { "%time_%seed": "info", multiline: false }],
      },
      optional: {
        modelname: ["STRING", { default: "", multiline: false }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        counter: ["SEED", { default: 0 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["filename"],
    name: "Build Filename String (WLSH)",
    display_name: "Build Filename String (WLSH)",
    description: "",
    category: "WLSH Nodes/text",
    output_node: false,
  },
  "Time String (WLSH)": {
    input: {
      required: {
        style: [
          [
            "%Y%m%d%H%M%S",
            "%Y%m%d%H%M",
            "%Y%m%d",
            "%Y-%m-%d-%H%M%S",
            "%Y-%m-%d-%H%M",
            "%Y-%m-%d",
          ],
        ],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["time_format"],
    name: "Time String (WLSH)",
    display_name: "Time String (WLSH)",
    description: "",
    category: "WLSH Nodes/text",
    output_node: false,
  },
  "Simple Pattern Replace (WLSH)": {
    input: {
      required: {
        input_string: ["STRING", { multiline: true, forceInput: true }],
        list_string: ["STRING", { default: "" }],
        pattern: ["STRING", { default: "$var" }],
        delimiter: ["STRING", { default: "," }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["string"],
    name: "Simple Pattern Replace (WLSH)",
    display_name: "Simple Pattern Replace (WLSH)",
    description: "",
    category: "WLSH Nodes/text",
    output_node: false,
  },
  "Simple String Combine (WLSH)": {
    input: {
      required: {
        addition: ["STRING", { multiline: true }],
        placement: [["after", "before"]],
        separator: [["comma", "space", "newline", "none"]],
      },
      optional: {
        input_string: ["STRING", { multiline: true, forceInput: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["combined"],
    name: "Simple String Combine (WLSH)",
    display_name: "Simple String Combine (WLSH)",
    description: "",
    category: "WLSH Nodes/text",
    output_node: false,
  },
  "Prompt Weight (WLSH)": {
    input: {
      required: {
        prompt: ["STRING", { multiline: true, forceInput: true }],
        weight: ["FLOAT", { default: 1.0, min: 0.1, max: 5.0, step: 0.1 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["prompt"],
    name: "Prompt Weight (WLSH)",
    display_name: "Prompt Weight (WLSH)",
    description: "",
    category: "WLSH Nodes/text",
    output_node: false,
  },
  "Image Save with Prompt (WLSH)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename: ["STRING", { default: "%time_%seed", multiline: false }],
        extension: [["png", "jpeg", "tiff", "gif"]],
        quality: ["INT", { default: 100, min: 1, max: 100, step: 1 }],
      },
      optional: {
        positive: ["STRING", { multiline: true, forceInput: true }],
        negative: ["STRING", { multiline: true, forceInput: true }],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Save with Prompt (WLSH)",
    display_name: "Image Save with Prompt (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Image Save with Prompt/Info (WLSH)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename: ["STRING", { default: "%time_%seed", multiline: false }],
        extension: [["png", "jpeg", "tiff", "gif"]],
        quality: ["INT", { default: 100, min: 1, max: 100, step: 1 }],
      },
      optional: {
        positive: ["STRING", { multiline: true, forceInput: true }],
        negative: ["STRING", { multiline: true, forceInput: true }],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
        info: ["INFO"],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Save with Prompt/Info (WLSH)",
    display_name: "Image Save with Prompt/Info (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Image Save with Prompt File (WLSH)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename: ["STRING", { default: "%time_%seed", multiline: false }],
        extension: [["png", "jpeg", "tiff", "gif"]],
        quality: ["INT", { default: 100, min: 1, max: 100, step: 1 }],
      },
      optional: {
        positive: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        negative: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Save with Prompt File (WLSH)",
    display_name: "Image Save with Prompt File (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Image Save with Prompt/Info File (WLSH)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename: ["STRING", { default: "%time_%seed", multiline: false }],
        extension: [["png", "jpeg", "tiff", "gif"]],
        quality: ["INT", { default: 100, min: 1, max: 100, step: 1 }],
      },
      optional: {
        positive: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        negative: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
        info: ["INFO"],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Image Save with Prompt/Info File (WLSH)",
    display_name: "Image Save with Prompt/Info File (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Save Prompt (WLSH)": {
    input: {
      required: {
        filename: ["STRING", { default: "info", multiline: false }],
        path: ["STRING", { default: "", multiline: false }],
        positive: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
      },
      optional: {
        negative: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Prompt (WLSH)",
    display_name: "Save Prompt (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Save Prompt/Info (WLSH)": {
    input: {
      required: {
        filename: ["STRING", { default: "info", multiline: false }],
        path: ["STRING", { default: "", multiline: false }],
        positive: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
      },
      optional: {
        negative: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
        modelname: [
          "STRING",
          { default: "", multiline: false, forceInput: true },
        ],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
        counter: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        time_format: [
          "STRING",
          { default: "%Y-%m-%d-%H%M%S", multiline: false },
        ],
        info: ["INFO"],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Prompt/Info (WLSH)",
    display_name: "Save Prompt/Info (WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "Save Positive Prompt(WLSH)": {
    input: {
      required: {
        filename: ["STRING", { default: "info", multiline: false }],
        path: ["STRING", { default: "", multiline: false }],
        positive: [
          "STRING",
          { default: "", multiline: true, forceInput: true },
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Positive Prompt(WLSH)",
    display_name: "Save Positive Prompt(WLSH)",
    description: "",
    category: "WLSH Nodes/IO",
    output_node: true,
  },
  "CR Image Output": {
    input: {
      required: {
        images: ["IMAGE"],
        output_type: [["Preview", "Save", "UI (no batch)"]],
        filename_prefix: ["STRING", { default: "CR" }],
        prefix_presets: [["None", "yyyyMMdd"]],
        file_format: [["png", "jpg", "webp", "tif"]],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
      optional: { trigger: ["BOOLEAN", { default: false }] },
    },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["trigger"],
    name: "CR Image Output",
    display_name: "\ud83d\udcbe CR Image Output",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: true,
  },
  "CR Latent Batch Size": {
    input: {
      required: {
        latent: ["LATENT"],
        batch_size: ["INT", { default: 2, min: 1, max: 999, step: 1 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "CR Latent Batch Size",
    display_name: "\u2699\ufe0f CR Latent Batch Size",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR Conditioning Mixer": {
    input: {
      required: {
        conditioning_1: ["CONDITIONING"],
        conditioning_2: ["CONDITIONING"],
        mix_method: [["Combine", "Average", "Concatenate"]],
        average_strength: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "show_help"],
    name: "CR Conditioning Mixer",
    display_name: "\u2699\ufe0f CR Conditioning Mixer",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR Select Model": {
    input: {
      required: {
        ckpt_name1: [["None", "__models__"]],
        ckpt_name2: [["None", "__models__"]],
        ckpt_name3: [["None", "__models__"]],
        ckpt_name4: [["None", "__models__"]],
        ckpt_name5: [["None", "__models__"]],
        select_model: ["INT", { default: 1, min: 1, max: 5 }],
      },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "ckpt_name", "show_help"],
    name: "CR Select Model",
    display_name: "\ud83d\udd2e CR Select Model",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR Seed": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["seed", "show_help"],
    name: "CR Seed",
    display_name: "\ud83c\udf31 CR Seed",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: true,
  },
  "CR Prompt Text": {
    input: {
      required: { prompt: ["STRING", { default: "prompt", multiline: true }] },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["prompt", "show_help"],
    name: "CR Prompt Text",
    display_name: "\u2699\ufe0f CR Prompt Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR Combine Prompt": {
    input: {
      required: {},
      optional: {
        part1: ["STRING", { default: "", multiline: true }],
        part2: ["STRING", { default: "", multiline: true }],
        part3: ["STRING", { default: "", multiline: true }],
        part4: ["STRING", { default: "", multiline: true }],
        separator: ["STRING", { default: ",", multiline: false }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["prompt", "show_help"],
    name: "CR Combine Prompt",
    display_name: "\u2699\ufe0f CR Combine Prompt",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR VAE Decode": {
    input: {
      required: {
        samples: ["LATENT"],
        vae: ["VAE"],
        tiled: ["BOOLEAN", { default: false }],
        circular: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR VAE Decode",
    display_name: "\u2699\ufe0f CR VAE Decode",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
    output_node: false,
  },
  "CR Text List": {
    input: {
      required: {
        multiline_text: ["STRING", { multiline: true, default: "text" }],
        start_index: ["INT", { default: 0, min: 0, max: 9999 }],
        max_rows: ["INT", { default: 1000, min: 1, max: 9999 }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [true, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text List",
    display_name: "\ud83d\udcdc CR Text List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Prompt List": {
    input: {
      required: {
        prepend_text: ["STRING", { multiline: false, default: "" }],
        multiline_text: ["STRING", { multiline: true, default: "body_text" }],
        append_text: ["STRING", { multiline: false, default: "" }],
        start_index: ["INT", { default: 0, min: 0, max: 9999 }],
        max_rows: ["INT", { default: 1000, min: 1, max: 9999 }],
      },
    },
    output: ["STRING", "STRING", "STRING"],
    output_is_list: [true, true, false],
    output_name: ["prompt", "body_text", "show_help"],
    name: "CR Prompt List",
    display_name: "\ud83d\udcdc CR Prompt List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Simple List": {
    input: {
      required: {
        list_values: ["STRING", { multiline: true, default: "text" }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [true, false],
    output_name: ["LIST", "show_help"],
    name: "CR Simple List",
    display_name: "\ud83d\udcdc CR Simple List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Float Range List": {
    input: {
      required: {
        start: [
          "FLOAT",
          { default: 0.0, min: -99999.99, max: 99999.99, step: 0.01 },
        ],
        end: [
          "FLOAT",
          { default: 1.0, min: -99999.99, max: 99999.99, step: 0.01 },
        ],
        step: [
          "FLOAT",
          { default: 1.0, min: -99999.99, max: 99999.99, step: 0.01 },
        ],
        operation: [["none", "sin", "cos", "tan"]],
        decimal_places: ["INT", { default: 2, min: 0, max: 10 }],
        ignore_first_value: ["BOOLEAN", { default: true }],
        max_values_per_loop: ["INT", { default: 128, min: 1, max: 99999 }],
        loops: ["INT", { default: 1, min: 1, max: 999 }],
        ping_pong: ["BOOLEAN", { default: false }],
      },
    },
    output: ["FLOAT", "STRING"],
    output_is_list: [true, false],
    output_name: ["FLOAT", "show_help"],
    name: "CR Float Range List",
    display_name: "\ud83d\udcdc CR Float Range List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Integer Range List": {
    input: {
      required: {
        start: ["INT", { default: 0, min: -99999, max: 99999 }],
        end: ["INT", { default: 0, min: -99999, max: 99999 }],
        step: ["INT", { default: 1, min: 1, max: 99999 }],
        loops: ["INT", { default: 1, min: 1, max: 999 }],
        ping_pong: ["BOOLEAN", { default: false }],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [true, false],
    output_name: ["INT", "show_help"],
    name: "CR Integer Range List",
    display_name: "\ud83d\udcdc CR Integer Range List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Load Text List": {
    input: {
      required: {
        input_file_path: ["STRING", { multiline: false, default: "" }],
        file_name: ["STRING", { multiline: false, default: "" }],
        file_extension: [["txt", "csv"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [true, false],
    output_name: ["STRING", "show_help"],
    name: "CR Load Text List",
    display_name: "\ud83d\udcdc CR Load Text List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Binary To Bit List": {
    input: {
      required: { bit_string: ["STRING", { multiline: true, default: "" }] },
    },
    output: ["STRING", "STRING"],
    output_is_list: [true, false],
    output_name: ["STRING", "show_help"],
    name: "CR Binary To Bit List",
    display_name: "\ud83d\udcdc CR Binary To Bit List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Text Cycler": {
    input: {
      required: {
        text: ["STRING", { multiline: true, default: "" }],
        repeats: ["INT", { default: 1, min: 1, max: 99999 }],
        loops: ["INT", { default: 1, min: 1, max: 99999 }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [true, false],
    output_name: ["STRING", "show_text"],
    name: "CR Text Cycler",
    display_name: "\ud83d\udcdc CR Text Cycler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Value Cycler": {
    input: {
      required: {
        values: ["STRING", { multiline: true, default: "" }],
        repeats: ["INT", { default: 1, min: 1, max: 99999 }],
        loops: ["INT", { default: 1, min: 1, max: 99999 }],
      },
    },
    output: ["FLOAT", "INT", "STRING"],
    output_is_list: [true, true, false],
    output_name: ["FLOAT", "INT", "show_text"],
    name: "CR Value Cycler",
    display_name: "\ud83d\udcdc CR Value Cycler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
    output_node: false,
  },
  "CR Load Image List": {
    input: {
      required: {
        input_folder: [["__inputs__"]],
        start_index: ["INT", { default: 0, min: 0, max: 9999 }],
        max_images: ["INT", { default: 1, min: 1, max: 9999 }],
      },
      optional: {},
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [true, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Load Image List",
    display_name: "\u2328\ufe0f CR Load Image List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Load Image List Plus": {
    input: {
      required: {
        input_folder: [["__inputs__"]],
        start_index: ["INT", { default: 0, min: 0, max: 9999 }],
        max_images: ["INT", { default: 1, min: 1, max: 9999 }],
      },
      optional: {},
    },
    output: ["IMAGE", "MASK", "INT", "STRING", "INT", "INT", "INT", "STRING"],
    output_is_list: [true, true, true, true, false, false, false, false],
    output_name: [
      "IMAGE",
      "MASK",
      "index",
      "filename",
      "width",
      "height",
      "list_length",
      "show_help",
    ],
    name: "CR Load Image List Plus",
    display_name: "\u2328\ufe0f CR Load Image List Plus",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Load GIF As List": {
    input: {
      required: {
        input_folder: [[]],
        gif_filename: ["STRING", { multiline: false, default: "text" }],
        start_frame: ["INT", { default: 0, min: 0, max: 99999 }],
        max_frames: ["INT", { default: 1, min: 1, max: 99999 }],
      },
      optional: { input_path: ["STRING", { default: "", multiline: false }] },
    },
    output: ["IMAGE", "MASK", "STRING"],
    output_is_list: [true, true, false],
    output_name: ["IMAGE", "MASK", "show_help"],
    name: "CR Load GIF As List",
    display_name: "\u2328\ufe0f CR Load GIF As List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Font File List": {
    input: {
      required: {
        source_folder: [["system", "Comfyroll", "from folder"]],
        start_index: ["INT", { default: 0, min: 0, max: 9999 }],
        max_rows: ["INT", { default: 1000, min: 1, max: 9999 }],
      },
      optional: {
        folder_path: [
          "STRING",
          { default: "C:\\Windows\\Fonts", multiline: false },
        ],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [true, false],
    output_name: ["LIST", "show_help"],
    name: "CR Font File List",
    display_name: "\u2328\ufe0f CR Font File List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Batch Images From List": {
    input: { required: { image_list: ["IMAGE"] } },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image_batch", "show_help"],
    name: "CR Batch Images From List",
    display_name: "\ud83d\udee0\ufe0f CR Batch Images From List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR Intertwine Lists": {
    input: {
      required: {
        list1: ["STRING", { multiline: true, default: "", forceInput: true }],
        list2: ["STRING", { multiline: true, default: "", forceInput: true }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [true, false],
    output_name: ["STRING", "show_help"],
    name: "CR Intertwine Lists",
    display_name: "\ud83d\udee0\ufe0f CR Intertwine Lists",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR Repeater": {
    input: {
      required: {
        input_data: ["*"],
        repeats: ["INT", { default: 1, min: 1, max: 99999 }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [true, false],
    output_name: ["list", "show_help"],
    name: "CR Repeater",
    display_name: "\ud83d\udee0\ufe0f CR Repeater",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR XY Product": {
    input: {
      required: {
        text_x: ["STRING", { multiline: true }],
        text_y: ["STRING", { multiline: true }],
      },
    },
    output: ["*", "*", "STRING"],
    output_is_list: [true, true, false],
    output_name: ["x_values", "y_values", "show_help"],
    name: "CR XY Product",
    display_name: "\ud83d\udee0\ufe0f CR XY Product",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR Text List To String": {
    input: { required: { text_list: ["STRING", { forceInput: true }] } },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text List To String",
    display_name: "\ud83d\udee0\ufe0f CR Text List To String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR SD1.5 Aspect Ratio": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 8192 }],
        height: ["INT", { default: 512, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "custom",
            "1:1 square 512x512",
            "1:1 square 1024x1024",
            "2:3 portrait 512x768",
            "3:4 portrait 512x682",
            "3:2 landscape 768x512",
            "4:3 landscape 682x512",
            "16:9 cinema 910x512",
            "1.85:1 cinema 952x512",
            "2:1 cinema 1024x512",
            "2.39:1 anamorphic 1224x512",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR SD1.5 Aspect Ratio",
    display_name: "\ud83d\udd33 CR SD1.5 Aspect Ratio",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR SDXL Aspect Ratio": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 8192 }],
        height: ["INT", { default: 1024, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR SDXL Aspect Ratio",
    display_name: "\ud83d\udd33 CR SDXL Aspect Ratio",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR Aspect Ratio": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 8192 }],
        height: ["INT", { default: 1024, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "custom",
            "SD1.5 - 1:1 square 512x512",
            "SD1.5 - 2:3 portrait 512x768",
            "SD1.5 - 3:4 portrait 512x682",
            "SD1.5 - 3:2 landscape 768x512",
            "SD1.5 - 4:3 landscape 682x512",
            "SD1.5 - 16:9 cinema 910x512",
            "SD1.5 - 1.85:1 cinema 952x512",
            "SD1.5 - 2:1 cinema 1024x512",
            "SDXL - 1:1 square 1024x1024",
            "SDXL - 3:4 portrait 896x1152",
            "SDXL - 5:8 portrait 832x1216",
            "SDXL - 9:16 portrait 768x1344",
            "SDXL - 9:21 portrait 640x1536",
            "SDXL - 4:3 landscape 1152x896",
            "SDXL - 3:2 landscape 1216x832",
            "SDXL - 16:9 landscape 1344x768",
            "SDXL - 21:9 landscape 1536x640",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        prescale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR Aspect Ratio",
    display_name: "\ud83d\udd33 CR Aspect Ratio",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR Aspect Ratio Banners": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 8192 }],
        height: ["INT", { default: 1024, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "custom",
            "Large Rectangle - 336x280",
            "Medium Rectangle - 300x250",
            "Small Rectangle - 180x150",
            "Square - 250x250",
            "Small Square - 200x200",
            "Button - 125x125",
            "Half Page - 300x600",
            "Vertical Banner - 120x240",
            "Wide Skyscraper - 160x600",
            "Skyscraper - 120x600",
            "Billboard - 970x250",
            "Portrait - 300x1050",
            "Banner - 468x60",
            "Leaderboard - 728x90",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        prescale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR Aspect Ratio Banners",
    display_name: "\ud83d\udd33 CR Aspect Ratio Banners",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR Aspect Ratio Social Media": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 8192 }],
        height: ["INT", { default: 1024, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "custom",
            "Instagram Portrait - 1080x1350",
            "Instagram Square - 1080x1080",
            "Instagram Landscape - 1080x608",
            "Instagram Stories/Reels - 1080x1920",
            "Facebook Landscape - 1080x1350",
            "Facebook Marketplace - 1200x1200",
            "Facebook Stories - 1080x1920",
            "TikTok - 1080x1920",
            "YouTube Banner - 2560\u00d71440",
            "LinkedIn Profile Banner - 1584x396",
            "LinkedIn Page Cover - 1128x191",
            "LinkedIn Post - 1200x627",
            "Pinterest Pin Image - 1000x1500",
            "CivitAI Cover - 1600x400",
            "OpenArt App - 1500x1000",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        prescale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR Aspect Ratio Social Media",
    display_name: "\ud83d\udd33 CR Aspect Ratio Social Media",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR_Aspect Ratio For Print": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 8192 }],
        height: ["INT", { default: 1024, min: 64, max: 8192 }],
        aspect_ratio: [
          [
            "A4 - 2480x3508",
            "A5 - 1748x2480",
            "A6 - 1240x1748",
            "A7 - 874x1240",
            "A8 - 614x874",
            "A9 - 437x614",
            "A10 - 307x437",
            "B4 - 2953x4169",
            "B5 - 2079x2953",
            "B6 - 1476x2079",
            "B7 - 1039x1476",
            "B8 - 732x1039",
            "B9 - 520x732",
            "B10 - 366x520",
            "C4 - 2705x3827",
            "C5 - 1913x2705",
            "C6 - 1346x1913",
            "C7 - 957x1346",
            "C8 - 673x957",
            "C9 - 472x673",
            "C10 - 331x472",
            "Letter (8.5 x 11 inches) - 2550x3300",
            "Legal (8.5 x 14 inches) - 2550x4200",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        prescale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.1, max: 100.0, step: 0.1 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "width",
      "height",
      "upscale_factor",
      "prescale_factor",
      "batch_size",
      "empty_latent",
      "show_help",
    ],
    name: "CR_Aspect Ratio For Print",
    display_name: "\ud83d\udd33 CR_Aspect Ratio For Print",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
    output_node: false,
  },
  "CR Image Size": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 2048 }],
        height: ["INT", { default: 512, min: 64, max: 2048 }],
        upscale_factor: ["FLOAT", { default: 1, min: 1, max: 2000 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["Width", "Height", "upscale_factor", "show_help"],
    name: "CR Image Size",
    display_name: "CR Image Size (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Aspect Ratio SDXL": {
    input: {
      required: {
        width: ["INT", { default: 1024, min: 64, max: 2048 }],
        height: ["INT", { default: 1024, min: 64, max: 2048 }],
        aspect_ratio: [
          [
            "custom",
            "1:1 square 1024x1024",
            "3:4 portrait 896x1152",
            "5:8 portrait 832x1216",
            "9:16 portrait 768x1344",
            "9:21 portrait 640x1536",
            "4:3 landscape 1152x896",
            "3:2 landscape 1216x832",
            "16:9 landscape 1344x768",
            "21:9 landscape 1536x640",
          ],
        ],
        swap_dimensions: [["Off", "On"]],
        upscale_factor1: ["FLOAT", { default: 1, min: 1, max: 2000 }],
        upscale_factor2: ["FLOAT", { default: 1, min: 1, max: 2000 }],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
      },
    },
    output: ["INT", "INT", "FLOAT", "FLOAT", "INT", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["INT", "INT", "FLOAT", "FLOAT", "INT", "show_help"],
    name: "CR Aspect Ratio SDXL",
    display_name: "CR Aspect Ratio SDXL (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR SDXL Prompt Mixer": {
    input: {
      required: {},
      optional: {
        prompt_positive: [
          "STRING",
          { multiline: true, default: "BASE_POSITIVE" },
        ],
        prompt_negative: [
          "STRING",
          { multiline: true, default: "BASE_NEGATIVE" },
        ],
        style_positive: [
          "STRING",
          { multiline: true, default: "REFINER_POSTIVE" },
        ],
        style_negative: [
          "STRING",
          { multiline: true, default: "REFINER_NEGATIVE" },
        ],
        preset: [["preset 1", "preset 2", "preset 3", "preset 4", "preset 5"]],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r"],
    name: "CR SDXL Prompt Mixer",
    display_name: "CR SDXL Prompt Mixer (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Seed to Int": {
    input: { required: { seed: ["SEED"] } },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Seed to Int",
    display_name: "CR Seed to Int (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Apply ControlNet": {
    input: {
      required: {
        conditioning: ["CONDITIONING"],
        control_net: ["CONTROL_NET"],
        image: ["IMAGE"],
        switch: [["On", "Off"]],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["CONDITIONING", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "show_help"],
    name: "CR Apply ControlNet",
    display_name: "\ud83d\udd79\ufe0f CR Apply ControlNet",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
    output_node: false,
  },
  "CR Multi-ControlNet Stack": {
    input: {
      required: {},
      optional: {
        switch_1: [["Off", "On"]],
        controlnet_1: [["None", "__models__"]],
        controlnet_strength_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        start_percent_1: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent_1: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        switch_2: [["Off", "On"]],
        controlnet_2: [["None", "__models__"]],
        controlnet_strength_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        start_percent_2: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent_2: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        switch_3: [["Off", "On"]],
        controlnet_3: [["None", "__models__"]],
        controlnet_strength_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        start_percent_3: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        end_percent_3: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.001 },
        ],
        image_1: ["IMAGE"],
        image_2: ["IMAGE"],
        image_3: ["IMAGE"],
        controlnet_stack: ["CONTROL_NET_STACK"],
      },
    },
    output: ["CONTROL_NET_STACK", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONTROLNET_STACK", "show_help"],
    name: "CR Multi-ControlNet Stack",
    display_name: "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
    output_node: false,
  },
  "CR Apply Multi-ControlNet": {
    input: {
      required: {
        base_positive: ["CONDITIONING"],
        base_negative: ["CONDITIONING"],
        switch: [["Off", "On"]],
        controlnet_stack: ["CONTROL_NET_STACK"],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["base_pos", "base_neg", "show_help"],
    name: "CR Apply Multi-ControlNet",
    display_name: "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
    output_node: false,
  },
  "CR Load LoRA": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        switch: [["On", "Off"]],
        lora_name: [["None", "__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "show_help"],
    name: "CR Load LoRA",
    display_name: "\ud83d\udc8a CR Load LoRA",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
    output_node: false,
  },
  "CR LoRA Stack": {
    input: {
      required: {
        switch_1: [["Off", "On"]],
        lora_name_1: [["None", "__models__"]],
        model_weight_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        switch_2: [["Off", "On"]],
        lora_name_2: [["None", "__models__"]],
        model_weight_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        switch_3: [["Off", "On"]],
        lora_name_3: [["None", "__models__"]],
        model_weight_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["LORA_STACK", "STRING"],
    output_is_list: [false, false],
    output_name: ["LORA_STACK", "show_help"],
    name: "CR LoRA Stack",
    display_name: "\ud83d\udc8a CR LoRA Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
    output_node: false,
  },
  "CR Random LoRA Stack": {
    input: {
      required: {
        exclusive_mode: [["Off", "On"]],
        stride: ["INT", { default: 1, min: 1, max: 1000 }],
        force_randomize_after_stride: [["Off", "On"]],
        lora_name_1: [["None", "__models__"]],
        switch_1: [["Off", "On"]],
        chance_1: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        model_weight_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_2: [["None", "__models__"]],
        switch_2: [["Off", "On"]],
        chance_2: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        model_weight_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name_3: [["None", "__models__"]],
        switch_3: [["Off", "On"]],
        chance_3: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        model_weight_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["LORA_STACK"],
    output_is_list: [false],
    output_name: ["LORA_STACK"],
    name: "CR Random LoRA Stack",
    display_name: "\ud83d\udc8a CR Random LoRA Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
    output_node: false,
  },
  "CR Random Weight LoRA": {
    input: {
      required: {
        stride: ["INT", { default: 1, min: 1, max: 1000 }],
        force_randomize_after_stride: [["Off", "On"]],
        lora_name: [["None", "__models__"]],
        switch: [["Off", "On"]],
        weight_min: [
          "FLOAT",
          { default: 0.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        weight_max: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_weight: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_stack: ["LORA_STACK"] },
    },
    output: ["LORA_STACK"],
    output_is_list: [false],
    output_name: ["LORA_STACK"],
    name: "CR Random Weight LoRA",
    display_name: "\ud83d\udc8a CR Random Weight LoRA",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
    output_node: false,
  },
  "CR Apply LoRA Stack": {
    input: {
      required: {
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_stack: ["LORA_STACK"],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "show_help"],
    name: "CR Apply LoRA Stack",
    display_name: "\ud83d\udc8a CR Apply LoRA Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
    output_node: false,
  },
  "CR Apply Model Merge": {
    input: {
      required: {
        model_stack: ["MODEL_STACK"],
        merge_method: [["Recursive", "Weighted"]],
        normalise_ratios: [["Yes", "No"]],
        weight_factor: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "model_mix_info", "show_help"],
    name: "CR Apply Model Merge",
    display_name: "\u26cf\ufe0f CR Apply Model Merge",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge",
    output_node: false,
  },
  "CR Model Merge Stack": {
    input: {
      required: {
        switch_1: [["Off", "On"]],
        ckpt_name1: [["None", "__models__"]],
        model_ratio1: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
        clip_ratio1: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
        switch_2: [["Off", "On"]],
        ckpt_name2: [["None", "__models__"]],
        model_ratio2: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
        clip_ratio2: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
        switch_3: [["Off", "On"]],
        ckpt_name3: [["None", "__models__"]],
        model_ratio3: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
        clip_ratio3: [
          "FLOAT",
          { default: 1.0, min: -100.0, max: 100.0, step: 0.01 },
        ],
      },
      optional: { model_stack: ["MODEL_STACK"] },
    },
    output: ["MODEL_STACK", "STRING"],
    output_is_list: [false, false],
    output_name: ["MODEL_STACK", "show_help"],
    name: "CR Model Merge Stack",
    display_name: "\u26cf\ufe0f CR Model Merge Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge",
    output_node: false,
  },
  "CR Data Bus In": {
    input: {
      required: {},
      optional: {
        pipe: ["*"],
        any1: ["*"],
        any2: ["*"],
        any3: ["*"],
        any4: ["*"],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR Data Bus In",
    display_name: "\ud83d\ude8c CR Data Bus In",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
    output_node: false,
  },
  "CR Data Bus Out": {
    input: { required: { pipe: ["PIPE_LINE"] } },
    output: ["PIPE_LINE", "*", "*", "*", "*", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: ["pipe", "any1", "any2", "any3", "any4", "show_help"],
    name: "CR Data Bus Out",
    display_name: "\ud83d\ude8c CR Data Bus Out",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
    output_node: false,
  },
  "CR 8 Channel In": {
    input: {
      required: {},
      optional: {
        pipe: ["*"],
        ch1: ["*"],
        ch2: ["*"],
        ch3: ["*"],
        ch4: ["*"],
        ch5: ["*"],
        ch6: ["*"],
        ch7: ["*"],
        ch8: ["*"],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR 8 Channel In",
    display_name: "\ud83d\ude8c CR 8 Channel In",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
    output_node: false,
  },
  "CR 8 Channel Out": {
    input: { required: { pipe: ["PIPE_LINE"] } },
    output: ["PIPE_LINE", "*", "*", "*", "*", "*", "*", "*", "*", "STRING"],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "pipe",
      "ch1",
      "ch2",
      "ch3",
      "ch4",
      "ch5",
      "ch6",
      "ch7",
      "ch8",
      "show_help",
    ],
    name: "CR 8 Channel Out",
    display_name: "\ud83d\ude8c CR 8 Channel Out",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
    output_node: false,
  },
  "CR Module Pipe Loader": {
    input: {
      required: {},
      optional: {
        model: ["MODEL"],
        pos: ["CONDITIONING"],
        neg: ["CONDITIONING"],
        latent: ["LATENT"],
        vae: ["VAE"],
        clip: ["CLIP"],
        controlnet: ["CONTROL_NET"],
        image: ["IMAGE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR Module Pipe Loader",
    display_name: "\u2708\ufe0f CR Module Pipe Loader",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    output_node: false,
  },
  "CR Module Input": {
    input: { required: { pipe: ["PIPE_LINE"] } },
    output: [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "CONTROL_NET",
      "IMAGE",
      "INT",
      "STRING",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "controlnet",
      "image",
      "seed",
      "show_help",
    ],
    name: "CR Module Input",
    display_name: "\u2708\ufe0f CR Module Input",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    output_node: false,
  },
  "CR Module Output": {
    input: {
      required: { pipe: ["PIPE_LINE"] },
      optional: {
        model: ["MODEL"],
        pos: ["CONDITIONING"],
        neg: ["CONDITIONING"],
        latent: ["LATENT"],
        vae: ["VAE"],
        clip: ["CLIP"],
        controlnet: ["CONTROL_NET"],
        image: ["IMAGE"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR Module Output",
    display_name: "\u2708\ufe0f CR Module Output",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
    output_node: false,
  },
  "CR Image Pipe In": {
    input: {
      required: {},
      optional: {
        image: ["IMAGE"],
        width: ["INT", { default: 512, min: 64, max: 2048 }],
        height: ["INT", { default: 512, min: 64, max: 2048 }],
        upscale_factor: ["FLOAT", { default: 1, min: 1, max: 2000 }],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR Image Pipe In",
    display_name: "\ud83d\udee9 CR Image Pipe In",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    output_node: false,
  },
  "CR Image Pipe Edit": {
    input: {
      required: { pipe: ["PIPE_LINE"] },
      optional: {
        image: ["IMAGE"],
        width: ["INT", { default: 512, min: 64, max: 2048, forceInput: true }],
        height: ["INT", { default: 512, min: 64, max: 2048, forceInput: true }],
        upscale_factor: [
          "FLOAT",
          { default: 1, min: 1, max: 2000, forceInput: true },
        ],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["pipe", "show_help"],
    name: "CR Image Pipe Edit",
    display_name: "\ud83d\udee9\ufe0f CR Image Pipe Edit",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    output_node: false,
  },
  "CR Image Pipe Out": {
    input: { required: { pipe: ["PIPE_LINE"] } },
    output: ["PIPE_LINE", "IMAGE", "INT", "INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "pipe",
      "image",
      "width",
      "height",
      "upscale_factor",
      "show_help",
    ],
    name: "CR Image Pipe Out",
    display_name: "\ud83d\udee9\ufe0f CR Image Pipe Out",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
    output_node: false,
  },
  "CR Pipe Switch": {
    input: {
      required: {
        Input: ["INT", { default: 1, min: 1, max: 2 }],
        pipe1: ["PIPE_LINE"],
        pipe2: ["PIPE_LINE"],
      },
    },
    output: ["PIPE_LINE", "STRING"],
    output_is_list: [false, false],
    output_name: ["PIPE_LINE", "show_help"],
    name: "CR Pipe Switch",
    display_name: "\ud83d\udd00\ufe0f CR Pipe Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe",
    output_node: true,
  },
  "CR SDXL Prompt Mix Presets": {
    input: {
      required: {},
      optional: {
        prompt_positive: ["STRING", { multiline: true, default: "prompt_pos" }],
        prompt_negative: ["STRING", { multiline: true, default: "prompt_neg" }],
        style_positive: ["STRING", { multiline: true, default: "style_pos" }],
        style_negative: ["STRING", { multiline: true, default: "style_neg" }],
        preset: [
          [
            "default with no style text",
            "default with style text",
            "style boost 1",
            "style boost 2",
            "style text to refiner",
          ],
        ],
      },
    },
    output: [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
    ],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "pos_g",
      "pos_l",
      "pos_r",
      "neg_g",
      "neg_l",
      "neg_r",
      "show_help",
    ],
    name: "CR SDXL Prompt Mix Presets",
    display_name: "\ud83c\udf1f CR SDXL Prompt Mix Presets",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
    output_node: false,
  },
  "CR SDXL Style Text": {
    input: {
      required: {
        positive_style: ["STRING", { default: "POS_STYLE", multiline: true }],
        negative_style: ["STRING", { default: "NEG_STYLE", multiline: true }],
      },
    },
    output: ["STRING", "STRING", "STRING"],
    output_is_list: [false, false, false],
    output_name: [
      "positive_prompt_text_l",
      "negative_prompt_text_l",
      "show_help",
    ],
    name: "CR SDXL Style Text",
    display_name: "\ud83c\udf1f CR SDXL Style Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
    output_node: false,
  },
  "CR SDXL Base Prompt Encoder": {
    input: {
      required: {
        base_clip: ["CLIP"],
        pos_g: ["STRING", { multiline: true, default: "POS_G" }],
        pos_l: ["STRING", { multiline: true, default: "POS_L" }],
        neg_g: ["STRING", { multiline: true, default: "NEG_G" }],
        neg_l: ["STRING", { multiline: true, default: "NEG_L" }],
        preset: [["preset A", "preset B", "preset C"]],
        base_width: ["INT", { default: 4096.0, min: 0, max: 8192, step: 64 }],
        base_height: ["INT", { default: 4096.0, min: 0, max: 8192, step: 64 }],
        crop_w: ["INT", { default: 0, min: 0, max: 8192, step: 64 }],
        crop_h: ["INT", { default: 0, min: 0, max: 8192, step: 64 }],
        target_width: ["INT", { default: 4096.0, min: 0, max: 8192, step: 64 }],
        target_height: [
          "INT",
          { default: 4096.0, min: 0, max: 8192, step: 64 },
        ],
      },
    },
    output: ["CONDITIONING", "CONDITIONING", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["base_positive", "base_negative", "show_help"],
    name: "CR SDXL Base Prompt Encoder",
    display_name: "\ud83c\udf1f CR SDXL Base Prompt Encoder",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
    output_node: false,
  },
  "CR Multi Upscale Stack": {
    input: {
      required: {
        switch_1: [["On", "Off"]],
        upscale_model_1: [["None", "__models__"]],
        rescale_factor_1: [
          "FLOAT",
          { default: 2, min: 0.01, max: 16.0, step: 0.01 },
        ],
        switch_2: [["On", "Off"]],
        upscale_model_2: [["None", "__models__"]],
        rescale_factor_2: [
          "FLOAT",
          { default: 2, min: 0.01, max: 16.0, step: 0.01 },
        ],
        switch_3: [["On", "Off"]],
        upscale_model_3: [["None", "__models__"]],
        rescale_factor_3: [
          "FLOAT",
          { default: 2, min: 0.01, max: 16.0, step: 0.01 },
        ],
      },
      optional: { upscale_stack: ["UPSCALE_STACK"] },
    },
    output: ["UPSCALE_STACK", "STRING"],
    output_is_list: [false, false],
    output_name: ["UPSCALE_STACK", "show_help"],
    name: "CR Multi Upscale Stack",
    display_name: "\ud83d\udd0d CR Multi Upscale Stack",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
    output_node: false,
  },
  "CR Upscale Image": {
    input: {
      required: {
        image: ["IMAGE"],
        upscale_model: [["__models__"]],
        mode: [["rescale", "resize"]],
        rescale_factor: [
          "FLOAT",
          { default: 2, min: 0.01, max: 16.0, step: 0.01 },
        ],
        resize_width: ["INT", { default: 1024, min: 1, max: 48000, step: 1 }],
        resampling_method: [["lanczos", "nearest", "bilinear", "bicubic"]],
        supersample: [["true", "false"]],
        rounding_modulus: ["INT", { default: 8, min: 8, max: 1024, step: 8 }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Upscale Image",
    display_name: "\ud83d\udd0d CR Upscale Image",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
    output_node: false,
  },
  "CR Apply Multi Upscale": {
    input: {
      required: {
        image: ["IMAGE"],
        resampling_method: [["lanczos", "nearest", "bilinear", "bicubic"]],
        supersample: [["true", "false"]],
        rounding_modulus: ["INT", { default: 8, min: 8, max: 1024, step: 8 }],
        upscale_stack: ["UPSCALE_STACK"],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Apply Multi Upscale",
    display_name: "\ud83d\udd0d CR Apply Multi Upscale",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
    output_node: false,
  },
  "CR XY List": {
    input: {
      required: {
        index: ["INT", { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 }],
        list1: ["STRING", { multiline: true, default: "x" }],
        x_prepend: ["STRING", { multiline: false, default: "" }],
        x_append: ["STRING", { multiline: false, default: "" }],
        x_annotation_prepend: ["STRING", { multiline: false, default: "" }],
        list2: ["STRING", { multiline: true, default: "y" }],
        y_prepend: ["STRING", { multiline: false, default: "" }],
        y_append: ["STRING", { multiline: false, default: "" }],
        y_annotation_prepend: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help",
    ],
    name: "CR XY List",
    display_name: "\ud83d\udcc9 CR XY List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
    output_node: false,
  },
  "CR XY Interpolate": {
    input: {
      required: {
        x_columns: ["INT", { default: 5.0, min: 0.0, max: 9999.0, step: 1.0 }],
        x_start_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 0.01 },
        ],
        x_step: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 0.01 }],
        x_annotation_prepend: ["STRING", { multiline: false, default: "" }],
        y_rows: ["INT", { default: 5.0, min: 0.0, max: 9999.0, step: 1.0 }],
        y_start_value: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 0.01 },
        ],
        y_step: ["FLOAT", { default: 1.0, min: 0.0, max: 9999.0, step: 0.01 }],
        y_annotation_prepend: ["STRING", { multiline: false, default: "" }],
        index: ["INT", { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 }],
        gradient_profile: [["Lerp"]],
      },
    },
    output: ["FLOAT", "FLOAT", "STRING", "STRING", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false, false, false, false],
    output_name: [
      "X",
      "Y",
      "x_annotation",
      "y_annotation",
      "trigger",
      "show_help",
    ],
    name: "CR XY Interpolate",
    display_name: "\ud83d\udcc9 CR XY Interpolate",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
    output_node: false,
  },
  "CR XY From Folder": {
    input: {
      required: {
        image_folder: [["__inputs__"]],
        start_index: ["INT", { default: 1, min: 0, max: 10000 }],
        end_index: ["INT", { default: 1, min: 1, max: 10000 }],
        max_columns: ["INT", { default: 1, min: 1, max: 10000 }],
        x_annotation: ["STRING", { multiline: true }],
        y_annotation: ["STRING", { multiline: true }],
        font_size: ["INT", { default: 50, min: 1 }],
        gap: ["INT", { default: 0, min: 0 }],
      },
      optional: { trigger: ["BOOLEAN", { default: false }] },
    },
    output: ["IMAGE", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "trigger", "show_help"],
    name: "CR XY From Folder",
    display_name: "\ud83d\udcc9 CR XY From Folder",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
    output_node: false,
  },
  "CR XY Save Grid Image": {
    input: {
      required: {
        mode: [["Save", "Preview"]],
        image: ["IMAGE"],
        filename_prefix: ["STRING", { default: "CR" }],
        file_format: [["webp", "jpg", "png", "tif"]],
      },
      optional: { trigger: ["BOOLEAN", { default: false }] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CR XY Save Grid Image",
    display_name: "\ud83d\udcc9 CR XY Save Grid Image",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
    output_node: true,
  },
  "CR XY Index": {
    input: {
      required: {
        x_columns: ["INT", { default: 5.0, min: 0.0, max: 9999.0, step: 1.0 }],
        y_rows: ["INT", { default: 5.0, min: 0.0, max: 9999.0, step: 1.0 }],
        index: ["INT", { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 }],
      },
    },
    output: ["INT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["x", "y", "show_help"],
    name: "CR XY Index",
    display_name: "\ud83d\udcc9 CR XY Index",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
    output_node: false,
  },
  "CR Halftone Grid": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        dot_style: [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd",
          ],
        ],
        reverse_dot_style: [["No", "Yes"]],
        dot_frequency: ["INT", { default: 50, min: 1, max: 200, step: 1 }],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        x_pos: ["FLOAT", { default: 0.5, min: 0, max: 1, step: 0.01 }],
        y_pos: ["FLOAT", { default: 0.5, min: 0, max: 1, step: 0.01 }],
      },
      optional: {
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Halftone Grid",
    display_name: "\ud83d\udfeb CR Halftone Grid",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Color Bars": {
    input: {
      required: {
        mode: [["2-color"]],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        color_1: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color_2: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        orientation: [["vertical", "horizontal", "diagonal", "alt_diagonal"]],
        bar_frequency: ["INT", { default: 5, min: 1, max: 200, step: 1 }],
        offset: ["FLOAT", { default: 0, min: 0, max: 20, step: 0.05 }],
      },
      optional: {
        color1_hex: ["STRING", { multiline: false, default: "#000000" }],
        color2_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Color Bars",
    display_name: "\ud83d\udfeb CR Color Bars",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Style Bars": {
    input: {
      required: {
        mode: [["color bars", "sin wave", "gradient bars"]],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        bar_style: [
          [
            "Accent",
            "afmhot",
            "autumn",
            "binary",
            "Blues",
            "bone",
            "BrBG",
            "brg",
            "BuGn",
            "BuPu",
            "bwr",
            "cividis",
            "CMRmap",
            "cool",
            "coolwarm",
            "copper",
            "cubehelix",
            "Dark2",
            "flag",
            "gist_earth",
            "gist_gray",
            "gist_heat",
            "gist_rainbow",
            "gist_stern",
            "gist_yarg",
            "GnBu",
            "gnuplot",
            "gnuplot2",
            "gray",
            "Greens",
            "Greys",
            "hot",
            "hsv",
            "inferno",
            "jet",
            "magma",
            "nipy_spectral",
            "ocean",
            "Oranges",
            "OrRd",
            "Paired",
            "Pastel1",
            "Pastel2",
            "pink",
            "PiYG",
            "plasma",
            "PRGn",
            "prism",
            "PuBu",
            "PuBuGn",
            "PuOr",
            "PuRd",
            "Purples",
            "rainbow",
            "RdBu",
            "RdGy",
            "RdPu",
            "RdYlBu",
            "RdYlGn",
            "Reds",
            "seismic",
            "Set1",
            "Set2",
            "Set3",
            "Spectral",
            "spring",
            "summer",
            "tab10",
            "tab20",
            "tab20b",
            "tab20c",
            "terrain",
            "turbo",
            "twilight",
            "twilight_shifted",
            "viridis",
            "winter",
            "Wistia",
            "YlGn",
            "YlGnBu",
            "YlOrBr",
            "YlOrRd",
          ],
        ],
        orientation: [["vertical", "horizontal"]],
        bar_frequency: ["INT", { default: 5, min: 1, max: 200, step: 1 }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Style Bars",
    display_name: "\ud83d\udfea CR Style Bars",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Checker Pattern": {
    input: {
      required: {
        mode: [["regular", "stepped"]],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        color_1: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color_2: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        grid_frequency: ["INT", { default: 8, min: 1, max: 200, step: 1 }],
        step: ["INT", { default: 2, min: 2, max: 200, step: 1 }],
      },
      optional: {
        color1_hex: ["STRING", { multiline: false, default: "#000000" }],
        color2_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Checker Pattern",
    display_name: "\ud83d\udfe6 CR Checker Pattern",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Polygons": {
    input: {
      required: {
        mode: [["hexagons", "triangles"]],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        rows: ["INT", { default: 5, min: 1, max: 512 }],
        columns: ["INT", { default: 5, min: 1, max: 512 }],
        face_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        line_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        line_width: ["INT", { default: 2, min: 0, max: 512 }],
      },
      optional: {
        face_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        line_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Polygons",
    display_name: "\ud83d\udfe9 CR Polygons",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Color Gradient": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        start_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        end_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        gradient_distance: [
          "FLOAT",
          { default: 1, min: 0, max: 2, step: 0.05 },
        ],
        linear_transition: [
          "FLOAT",
          { default: 0.5, min: 0, max: 1, step: 0.05 },
        ],
        orientation: [["vertical", "horizontal"]],
      },
      optional: {
        start_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        end_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Color Gradient",
    display_name: "\ud83d\udfe8 CR Color Gradient",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Radial Gradient": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        start_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        end_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        gradient_distance: [
          "FLOAT",
          { default: 1, min: 0, max: 2, step: 0.05 },
        ],
        radial_center_x: [
          "FLOAT",
          { default: 0.5, min: 0, max: 1, step: 0.05 },
        ],
        radial_center_y: [
          "FLOAT",
          { default: 0.5, min: 0, max: 1, step: 0.05 },
        ],
      },
      optional: {
        start_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        end_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_Help"],
    name: "CR Radial Gradient",
    display_name: "\ud83d\udfe8 CR Radial Gradient",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Starburst Lines": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        num_lines: ["INT", { default: 6, min: 1, max: 500 }],
        line_length: ["FLOAT", { default: 5, min: 0, max: 100, step: 0.1 }],
        line_width: ["INT", { default: 5, min: 1, max: 512 }],
        line_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        center_x: ["INT", { default: 0, min: 0, max: 1024 }],
        center_y: ["INT", { default: 0, min: 0, max: 1024 }],
        rotation: ["FLOAT", { default: 0, min: 0, max: 720 }],
      },
      optional: {
        line_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Starburst Lines",
    display_name: "\ud83d\udfe7 CR Starburst Lines",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Starburst Colors": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        num_triangles: ["INT", { default: 6, min: 1, max: 512 }],
        color_1: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color_2: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        center_x: ["INT", { default: 0, min: 0, max: 512 }],
        center_y: ["INT", { default: 0, min: 0, max: 512 }],
        rotation: ["FLOAT", { default: 0, min: 0, max: 720 }],
        bbox_factor: ["FLOAT", { default: 2, min: 0, max: 2, step: 0.01 }],
      },
      optional: {
        color1_hex: ["STRING", { multiline: false, default: "#000000" }],
        color2_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Starburst Colors",
    display_name: "\ud83d\udfe7 CR Starburst Colors",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Simple Binary Pattern": {
    input: {
      required: {
        binary_pattern: ["STRING", { multiline: true, default: "10101" }],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Simple Binary Pattern",
    display_name: "\ud83d\udfe5 CR Simple Binary Pattern",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Binary Pattern": {
    input: {
      required: {
        binary_pattern: ["STRING", { multiline: true, default: "10101" }],
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color_0: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color_1: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        outline_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        outline_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        jitter_distance: ["INT", { default: 0, min: 0, max: 1024 }],
        bias: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.05 }],
      },
      optional: {
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        color0_hex: ["STRING", { multiline: false, default: "#000000" }],
        color1_hex: ["STRING", { multiline: false, default: "#000000" }],
        outline_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Binary Pattern",
    display_name: "\ud83d\udfe5 CR Binary Pattern",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
    output_node: false,
  },
  "CR Draw Shape": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        shape: [
          [
            "circle",
            "oval",
            "square",
            "diamond",
            "triangle",
            "hexagon",
            "octagon",
            "quarter circle",
            "half circle",
            "quarter circle",
            "starburst",
            "star",
            "cross",
            "diagonal regions",
          ],
        ],
        shape_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        back_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        x_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        y_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        zoom: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.05 }],
        rotation: ["FLOAT", { default: 0.0, min: 0.0, max: 3600.0, step: 0.1 }],
      },
      optional: {
        shape_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Draw Shape",
    display_name: "\ud83d\udfe1 CR Draw Shape",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
    output_node: false,
  },
  "CR Draw Pie": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        pie_start: [
          "FLOAT",
          { default: 30.0, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        pie_stop: [
          "FLOAT",
          { default: 330.0, min: 0.0, max: 9999.0, step: 0.1 },
        ],
        shape_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        back_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        x_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        y_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        zoom: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.05 }],
        rotation: ["FLOAT", { default: 0.0, min: 0.0, max: 3600.0, step: 0.1 }],
      },
      optional: {
        shape_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Draw Pie",
    display_name: "\ud83d\udfe2 CR Draw Pie",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
    output_node: false,
  },
  "CR Random Shape Pattern": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 64, max: 4096 }],
        height: ["INT", { default: 512, min: 64, max: 4096 }],
        num_rows: ["INT", { default: 5, min: 1, max: 128 }],
        num_cols: ["INT", { default: 5, min: 1, max: 128 }],
        color1: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        color2: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
      },
      optional: {
        color1_hex: ["STRING", { multiline: false, default: "#000000" }],
        color2_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Random Shape Pattern",
    display_name: "\ud83d\udd35 CR Random Shape Pattern",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
    output_node: false,
  },
  "CR Overlay Text": {
    input: {
      required: {
        image: ["IMAGE"],
        text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 1, max: 1024 }],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        align: [["center", "top", "bottom"]],
        justify: [["center", "left", "right"]],
        margins: ["INT", { default: 0, min: -1024, max: 1024 }],
        line_spacing: ["INT", { default: 0, min: -1024, max: 1024 }],
        position_x: ["INT", { default: 0, min: -4096, max: 4096 }],
        position_y: ["INT", { default: 0, min: -4096, max: 4096 }],
        rotation_angle: [
          "FLOAT",
          { default: 0.0, min: -360.0, max: 360.0, step: 0.1 },
        ],
        rotation_options: [["text center", "image center"]],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Overlay Text",
    display_name: "\ud83d\udd24 CR Overlay Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Draw Text": {
    input: {
      required: {
        image_width: ["INT", { default: 512, min: 64, max: 2048 }],
        image_height: ["INT", { default: 512, min: 64, max: 2048 }],
        text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 1, max: 1024 }],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        align: [["center", "top", "bottom"]],
        justify: [["center", "left", "right"]],
        margins: ["INT", { default: 0, min: -1024, max: 1024 }],
        line_spacing: ["INT", { default: 0, min: -1024, max: 1024 }],
        position_x: ["INT", { default: 0, min: -4096, max: 4096 }],
        position_y: ["INT", { default: 0, min: -4096, max: 4096 }],
        rotation_angle: [
          "FLOAT",
          { default: 0.0, min: -360.0, max: 360.0, step: 0.1 },
        ],
        rotation_options: [["text center", "image center"]],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Draw Text",
    display_name: "\ud83d\udd24\ufe0f CR Draw Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Mask Text": {
    input: {
      required: {
        image: ["IMAGE"],
        text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 1, max: 1024 }],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        align: [["center", "top", "bottom"]],
        justify: [["center", "left", "right"]],
        margins: ["INT", { default: 0, min: -1024, max: 1024 }],
        line_spacing: ["INT", { default: 0, min: -1024, max: 1024 }],
        position_x: ["INT", { default: 0, min: -4096, max: 4096 }],
        position_y: ["INT", { default: 0, min: -4096, max: 4096 }],
        rotation_angle: [
          "FLOAT",
          { default: 0.0, min: -360.0, max: 360.0, step: 0.1 },
        ],
        rotation_options: [["text center", "image center"]],
      },
      optional: {
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Mask Text",
    display_name: "\ud83d\udd24\ufe0f CR Mask Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Composite Text": {
    input: {
      required: {
        image_text: ["IMAGE"],
        image_background: ["IMAGE"],
        text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 1, max: 1024 }],
        align: [["center", "top", "bottom"]],
        justify: [["center", "left", "right"]],
        margins: ["INT", { default: 0, min: -1024, max: 1024 }],
        line_spacing: ["INT", { default: 0, min: -1024, max: 1024 }],
        position_x: ["INT", { default: 0, min: -4096, max: 4096 }],
        position_y: ["INT", { default: 0, min: -4096, max: 4096 }],
        rotation_angle: [
          "FLOAT",
          { default: 0.0, min: -360.0, max: 360.0, step: 0.1 },
        ],
        rotation_options: [["text center", "image center"]],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Composite Text",
    display_name: "\ud83d\udd24\ufe0f CR Composite Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Simple Text Watermark": {
    input: {
      required: {
        image: ["IMAGE"],
        text: ["STRING", { multiline: false, default: "@ your name" }],
        align: [
          [
            "center",
            "top left",
            "top center",
            "top right",
            "bottom left",
            "bottom center",
            "bottom right",
          ],
        ],
        opacity: ["FLOAT", { default: 0.3, min: 0.0, max: 1.0, step: 0.01 }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 1, max: 1024 }],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        x_margin: ["INT", { default: 20, min: -1024, max: 1024 }],
        y_margin: ["INT", { default: 20, min: -1024, max: 1024 }],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Simple Text Watermark",
    display_name: "\ud83d\udd24\ufe0f CR Simple Text Watermark",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Select Font": {
    input: {
      required: {
        font_name: [
          [
            "Symbol.ttf",
            "Geneva.ttf",
            "SFNSMono.ttf",
            "SFGeorgian.ttf",
            "SFHebrew.ttf",
            "ZapfDingbats.ttf",
            "SFArmenian.ttf",
            "Apple Braille.ttf",
            "SFCompact.ttf",
            "Apple Braille Outline 6 Dot.ttf",
            "Apple Braille Pinpoint 6 Dot.ttf",
            "NewYork.ttf",
            "SFNSMonoItalic.ttf",
            "SFNS.ttf",
            "SFCamera.ttf",
            "SFArmenianRounded.ttf",
            "Monaco.ttf",
            "Apple Symbols.ttf",
            "NewYorkItalic.ttf",
            "SFCompactItalic.ttf",
            "SFArabic.ttf",
            "SFNSRounded.ttf",
            "Apple Braille Pinpoint 8 Dot.ttf",
            "Keyboard.ttf",
            "SFGeorgianRounded.ttf",
            "SFCompactRounded.ttf",
            "Apple Braille Outline 8 Dot.ttf",
            "SFNSItalic.ttf",
            "SFArabicRounded.ttf",
            "SFHebrewRounded.ttf",
          ],
        ],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["font_name", "show_help"],
    name: "CR Select Font",
    display_name: "\ud83d\udd24\ufe0f CR Select Font",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Halftone Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        dot_size: ["INT", { default: 5, min: 1, max: 30, step: 1 }],
        dot_shape: [["ellipse", "rectangle"], { default: "ellipse" }],
        resolution: [
          ["normal", "hi-res (2x output size)"],
          { default: "normal" },
        ],
        angle_c: ["INT", { default: 75, min: 0, max: 360, step: 1 }],
        angle_m: ["INT", { default: 45, min: 0, max: 360, step: 1 }],
        angle_y: ["INT", { default: 15, min: 0, max: 360, step: 1 }],
        angle_k: ["INT", { default: 0, min: 0, max: 360, step: 1 }],
        greyscale: ["BOOLEAN", { default: true }],
        antialias: ["BOOLEAN", { default: true }],
        antialias_scale: ["INT", { default: 2, min: 1, max: 4, step: 1 }],
        border_blending: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Halftone Filter",
    display_name: "\ud83c\udfa8 Halftone Filter",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
    output_node: false,
  },
  "CR Color Tint": {
    input: {
      required: {
        image: ["IMAGE"],
        strength: ["FLOAT", { default: 1.0, min: 0.1, max: 1.0, step: 0.1 }],
        mode: [
          [
            "custom",
            "white",
            "black",
            "sepia",
            "red",
            "green",
            "blue",
            "cyan",
            "magenta",
            "yellow",
            "purple",
            "orange",
            "warm",
            "cool",
            "lime",
            "navy",
            "vintage",
            "rose",
            "teal",
            "maroon",
            "peach",
            "lavender",
            "olive",
          ],
        ],
      },
      optional: {
        tint_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Color Tint",
    display_name: "\ud83c\udfa8 CR Color Tint",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
    output_node: false,
  },
  "CR Vignette Filter": {
    input: {
      required: {
        image: ["IMAGE"],
        vignette_shape: [["circle", "oval", "square", "diamond"]],
        feather_amount: ["INT", { default: 100, min: 0, max: 1024 }],
        x_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        y_offset: ["INT", { default: 0, min: -2048, max: 2048 }],
        zoom: ["FLOAT", { default: 1.0, min: 0.0, max: 10.0, step: 0.1 }],
        reverse: [["no", "yes"]],
      },
    },
    output: ["IMAGE", "MASK", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "show_help"],
    name: "CR Vignette Filter",
    display_name: "\ud83c\udfa8 CR Vignette Filter",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
    output_node: false,
  },
  "CR Page Layout": {
    input: {
      required: {
        layout_options: [
          ["header", "footer", "header and footer", "no header or footer"],
        ],
        image_panel: ["IMAGE"],
        header_height: ["INT", { default: 0, min: 0, max: 1024 }],
        header_text: ["STRING", { multiline: true, default: "text" }],
        header_align: [["left", "center", "right"]],
        footer_height: ["INT", { default: 0, min: 0, max: 1024 }],
        footer_text: ["STRING", { multiline: true, default: "text" }],
        footer_align: [["left", "center", "right"]],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        header_font_size: ["INT", { default: 150, min: 0, max: 1024 }],
        footer_font_size: ["INT", { default: 50, min: 0, max: 1024 }],
        border_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        border_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        border_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Page Layout",
    display_name: "\ud83c\udf01 CR Page Layout",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Image Panel": {
    input: {
      required: {
        image_1: ["IMAGE"],
        border_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        border_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        outline_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        outline_color: [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        layout_direction: [["horizontal", "vertical"]],
      },
      optional: {
        image_2: ["IMAGE"],
        image_3: ["IMAGE"],
        image_4: ["IMAGE"],
        border_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Image Panel",
    display_name: "\ud83c\udf01 CR Image Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Image Grid Panel": {
    input: {
      required: {
        images: ["IMAGE"],
        border_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        border_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        outline_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        outline_color: [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        max_columns: ["INT", { default: 5, min: 0, max: 256 }],
      },
      optional: {
        border_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Image Grid Panel",
    display_name: "\ud83c\udf01 CR Image Grid Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Image Border": {
    input: {
      required: {
        image: ["IMAGE"],
        top_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        bottom_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        left_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        right_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        border_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        outline_thickness: ["INT", { default: 0, min: 0, max: 1024 }],
        outline_color: [
          [
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
      },
      optional: {
        border_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Image Border",
    display_name: "\ud83c\udf01 CR Image Border",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Feathered Border": {
    input: {
      required: {
        image: ["IMAGE"],
        top_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        bottom_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        left_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        right_thickness: ["INT", { default: 0, min: 0, max: 4096 }],
        border_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        feather_amount: ["INT", { default: 0, min: 0, max: 1024 }],
      },
      optional: {
        border_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Feathered Border",
    display_name: "\ud83c\udf01 CR Feathered Border",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Simple Text Panel": {
    input: {
      required: {
        panel_width: ["INT", { default: 512, min: 8, max: 4096 }],
        panel_height: ["INT", { default: 512, min: 8, max: 4096 }],
        text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        font_size: ["INT", { default: 100, min: 0, max: 1024 }],
        font_outline_thickness: ["INT", { default: 0, min: 0, max: 50 }],
        font_outline_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        align: [["top", "center", "bottom"]],
        justify: [["left", "center", "right"]],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Simple Text Panel",
    display_name: "\ud83c\udf01 CR Simple Text Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Color Panel": {
    input: {
      required: {
        panel_width: ["INT", { default: 512, min: 8, max: 4096 }],
        panel_height: ["INT", { default: 512, min: 8, max: 4096 }],
        fill_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
      },
      optional: {
        fill_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Color Panel",
    display_name: "\ud83c\udf01 CR Color Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Overlay Transparent Image": {
    input: {
      required: {
        back_image: ["IMAGE"],
        overlay_image: ["IMAGE"],
        transparency: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1.0, step: 0.1 },
        ],
        offset_x: ["INT", { default: 0, min: -4096, max: 4096 }],
        offset_y: ["INT", { default: 0, min: -4096, max: 4096 }],
        rotation_angle: [
          "FLOAT",
          { default: 0.0, min: -360.0, max: 360.0, step: 0.1 },
        ],
        overlay_scale_factor: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.001 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CR Overlay Transparent Image",
    display_name: "\ud83c\udf01 CR Overlay Transparent Image",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Half Drop Panel": {
    input: {
      required: {
        image: ["IMAGE"],
        pattern: [["none", "half drop", "quarter drop", "custom drop %"]],
      },
      optional: {
        drop_percentage: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Half Drop Panel",
    display_name: "\ud83c\udf01 CR Half Drop Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Diamond Panel": {
    input: { required: { image: ["IMAGE"], pattern: [["none", "diamond"]] } },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Diamond Panel",
    display_name: "\ud83c\udf01 CR Diamond Panel",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
    output_node: false,
  },
  "CR Simple Meme Template": {
    input: {
      required: {
        image: ["IMAGE"],
        preset: [
          [
            "custom",
            "One Does Not Simply ... MEME IN COMFY",
            "This is fine.",
            "Good Morning ... No Such Thing!",
          ],
        ],
        text_top: ["STRING", { multiline: true, default: "text_top" }],
        text_bottom: ["STRING", { multiline: true, default: "text_bottom" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        max_font_size: ["INT", { default: 150, min: 20, max: 2048 }],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        font_outline: [["none", "thin", "thick", "extra thick"]],
        bar_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        bar_options: [["no bars", "top", "bottom", "top and bottom"]],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bar_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Simple Meme Template",
    display_name: "\ud83d\udcf1 CR Simple Meme Template",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: false,
  },
  "CR Simple Banner": {
    input: {
      required: {
        image: ["IMAGE"],
        banner_text: ["STRING", { multiline: true, default: "text" }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        max_font_size: ["INT", { default: 150, min: 20, max: 2048 }],
        font_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        outline_thickness: ["INT", { default: 0, min: 0, max: 500 }],
        outline_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        margin_size: ["INT", { default: 0, min: 0, max: 500 }],
      },
      optional: {
        font_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        outline_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Simple Banner",
    display_name: "\ud83d\udcf1 CR Simple Banner",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: false,
  },
  "CR Comic Panel Templates": {
    input: {
      required: {
        page_width: ["INT", { default: 512, min: 8, max: 4096 }],
        page_height: ["INT", { default: 512, min: 8, max: 4096 }],
        template: [
          [
            "custom",
            "G22",
            "G33",
            "H2",
            "H3",
            "H12",
            "H13",
            "H21",
            "H23",
            "H31",
            "H32",
            "V2",
            "V3",
            "V12",
            "V13",
            "V21",
            "V23",
            "V31",
            "V32",
          ],
        ],
        reading_direction: [["left to right", "right to left"]],
        border_thickness: ["INT", { default: 5, min: 0, max: 1024 }],
        outline_thickness: ["INT", { default: 2, min: 0, max: 1024 }],
        outline_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        panel_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
        background_color: [
          [
            "custom",
            "white",
            "black",
            "red",
            "green",
            "blue",
            "yellow",
            "cyan",
            "magenta",
            "orange",
            "purple",
            "pink",
            "brown",
            "gray",
            "lightgray",
            "darkgray",
            "olive",
            "lime",
            "teal",
            "navy",
            "maroon",
            "fuchsia",
            "aqua",
            "silver",
            "gold",
            "turquoise",
            "lavender",
            "violet",
            "coral",
            "indigo",
          ],
        ],
      },
      optional: {
        images: ["IMAGE"],
        custom_panel_layout: ["STRING", { multiline: false, default: "H123" }],
        outline_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        panel_color_hex: ["STRING", { multiline: false, default: "#000000" }],
        bg_color_hex: ["STRING", { multiline: false, default: "#000000" }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Comic Panel Templates",
    display_name: "\ud83d\udcf1 CR Comic Panel Templates",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: false,
  },
  "CR Simple Image Compare": {
    input: {
      required: {
        text1: ["STRING", { multiline: true, default: "text" }],
        text2: ["STRING", { multiline: true, default: "text" }],
        footer_height: ["INT", { default: 100, min: 0, max: 1024 }],
        font_name: [
          [
            "Quicksand-Bold.ttf",
            "YoungSerif-Regular.ttf",
            "Oswald-Bold.ttf",
            "Roboto-Regular.ttf",
            "comic.ttf",
            "impact.ttf",
            "AlumniSansCollegiateOne-Regular.ttf",
            "Caveat-VariableFont_wght.ttf",
            "PixelifySans-Bold.ttf",
            "NotoSansArabic-Regular.ttf",
          ],
        ],
        font_size: ["INT", { default: 50, min: 0, max: 1024 }],
        mode: [["normal", "dark"]],
        border_thickness: ["INT", { default: 20, min: 0, max: 1024 }],
      },
      optional: { image1: ["IMAGE"], image2: ["IMAGE"] },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "show_help"],
    name: "CR Simple Image Compare",
    display_name: "\ud83d\udcf1 CR Simple Image Compare",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: false,
  },
  "CR Thumbnail Preview": {
    input: {
      required: {
        image: ["IMAGE"],
        rescale_factor: [
          "FLOAT",
          { default: 0.25, min: 0.1, max: 1.0, step: 0.01 },
        ],
        max_columns: ["INT", { default: 5, min: 0, max: 256 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["show_help"],
    name: "CR Thumbnail Preview",
    display_name: "\ud83d\udcf1 CR Thumbnail Preview",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: true,
  },
  "CR Seamless Checker": {
    input: {
      required: {
        image: ["IMAGE"],
        rescale_factor: [
          "FLOAT",
          { default: 0.25, min: 0.1, max: 1.0, step: 0.01 },
        ],
        grid_options: [["2x2", "3x3", "4x4", "5x5", "6x6"]],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["show_help"],
    name: "CR Seamless Checker",
    display_name: "\ud83d\udcf1 CR Seamless Checker",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
    output_node: true,
  },
  "CR Image Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: { image1: ["IMAGE"], image2: ["IMAGE"] },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Image Input Switch",
    display_name: "\ud83d\udd00 CR Image Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Image Input Switch (4 way)": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 4 }] },
      optional: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        image3: ["IMAGE"],
        image4: ["IMAGE"],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Image Input Switch (4 way)",
    display_name: "\ud83d\udd00 CR Image Input Switch (4 way)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Latent Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: { latent1: ["LATENT"], latent2: ["LATENT"] },
    },
    output: ["LATENT", "STRING"],
    output_is_list: [false, false],
    output_name: ["LATENT", "show_help"],
    name: "CR Latent Input Switch",
    display_name: "\ud83d\udd00 CR Latent Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Conditioning Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: {
        conditioning1: ["CONDITIONING"],
        conditioning2: ["CONDITIONING"],
      },
    },
    output: ["CONDITIONING", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "show_help"],
    name: "CR Conditioning Input Switch",
    display_name: "\ud83d\udd00 CR Conditioning Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Clip Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: { clip1: ["CLIP"], clip2: ["CLIP"] },
    },
    output: ["CLIP", "STRING"],
    output_is_list: [false, false],
    output_name: ["CLIP", "show_help"],
    name: "CR Clip Input Switch",
    display_name: "\ud83d\udd00 CR Clip Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Model Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: { model1: ["MODEL"], model2: ["MODEL"] },
    },
    output: ["MODEL", "STRING"],
    output_is_list: [false, false],
    output_name: ["MODEL", "show_help"],
    name: "CR Model Input Switch",
    display_name: "\ud83d\udd00 CR Model Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR ControlNet Input Switch": {
    input: {
      required: {
        Input: ["INT", { default: 1, min: 1, max: 2 }],
        control_net1: ["CONTROL_NET"],
        control_net2: ["CONTROL_NET"],
      },
      optional: {
        control_net1: ["CONTROL_NET"],
        control_net2: ["CONTROL_NET"],
      },
    },
    output: ["CONTROL_NET", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONTROL_NET", "show_help"],
    name: "CR ControlNet Input Switch",
    display_name: "\ud83d\udd00 CR ControlNet Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR VAE Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: {
        VAE1: ["VAE", { forceInput: true }],
        VAE2: ["VAE", { forceInput: true }],
      },
    },
    output: ["VAE", "STRING"],
    output_is_list: [false, false],
    output_name: ["VAE", "show_help"],
    name: "CR VAE Input Switch",
    display_name: "\ud83d\udd00 CR VAE Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Text Input Switch": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 2 }] },
      optional: {
        text1: ["STRING", { forceInput: true }],
        text2: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Input Switch",
    display_name: "\ud83d\udd00 CR Text Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Text Input Switch (4 way)": {
    input: {
      required: { Input: ["INT", { default: 1, min: 1, max: 4 }] },
      optional: {
        text1: ["STRING", { forceInput: true }],
        text2: ["STRING", { forceInput: true }],
        text3: ["STRING", { forceInput: true }],
        text4: ["STRING", { forceInput: true }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Input Switch (4 way)",
    display_name: "\ud83d\udd00 CR Text Input Switch (4 way)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Switch Model and CLIP": {
    input: {
      required: {
        Input: ["INT", { default: 1, min: 1, max: 2 }],
        model1: ["MODEL"],
        clip1: ["CLIP"],
        model2: ["MODEL"],
        clip2: ["CLIP"],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "show_help"],
    name: "CR Switch Model and CLIP",
    display_name: "\ud83d\udd00 CR Switch Model and CLIP",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
    output_node: false,
  },
  "CR Batch Process Switch": {
    input: {
      required: { Input: [["image", "image batch"]] },
      optional: { image: ["IMAGE"], image_batch: ["IMAGE"] },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Batch Process Switch",
    display_name: "\ud83d\udd02 CR Batch Process Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    output_node: false,
  },
  "CR Img2Img Process Switch": {
    input: {
      required: { Input: [["txt2img", "img2img"]] },
      optional: { txt2img: ["LATENT"], img2img: ["LATENT"] },
    },
    output: ["LATENT", "STRING"],
    output_is_list: [false, false],
    output_name: ["LATENT", "show_help"],
    name: "CR Img2Img Process Switch",
    display_name: "\ud83d\udd02 CR Img2Img Process Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    output_node: false,
  },
  "CR Hires Fix Process Switch": {
    input: {
      required: { Input: [["latent_upscale", "image_upscale"]] },
      optional: { latent_upscale: ["LATENT"], image_upscale: ["LATENT"] },
    },
    output: ["LATENT", "STRING"],
    output_is_list: [false, false],
    output_name: ["LATENT", "STRING"],
    name: "CR Hires Fix Process Switch",
    display_name: "\ud83d\udd02 CR Hires Fix Process Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
    output_node: false,
  },
  "CR Index": {
    input: {
      required: {
        index: ["INT", { default: 1, min: 0, max: 10000 }],
        print_to_console: [["Yes", "No"]],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Index",
    display_name: "\ud83d\udd22 CR Index",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    output_node: false,
  },
  "CR Index Increment": {
    input: {
      required: {
        index: [
          "INT",
          { default: 1, min: -10000, max: 10000, forceInput: true },
        ],
        interval: ["INT", { default: 1, min: -10000, max: 10000 }],
      },
    },
    output: ["INT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["index", "interval", "show_help"],
    name: "CR Index Increment",
    display_name: "\ud83d\udd22 CR Index Increment",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    output_node: false,
  },
  "CR Index Multiply": {
    input: {
      required: {
        index: ["INT", { default: 1, min: 0, max: 10000, forceInput: true }],
        factor: ["INT", { default: 1, min: 0, max: 10000 }],
      },
    },
    output: ["INT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["index", "factor", "show_help"],
    name: "CR Index Multiply",
    display_name: "\ud83d\udd22 CR Index Multiply",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    output_node: false,
  },
  "CR Index Reset": {
    input: {
      required: {
        index: ["INT", { default: 1, min: 0, max: 10000, forceInput: true }],
        reset_to: ["INT", { default: 1, min: 0, max: 10000 }],
      },
    },
    output: ["INT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["index", "reset_to", "show_help"],
    name: "CR Index Reset",
    display_name: "\ud83d\udd22 CR Index Reset",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    output_node: false,
  },
  "CR Trigger": {
    input: {
      required: {
        index: ["INT", { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 }],
        trigger_value: ["INT", { default: 1, min: 0, max: 10000 }],
      },
    },
    output: ["INT", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["index", "trigger", "show_help"],
    name: "CR Trigger",
    display_name: "\ud83d\udd22 CR Trigger",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
    output_node: false,
  },
  "CR String To Number": {
    input: {
      required: {
        text: [
          "STRING",
          { multiline: false, default: "text", forceInput: true },
        ],
        round_integer: [["round", "round down", "round up"]],
      },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["INT", "FLOAT", "show_help"],
    name: "CR String To Number",
    display_name: "\ud83d\udd27 CR String To Number",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR String To Combo": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["any", "show_help"],
    name: "CR String To Combo",
    display_name: "\ud83d\udd27 CR String To Combo",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR Float To String": {
    input: {
      required: {
        float_: [
          "FLOAT",
          { default: 0.0, min: 0.0, max: 1000000.0, forceInput: true },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Float To String",
    display_name: "\ud83d\udd27 CR Float To String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR Float To Integer": {
    input: {
      required: { _float: ["FLOAT", { default: 0.0, forceInput: true }] },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Float To Integer",
    display_name: "\ud83d\udd27 CR Float To Integer",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR Integer To String": {
    input: {
      required: {
        int_: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Integer To String",
    display_name: "\ud83d\udd27 CR Integer To String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR String To Boolean": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
      },
    },
    output: ["BOOLEAN", "STRING"],
    output_is_list: [false, false],
    output_name: ["BOOLEAN", "show_help"],
    name: "CR String To Boolean",
    display_name: "\ud83d\udd27 CR String To Boolean",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
    output_node: false,
  },
  "CR Random Hex Color": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: [
      "hex_color1",
      "hex_color2",
      "hex_color3",
      "hex_color4",
      "show_help",
    ],
    name: "CR Random Hex Color",
    display_name: "\ud83c\udfb2 CR Random Hex Color",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Random RGB": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["STRING", "STRING", "STRING", "STRING", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["rgb_1", "rgb_2", "rgb_3", "rgb_4", "show_help"],
    name: "CR Random RGB",
    display_name: "\ud83c\udfb2 CR Random RGB",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Random Multiline Values": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        value_type: [
          [
            "binary",
            "decimal",
            "natural",
            "hexadecimal",
            "alphabetic",
            "alphanumeric",
            "custom",
          ],
        ],
        rows: ["INT", { default: 5, min: 1, max: 2048 }],
        string_length: ["INT", { default: 5, min: 1, max: 1024 }],
        custom_values: ["STRING", { multiline: false, default: "123ABC" }],
        prepend_text: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["multiline_text", "show_help"],
    name: "CR Random Multiline Values",
    display_name: "\ud83c\udfb2 CR Random Multiline Values",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Random Multiline Colors": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        value_type: [["rgb", "hex color", "matplotlib xkcd"]],
        rows: ["INT", { default: 5, min: 1, max: 2048 }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["multiline_text", "show_help"],
    name: "CR Random Multiline Colors",
    display_name: "\ud83c\udfb2 CR Random Multiline Colors",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Random RGB Gradient": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        rows: ["INT", { default: 5, min: 1, max: 2048 }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["multiline_text", "show_help"],
    name: "CR Random RGB Gradient",
    display_name: "\ud83c\udfb2 CR Random RGB Gradient",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Random Panel Codes": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        rows: ["INT", { default: 5, min: 1, max: 2048 }],
        string_length: ["INT", { default: 5, min: 1, max: 1024 }],
        values: ["STRING", { multiline: false, default: "123" }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["multiline_text", "show_help"],
    name: "CR Random Panel Codes",
    display_name: "\ud83c\udfb2 CR Random Panel Codes",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
    output_node: false,
  },
  "CR Text": {
    input: { required: { text: ["STRING", { default: "", multiline: true }] } },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["text", "show_help"],
    name: "CR Text",
    display_name: "\ud83d\udd24 CR Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Multiline Text": {
    input: {
      required: {
        text: ["STRING", { default: "", multiline: true }],
        convert_from_csv: ["BOOLEAN", { default: false }],
        csv_quote_char: ["STRING", { default: "'", choices: ["'", '"'] }],
        remove_chars: ["BOOLEAN", { default: false }],
        chars_to_remove: ["STRING", { multiline: false, default: "" }],
        split_string: ["BOOLEAN", { default: false }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["multiline_text", "show_help"],
    name: "CR Multiline Text",
    display_name: "\ud83d\udd24 CR Multiline Text",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Split String": {
    input: {
      required: { text: ["STRING", { multiline: false, default: "text" }] },
      optional: { delimiter: ["STRING", { multiline: false, default: "," }] },
    },
    output: ["*", "*", "*", "*", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["string_1", "string_2", "string_3", "string_4", "show_help"],
    name: "CR Split String",
    display_name: "\ud83d\udd24 CR Split String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Text Concatenate": {
    input: {
      required: {},
      optional: {
        text1: ["STRING", { multiline: false, default: "", forceInput: true }],
        text2: ["STRING", { multiline: false, default: "", forceInput: true }],
        separator: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Concatenate",
    display_name: "\ud83d\udd24 CR Text Concatenate",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Text Replace": {
    input: {
      required: {
        text: ["STRING", { multiline: true, default: "", forceInput: true }],
      },
      optional: {
        find1: ["STRING", { multiline: false, default: "" }],
        replace1: ["STRING", { multiline: false, default: "" }],
        find2: ["STRING", { multiline: false, default: "" }],
        replace2: ["STRING", { multiline: false, default: "" }],
        find3: ["STRING", { multiline: false, default: "" }],
        replace3: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Replace",
    display_name: "\ud83d\udd24 CR Text Replace",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Text Length": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Text Length",
    display_name: "\ud83d\udd24 CR Text Length",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Text Operation": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
        operation: [
          [
            "uppercase",
            "lowercase",
            "capitalize",
            "invert_case",
            "reverse",
            "trim",
            "remove_spaces",
          ],
        ],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Operation",
    display_name: "\ud83d\udd24 CR Text Operation",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Text Blacklist": {
    input: {
      required: {
        text: ["STRING", { multiline: true, default: "", forceInput: true }],
        blacklist_words: ["STRING", { multiline: true, default: "" }],
      },
      optional: {
        replacement_text: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Blacklist",
    display_name: "\ud83d\udd24 Text Blacklist",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: false,
  },
  "CR Save Text To File": {
    input: {
      required: {
        multiline_text: ["STRING", { multiline: true, default: "" }],
        output_file_path: ["STRING", { multiline: false, default: "" }],
        file_name: ["STRING", { multiline: false, default: "" }],
        file_extension: [["txt", "csv"]],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["show_help"],
    name: "CR Save Text To File",
    display_name: "\ud83d\udd24 CR Save Text To File",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
    output_node: true,
  },
  "CR Set Value On Boolean": {
    input: {
      required: {
        boolean: ["BOOLEAN", { default: true, forceInput: true }],
        value_if_true: [
          "FLOAT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        value_if_false: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["INT", "FLOAT", "show_help"],
    name: "CR Set Value On Boolean",
    display_name: "\u2699\ufe0f CR Set Value On Boolean",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
    output_node: false,
  },
  "CR Set Value On Binary": {
    input: {
      required: {
        binary: ["INT", { default: 1, min: 0, max: 1, forceInput: true }],
        value_if_1: [
          "FLOAT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        value_if_0: [
          "FLOAT",
          { default: 0, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["INT", "FLOAT", "show_help"],
    name: "CR Set Value On Binary",
    display_name: "\u2699\ufe0f CR Set Value On Binary",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
    output_node: false,
  },
  "CR Set Value on String": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
      },
      optional: {
        test_string: ["STRING", { multiline: false, default: "" }],
        value_if_true: ["STRING", { multiline: false, default: "" }],
        value_if_false: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["*", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["STRING", "BOOLEAN", "show_help"],
    name: "CR Set Value on String",
    display_name: "\u2699\ufe0f CR Set Value on String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
    output_node: false,
  },
  "CR Set Switch From String": {
    input: {
      required: {
        text: ["STRING", { multiline: false, default: "", forceInput: true }],
      },
      optional: {
        switch_1: ["STRING", { multiline: false, default: "" }],
        switch_2: ["STRING", { multiline: false, default: "" }],
        switch_3: ["STRING", { multiline: false, default: "" }],
        switch_4: ["STRING", { multiline: false, default: "" }],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["switch", "show_help"],
    name: "CR Set Switch From String",
    display_name: "\u2699\ufe0f CR Set Switch From String",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
    output_node: false,
  },
  "CR Value": {
    input: { required: { value: ["FLOAT", { default: 1.0 }] } },
    output: ["FLOAT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["FLOAT", "INT", "show_help"],
    name: "CR Value",
    display_name: "\u2699\ufe0f CR Value",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Integer Multiple": {
    input: {
      required: {
        integer: [
          "INT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        multiple: ["FLOAT", { default: 8, min: 1, max: 18446744073709551615 }],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Integer Multiple",
    display_name: "\u2699\ufe0f CR Integer Multiple",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Clamp Value": {
    input: {
      required: {
        a: [
          "FLOAT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        range_min: [
          "FLOAT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
        range_max: [
          "FLOAT",
          { default: 1, min: -18446744073709551615, max: 18446744073709551615 },
        ],
      },
    },
    output: ["FLOAT", "STRING"],
    output_is_list: [false, false],
    output_name: ["a", "show_help"],
    name: "CR Clamp Value",
    display_name: "\u2699\ufe0f CR Clamp Value",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Math Operation": {
    input: {
      required: {
        a: ["FLOAT", { default: 1.0 }],
        operation: [["sin", "cos", "tan", "sqrt", "exp", "log", "neg", "abs"]],
        decimal_places: ["INT", { default: 2, min: 0, max: 10 }],
      },
    },
    output: ["FLOAT", "STRING"],
    output_is_list: [false, false],
    output_name: ["a", "show_help"],
    name: "CR Math Operation",
    display_name: "\u2699\ufe0f CR Math Operation",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Get Parameter From Prompt": {
    input: {
      required: {
        prompt: [
          "STRING",
          { multiline: true, default: "prompt", forceInput: true },
        ],
        search_string: ["STRING", { multiline: false, default: "!findme" }],
      },
    },
    output: ["STRING", "*", "FLOAT", "BOOLEAN", "STRING"],
    output_is_list: [false, false, false, false, false],
    output_name: ["prompt", "text", "float", "boolean", "show_help"],
    name: "CR Get Parameter From Prompt",
    display_name: "\u2699\ufe0f CR Get Parameter From Prompt",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Select Resize Method": {
    input: { required: { method: [["Fit", "Crop"]] } },
    output: ["*", "STRING"],
    output_is_list: [false, false],
    output_name: ["method", "show_help"],
    name: "CR Select Resize Method",
    display_name: "\u2699\ufe0f CR Select Resize Method",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Select ISO Size": {
    input: {
      required: {
        iso_size: [
          [
            "A0 - 9933x14043",
            "A1 - 7016x9933",
            "A2 - 4960x7016",
            "A3 - 3508x4960",
            "A4 - 2480x3508",
            "A5 - 1748x2480",
            "A6 - 1240x1748",
            "A7 - 874x1240",
            "A8 - 614x874",
            "A9 - 437x614",
            "A10 - 307x437",
            "A11 - 213x307",
            "A12 - 154x213",
            "A13 - 106x154",
            "B0 - 11811x16701",
            "B1 - 8350x11811",
            "B2 - 5906x8350",
            "B3 - 4169x5906",
            "B4 - 2953x4169",
            "B5 - 2079x2953",
            "B6 - 1476x2079",
            "B7 - 1039x1476",
            "B8 - 732x1039",
            "B9 - 520x732",
            "B10 - 366x520",
            "C0 - 10831x15319",
            "C1 - 7654x10831",
            "C2 - 5409x7654",
            "C3 - 3827x5409",
            "C4 - 2705x3827",
            "C5 - 1913x2705",
            "C6 - 1346x1913",
            "C7 - 957x1346",
            "C8 - 673x957",
            "C9 - 472x673",
            "C10 - 331x472",
          ],
        ],
      },
    },
    output: ["INT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["width", "height", "show_help"],
    name: "CR Select ISO Size",
    display_name: "\u2699\ufe0f CR Select ISO Size",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
    output_node: false,
  },
  "CR Simple Schedule": {
    input: {
      required: {
        schedule: [
          "STRING",
          {
            multiline: true,
            default: "frame_number, item_alias, [attr_value1, attr_value2]",
          },
        ],
        schedule_type: [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job",
          ],
        ],
        schedule_alias: ["STRING", { default: "", multiline: false }],
        schedule_format: [["CR", "Deforum"]],
      },
    },
    output: ["SCHEDULE", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_help"],
    name: "CR Simple Schedule",
    display_name: "\ud83d\udccb CR Simple Schedule",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: false,
  },
  "CR Central Schedule": {
    input: {
      required: {
        schedule_1: ["STRING", { multiline: true, default: "schedule" }],
        schedule_type1: [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job",
          ],
        ],
        schedule_alias1: ["STRING", { multiline: false, default: "" }],
        schedule_2: ["STRING", { multiline: true, default: "schedule" }],
        schedule_type2: [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job",
          ],
        ],
        schedule_alias2: ["STRING", { multiline: false, default: "" }],
        schedule_3: ["STRING", { multiline: true, default: "schedule" }],
        schedule_type3: [
          [
            "Value",
            "Text",
            "Prompt",
            "Prompt Weight",
            "Model",
            "LoRA",
            "ControlNet",
            "Style",
            "Upscale",
            "Camera",
            "Job",
          ],
        ],
        schedule_alias3: ["STRING", { multiline: false, default: "" }],
        schedule_format: [["CR", "Deforum"]],
      },
      optional: { schedule: ["SCHEDULE"] },
    },
    output: ["SCHEDULE", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_text"],
    name: "CR Central Schedule",
    display_name: "\ud83d\udccb CR Central Schedule",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: false,
  },
  "CR Combine Schedules": {
    input: {
      required: {},
      optional: {
        schedule_1: ["SCHEDULE"],
        schedule_2: ["SCHEDULE"],
        schedule_3: ["SCHEDULE"],
        schedule_4: ["SCHEDULE"],
      },
    },
    output: ["SCHEDULE", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_text"],
    name: "CR Combine Schedules",
    display_name: "\ud83d\udccb CR Combine Schedules",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: false,
  },
  "CR Output Schedule To File": {
    input: {
      required: {
        output_file_path: ["STRING", { multiline: false, default: "" }],
        file_name: ["STRING", { multiline: false, default: "" }],
        file_extension: [["txt", "csv"]],
        schedule: ["SCHEDULE"],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CR Output Schedule To File",
    display_name: "\ud83d\udccb CR Output Schedule To File",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: true,
  },
  "CR Load Schedule From File": {
    input: {
      required: {
        input_file_path: ["STRING", { multiline: false, default: "" }],
        file_name: ["STRING", { multiline: false, default: "" }],
        file_extension: [["txt", "csv"]],
      },
    },
    output: ["SCHEDULE", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_text"],
    name: "CR Load Schedule From File",
    display_name: "\ud83d\udccb CR Load Schedule From File",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: false,
  },
  "CR Schedule Input Switch": {
    input: {
      required: {
        Input: ["INT", { default: 1, min: 1, max: 2 }],
        schedule1: ["SCHEDULE"],
        schedule2: ["SCHEDULE"],
      },
    },
    output: ["SCHEDULE", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_help"],
    name: "CR Schedule Input Switch",
    display_name: "\ud83d\udccb CR Schedule Input Switch",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: true,
  },
  "CR Bit Schedule": {
    input: {
      required: {
        binary_string: ["STRING", { multiline: true, default: "" }],
        interval: ["INT", { default: 1, min: 1, max: 99999 }],
        loops: ["INT", { default: 1, min: 1, max: 99999 }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["SCHEDULE", "show_text"],
    name: "CR Bit Schedule",
    display_name: "\ud83d\udccb CR Bit Schedule",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
    output_node: false,
  },
  "CR Simple Value Scheduler": {
    input: {
      required: {
        schedule: [
          "STRING",
          { multiline: true, default: "frame_number, value" },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["INT", "FLOAT", "show_help"],
    name: "CR Simple Value Scheduler",
    display_name: "\ud83d\udcd1 CR Simple Value Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Simple Text Scheduler": {
    input: {
      required: {
        schedule: [
          "STRING",
          { multiline: true, default: "frame_number, text" },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Simple Text Scheduler",
    display_name: "\ud83d\udcd1 CR Simple Text Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Value Scheduler": {
    input: {
      required: {
        mode: [["Default Value", "Schedule"]],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        schedule_alias: ["STRING", { default: "", multiline: false }],
        default_value: [
          "FLOAT",
          { default: 1.0, min: -9999.0, max: 9999.0, step: 0.01 },
        ],
        schedule_format: [["CR", "Deforum"]],
      },
      optional: { schedule: ["SCHEDULE"] },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["INT", "FLOAT", "show_help"],
    name: "CR Value Scheduler",
    display_name: "\ud83d\udcd1 CR Value Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Text Scheduler": {
    input: {
      required: {
        mode: [["Default Text", "Schedule"]],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        schedule_alias: ["STRING", { default: "", multiline: false }],
        default_text: ["STRING", { multiline: false, default: "default text" }],
        schedule_format: [["CR", "Deforum"]],
      },
      optional: { schedule: ["SCHEDULE"] },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Text Scheduler",
    display_name: "\ud83d\udcd1 CR Text Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Load Scheduled Models": {
    input: {
      required: {
        mode: [["Load default Model", "Schedule"]],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        schedule_alias: ["STRING", { default: "", multiline: false }],
        default_model: [["__models__"]],
        schedule_format: [["CR", "Deforum"]],
      },
      optional: { model_list: ["MODEL_LIST"], schedule: ["SCHEDULE"] },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "show_help"],
    name: "CR Load Scheduled Models",
    display_name: "\ud83d\udcd1 CR Load Scheduled Models",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Load Scheduled LoRAs": {
    input: {
      required: {
        mode: [["Off", "Load default LoRA", "Schedule"]],
        model: ["MODEL"],
        clip: ["CLIP"],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        schedule_alias: ["STRING", { default: "", multiline: false }],
        default_lora: [["__models__"]],
        strength_model: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        strength_clip: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        schedule_format: [["CR", "Deforum"]],
      },
      optional: { lora_list: ["LORA_LIST"], schedule: ["SCHEDULE"] },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "show_help"],
    name: "CR Load Scheduled LoRAs",
    display_name: "\ud83d\udcd1 CR Load Scheduled LoRAs",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Prompt Scheduler": {
    input: {
      required: {
        mode: [["Default Prompt", "Keyframe List", "Schedule"]],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        default_prompt: [
          "STRING",
          { multiline: false, default: "default prompt" },
        ],
        schedule_format: [["CR", "Deforum"]],
        interpolate_prompt: [["Yes", "No"]],
      },
      optional: {
        schedule: ["SCHEDULE"],
        schedule_alias: ["STRING", { "default prompt": "", multiline: false }],
        keyframe_list: [
          "STRING",
          { multiline: true, default: "keyframe list" },
        ],
        prepend_text: ["STRING", { multiline: true, default: "prepend text" }],
        append_text: ["STRING", { multiline: true, default: "append text" }],
      },
    },
    output: ["STRING", "STRING", "FLOAT", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["current_prompt", "next_prompt", "weight", "show_help"],
    name: "CR Prompt Scheduler",
    display_name: "\ud83d\udcd1 CR Prompt Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Simple Prompt Scheduler": {
    input: {
      required: {
        keyframe_list: [
          "STRING",
          { multiline: true, default: "frame_number, text" },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        keyframe_format: [["CR", "Deforum"]],
      },
    },
    output: ["STRING", "STRING", "FLOAT", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["current_prompt", "next_prompt", "weight", "show_help"],
    name: "CR Simple Prompt Scheduler",
    display_name: "\ud83d\udcd1 CR Simple Prompt Scheduler",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
    output_node: false,
  },
  "CR Keyframe List": {
    input: {
      required: {
        keyframe_list: ["STRING", { multiline: true, default: "keyframes" }],
        keyframe_format: [["Deforum", "CR"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["keyframe_list", "show_help"],
    name: "CR Keyframe List",
    display_name: "\ud83d\udcdd CR Keyframe List",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    output_node: false,
  },
  "CR Encode Scheduled Prompts": {
    input: {
      required: {
        clip: ["CLIP"],
        current_prompt: ["STRING", { multiline: true }],
        next_prompt: ["STRING", { multiline: true }],
        weight: [
          "FLOAT",
          { default: 0.0, min: -9999.0, max: 9999.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING", "STRING"],
    output_is_list: [false, false],
    output_name: ["CONDITIONING", "show_help"],
    name: "CR Encode Scheduled Prompts",
    display_name: "\ud83d\udcdd CR Encode Scheduled Prompts",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
    output_node: false,
  },
  "CR Gradient Float": {
    input: {
      required: {
        start_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 0.01 },
        ],
        end_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 0.01 },
        ],
        start_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        frame_duration: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        gradient_profile: [["Lerp"]],
      },
    },
    output: ["FLOAT", "STRING"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "show_help"],
    name: "CR Gradient Float",
    display_name: "\ud83d\udd22 CR Gradient Float",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    output_node: false,
  },
  "CR Gradient Integer": {
    input: {
      required: {
        start_value: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        end_value: ["INT", { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 }],
        start_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        frame_duration: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        gradient_profile: [["Lerp"]],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Gradient Integer",
    display_name: "\ud83d\udd22 CR Gradient Integer",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    output_node: false,
  },
  "CR Increment Float": {
    input: {
      required: {
        start_value: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 0.001 },
        ],
        step: [
          "FLOAT",
          { default: 0.1, min: -9999.0, max: 9999.0, step: 0.001 },
        ],
        start_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        frame_duration: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["FLOAT", "STRING"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "show_help"],
    name: "CR Increment Float",
    display_name: "\ud83d\udd22 CR Increment Float",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    output_node: true,
  },
  "CR Increment Integer": {
    input: {
      required: {
        start_value: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        step: ["INT", { default: 1.0, min: -9999.0, max: 9999.0, step: 1.0 }],
        start_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        frame_duration: [
          "INT",
          { default: 1.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["INT", "STRING"],
    output_is_list: [false, false],
    output_name: ["INT", "show_help"],
    name: "CR Increment Integer",
    display_name: "\ud83d\udd22 CR Increment Integer",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    output_node: true,
  },
  "CR Interpolate Latents": {
    input: {
      required: {
        latent1: ["LATENT"],
        latent2: ["LATENT"],
        weight: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
        method: [["lerp"]],
      },
    },
    output: ["LATENT", "STRING"],
    output_is_list: [false, false],
    output_name: ["LATENT", "show_help"],
    name: "CR Interpolate Latents",
    display_name: "\ud83d\udd22 CR Interpolate Latents",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
    output_node: false,
  },
  "CR Debatch Frames": {
    input: { required: { frames: ["IMAGE"] } },
    output: ["IMAGE"],
    output_is_list: [true],
    output_name: ["debatched_frames"],
    name: "CR Debatch Frames",
    display_name: "\ud83d\udee0\ufe0f CR Debatch Frames",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR Current Frame": {
    input: {
      required: {
        index: ["INT", { default: 1, min: -10000, max: 10000 }],
        print_to_console: [["Yes", "No"]],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["index"],
    name: "CR Current Frame",
    display_name: "\ud83d\udee0\ufe0f CR Current Frame",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
    output_node: false,
  },
  "CR Load Animation Frames": {
    input: {
      required: {
        image_sequence_folder: [["__inputs__"]],
        start_index: ["INT", { default: 1, min: 1, max: 10000 }],
        max_frames: ["INT", { default: 1, min: 1, max: 10000 }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Load Animation Frames",
    display_name: "\u2328\ufe0f CR Load Animation Frames",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Load Flow Frames": {
    input: {
      required: {
        input_folder: [["__inputs__"]],
        sort_by: [["Index", "Alphabetic"]],
        current_frame: [
          "INT",
          { default: 0, min: 0, max: 10000, forceInput: true },
        ],
        skip_start_frames: ["INT", { default: 0, min: 0, max: 10000 }],
      },
      optional: {
        input_path: ["STRING", { default: "", multiline: false }],
        file_pattern: ["STRING", { default: "*.png", multiline: false }],
      },
    },
    output: ["IMAGE", "IMAGE", "INT", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: [
      "current_image",
      "previous_image",
      "current_frame",
      "show_help",
    ],
    name: "CR Load Flow Frames",
    display_name: "\u2328\ufe0f CR Load Flow Frames",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    output_node: false,
  },
  "CR Output Flow Frames": {
    input: {
      required: {
        output_folder: [[]],
        current_image: ["IMAGE"],
        filename_prefix: ["STRING", { default: "CR" }],
        current_frame: [
          "INT",
          { default: 0, min: 0, max: 9999999, forceInput: true },
        ],
      },
      optional: {
        interpolated_img: ["IMAGE"],
        output_path: ["STRING", { default: "", multiline: false }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CR Output Flow Frames",
    display_name: "\u2328\ufe0f CR Output Flow Frames",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
    output_node: true,
  },
  "CR Prompt List Keyframes": {
    input: {
      required: {
        prompt_list: ["PROMPT_LIST"],
        keyframe_format: [["Deforum"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["keyframe_list", "show_help"],
    name: "CR Prompt List Keyframes",
    display_name: "CR Prompt List Keyframes (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Simple Prompt List": {
    input: {
      required: {
        prompt_1: ["STRING", { multiline: true, default: "prompt" }],
        prompt_2: ["STRING", { multiline: true, default: "prompt" }],
        prompt_3: ["STRING", { multiline: true, default: "prompt" }],
        prompt_4: ["STRING", { multiline: true, default: "prompt" }],
        prompt_5: ["STRING", { multiline: true, default: "prompt" }],
      },
      optional: { simple_prompt_list: ["SIMPLE_PROMPT_LIST"] },
    },
    output: ["SIMPLE_PROMPT_LIST", "STRING"],
    output_is_list: [false, false],
    output_name: ["SIMPLE_PROMPT_LIST", "show_help"],
    name: "CR Simple Prompt List",
    display_name: "CR Simple Prompt List (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Simple Prompt List Keyframes": {
    input: {
      required: {
        simple_prompt_list: ["SIMPLE_PROMPT_LIST"],
        keyframe_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        transition_type: [["Default"]],
        transition_speed: [["Default"]],
        transition_profile: [["Default"]],
        keyframe_format: [["Deforum"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["keyframe_list", "show_help"],
    name: "CR Simple Prompt List Keyframes",
    display_name: "CR Simple Prompt List Keyframes (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle Models": {
    input: {
      required: {
        mode: [["Off", "Sequential"]],
        model: ["MODEL"],
        clip: ["CLIP"],
        model_list: ["MODEL_LIST"],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "VAE", "STRING"],
    output_is_list: [false, false, false, false],
    output_name: ["MODEL", "CLIP", "VAE", "show_help"],
    name: "CR Cycle Models",
    display_name: "CR Cycle Models (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle LoRAs": {
    input: {
      required: {
        mode: [["Off", "Sequential"]],
        model: ["MODEL"],
        clip: ["CLIP"],
        lora_list: ["LORA_LIST"],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["MODEL", "CLIP", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["MODEL", "CLIP", "show_help"],
    name: "CR Cycle LoRAs",
    display_name: "CR Cycle LoRAs (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle Text": {
    input: {
      required: {
        mode: [["Sequential"]],
        text_list: ["TEXT_LIST"],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Cycle Text",
    display_name: "CR Cycle Text (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle Text Simple": {
    input: {
      required: {
        mode: [["Sequential"]],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
      optional: {
        text_1: ["STRING", { multiline: false, default: "" }],
        text_2: ["STRING", { multiline: false, default: "" }],
        text_3: ["STRING", { multiline: false, default: "" }],
        text_4: ["STRING", { multiline: false, default: "" }],
        text_5: ["STRING", { multiline: false, default: "" }],
        text_list_simple: ["TEXT_LIST_SIMPLE"],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["STRING", "show_help"],
    name: "CR Cycle Text Simple",
    display_name: "CR Cycle Text Simple (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle Images": {
    input: {
      required: {
        mode: [["Sequential"]],
        image_list: ["IMAGE_LIST"],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Cycle Images",
    display_name: "CR Cycle Images (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Cycle Images Simple": {
    input: {
      required: {
        mode: [["Sequential"]],
        frame_interval: ["INT", { default: 30, min: 0, max: 999, step: 1 }],
        loops: ["INT", { default: 1, min: 1, max: 1000 }],
        current_frame: [
          "INT",
          { default: 0.0, min: 0.0, max: 9999.0, step: 1.0 },
        ],
      },
      optional: {
        image_1: ["IMAGE"],
        image_2: ["IMAGE"],
        image_3: ["IMAGE"],
        image_4: ["IMAGE"],
        image_5: ["IMAGE"],
        image_list_simple: ["IMAGE_LIST_SIMPLE"],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "show_help"],
    name: "CR Cycle Images Simple",
    display_name: "CR Cycle Images Simple (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Model List": {
    input: {
      required: {
        ckpt_name1: [["None", "__models__"]],
        alias1: ["STRING", { multiline: false, default: "" }],
        ckpt_name2: [["None", "__models__"]],
        alias2: ["STRING", { multiline: false, default: "" }],
        ckpt_name3: [["None", "__models__"]],
        alias3: ["STRING", { multiline: false, default: "" }],
        ckpt_name4: [["None", "__models__"]],
        alias4: ["STRING", { multiline: false, default: "" }],
        ckpt_name5: [["None", "__models__"]],
        alias5: ["STRING", { multiline: false, default: "" }],
      },
      optional: { model_list: ["MODEL_LIST"] },
    },
    output: ["MODEL_LIST", "STRING"],
    output_is_list: [false, false],
    output_name: ["MODEL_LIST", "show_text"],
    name: "CR Model List",
    display_name: "CR Model List (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR LoRA List": {
    input: {
      required: {
        lora_name1: [["None", "__models__"]],
        alias1: ["STRING", { multiline: false, default: "" }],
        model_strength_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_strength_1: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name2: [["None", "__models__"]],
        alias2: ["STRING", { multiline: false, default: "" }],
        model_strength_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_strength_2: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_name3: [["None", "__models__"]],
        alias3: ["STRING", { multiline: false, default: "" }],
        model_strength_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_strength_3: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      optional: { lora_list: ["lora_LIST"] },
    },
    output: ["LORA_LIST", "STRING"],
    output_is_list: [false, false],
    output_name: ["LORA_LIST", "show_text"],
    name: "CR LoRA List",
    display_name: "CR LoRA List (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Text List Simple": {
    input: {
      required: {},
      optional: {
        text_1: ["STRING", { multiline: false, default: "" }],
        text_2: ["STRING", { multiline: false, default: "" }],
        text_3: ["STRING", { multiline: false, default: "" }],
        text_4: ["STRING", { multiline: false, default: "" }],
        text_5: ["STRING", { multiline: false, default: "" }],
        text_list_simple: ["TEXT_LIST_SIMPLE"],
      },
    },
    output: ["TEXT_LIST_SIMPLE", "STRING"],
    output_is_list: [false, false],
    output_name: ["TEXT_LIST_SIMPLE", "show_help"],
    name: "CR Text List Simple",
    display_name: "CR Text List Simple (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Image List": {
    input: {
      required: {},
      optional: {
        image_1: ["IMAGE"],
        alias1: ["STRING", { multiline: false, default: "" }],
        image_2: ["IMAGE"],
        alias2: ["STRING", { multiline: false, default: "" }],
        image_3: ["IMAGE"],
        alias3: ["STRING", { multiline: false, default: "" }],
        image_4: ["IMAGE"],
        alias4: ["STRING", { multiline: false, default: "" }],
        image_5: ["IMAGE"],
        alias5: ["STRING", { multiline: false, default: "" }],
        image_list: ["image_LIST"],
      },
    },
    output: ["IMAGE_LIST", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE_LIST", "show_help"],
    name: "CR Image List",
    display_name: "CR Image List (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  "CR Image List Simple": {
    input: {
      required: {},
      optional: {
        image_1: ["IMAGE"],
        image_2: ["IMAGE"],
        image_3: ["IMAGE"],
        image_4: ["IMAGE"],
        image_5: ["IMAGE"],
        image_list_simple: ["IMAGE_LIST_SIMPLE"],
      },
    },
    output: ["IMAGE_LIST_SIMPLE", "STRING"],
    output_is_list: [false, false],
    output_name: ["IMAGE_LIST_SIMPLE", "show_help"],
    name: "CR Image List Simple",
    display_name: "CR Image List Simple (Legacy)",
    description: "",
    category:
      "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
    output_node: false,
  },
  LCMScheduler: {
    input: {
      required: {
        model: ["MODEL"],
        steps: ["INT", { default: 8, min: 1, max: 10000 }],
      },
    },
    output: ["SIGMAS"],
    output_is_list: [false],
    output_name: ["SIGMAS"],
    name: "LCMScheduler",
    display_name: "LCMScheduler",
    description: "",
    category: "sampling/custom_sampling/schedulers",
    output_node: false,
  },
  SamplerLCMAlternative: {
    input: {
      required: {
        euler_steps: ["INT", { default: 0, min: -10000, max: 10000 }],
        ancestral: [
          "FLOAT",
          { default: 0, min: 0, max: 1.0, step: 0.01, round: false },
        ],
        noise_mult: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 2.0, step: 0.001, round: false },
        ],
      },
    },
    output: ["SAMPLER"],
    output_is_list: [false],
    output_name: ["SAMPLER"],
    name: "SamplerLCMAlternative",
    display_name: "SamplerLCMAlternative",
    description: "",
    category: "sampling/custom_sampling/samplers",
    output_node: false,
  },
  SamplerLCMCycle: {
    input: {
      required: {
        euler_steps: ["INT", { default: 1, min: 1, max: 50 }],
        lcm_steps: ["INT", { default: 2, min: 1, max: 50 }],
        tweak_sigmas: ["BOOLEAN", { default: false }],
        ancestral: [
          "FLOAT",
          { default: 0, min: 0, max: 1.0, step: 0.01, round: false },
        ],
      },
    },
    output: ["SAMPLER"],
    output_is_list: [false],
    output_name: ["SAMPLER"],
    name: "SamplerLCMCycle",
    display_name: "SamplerLCMCycle",
    description: "",
    category: "sampling/custom_sampling/samplers",
    output_node: false,
  },
  "Image Remove Background Rembg (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        alpha_matting: ["BOOLEAN", { default: false }],
        alpha_matting_foreground_threshold: [
          "INT",
          { default: 240, min: 0, max: 255 },
        ],
        alpha_matting_background_threshold: [
          "INT",
          { default: 10, min: 0, max: 255 },
        ],
        alpha_matting_erode_size: ["INT", { default: 10, min: 0, max: 255 }],
        post_process_mask: ["BOOLEAN", { default: false }],
        bgcolor: ["COLOR", { default: "#000000" }],
      },
    },
    output: ["IMAGE", "MASK", "IMAGE"],
    output_is_list: [false, false, false],
    output_name: ["Image (rgba)", "Mask", "Image"],
    name: "Image Remove Background Rembg (mtb)",
    display_name: "Image Remove Background Rembg (mtb)",
    description: "",
    category: "mtb/image",
    output_node: false,
  },
  "Stack Images (mtb)": {
    input: { required: { vertical: ["BOOLEAN", { default: false }] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Stack Images (mtb)",
    display_name: "Stack Images (mtb)",
    description: "",
    category: "mtb/image utils",
    output_node: false,
  },
  "Pick From Batch (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        from_direction: [["end", "start"], { default: "start" }],
        count: ["INT", { default: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Pick From Batch (mtb)",
    display_name: "Pick From Batch (mtb)",
    description: "",
    category: "mtb/image utils",
    output_node: false,
  },
  "Deep Bump (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        mode: [
          ["Color to Normals", "Normals to Curvature", "Normals to Height"],
        ],
        color_to_normals_overlap: [["SMALL", "MEDIUM", "LARGE"]],
        normals_to_curvature_blur_radius: [
          [
            "SMALLEST",
            "SMALLER",
            "SMALL",
            "MEDIUM",
            "LARGE",
            "LARGER",
            "LARGEST",
          ],
        ],
        normals_to_height_seamless: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Deep Bump (mtb)",
    display_name: "Deep Bump (mtb)",
    description: "",
    category: "mtb/textures",
    output_node: false,
  },
  "Qr Code (mtb)": {
    input: {
      required: {
        url: ["STRING", { default: "https://www.github.com" }],
        width: ["INT", { default: 256, max: 8096, min: 0, step: 1 }],
        height: ["INT", { default: 256, max: 8096, min: 0, step: 1 }],
        error_correct: [["L", "M", "Q", "H"], { default: "L" }],
        box_size: ["INT", { default: 10, max: 8096, min: 0, step: 1 }],
        border: ["INT", { default: 4, max: 8096, min: 0, step: 1 }],
        invert: [["BOOLEAN"], { default: false }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Qr Code (mtb)",
    display_name: "Qr Code (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Unsplash Image (mtb)": {
    input: {
      required: {
        width: ["INT", { default: 512, max: 8096, min: 0, step: 1 }],
        height: ["INT", { default: 512, max: 8096, min: 0, step: 1 }],
        random_seed: ["INT", { default: 0, max: 100000.0, min: 0, step: 1 }],
      },
      optional: { keyword: ["STRING", { default: "nature" }] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Unsplash Image (mtb)",
    display_name: "Unsplash Image (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Text To Image (mtb)": {
    input: {
      required: {
        text: ["STRING", { default: "Hello world!" }],
        font: [[]],
        wrap: ["INT", { default: 120, min: 0, max: 8096, step: 1 }],
        font_size: ["INT", { default: 12, min: 1, max: 2500, step: 1 }],
        width: ["INT", { default: 512, min: 1, max: 8096, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8096, step: 1 }],
        color: ["COLOR", { default: "black" }],
        background: ["COLOR", { default: "white" }],
        h_align: [["left", "center", "right"], { default: "left" }],
        v_align: [["top", "center", "bottom"], { default: "top" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Text To Image (mtb)",
    display_name: "Text To Image (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Float To Number (mtb)": {
    input: {
      required: {
        float: [
          "FLOAT",
          {
            default: 0,
            min: -1000000000.0,
            max: 1000000000.0,
            step: 1,
            forceInput: true,
          },
        ],
      },
    },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "Float To Number (mtb)",
    display_name: "Float To Number (mtb)",
    description: "",
    category: "mtb/number",
    output_node: false,
  },
  "Int To Bool (mtb)": {
    input: { required: { int: ["INT", { default: 0 }] } },
    output: ["BOOLEAN"],
    output_is_list: [false],
    output_name: ["BOOLEAN"],
    name: "Int To Bool (mtb)",
    display_name: "Int To Bool (mtb)",
    description: "",
    category: "mtb/number",
    output_node: false,
  },
  "Int To Number (mtb)": {
    input: {
      required: {
        int: [
          "INT",
          {
            default: 0,
            min: -1000000000.0,
            max: 1000000000.0,
            step: 1,
            forceInput: true,
          },
        ],
      },
    },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["NUMBER"],
    name: "Int To Number (mtb)",
    display_name: "Int To Number (mtb)",
    description: "",
    category: "mtb/number",
    output_node: false,
  },
  "Latent Lerp (mtb)": {
    input: {
      required: {
        A: ["LATENT"],
        B: ["LATENT"],
        t: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "Latent Lerp (mtb)",
    display_name: "Latent Lerp (mtb)",
    description: "",
    category: "mtb/latent",
    output_node: false,
  },
  "Batch Float (mtb)": {
    input: {
      required: {
        mode: [["Single", "Steps"], { default: "Steps" }],
        count: ["INT", { default: 1 }],
        min: ["FLOAT", { default: 0.0 }],
        max: ["FLOAT", { default: 1.0 }],
        easing: [
          [
            "Linear",
            "Sine In",
            "Sine Out",
            "Sine In/Out",
            "Quart In",
            "Quart Out",
            "Quart In/Out",
            "Cubic In",
            "Cubic Out",
            "Cubic In/Out",
            "Circ In",
            "Circ Out",
            "Circ In/Out",
            "Back In",
            "Back Out",
            "Back In/Out",
            "Elastic In",
            "Elastic Out",
            "Elastic In/Out",
            "Bounce In",
            "Bounce Out",
            "Bounce In/Out",
          ],
          { default: "Linear" },
        ],
      },
    },
    output: ["FLOATS"],
    output_is_list: [false],
    output_name: ["FLOATS"],
    name: "Batch Float (mtb)",
    display_name: "Batch Float (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Transform (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        border_handling: [
          ["edge", "constant", "reflect", "symmetric"],
          { default: "edge" },
        ],
        constant_color: ["COLOR", { default: "#000000" }],
      },
      optional: {
        x: ["FLOATS"],
        y: ["FLOATS"],
        zoom: ["FLOATS"],
        angle: ["FLOATS"],
        shear: ["FLOATS"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Batch Transform (mtb)",
    display_name: "Batch Transform (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Shape (mtb)": {
    input: {
      required: {
        count: ["INT", { default: 1 }],
        shape: [["Box", "Circle", "Diamond"], { default: "Box" }],
        image_width: ["INT", { default: 512 }],
        image_height: ["INT", { default: 512 }],
        shape_size: ["INT", { default: 100 }],
        color: ["COLOR", { default: "#ffffff" }],
        bg_color: ["COLOR", { default: "#000000" }],
        shade_color: ["COLOR", { default: "#000000" }],
        shadex: ["FLOAT", { default: 0.0 }],
        shadey: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Batch Shape (mtb)",
    display_name: "Batch Shape (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Make (mtb)": {
    input: { required: { image: ["IMAGE"], count: ["INT", { default: 1 }] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Batch Make (mtb)",
    display_name: "Batch Make (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Float Assemble (mtb)": {
    input: { required: { reverse: ["BOOLEAN", { default: false }] } },
    output: ["FLOATS"],
    output_is_list: [false],
    output_name: ["FLOATS"],
    name: "Batch Float Assemble (mtb)",
    display_name: "Batch Float Assemble (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Float Fill (mtb)": {
    input: {
      required: {
        floats: ["FLOATS"],
        direction: [["head", "tail"], { default: "tail" }],
        value: ["FLOAT", { default: 0.0 }],
        count: ["INT", { default: 1 }],
      },
    },
    output: ["FLOATS"],
    output_is_list: [false],
    output_name: ["FLOATS"],
    name: "Batch Float Fill (mtb)",
    display_name: "Batch Float Fill (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Merge (mtb)": {
    input: {
      required: {
        fusion_mode: [["add", "multiply", "average"], { default: "average" }],
        fill: [["head", "tail"], { default: "tail" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Batch Merge (mtb)",
    display_name: "Batch Merge (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Batch Shake (mtb)": {
    input: {
      required: {
        images: ["IMAGE"],
        position_amount_x: ["FLOAT", { default: 1.0 }],
        position_amount_y: ["FLOAT", { default: 1.0 }],
        rotation_amount: ["FLOAT", { default: 10.0 }],
        frequency: ["FLOAT", { default: 1.0, min: 0.005 }],
        frequency_divider: ["FLOAT", { default: 1.0, min: 0.005 }],
        octaves: ["INT", { default: 1, min: 1 }],
        seed: ["INT", { default: 0 }],
      },
    },
    output: ["IMAGE", "FLOATS", "FLOATS", "FLOATS"],
    output_is_list: [false, false, false, false],
    output_name: ["image", "pos_x", "pos_y", "rot"],
    name: "Batch Shake (mtb)",
    display_name: "Batch Shake (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Plot Batch Float (mtb)": {
    input: {
      required: {
        width: ["INT", { default: 768 }],
        height: ["INT", { default: 768 }],
        point_size: ["INT", { default: 4 }],
        seed: ["INT", { default: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["plot"],
    name: "Plot Batch Float (mtb)",
    display_name: "Plot Batch Float (mtb)",
    description: "",
    category: "mtb/batch",
    output_node: false,
  },
  "Save Gif (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        fps: ["INT", { default: 12, min: 1, max: 120 }],
        resize_by: ["FLOAT", { default: 1.0, min: 0.1 }],
        optimize: ["BOOLEAN", { default: false }],
        pingpong: ["BOOLEAN", { default: false }],
      },
      optional: {
        resample_filter: [
          ["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"],
        ],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Gif (mtb)",
    display_name: "Save Gif (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: true,
  },
  "Export With Ffmpeg (mtb)": {
    input: {
      optional: { images: ["IMAGE"], playlist: ["PLAYLIST"] },
      required: {
        fps: ["FLOAT", { default: 24, min: 1 }],
        prefix: ["STRING", { default: "export" }],
        format: [["mov", "mp4", "mkv", "avi"], { default: "mov" }],
        codec: [["prores_ks", "libx264", "libx265"], { default: "prores_ks" }],
      },
    },
    output: ["VIDEO"],
    output_is_list: [false],
    output_name: ["VIDEO"],
    name: "Export With Ffmpeg (mtb)",
    display_name: "Export With Ffmpeg (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: true,
  },
  "Add To Playlist (mtb)": {
    input: {
      required: {
        relative_paths: ["BOOLEAN", { default: false }],
        persistant_playlist: ["BOOLEAN", { default: false }],
        playlist_name: ["STRING", { default: "playlist_{index:04d}" }],
        index: ["INT", { default: 0, min: 0 }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Add To Playlist (mtb)",
    display_name: "Add To Playlist (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: true,
  },
  "Read Playlist (mtb)": {
    input: {
      required: {
        enable: ["BOOLEAN", { default: true }],
        persistant_playlist: ["BOOLEAN", { default: false }],
        playlist_name: ["STRING", { default: "playlist_{index:04d}" }],
        index: ["INT", { default: 0, min: 0 }],
      },
    },
    output: ["PLAYLIST"],
    output_is_list: [false],
    output_name: ["PLAYLIST"],
    name: "Read Playlist (mtb)",
    display_name: "Read Playlist (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: false,
  },
  "String Replace (mtb)": {
    input: {
      required: {
        string: ["STRING", { forceInput: true }],
        old: ["STRING", { default: "" }],
        new: ["STRING", { default: "" }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "String Replace (mtb)",
    display_name: "String Replace (mtb)",
    description: "",
    category: "mtb/string",
    output_node: false,
  },
  "Fit Number (mtb)": {
    input: {
      required: {
        value: ["FLOAT", { default: 0, forceInput: true }],
        clamp: ["BOOLEAN", { default: false }],
        source_min: ["FLOAT", { default: 0.0, step: 0.01 }],
        source_max: ["FLOAT", { default: 1.0, step: 0.01 }],
        target_min: ["FLOAT", { default: 0.0, step: 0.01 }],
        target_max: ["FLOAT", { default: 1.0, step: 0.01 }],
        easing: [
          [
            "Linear",
            "Sine In",
            "Sine Out",
            "Sine In/Out",
            "Quart In",
            "Quart Out",
            "Quart In/Out",
            "Cubic In",
            "Cubic Out",
            "Cubic In/Out",
            "Circ In",
            "Circ Out",
            "Circ In/Out",
            "Back In",
            "Back Out",
            "Back In/Out",
            "Elastic In",
            "Elastic Out",
            "Elastic In/Out",
            "Bounce In",
            "Bounce Out",
            "Bounce In/Out",
          ],
          { default: "Linear" },
        ],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Fit Number (mtb)",
    display_name: "Fit Number (mtb)",
    description: "Fit the input float using a source and target range",
    category: "mtb/math",
    output_node: false,
  },
  "Get Batch From History (mtb)": {
    input: {
      required: {
        enable: ["BOOLEAN", { default: true }],
        count: ["INT", { default: 1, min: 0 }],
        offset: ["INT", { default: 0, min: -1000000000.0, max: 1000000000.0 }],
        internal_count: ["INT", { default: 0 }],
      },
      optional: { passthrough_image: ["IMAGE"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "Get Batch From History (mtb)",
    display_name: "Get Batch From History (mtb)",
    description: "",
    category: "mtb/animation",
    output_node: false,
  },
  "Any To String (mtb)": {
    input: { required: { input: "*" } },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Any To String (mtb)",
    display_name: "Any To String (mtb)",
    description: "",
    category: "mtb/converters",
    output_node: false,
  },
  "Concat Images (mtb)": {
    input: { required: { reverse: ["BOOLEAN", { default: false }] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Concat Images (mtb)",
    display_name: "Concat Images (mtb)",
    description: "",
    category: "mtb/image",
    output_node: false,
  },
  "Math Expression (mtb)": {
    input: {
      required: { expression: ["STRING", { default: "", multiline: true }] },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["result (float)", "result (int)"],
    name: "Math Expression (mtb)",
    display_name: "Math Expression (mtb)",
    description:
      "evaluate a simple math expression string (!! Fallsback to eval)",
    category: "mtb/math",
    output_node: false,
  },
  "Face Swap (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        reference: ["IMAGE"],
        faces_index: ["STRING", { default: "0" }],
        faceanalysis_model: ["FACE_ANALYSIS_MODEL", { default: "None" }],
        faceswap_model: ["FACESWAP_MODEL", { default: "None" }],
      },
      optional: {},
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Face Swap (mtb)",
    display_name: "Face Swap (mtb)",
    description: "",
    category: "mtb/facetools",
    output_node: false,
  },
  "Load Face Swap Model (mtb)": {
    input: { required: { faceswap_model: [[], { default: "None" }] } },
    output: ["FACESWAP_MODEL"],
    output_is_list: [false],
    output_name: ["FACESWAP_MODEL"],
    name: "Load Face Swap Model (mtb)",
    display_name: "Load Face Swap Model (mtb)",
    description: "",
    category: "mtb/facetools",
    output_node: false,
  },
  "Load Face Analysis Model (mtb)": {
    input: {
      required: {
        faceswap_model: [
          ["antelopev2", "buffalo_l", "buffalo_m", "buffalo_sc"],
          { default: "buffalo_l" },
        ],
      },
    },
    output: ["FACE_ANALYSIS_MODEL"],
    output_is_list: [false],
    output_name: ["FACE_ANALYSIS_MODEL"],
    name: "Load Face Analysis Model (mtb)",
    display_name: "Load Face Analysis Model (mtb)",
    description: "",
    category: "mtb/facetools",
    output_node: false,
  },
  "Curve (mtb)": {
    input: { required: { curve: ["FLOAT_CURVE"] } },
    output: ["FLOAT_CURVE"],
    output_is_list: [false],
    output_name: ["FLOAT_CURVE"],
    name: "Curve (mtb)",
    display_name: "Curve (mtb)",
    description: "",
    category: "mtb/curve",
    output_node: false,
  },
  "Model Patch Seamless (mtb)": {
    input: {
      required: { model: ["MODEL"], tiling: ["BOOLEAN", { default: true }] },
    },
    output: ["MODEL", "MODEL"],
    output_is_list: [false, false],
    output_name: ["Original Model (passthrough)", "Patched Model"],
    name: "Model Patch Seamless (mtb)",
    display_name: "Model Patch Seamless (mtb)",
    description: "",
    category: "mtb/textures",
    output_node: false,
  },
  "Vae Decode (mtb)": {
    input: {
      required: {
        samples: ["LATENT"],
        vae: ["VAE"],
        seamless_model: ["BOOLEAN", { default: false }],
        use_tiling_decoder: ["BOOLEAN", { default: true }],
        tile_size: ["INT", { default: 512, min: 320, max: 4096, step: 64 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Vae Decode (mtb)",
    display_name: "Vae Decode (mtb)",
    description: "",
    category: "mtb/decode",
    output_node: false,
  },
  "Animation Builder (mtb)": {
    input: {
      required: {
        total_frames: ["INT", { default: 100, min: 0 }],
        scale_float: ["FLOAT", { default: 1.0, min: 0.0 }],
        loop_count: ["INT", { default: 1, min: 0 }],
        raw_iteration: ["INT", { default: 0, min: 0 }],
        raw_loop: ["INT", { default: 0, min: 0 }],
      },
    },
    output: ["INT", "FLOAT", "INT", "BOOLEAN"],
    output_is_list: [false, false, false, false],
    output_name: ["frame", "0-1 (scaled)", "count", "loop_ended"],
    name: "Animation Builder (mtb)",
    display_name: "Animation Builder (mtb)",
    description: "",
    category: "mtb/animation",
    output_node: false,
  },
  "Smart Step (mtb)": {
    input: {
      required: {
        step: ["INT", { default: 20, min: 1, max: 10000, step: 1 }],
        start_percent: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        end_percent: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
      },
    },
    output: ["INT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["step", "start", "end"],
    name: "Smart Step (mtb)",
    display_name: "Smart Step (mtb)",
    description: "",
    category: "mtb/conditioning",
    output_node: false,
  },
  "Styles Loader (mtb)": {
    input: {
      required: {
        style_name: [["name", "\u274cLow Token", "\u2705Line Art / Manga"]],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "Styles Loader (mtb)",
    display_name: "Styles Loader (mtb)",
    description: "",
    category: "mtb/conditioning",
    output_node: false,
  },
  "Interpolate Clip Sequential (mtb)": {
    input: {
      required: {
        base_text: ["STRING", { multiline: true }],
        text_to_replace: ["STRING", { default: "" }],
        clip: ["CLIP"],
        interpolation_strength: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "Interpolate Clip Sequential (mtb)",
    display_name: "Interpolate Clip Sequential (mtb)",
    description: "",
    category: "mtb/conditioning",
    output_node: false,
  },
  "Bbox From Mask (mtb)": {
    input: {
      required: { mask: ["MASK"], invert: ["BOOLEAN", { default: false }] },
      optional: { image: ["IMAGE"] },
    },
    output: ["BBOX", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["bbox", "image (optional)"],
    name: "Bbox From Mask (mtb)",
    display_name: "Bbox From Mask (mtb)",
    description: "",
    category: "mtb/crop",
    output_node: false,
  },
  "Bbox (mtb)": {
    input: {
      required: {
        x: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        y: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        width: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        height: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
      },
    },
    output: ["BBOX"],
    output_is_list: [false],
    output_name: ["BBOX"],
    name: "Bbox (mtb)",
    display_name: "Bbox (mtb)",
    description: "",
    category: "mtb/crop",
    output_node: false,
  },
  "Crop (mtb)": {
    input: {
      required: { image: ["IMAGE"] },
      optional: {
        mask: ["MASK"],
        x: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        y: ["INT", { default: 0, max: 10000000, min: 0, step: 1 }],
        width: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        height: ["INT", { default: 256, max: 10000000, min: 0, step: 1 }],
        bbox: ["BBOX"],
      },
    },
    output: ["IMAGE", "MASK", "BBOX"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "MASK", "BBOX"],
    name: "Crop (mtb)",
    display_name: "Crop (mtb)",
    description: "",
    category: "mtb/crop",
    output_node: false,
  },
  "Uncrop (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        crop_image: ["IMAGE"],
        bbox: ["BBOX"],
        border_blending: [
          "FLOAT",
          { default: 0.25, min: 0.0, max: 1.0, step: 0.01 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Uncrop (mtb)",
    display_name: "Uncrop (mtb)",
    description: "",
    category: "mtb/crop",
    output_node: false,
  },
  "Debug (mtb)": {
    input: { required: { output_to_console: ["BOOLEAN", { default: false }] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Debug (mtb)",
    display_name: "Debug (mtb)",
    description: "",
    category: "mtb/debug",
    output_node: true,
  },
  "Save Tensors (mtb)": {
    input: {
      required: { filename_prefix: ["STRING", { default: "ComfyPickle" }] },
      optional: { image: ["IMAGE"], mask: ["MASK"], latent: ["LATENT"] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Tensors (mtb)",
    display_name: "Save Tensors (mtb)",
    description: "",
    category: "mtb/debug",
    output_node: true,
  },
  "Transform Image (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        x: ["FLOAT", { default: 0, step: 1, min: -4096, max: 4096 }],
        y: ["FLOAT", { default: 0, step: 1, min: -4096, max: 4096 }],
        zoom: ["FLOAT", { default: 1.0, min: 0.001, step: 0.01 }],
        angle: ["FLOAT", { default: 0, step: 1, min: -360, max: 360 }],
        shear: ["FLOAT", { default: 0, step: 1, min: -4096, max: 4096 }],
        border_handling: [
          ["edge", "constant", "reflect", "symmetric"],
          { default: "edge" },
        ],
        constant_color: ["COLOR", { default: "#000000" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Transform Image (mtb)",
    display_name: "Transform Image (mtb)",
    description: "",
    category: "mtb/transform",
    output_node: false,
  },
  "Filter Z (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        depth: ["IMAGE"],
        to_black: ["BOOLEAN", { default: true }],
        threshold: ["FLOAT", { default: 0.5, step: 0.01, min: 0.0, max: 1.0 }],
        invert: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Filter Z (mtb)",
    display_name: "Filter Z (mtb)",
    description: "",
    category: "mtb/filters",
    output_node: false,
  },
  "Load Image Sequence (mtb)": {
    input: {
      required: {
        path: ["STRING", { default: "videos/####.png" }],
        current_frame: ["INT", { default: 0, min: -1, max: 9999999 }],
      },
    },
    output: ["IMAGE", "MASK", "INT"],
    output_is_list: [false, false, false],
    output_name: ["image", "mask", "current_frame"],
    name: "Load Image Sequence (mtb)",
    display_name: "Load Image Sequence (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: false,
  },
  "Save Image Sequence (mtb)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "Sequence" }],
        current_frame: ["INT", { default: 0, min: 0, max: 9999999 }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Image Sequence (mtb)",
    display_name: "Save Image Sequence (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: true,
  },
  "Color Correct (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        clamp: [[true, false], { default: true }],
        gamma: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.01 }],
        contrast: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.01 }],
        exposure: ["FLOAT", { default: 0.0, min: -5.0, max: 5.0, step: 0.01 }],
        offset: ["FLOAT", { default: 0.0, min: -5.0, max: 5.0, step: 0.01 }],
        hue: ["FLOAT", { default: 0.0, min: -0.5, max: 0.5, step: 0.01 }],
        saturation: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.01 }],
        value: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Color Correct (mtb)",
    display_name: "Color Correct (mtb)",
    description: "",
    category: "mtb/image processing",
    output_node: false,
  },
  "Image Compare (mtb)": {
    input: {
      required: {
        imageA: ["IMAGE"],
        imageB: ["IMAGE"],
        mode: [["checkerboard", "diff", "blend"], { default: "checkerboard" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Compare (mtb)",
    display_name: "Image Compare (mtb)",
    description: "",
    category: "mtb/image",
    output_node: false,
  },
  "Image Tile Offset (mtb)": {
    input: { required: { image: ["IMAGE"], tiles: ["INT", { default: 2 }] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Image Tile Offset (mtb)",
    display_name: "Image Tile Offset (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Blur (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        sigmaX: ["FLOAT", { default: 3.0, min: 0.0, max: 10.0, step: 0.01 }],
        sigmaY: ["FLOAT", { default: 3.0, min: 0.0, max: 10.0, step: 0.01 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Blur (mtb)",
    display_name: "Blur (mtb)",
    description: "",
    category: "mtb/image processing",
    output_node: false,
  },
  "Mask To Image (mtb)": {
    input: {
      required: {
        mask: ["MASK"],
        color: ["COLOR"],
        background: ["COLOR", { default: "#000000" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Mask To Image (mtb)",
    display_name: "Mask To Image (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Colored Image (mtb)": {
    input: {
      required: {
        color: ["COLOR"],
        width: ["INT", { default: 512, min: 16, max: 8160 }],
        height: ["INT", { default: 512, min: 16, max: 8160 }],
      },
      optional: { foreground_image: ["IMAGE"], foreground_mask: ["MASK"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Colored Image (mtb)",
    display_name: "Colored Image (mtb)",
    description: "",
    category: "mtb/generate",
    output_node: false,
  },
  "Image Premultiply (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        mask: ["MASK"],
        invert: ["BOOLEAN", { default: false }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["RGBA"],
    name: "Image Premultiply (mtb)",
    display_name: "Image Premultiply (mtb)",
    description: "",
    category: "mtb/image",
    output_node: false,
  },
  "Image Resize Factor (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        factor: ["FLOAT", { default: 2, min: 0.01, max: 16.0, step: 0.01 }],
        supersample: ["BOOLEAN", { default: true }],
        resampling: [
          [
            "nearest",
            "linear",
            "bilinear",
            "bicubic",
            "trilinear",
            "area",
            "nearest-exact",
          ],
          { default: "nearest" },
        ],
      },
      optional: { mask: ["MASK"] },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "Image Resize Factor (mtb)",
    display_name: "Image Resize Factor (mtb)",
    description: "",
    category: "mtb/image",
    output_node: false,
  },
  "Save Image Grid (mtb)": {
    input: {
      required: {
        images: ["IMAGE"],
        filename_prefix: ["STRING", { default: "ComfyUI" }],
        save_intermediate: ["BOOLEAN", { default: false }],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Save Image Grid (mtb)",
    display_name: "Save Image Grid (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: true,
  },
  "Load Image From Url (mtb)": {
    input: {
      required: {
        url: [
          "STRING",
          {
            default:
              "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg",
          },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Load Image From Url (mtb)",
    display_name: "Load Image From Url (mtb)",
    description: "",
    category: "mtb/IO",
    output_node: false,
  },
  "Sharpen (mtb)": {
    input: {
      required: {
        image: ["IMAGE"],
        sharpen_radius: ["INT", { default: 1, min: 1, max: 31, step: 1 }],
        sigma_x: ["FLOAT", { default: 1.0, min: 0.1, max: 10.0, step: 0.1 }],
        sigma_y: ["FLOAT", { default: 1.0, min: 0.1, max: 10.0, step: 0.1 }],
        alpha: ["FLOAT", { default: 1.0, min: 0.0, max: 5.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "Sharpen (mtb)",
    display_name: "Sharpen (mtb)",
    description: "",
    category: "mtb/image processing",
    output_node: false,
  },
  "SAMModelLoader (segment anything)": {
    input: {
      required: {
        model_name: [
          [
            "sam_vit_h (2.56GB)",
            "sam_vit_l (1.25GB)",
            "sam_vit_b (375MB)",
            "sam_hq_vit_h (2.57GB)",
            "sam_hq_vit_l (1.25GB)",
            "sam_hq_vit_b (379MB)",
            "mobile_sam(39MB)",
          ],
        ],
      },
    },
    output: ["SAM_MODEL"],
    output_is_list: [false],
    output_name: ["SAM_MODEL"],
    name: "SAMModelLoader (segment anything)",
    display_name: "SAMModelLoader (segment anything)",
    description: "",
    category: "segment_anything",
    output_node: false,
  },
  "GroundingDinoModelLoader (segment anything)": {
    input: {
      required: {
        model_name: [
          ["GroundingDINO_SwinT_OGC (694MB)", "GroundingDINO_SwinB (938MB)"],
        ],
      },
    },
    output: ["GROUNDING_DINO_MODEL"],
    output_is_list: [false],
    output_name: ["GROUNDING_DINO_MODEL"],
    name: "GroundingDinoModelLoader (segment anything)",
    display_name: "GroundingDinoModelLoader (segment anything)",
    description: "",
    category: "segment_anything",
    output_node: false,
  },
  "GroundingDinoSAMSegment (segment anything)": {
    input: {
      required: {
        sam_model: ["SAM_MODEL", {}],
        grounding_dino_model: ["GROUNDING_DINO_MODEL", {}],
        image: ["IMAGE", {}],
        prompt: ["STRING", {}],
        threshold: ["FLOAT", { default: 0.3, min: 0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "GroundingDinoSAMSegment (segment anything)",
    display_name: "GroundingDinoSAMSegment (segment anything)",
    description: "",
    category: "segment_anything",
    output_node: false,
  },
  "InvertMask (segment anything)": {
    input: { required: { mask: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "InvertMask (segment anything)",
    display_name: "InvertMask (segment anything)",
    description: "",
    category: "segment_anything",
    output_node: false,
  },
  IsMaskEmpty: {
    input: { required: { mask: ["MASK"] } },
    output: ["NUMBER"],
    output_is_list: [false],
    output_name: ["boolean_number"],
    name: "IsMaskEmpty",
    display_name: "IsMaskEmpty",
    description: "",
    category: "segment_anything",
    output_node: false,
  },
  FaceRestoreCFWithModel: {
    input: {
      required: {
        facerestore_model: ["FACERESTORE_MODEL"],
        image: ["IMAGE"],
        facedetection: [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n",
          ],
        ],
        codeformer_fidelity: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1, step: 0.05 },
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "FaceRestoreCFWithModel",
    display_name: "FaceRestoreCFWithModel",
    description: "",
    category: "facerestore_cf",
    output_node: false,
  },
  CropFace: {
    input: {
      required: {
        image: ["IMAGE"],
        facedetection: [
          [
            "retinaface_resnet50",
            "retinaface_mobile0.25",
            "YOLOv5l",
            "YOLOv5n",
          ],
        ],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "CropFace",
    display_name: "CropFace",
    description: "",
    category: "facerestore_cf",
    output_node: false,
  },
  FaceRestoreModelLoader: {
    input: { required: { model_name: [["__models__"]] } },
    output: ["FACERESTORE_MODEL"],
    output_is_list: [false],
    output_name: ["FACERESTORE_MODEL"],
    name: "FaceRestoreModelLoader",
    display_name: "FaceRestoreModelLoader",
    description: "",
    category: "facerestore_cf",
    output_node: false,
  },
  "ttN pipeLoader": {
    input: {
      required: {
        ckpt_name: [["__models__"]],
        config_name: [["Default", "__models__"], { default: "Default" }],
        vae_name: [["Baked VAE", "__models__"]],
        clip_skip: ["INT", { default: -1, min: -24, max: 0, step: 1 }],
        lora1_name: [["None", "__models__"]],
        lora1_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora1_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora2_name: [["None", "__models__"]],
        lora2_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora2_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora3_name: [["None", "__models__"]],
        lora3_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora3_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        positive: ["STRING", { default: "Positive", multiline: true }],
        positive_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        positive_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        negative: ["STRING", { default: "Negative", multiline: true }],
        negative_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        negative_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        empty_latent_width: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 8 },
        ],
        empty_latent_height: [
          "INT",
          { default: 512, min: 64, max: 8192, step: 8 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      optional: {
        model_override: ["MODEL"],
        clip_override: ["CLIP"],
        optional_lora_stack: ["LORA_STACK"],
      },
      hidden: { prompt: "PROMPT", ttNnodeVersion: "1.1.2" },
      my_unique_id: "UNIQUE_ID",
    },
    output: [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "INT",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "seed",
    ],
    name: "ttN pipeLoader",
    display_name: "pipeLoader",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipeKSampler": {
    input: {
      required: {
        pipe: ["PIPE_LINE"],
        lora_name: [["None", "__models__"]],
        lora_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        upscale_method: [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp",
          ],
        ],
        factor: ["FLOAT", { default: 2, min: 0.0, max: 10.0, step: 0.25 }],
        crop: [["disabled", "center"]],
        sampler_state: [["Sample", "Hold"]],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        denoise: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.01 }],
        image_output: [["Hide", "Preview", "Save", "Hide/Save"]],
        save_prefix: ["STRING", { default: "ComfyUI" }],
      },
      optional: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        optional_model: ["MODEL"],
        optional_positive: ["CONDITIONING"],
        optional_negative: ["CONDITIONING"],
        optional_latent: ["LATENT"],
        optional_vae: ["VAE"],
        optional_clip: ["CLIP"],
        xyPlot: ["XYPLOT"],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        embeddingsList: [["__embeds__"]],
        ttNnodeVersion: "1.0.5",
      },
    },
    output: [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "image",
      "seed",
    ],
    name: "ttN pipeKSampler",
    display_name: "pipeKSampler",
    description: "",
    category: "ttN/pipe",
    output_node: true,
  },
  "ttN pipeKSamplerAdvanced": {
    input: {
      required: {
        pipe: ["PIPE_LINE"],
        lora_name: [["None", "__models__"]],
        lora_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        upscale_method: [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp",
          ],
        ],
        factor: ["FLOAT", { default: 2, min: 0.0, max: 10.0, step: 0.25 }],
        crop: [["disabled", "center"]],
        sampler_state: [["Sample", "Hold"]],
        add_noise: [["enable", "disable"]],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        start_at_step: ["INT", { default: 0, min: 0, max: 10000 }],
        end_at_step: ["INT", { default: 10000, min: 0, max: 10000 }],
        return_with_leftover_noise: [["disable", "enable"]],
        image_output: [["Hide", "Preview", "Save", "Hide/Save"]],
        save_prefix: ["STRING", { default: "ComfyUI" }],
      },
      optional: {
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        optional_model: ["MODEL"],
        optional_positive: ["CONDITIONING"],
        optional_negative: ["CONDITIONING"],
        optional_latent: ["LATENT"],
        optional_vae: ["VAE"],
        optional_clip: ["CLIP"],
        xyPlot: ["XYPLOT"],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        embeddingsList: [["__embeds__"]],
        ttNnodeVersion: "1.0.5",
      },
    },
    output: [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "pipe",
      "model",
      "positive",
      "negative",
      "latent",
      "vae",
      "clip",
      "image",
      "seed",
    ],
    name: "ttN pipeKSamplerAdvanced",
    display_name: "pipeKSamplerAdvanced",
    description: "",
    category: "ttN/pipe",
    output_node: true,
  },
  "ttN pipeLoaderSDXL": {
    input: {
      required: {
        ckpt_name: [["__models__"]],
        vae_name: [["Baked VAE", "__models__"]],
        lora1_name: [["None", "__models__"]],
        lora1_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora1_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora2_name: [["None", "__models__"]],
        lora2_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora2_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        refiner_ckpt_name: [["None", "__models__"]],
        refiner_vae_name: [["Baked VAE", "__models__"]],
        refiner_lora1_name: [["None", "__models__"]],
        refiner_lora1_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        refiner_lora1_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        refiner_lora2_name: [["None", "__models__"]],
        refiner_lora2_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        refiner_lora2_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        clip_skip: ["INT", { default: -2, min: -24, max: 0, step: 1 }],
        positive: ["STRING", { default: "Positive", multiline: true }],
        positive_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        positive_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        negative: ["STRING", { default: "Negative", multiline: true }],
        negative_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        negative_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        empty_latent_width: [
          "INT",
          { default: 1024, min: 64, max: 8192, step: 8 },
        ],
        empty_latent_height: [
          "INT",
          { default: 1024, min: 64, max: 8192, step: 8 },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 64 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { prompt: "PROMPT", ttNnodeVersion: "1.1.2" },
      my_unique_id: "UNIQUE_ID",
    },
    output: [
      "PIPE_LINE_SDXL",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "CLIP",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "CLIP",
      "LATENT",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "sdxl_pipe",
      "model",
      "positive",
      "negative",
      "vae",
      "clip",
      "refiner_model",
      "refiner_positive",
      "refiner_negative",
      "refiner_vae",
      "refiner_clip",
      "latent",
      "seed",
    ],
    name: "ttN pipeLoaderSDXL",
    display_name: "pipeLoaderSDXL",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipeKSamplerSDXL": {
    input: {
      required: {
        sdxl_pipe: ["PIPE_LINE_SDXL"],
        upscale_method: [
          [
            "None",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp",
          ],
        ],
        factor: ["FLOAT", { default: 2, min: 0.0, max: 10.0, step: 0.25 }],
        crop: [["disabled", "center"]],
        sampler_state: [["Sample", "Hold"]],
        base_steps: ["INT", { default: 20, min: 1, max: 10000 }],
        refiner_steps: ["INT", { default: 20, min: 0, max: 10000 }],
        cfg: ["FLOAT", { default: 8.0, min: 0.0, max: 100.0 }],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        image_output: [["Hide", "Preview", "Save", "Hide/Save"]],
        save_prefix: ["STRING", { default: "ComfyUI" }],
      },
      optional: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        optional_model: ["MODEL"],
        optional_positive: ["CONDITIONING"],
        optional_negative: ["CONDITIONING"],
        optional_vae: ["VAE"],
        optional_refiner_model: ["MODEL"],
        optional_refiner_positive: ["CONDITIONING"],
        optional_refiner_negative: ["CONDITIONING"],
        optional_refiner_vae: ["VAE"],
        optional_latent: ["LATENT"],
        optional_clip: ["CLIP"],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        embeddingsList: [["__embeds__"]],
        ttNnodeVersion: "1.0.2",
      },
    },
    output: [
      "PIPE_LINE_SDXL",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "VAE",
      "LATENT",
      "CLIP",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "sdxl_pipe",
      "model",
      "positive",
      "negative",
      "vae",
      "refiner_model",
      "refiner_positive",
      "refiner_negative",
      "refiner_vae",
      "latent",
      "clip",
      "image",
      "seed",
    ],
    name: "ttN pipeKSamplerSDXL",
    display_name: "pipeKSamplerSDXL",
    description: "",
    category: "ttN/pipe",
    output_node: true,
  },
  "ttN xyPlot": {
    input: {
      required: {
        grid_spacing: ["INT", { min: 0, max: 500, step: 5, default: 0 }],
        latent_id: ["INT", { min: 0, max: 100, step: 1, default: 0 }],
        output_individuals: [["False", "True"], { default: "False" }],
        flip_xy: [["False", "True"], { default: "False" }],
        x_axis: [
          [
            "None",
            "---------------------",
            "sampler: lora_name",
            "sampler: lora_model_strength",
            "sampler: lora_clip_strength",
            "sampler: lora_model&clip_strength",
            "sampler: steps",
            "sampler: cfg",
            "sampler: sampler_name",
            "sampler: scheduler",
            "sampler: denoise",
            "sampler: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora1_name",
            "loader: lora1_model_strength",
            "loader: lora1_clip_strength",
            "loader: lora1_model&clip_strength",
            "loader: lora2_name",
            "loader: lora2_model_strength",
            "loader: lora2_clip_strength",
            "loader: lora2_model&clip_strength",
            "loader: lora3_name",
            "loader: lora3_model_strength",
            "loader: lora3_clip_strength",
            "loader: lora3_model&clip_strength",
            "loader: positive",
            "loader: positive_token_normalization",
            "loader: positive_weight_interpretation",
            "loader: negative",
            "loader: negative_token_normalization",
            "loader: negative_weight_interpretation",
          ],
          { default: "None" },
        ],
        x_values: [
          "STRING",
          {
            default: "",
            multiline: true,
            placeholder: 'insert values seperated by "; "',
          },
        ],
        y_axis: [
          [
            "None",
            "---------------------",
            "sampler: lora_name",
            "sampler: lora_model_strength",
            "sampler: lora_clip_strength",
            "sampler: lora_model&clip_strength",
            "sampler: steps",
            "sampler: cfg",
            "sampler: sampler_name",
            "sampler: scheduler",
            "sampler: denoise",
            "sampler: seed",
            "---------------------",
            "loader: ckpt_name",
            "loader: vae_name",
            "loader: clip_skip",
            "loader: lora1_name",
            "loader: lora1_model_strength",
            "loader: lora1_clip_strength",
            "loader: lora1_model&clip_strength",
            "loader: lora2_name",
            "loader: lora2_model_strength",
            "loader: lora2_clip_strength",
            "loader: lora2_model&clip_strength",
            "loader: lora3_name",
            "loader: lora3_model_strength",
            "loader: lora3_clip_strength",
            "loader: lora3_model&clip_strength",
            "loader: positive",
            "loader: positive_token_normalization",
            "loader: positive_weight_interpretation",
            "loader: negative",
            "loader: negative_token_normalization",
            "loader: negative_weight_interpretation",
          ],
          { default: "None" },
        ],
        y_values: [
          "STRING",
          {
            default: "",
            multiline: true,
            placeholder: 'insert values seperated by "; "',
          },
        ],
      },
      hidden: {
        plot_dict: [
          {
            lora_name: ["None", "__models__"],
            lora_model_strength: { min: -4.0, max: 4.0, step: 0.01 },
            lora_clip_strength: { min: -4.0, max: 4.0, step: 0.01 },
            "lora_model&clip_strength": { min: -4.0, max: 4.0, step: 0.01 },
            steps: { min: 1, max: 100, step: 1 },
            cfg: { min: 0.0, max: 100.0, step: 1.0 },
            sampler_name: [
              "euler",
              "euler_ancestral",
              "heun",
              "heunpp2",
              "dpm_2",
              "dpm_2_ancestral",
              "lms",
              "dpm_fast",
              "dpm_adaptive",
              "dpmpp_2s_ancestral",
              "dpmpp_sde",
              "dpmpp_sde_gpu",
              "dpmpp_2m",
              "dpmpp_2m_sde",
              "dpmpp_2m_sde_gpu",
              "dpmpp_3m_sde",
              "dpmpp_3m_sde_gpu",
              "ddpm",
              "lcm",
              "ddim",
              "uni_pc",
              "uni_pc_bh2",
            ],
            scheduler: [
              "normal",
              "karras",
              "exponential",
              "sgm_uniform",
              "simple",
              "ddim_uniform",
            ],
            denoise: { min: 0.0, max: 1.0, step: 0.01 },
            seed: ["increment", "decrement", "randomize"],
            ckpt_name: ["__models__"],
            vae_name: ["Baked-VAE", "__models__"],
            clip_skip: { min: -24, max: -1, step: 1 },
            lora1_name: ["None", "__models__"],
            lora1_model_strength: { min: -4.0, max: 4.0, step: 0.01 },
            lora1_clip_strength: { min: -4.0, max: 4.0, step: 0.01 },
            "lora1_model&clip_strength": { min: -4.0, max: 4.0, step: 0.01 },
            lora2_name: ["None", "__models__"],
            lora2_model_strength: { min: -4.0, max: 4.0, step: 0.01 },
            lora2_clip_strength: { min: -4.0, max: 4.0, step: 0.01 },
            "lora2_model&clip_strength": { min: -4.0, max: 4.0, step: 0.01 },
            lora3_name: ["None", "__models__"],
            lora3_model_strength: { min: -4.0, max: 4.0, step: 0.01 },
            lora3_clip_strength: { min: -4.0, max: 4.0, step: 0.01 },
            "lora3_model&clip_strength": { min: -4.0, max: 4.0, step: 0.01 },
            positive: [],
            positive_token_normalization: [
              "none",
              "mean",
              "length",
              "length+mean",
            ],
            positive_weight_interpretation: [
              "comfy",
              "A1111",
              "compel",
              "comfy++",
            ],
            negative: [],
            negative_token_normalization: [
              "none",
              "mean",
              "length",
              "length+mean",
            ],
            negative_weight_interpretation: [
              "comfy",
              "A1111",
              "compel",
              "comfy++",
            ],
          },
        ],
        ttNnodeVersion: "1.2.0",
      },
    },
    output: ["XYPLOT"],
    output_is_list: [false],
    output_name: ["xyPlot"],
    name: "ttN xyPlot",
    display_name: "xyPlot",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipeIN": {
    input: {
      required: {
        model: ["MODEL"],
        pos: ["CONDITIONING"],
        neg: ["CONDITIONING"],
        latent: ["LATENT"],
        vae: ["VAE"],
        clip: ["CLIP"],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      optional: { image: ["IMAGE"] },
      hidden: { ttNnodeVersion: "1.1.0" },
    },
    output: ["PIPE_LINE"],
    output_is_list: [false],
    output_name: ["pipe"],
    name: "ttN pipeIN",
    display_name: "pipeIN (Legacy)",
    description: "",
    category: "ttN/legacy",
    output_node: false,
  },
  "ttN pipeOUT": {
    input: {
      required: { pipe: ["PIPE_LINE"] },
      hidden: { ttNnodeVersion: "1.1.0" },
    },
    output: [
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT",
      "PIPE_LINE",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image",
      "seed",
      "pipe",
    ],
    name: "ttN pipeOUT",
    display_name: "pipeOUT (Legacy)",
    description: "",
    category: "ttN/legacy",
    output_node: false,
  },
  "ttN pipeEDIT": {
    input: {
      required: {},
      optional: {
        pipe: ["PIPE_LINE"],
        model: ["MODEL"],
        pos: ["CONDITIONING"],
        neg: ["CONDITIONING"],
        latent: ["LATENT"],
        vae: ["VAE"],
        clip: ["CLIP"],
        image: ["IMAGE"],
        seed: [
          "INT",
          { default: 0, min: 0, max: 18446744073709551615, forceInput: true },
        ],
      },
      hidden: { ttNnodeVersion: "1.1.1", my_unique_id: "UNIQUE_ID" },
    },
    output: [
      "PIPE_LINE",
      "MODEL",
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "VAE",
      "CLIP",
      "IMAGE",
      "INT",
    ],
    output_is_list: [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    output_name: [
      "pipe",
      "model",
      "pos",
      "neg",
      "latent",
      "vae",
      "clip",
      "image",
      "seed",
    ],
    name: "ttN pipeEDIT",
    display_name: "pipeEDIT",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipe2BASIC": {
    input: {
      required: { pipe: ["PIPE_LINE"] },
      hidden: { ttNnodeVersion: "1.1.0" },
    },
    output: ["BASIC_PIPE", "PIPE_LINE"],
    output_is_list: [false, false],
    output_name: ["basic_pipe", "pipe"],
    name: "ttN pipe2BASIC",
    display_name: "pipe > basic_pipe",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipe2DETAILER": {
    input: {
      required: {
        pipe: ["PIPE_LINE"],
        bbox_detector: ["BBOX_DETECTOR"],
        wildcard: [
          "STRING",
          {
            multiline: true,
            placeholder:
              "wildcard spec: if kept empty, this option will be ignored",
          },
        ],
      },
      optional: {
        sam_model_opt: ["SAM_MODEL"],
        segm_detector_opt: ["SEGM_DETECTOR"],
        detailer_hook: ["DETAILER_HOOK"],
      },
      hidden: { ttNnodeVersion: "1.2.0" },
    },
    output: ["DETAILER_PIPE", "PIPE_LINE"],
    output_is_list: [false, false],
    output_name: ["detailer_pipe", "pipe"],
    name: "ttN pipe2DETAILER",
    display_name: "pipe > detailer_pipe",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN pipeEncodeConcat": {
    input: {
      required: { pipe: ["PIPE_LINE"], toggle: [[true, false]] },
      optional: {
        positive: ["STRING", { default: "Positive", multiline: true }],
        positive_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        positive_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        negative: ["STRING", { default: "Negative", multiline: true }],
        negative_token_normalization: [
          ["none", "mean", "length", "length+mean"],
        ],
        negative_weight_interpretation: [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
        ],
        optional_positive_from: ["CONDITIONING"],
        optional_negative_from: ["CONDITIONING"],
        optional_clip: ["CLIP"],
      },
      hidden: { ttNnodeVersion: "1.0.2", my_unique_id: "UNIQUE_ID" },
    },
    output: ["PIPE_LINE", "CONDITIONING", "CONDITIONING", "CLIP"],
    output_is_list: [false, false, false, false],
    output_name: ["pipe", "positive", "negative", "clip"],
    name: "ttN pipeEncodeConcat",
    display_name: "pipeEncodeConcat",
    description: "",
    category: "ttN/pipe",
    output_node: true,
  },
  "ttN pipeLoraStack": {
    input: {
      required: {
        toggle: [[true, false]],
        mode: [["simple", "advanced"]],
        num_loras: ["INT", { default: 1, min: 0, max: 20 }],
      },
      optional: {
        optional_pipe: ["PIPE_LINE", { default: null }],
        model_override: ["MODEL"],
        clip_override: ["CLIP"],
        optional_lora_stack: ["LORA_STACK"],
        lora_1_name: [["None", "__models__"], { default: "None" }],
        lora_1_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_1_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_1_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_2_name: [["None", "__models__"], { default: "None" }],
        lora_2_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_2_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_2_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_3_name: [["None", "__models__"], { default: "None" }],
        lora_3_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_3_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_3_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_4_name: [["None", "__models__"], { default: "None" }],
        lora_4_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_4_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_4_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_5_name: [["None", "__models__"], { default: "None" }],
        lora_5_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_5_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_5_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_6_name: [["None", "__models__"], { default: "None" }],
        lora_6_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_6_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_6_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_7_name: [["None", "__models__"], { default: "None" }],
        lora_7_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_7_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_7_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_8_name: [["None", "__models__"], { default: "None" }],
        lora_8_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_8_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_8_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_9_name: [["None", "__models__"], { default: "None" }],
        lora_9_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_9_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_9_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_10_name: [["None", "__models__"], { default: "None" }],
        lora_10_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_10_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_10_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_11_name: [["None", "__models__"], { default: "None" }],
        lora_11_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_11_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_11_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_12_name: [["None", "__models__"], { default: "None" }],
        lora_12_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_12_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_12_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_13_name: [["None", "__models__"], { default: "None" }],
        lora_13_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_13_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_13_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_14_name: [["None", "__models__"], { default: "None" }],
        lora_14_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_14_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_14_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_15_name: [["None", "__models__"], { default: "None" }],
        lora_15_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_15_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_15_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_16_name: [["None", "__models__"], { default: "None" }],
        lora_16_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_16_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_16_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_17_name: [["None", "__models__"], { default: "None" }],
        lora_17_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_17_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_17_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_18_name: [["None", "__models__"], { default: "None" }],
        lora_18_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_18_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_18_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_19_name: [["None", "__models__"], { default: "None" }],
        lora_19_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_19_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_19_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_20_name: [["None", "__models__"], { default: "None" }],
        lora_20_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_20_model_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
        lora_20_clip_strength: [
          "FLOAT",
          { default: 1.0, min: -10.0, max: 10.0, step: 0.01 },
        ],
      },
      hidden: { ttNnodeVersion: "1.1.1" },
    },
    output: ["PIPE_LINE", "LORA_STACK"],
    output_is_list: [false, false],
    output_name: ["optional_pipe", "lora_stack"],
    name: "ttN pipeLoraStack",
    display_name: "pipeLoraStack",
    description: "",
    category: "ttN/pipe",
    output_node: false,
  },
  "ttN multiModelMerge": {
    input: {
      required: {
        ckpt_A_name: [["__models__"]],
        config_A_name: [["Default", "__models__"], { default: "Default" }],
        ckpt_B_name: [["None", "__models__"]],
        config_B_name: [["Default", "__models__"], { default: "Default" }],
        ckpt_C_name: [["None", "__models__"]],
        config_C_name: [["Default", "__models__"], { default: "Default" }],
        model_interpolation: [
          [
            "Weighted sum = (  A*(1-M) + B*M  )",
            "Add difference = (  A + (B-C)*M  )",
            "A Only",
          ],
        ],
        model_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        clip_interpolation: [
          [
            "Follow model interp",
            "Weighted sum = (  A*(1-M) + B*M  )",
            "Add difference = (  A + (B-C)*M  )",
            "A Only",
            "B Only",
            "C Only",
          ],
        ],
        clip_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.01 },
        ],
        save_model: [["True", "False"], { default: "False" }],
        save_prefix: ["STRING", { default: "checkpoints/ComfyUI" }],
      },
      optional: {
        model_A_override: ["MODEL"],
        model_B_override: ["MODEL"],
        model_C_override: ["MODEL"],
        clip_A_override: ["CLIP"],
        clip_B_override: ["CLIP"],
        clip_C_override: ["CLIP"],
        optional_vae: ["VAE"],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        ttNnodeVersion: "1.0.1",
        my_unique_id: "UNIQUE_ID",
      },
    },
    output: ["MODEL", "CLIP", "VAE"],
    output_is_list: [false, false, false],
    output_name: ["model", "clip", "vae"],
    name: "ttN multiModelMerge",
    display_name: "multiModelMerge",
    description: "",
    category: "ttN",
    output_node: false,
  },
  "ttN text": {
    input: {
      required: { text: ["STRING", { default: "", multiline: true }] },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["text"],
    name: "ttN text",
    display_name: "text",
    description: "",
    category: "ttN/text",
    output_node: false,
  },
  "ttN textDebug": {
    input: {
      required: {
        print_to_console: [[false, true]],
        console_title: ["STRING", { default: "" }],
        execute: [["Always", "On Change"]],
        text: ["STRING", { default: "", multiline: true, forceInput: true }],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        ttNnodeVersion: "1.0.",
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["text"],
    name: "ttN textDebug",
    display_name: "textDebug",
    description: "",
    category: "ttN/text",
    output_node: true,
  },
  "ttN concat": {
    input: {
      required: {
        text1: ["STRING", { multiline: true, default: "" }],
        text2: ["STRING", { multiline: true, default: "" }],
        text3: ["STRING", { multiline: true, default: "" }],
        delimiter: ["STRING", { default: ",", multiline: false }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["concat"],
    name: "ttN concat",
    display_name: "textConcat",
    description: "",
    category: "ttN/text",
    output_node: false,
  },
  "ttN text3BOX_3WAYconcat": {
    input: {
      required: {
        text1: ["STRING", { multiline: true, default: "" }],
        text2: ["STRING", { multiline: true, default: "" }],
        text3: ["STRING", { multiline: true, default: "" }],
        delimiter: ["STRING", { default: ",", multiline: false }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
    ],
    output_is_list: [false, false, false, false, false, false, false],
    output_name: [
      "text1",
      "text2",
      "text3",
      "1 & 2",
      "1 & 3",
      "2 & 3",
      "concat",
    ],
    name: "ttN text3BOX_3WAYconcat",
    display_name: "3x TXT Loader MultiConcat",
    description: "",
    category: "ttN/text",
    output_node: false,
  },
  "ttN text7BOX_concat": {
    input: {
      required: {
        text1: ["STRING", { multiline: true, default: "" }],
        text2: ["STRING", { multiline: true, default: "" }],
        text3: ["STRING", { multiline: true, default: "" }],
        text4: ["STRING", { multiline: true, default: "" }],
        text5: ["STRING", { multiline: true, default: "" }],
        text6: ["STRING", { multiline: true, default: "" }],
        text7: ["STRING", { multiline: true, default: "" }],
        delimiter: ["STRING", { default: ",", multiline: false }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: [
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
      "STRING",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "text1",
      "text2",
      "text3",
      "text4",
      "text5",
      "text6",
      "text7",
      "concat",
    ],
    name: "ttN text7BOX_concat",
    display_name: "7x TXT Loader Concat",
    description: "",
    category: "ttN/text",
    output_node: false,
  },
  "ttN imageOutput": {
    input: {
      required: {
        image: ["IMAGE"],
        image_output: [
          ["Hide", "Preview", "Save", "Hide/Save"],
          { default: "Preview" },
        ],
        output_path: [
          "STRING",
          {
            default:
              "/Users/nc/Desktop/flowt-workbench/flowt-execution-pipeline-v2/temp/output",
            multiline: false,
          },
        ],
        save_prefix: ["STRING", { default: "ComfyUI" }],
        number_padding: [["None", 2, 3, 4, 5, 6, 7, 8, 9], { default: 5 }],
        file_type: [
          ["PNG", "JPG", "JPEG", "BMP", "TIFF", "TIF"],
          { default: "PNG" },
        ],
        overwrite_existing: [["True", "False"], { default: "False" }],
        embed_workflow: [["True", "False"]],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        ttNnodeVersion: "1.1.0",
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "ttN imageOutput",
    display_name: "imageOutput",
    description: "",
    category: "ttN/image",
    output_node: true,
  },
  "ttN imageREMBG": {
    input: {
      required: {
        image: ["IMAGE"],
        image_output: [
          ["Hide", "Preview", "Save", "Hide/Save"],
          { default: "Preview" },
        ],
        save_prefix: ["STRING", { default: "ComfyUI" }],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        ttNnodeVersion: "1.0.0",
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["image", "mask"],
    name: "ttN imageREMBG",
    display_name: "imageRemBG",
    description: "",
    category: "ttN/image",
    output_node: true,
  },
  "ttN hiresfixScale": {
    input: {
      required: {
        model_name: [["__models__"]],
        image: ["IMAGE"],
        rescale_after_model: [[false, true], { default: true }],
        rescale_method: [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos",
            "bislerp",
          ],
        ],
        rescale: [
          [
            "by percentage",
            "to Width/Height",
            "to longer side - maintain aspect",
          ],
        ],
        percent: ["INT", { default: 50, min: 0, max: 1000, step: 1 }],
        width: ["INT", { default: 1024, min: 64, max: 8192, step: 8 }],
        height: ["INT", { default: 1024, min: 64, max: 8192, step: 8 }],
        longer_side: ["INT", { default: 1024, min: 64, max: 8192, step: 8 }],
        crop: [["disabled", "center"]],
        image_output: [["Hide", "Preview", "Save", "Hide/Save"]],
        save_prefix: ["STRING", { default: "ComfyUI" }],
        output_latent: [[false, true], { default: true }],
        vae: ["VAE"],
      },
      hidden: {
        prompt: "PROMPT",
        extra_pnginfo: "EXTRA_PNGINFO",
        my_unique_id: "UNIQUE_ID",
        ttNnodeVersion: "1.0.3",
      },
    },
    output: ["LATENT", "IMAGE"],
    output_is_list: [false, false],
    output_name: ["latent", "image"],
    name: "ttN hiresfixScale",
    display_name: "hiresfixScale",
    description: "",
    category: "ttN/image",
    output_node: true,
  },
  "ttN int": {
    input: {
      required: {
        int: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: ["INT", "FLOAT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["int", "float", "text"],
    name: "ttN int",
    display_name: "int",
    description: "",
    category: "ttN/util",
    output_node: false,
  },
  "ttN float": {
    input: {
      required: {
        float: ["FLOAT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: ["FLOAT", "INT", "STRING"],
    output_is_list: [false, false, false],
    output_name: ["float", "int", "text"],
    name: "ttN float",
    display_name: "float",
    description: "",
    category: "ttN/util",
    output_node: false,
  },
  "ttN seed": {
    input: {
      required: {
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
      hidden: { ttNnodeVersion: "1.0.0" },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["seed"],
    name: "ttN seed",
    display_name: "seed",
    description: "",
    category: "ttN/util",
    output_node: true,
  },
  "GetImageSize+": {
    input: { required: { image: ["IMAGE"] } },
    output: ["INT", "INT"],
    output_is_list: [false, false],
    output_name: ["width", "height"],
    name: "GetImageSize+",
    display_name: "\ud83d\udd27 Get Image Size",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageResize+": {
    input: {
      required: {
        image: ["IMAGE"],
        width: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        height: ["INT", { default: 512, min: 0, max: 8192, step: 8 }],
        interpolation: [
          [
            "nearest",
            "bilinear",
            "bicubic",
            "area",
            "nearest-exact",
            "lanczos",
          ],
        ],
        keep_proportion: ["BOOLEAN", { default: false }],
        condition: [["always", "only if bigger", "only if smaller"]],
      },
    },
    output: ["IMAGE", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "width", "height"],
    name: "ImageResize+",
    display_name: "\ud83d\udd27 Image Resize",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageCrop+": {
    input: {
      required: {
        image: ["IMAGE"],
        width: ["INT", { default: 256, min: 0, max: 8192, step: 8 }],
        height: ["INT", { default: 256, min: 0, max: 8192, step: 8 }],
        position: [
          [
            "top-left",
            "top-center",
            "top-right",
            "right-center",
            "bottom-right",
            "bottom-center",
            "bottom-left",
            "left-center",
            "center",
          ],
        ],
        x_offset: ["INT", { default: 0, min: -99999, step: 1 }],
        y_offset: ["INT", { default: 0, min: -99999, step: 1 }],
      },
    },
    output: ["IMAGE", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["IMAGE", "x", "y"],
    name: "ImageCrop+",
    display_name: "\ud83d\udd27 Image Crop",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageFlip+": {
    input: { required: { image: ["IMAGE"], axis: [["x", "y", "xy"]] } },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageFlip+",
    display_name: "\ud83d\udd27 Image Flip",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageDesaturate+": {
    input: {
      required: {
        image: ["IMAGE"],
        factor: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageDesaturate+",
    display_name: "\ud83d\udd27 Image Desaturate",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImagePosterize+": {
    input: {
      required: {
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.5, min: 0.0, max: 1.0, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImagePosterize+",
    display_name: "\ud83d\udd27 Image Posterize",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageCASharpening+": {
    input: {
      required: {
        image: ["IMAGE"],
        amount: ["FLOAT", { default: 0.8, min: 0, max: 1, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageCASharpening+",
    display_name: "\ud83d\udd27 Image Contrast Adaptive Sharpening",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageSeamCarving+": {
    input: {
      required: {
        image: ["IMAGE"],
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        energy: [["backward", "forward"]],
        order: [["width-first", "height-first"]],
      },
      optional: { keep_mask: ["MASK"], drop_mask: ["MASK"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageSeamCarving+",
    display_name: "\ud83d\udd27 Image Seam Carving",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageEnhanceDifference+": {
    input: {
      required: {
        image1: ["IMAGE"],
        image2: ["IMAGE"],
        exponent: ["FLOAT", { default: 0.75, min: 0.0, max: 1.0, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageEnhanceDifference+",
    display_name: "\ud83d\udd27 Image Enhance Difference",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageExpandBatch+": {
    input: {
      required: {
        image: ["IMAGE"],
        size: ["INT", { default: 16, min: 1, step: 1 }],
        method: [["expand", "repeat all", "repeat first", "repeat last"]],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageExpandBatch+",
    display_name: "\ud83d\udd27 Image Expand Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageFromBatch+": {
    input: {
      required: {
        image: ["IMAGE"],
        start: ["INT", { default: 0, min: 0, step: 1 }],
        length: ["INT", { default: -1, min: -1, step: 1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageFromBatch+",
    display_name: "\ud83d\udd27 Image From Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageCompositeFromMaskBatch+": {
    input: {
      required: { image_from: ["IMAGE"], image_to: ["IMAGE"], mask: ["MASK"] },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageCompositeFromMaskBatch+",
    display_name: "\ud83d\udd27 Image Composite From Mask Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ExtractKeyframes+": {
    input: {
      required: {
        image: ["IMAGE"],
        threshold: ["FLOAT", { default: 0.85, min: 0.0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["KEYFRAMES", "indexes"],
    name: "ExtractKeyframes+",
    display_name: "\ud83d\udd27 Extract Keyframes (experimental)",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageApplyLUT+": {
    input: {
      required: {
        image: ["IMAGE"],
        lut_file: [[]],
        log_colorspace: ["BOOLEAN", { default: false }],
        clip_values: ["BOOLEAN", { default: false }],
        strength: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.1 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "ImageApplyLUT+",
    display_name: "\ud83d\udd27 Image Apply LUT",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskBlur+": {
    input: {
      required: {
        mask: ["MASK"],
        amount: ["FLOAT", { default: 6.0, min: 0, step: 0.5 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskBlur+",
    display_name: "\ud83d\udd27 Mask Blur",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskFlip+": {
    input: { required: { mask: ["MASK"], axis: [["x", "y", "xy"]] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskFlip+",
    display_name: "\ud83d\udd27 Mask Flip",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskPreview+": {
    input: {
      required: { mask: ["MASK"] },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "MaskPreview+",
    display_name: "\ud83d\udd27 Mask Preview",
    description: "",
    category: "essentials",
    output_node: true,
  },
  "MaskBatch+": {
    input: { required: { mask1: ["MASK"], mask2: ["MASK"] } },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskBatch+",
    display_name: "\ud83d\udd27 Mask Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskExpandBatch+": {
    input: {
      required: {
        mask: ["MASK"],
        size: ["INT", { default: 16, min: 1, step: 1 }],
        method: [["expand", "repeat all", "repeat first", "repeat last"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskExpandBatch+",
    display_name: "\ud83d\udd27 Mask Expand Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "TransitionMask+": {
    input: {
      required: {
        width: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        height: ["INT", { default: 512, min: 1, max: 8192, step: 1 }],
        frames: ["INT", { default: 16, min: 1, max: 9999, step: 1 }],
        start_frame: ["INT", { default: 0, min: 0, step: 1 }],
        end_frame: ["INT", { default: 9999, min: 0, step: 1 }],
        transition_type: [
          [
            "horizontal slide",
            "vertical slide",
            "horizontal bar",
            "vertical bar",
            "center box",
            "horizontal door",
            "vertical door",
            "circle",
            "fade",
          ],
        ],
        timing_function: [["linear", "in", "out", "in-out"]],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "TransitionMask+",
    display_name: "\ud83d\udd27 Transition Mask",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskFromColor+": {
    input: {
      required: {
        image: ["IMAGE"],
        red: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        green: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        blue: ["INT", { default: 255, min: 0, max: 255, step: 1 }],
        threshold: ["INT", { default: 0, min: 0, max: 127, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskFromColor+",
    display_name: "\ud83d\udd27 Mask From Color",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "MaskFromBatch+": {
    input: {
      required: {
        mask: ["MASK"],
        start: ["INT", { default: 0, min: 0, step: 1 }],
        length: ["INT", { default: -1, min: -1, step: 1 }],
      },
    },
    output: ["MASK"],
    output_is_list: [false],
    output_name: ["MASK"],
    name: "MaskFromBatch+",
    display_name: "\ud83d\udd27 Mask From Batch",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "SimpleMath+": {
    input: {
      optional: {
        a: ["INT,FLOAT", { default: 0.0, step: 0.1 }],
        b: ["INT,FLOAT", { default: 0.0, step: 0.1 }],
      },
      required: { value: ["STRING", { multiline: false, default: "" }] },
    },
    output: ["INT", "FLOAT"],
    output_is_list: [false, false],
    output_name: ["INT", "FLOAT"],
    name: "SimpleMath+",
    display_name: "\ud83d\udd27 Simple Math",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ConsoleDebug+": {
    input: {
      required: { value: ["*", {}] },
      optional: { prefix: ["STRING", { multiline: false, default: "Value:" }] },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "ConsoleDebug+",
    display_name: "\ud83d\udd27 Console Debug",
    description: "",
    category: "essentials",
    output_node: true,
  },
  "DebugTensorShape+": {
    input: { required: { tensor: ["*", {}] } },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "DebugTensorShape+",
    display_name: "\ud83d\udd27 Tensor Shape Debug",
    description: "",
    category: "essentials",
    output_node: true,
  },
  "ModelCompile+": {
    input: {
      required: {
        model: ["MODEL"],
        fullgraph: ["BOOLEAN", { default: false }],
        dynamic: ["BOOLEAN", { default: false }],
        mode: [
          [
            "default",
            "reduce-overhead",
            "max-autotune",
            "max-autotune-no-cudagraphs",
          ],
        ],
      },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "ModelCompile+",
    display_name: "\ud83d\udd27 Compile Model",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "BatchCount+": {
    input: { required: { batch: ["*", {}] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "BatchCount+",
    display_name: "\ud83d\udd27 Batch Count",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "KSamplerVariationsStochastic+": {
    input: {
      required: {
        model: ["MODEL"],
        latent_image: ["LATENT"],
        noise_seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        steps: ["INT", { default: 25, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 7.0, min: 0.0, max: 100.0, step: 0.1, round: 0.01 },
        ],
        sampler: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        variation_seed: [
          "INT:seed",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        variation_strength: [
          "FLOAT",
          { default: 0.2, min: 0.0, max: 1.0, step: 0.05, round: 0.01 },
        ],
        cfg_scale: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 1.0, step: 0.05, round: 0.01 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSamplerVariationsStochastic+",
    display_name: "\ud83d\udd27 KSampler Stochastic Variations",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "KSamplerVariationsWithNoise+": {
    input: {
      required: {
        model: ["MODEL"],
        latent_image: ["LATENT"],
        main_seed: [
          "INT:seed",
          { default: 0, min: 0, max: 18446744073709551615 },
        ],
        steps: ["INT", { default: 20, min: 1, max: 10000 }],
        cfg: [
          "FLOAT",
          { default: 8.0, min: 0.0, max: 100.0, step: 0.1, round: 0.01 },
        ],
        sampler_name: [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2",
          ],
        ],
        scheduler: [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
          ],
        ],
        positive: ["CONDITIONING"],
        negative: ["CONDITIONING"],
        variation_strength: [
          "FLOAT",
          { default: 0.2, min: 0.0, max: 1.0, step: 0.01, round: 0.01 },
        ],
        variation_seed: [
          "INT:seed",
          { default: 4833551825732016734, min: 0, max: 18446744073709551615 },
        ],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "KSamplerVariationsWithNoise+",
    display_name: "\ud83d\udd27 KSampler Variations with Noise Injection",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "CLIPTextEncodeSDXL+": {
    input: {
      required: {
        width: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        height: ["INT", { default: 1024.0, min: 0, max: 8192 }],
        text: ["STRING", { multiline: true, default: "" }],
        clip: ["CLIP"],
      },
    },
    output: ["CONDITIONING"],
    output_is_list: [false],
    output_name: ["CONDITIONING"],
    name: "CLIPTextEncodeSDXL+",
    display_name: "\ud83d\udd27 SDXLCLIPTextEncode",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "SDXLEmptyLatentSizePicker+": {
    input: {
      required: {
        resolution: [
          [
            "704x1408 (0.5)",
            "704x1344 (0.52)",
            "768x1344 (0.57)",
            "768x1280 (0.6)",
            "832x1216 (0.68)",
            "832x1152 (0.72)",
            "896x1152 (0.78)",
            "896x1088 (0.82)",
            "960x1088 (0.88)",
            "960x1024 (0.94)",
            "1024x1024 (1.0)",
            "1024x960 (1.07)",
            "1088x960 (1.13)",
            "1088x896 (1.21)",
            "1152x896 (1.29)",
            "1152x832 (1.38)",
            "1216x832 (1.46)",
            "1280x768 (1.67)",
            "1344x768 (1.75)",
            "1344x704 (1.91)",
            "1408x704 (2.0)",
            "1472x704 (2.09)",
            "1536x640 (2.4)",
            "1600x640 (2.5)",
            "1664x576 (2.89)",
            "1728x576 (3.0)",
          ],
          { default: "1024x1024 (1.0)" },
        ],
        batch_size: ["INT", { default: 1, min: 1, max: 4096 }],
      },
    },
    output: ["LATENT", "INT", "INT"],
    output_is_list: [false, false, false],
    output_name: ["LATENT", "width", "height"],
    name: "SDXLEmptyLatentSizePicker+",
    display_name: "\ud83d\udd27 SDXL Empty Latent Size Picker",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "DrawText+": {
    input: {
      required: {
        text: ["STRING", { multiline: true, default: "Hello, World!" }],
        font: [[]],
        size: ["INT", { default: 56, min: 1, max: 9999, step: 1 }],
        color: ["STRING", { multiline: false, default: "#FFFFFF" }],
        background_color: [
          "STRING",
          { multiline: false, default: "#00000000" },
        ],
        shadow_distance: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        shadow_blur: ["INT", { default: 0, min: 0, max: 100, step: 1 }],
        shadow_color: ["STRING", { multiline: false, default: "#000000" }],
        alignment: [["left", "center", "right"]],
        width: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
        height: ["INT", { default: 0, min: 0, max: 8192, step: 1 }],
      },
    },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "DrawText+",
    display_name: "\ud83d\udd27 Draw Text",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "RemBGSession+": {
    input: {
      required: {
        model: [
          [
            "u2net: general purpose",
            "u2netp: lightweight general purpose",
            "u2net_human_seg: human segmentation",
            "u2net_cloth_seg: cloths Parsing",
            "silueta: very small u2net",
            "isnet-general-use: general purpose",
            "isnet-anime: anime illustrations",
            "sam: general purpose",
          ],
        ],
        providers: [
          [
            "CPU",
            "CUDA",
            "ROCM",
            "DirectML",
            "OpenVINO",
            "CoreML",
            "Tensorrt",
            "Azure",
          ],
        ],
      },
    },
    output: ["REMBG_SESSION"],
    output_is_list: [false],
    output_name: ["REMBG_SESSION"],
    name: "RemBGSession+",
    display_name: "\ud83d\udd27 RemBG Session",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "ImageRemoveBackground+": {
    input: { required: { rembg_session: ["REMBG_SESSION"], image: ["IMAGE"] } },
    output: ["IMAGE", "MASK"],
    output_is_list: [false, false],
    output_name: ["IMAGE", "MASK"],
    name: "ImageRemoveBackground+",
    display_name: "\ud83d\udd27 Image Remove Background",
    description: "",
    category: "essentials",
    output_node: false,
  },
  "RemoveLatentMask+": {
    input: { required: { samples: ["LATENT"] } },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["LATENT"],
    name: "RemoveLatentMask+",
    display_name: "\ud83d\udd27 Remove Latent Mask",
    description: "",
    category: "essentials",
    output_node: false,
  },
  IPAdapterModelLoader: {
    input: { required: { ipadapter_file: [["__models__"]] } },
    output: ["IPADAPTER"],
    output_is_list: [false],
    output_name: ["IPADAPTER"],
    name: "IPAdapterModelLoader",
    display_name: "Load IPAdapter Model",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterApply: {
    input: {
      required: {
        ipadapter: ["IPADAPTER"],
        clip_vision: ["CLIP_VISION"],
        image: ["IMAGE"],
        model: ["MODEL"],
        weight: ["FLOAT", { default: 1.0, min: -1, max: 3, step: 0.05 }],
        noise: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.01 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
      optional: { attn_mask: ["MASK"] },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "IPAdapterApply",
    display_name: "Apply IPAdapter",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterApplyFaceID: {
    input: {
      required: {
        ipadapter: ["IPADAPTER"],
        clip_vision: ["CLIP_VISION"],
        insightface: ["INSIGHTFACE"],
        image: ["IMAGE"],
        model: ["MODEL"],
        weight: ["FLOAT", { default: 1.0, min: -1, max: 3, step: 0.05 }],
        noise: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.01 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        faceid_v2: ["BOOLEAN", { default: false }],
        weight_v2: ["FLOAT", { default: 1.0, min: -1, max: 3, step: 0.05 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
      optional: { attn_mask: ["MASK"] },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "IPAdapterApplyFaceID",
    display_name: "Apply IPAdapter FaceID",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterApplyEncoded: {
    input: {
      required: {
        ipadapter: ["IPADAPTER"],
        embeds: ["EMBEDS"],
        model: ["MODEL"],
        weight: ["FLOAT", { default: 1.0, min: -1, max: 3, step: 0.05 }],
        weight_type: [["original", "linear", "channel penalty"]],
        start_at: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.001 }],
        end_at: ["FLOAT", { default: 1.0, min: 0.0, max: 1.0, step: 0.001 }],
        unfold_batch: ["BOOLEAN", { default: false }],
      },
      optional: { attn_mask: ["MASK"] },
    },
    output: ["MODEL"],
    output_is_list: [false],
    output_name: ["MODEL"],
    name: "IPAdapterApplyEncoded",
    display_name: "Apply IPAdapter from Encoded",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  PrepImageForClipVision: {
    input: {
      required: {
        image: ["IMAGE"],
        interpolation: [
          ["LANCZOS", "BICUBIC", "HAMMING", "BILINEAR", "BOX", "NEAREST"],
        ],
        crop_position: [["top", "bottom", "left", "right", "center", "pad"]],
        sharpening: ["FLOAT", { default: 0.0, min: 0, max: 1, step: 0.05 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "PrepImageForClipVision",
    display_name: "Prepare Image For Clip Vision",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterEncoder: {
    input: {
      required: {
        clip_vision: ["CLIP_VISION"],
        image_1: ["IMAGE"],
        ipadapter_plus: ["BOOLEAN", { default: false }],
        noise: ["FLOAT", { default: 0.0, min: 0.0, max: 1.0, step: 0.01 }],
        weight_1: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
      },
      optional: {
        image_2: ["IMAGE"],
        image_3: ["IMAGE"],
        image_4: ["IMAGE"],
        weight_2: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
        weight_3: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
        weight_4: ["FLOAT", { default: 1.0, min: 0, max: 1.0, step: 0.01 }],
      },
    },
    output: ["EMBEDS"],
    output_is_list: [false],
    output_name: ["EMBEDS"],
    name: "IPAdapterEncoder",
    display_name: "Encode IPAdapter Image",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterSaveEmbeds: {
    input: {
      required: {
        embeds: ["EMBEDS"],
        filename_prefix: ["STRING", { default: "embeds/IPAdapter" }],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "IPAdapterSaveEmbeds",
    display_name: "Save IPAdapter Embeds",
    description: "",
    category: "ipadapter",
    output_node: true,
  },
  IPAdapterLoadEmbeds: {
    input: { required: { embeds: [["__inputs__"]] } },
    output: ["EMBEDS"],
    output_is_list: [false],
    output_name: ["EMBEDS"],
    name: "IPAdapterLoadEmbeds",
    display_name: "Load IPAdapter Embeds",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  IPAdapterBatchEmbeds: {
    input: { required: { embed1: ["EMBEDS"], embed2: ["EMBEDS"] } },
    output: ["EMBEDS"],
    output_is_list: [false],
    output_name: ["EMBEDS"],
    name: "IPAdapterBatchEmbeds",
    display_name: "IPAdapter Batch Embeds",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  InsightFaceLoader: {
    input: { required: { provider: [["CPU", "CUDA", "ROCM"]] } },
    output: ["INSIGHTFACE"],
    output_is_list: [false],
    output_name: ["INSIGHTFACE"],
    name: "InsightFaceLoader",
    display_name: "Load InsightFace",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  PrepImageForInsightFace: {
    input: {
      required: {
        image: ["IMAGE"],
        crop_position: [["center", "top", "bottom", "left", "right"]],
        sharpening: ["FLOAT", { default: 0.0, min: 0, max: 1, step: 0.05 }],
        pad_around: ["BOOLEAN", { default: true }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["IMAGE"],
    name: "PrepImageForInsightFace",
    display_name: "Prepare Image For InsightFace",
    description: "",
    category: "ipadapter",
    output_node: false,
  },
  LDSRUpscaler: {
    input: {
      required: {
        model: [["__models__"], { default: "last.ckpt" }],
        images: ["IMAGE"],
        steps: [["25", "50", "100", "250", "500", "1000"], { default: "100" }],
        pre_downscale: [["None", "1/2", "1/4"], { default: "None" }],
        post_downscale: [
          ["None", "Original Size", "1/2", "1/4"],
          { default: "None" },
        ],
        downsample_method: [["Nearest", "Lanczos"], { default: "Lanczos" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "LDSRUpscaler",
    display_name: "LDSR Upscale (all-in-one)",
    description: "",
    category: "Flowty LDSR",
    output_node: false,
  },
  LDSRModelLoader: {
    input: { required: { model: [["__models__"], { default: "last.ckpt" }] } },
    output: ["UPSCALE_MODEL"],
    output_is_list: [false],
    output_name: ["UPSCALE_MODEL"],
    name: "LDSRModelLoader",
    display_name: "Load LDSR Model",
    description: "",
    category: "Flowty LDSR",
    output_node: false,
  },
  LDSRUpscale: {
    input: {
      required: {
        upscale_model: ["UPSCALE_MODEL"],
        images: ["IMAGE"],
        steps: [["25", "50", "100", "250", "500", "1000"], { default: "100" }],
        pre_downscale: [["None", "1/2", "1/4"], { default: "None" }],
        post_downscale: [
          ["None", "Original Size", "1/2", "1/4"],
          { default: "None" },
        ],
        downsample_method: [["Nearest", "Lanczos"], { default: "Lanczos" }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["images"],
    name: "LDSRUpscale",
    display_name: "LDSR Upscale",
    description: "",
    category: "Flowty LDSR",
    output_node: false,
  },
  "Sine Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        max_value: ["FLOAT", { default: 1.0, multiline: false }],
        min_value: ["FLOAT", { default: 0.0, multiline: false }],
        periodicity_seconds: [
          "FLOAT",
          { default: 10.0, multiline: false, min: 0.01 },
        ],
        phase: ["FLOAT", { default: 0.0, multiline: false, min: -1, max: 1 }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Sine Curve [Dream]",
    display_name: "\ud83d\udcc8 Sine Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Linear Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        initial_value: ["FLOAT", { default: 0.0, multiline: false }],
        final_value: ["FLOAT", { default: 100.0, multiline: false }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Linear Curve [Dream]",
    display_name: "\ud83d\udcc8 Linear Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "CSV Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        csvfile: ["STRING", { default: "", multiline: false }],
        first_column_type: [["seconds", "frames"]],
        interpolate: [["true", "false"]],
        csv_dialect: [["excel", "excel-tab", "unix"]],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "CSV Curve [Dream]",
    display_name: "\ud83d\udcc8 CSV Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Beat Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        bpm: ["FLOAT", { default: 100.0, multiline: false }],
        time_offset: ["FLOAT", { default: 0.0, multiline: false }],
        measure_length: ["INT", { default: 4, min: 1 }],
        low_value: ["FLOAT", { default: 0.0 }],
        high_value: ["FLOAT", { default: 1.0 }],
        invert: [["no", "yes"]],
        power: ["FLOAT", { default: 2.0, min: 0.25, max: 4 }],
        accent_1: ["INT", { default: 1, min: 1, max: 24 }],
      },
      optional: {
        accent_2: ["INT", { default: 3, min: 1, max: 24 }],
        accent_3: ["INT", { default: 0 }],
        accent_4: ["INT", { default: 0 }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Beat Curve [Dream]",
    display_name: "\ud83d\udcc8 Beat Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Common Frame Dimensions [Dream]": {
    input: {
      required: {
        size: [["3840", "1920", "1440", "1280", "768", "720", "640", "512"]],
        aspect_ratio: [
          ["16:9", "16:10", "4:3", "1:1", "5:4", "3:2", "21:9", "14:9"],
        ],
        orientation: [["wide", "tall"]],
        divisor: [["8", "4", "2", "1"]],
        alignment: ["INT", { default: 64, min: 1, max: 512 }],
        alignment_type: [["ceil", "floor", "nearest"]],
      },
    },
    output: ["INT", "INT", "INT", "INT"],
    output_is_list: [false, false, false, false],
    output_name: ["width", "height", "final_width", "final_height"],
    name: "Common Frame Dimensions [Dream]",
    display_name: "\u2317 Common Frame Dimensions",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Image Motion [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        zoom: ["FLOAT", { default: 0.0, min: -10, max: 10, step: 0.01 }],
        mask_1_feather: ["INT", { default: 0, min: 0 }],
        mask_1_overlap: ["INT", { default: 0, min: 0 }],
        mask_2_feather: ["INT", { default: 10, min: 0 }],
        mask_2_overlap: ["INT", { default: 5, min: 0 }],
        mask_3_feather: ["INT", { default: 15, min: 0 }],
        mask_3_overlap: ["INT", { default: 5, min: 0 }],
        x_translation: [
          "FLOAT",
          { default: 0.0, min: -10, max: 10, step: 0.01 },
        ],
        y_translation: [
          "FLOAT",
          { default: 0.0, min: -10, max: 10, step: 0.01 },
        ],
        frame_counter: ["FRAME_COUNTER"],
      },
      optional: {
        noise: ["IMAGE"],
        output_resize_width: ["INT", { default: 0, min: 0 }],
        output_resize_height: ["INT", { default: 0, min: 0 }],
      },
    },
    output: ["IMAGE", "MASK", "MASK", "MASK"],
    output_is_list: [false, false, false, false],
    output_name: ["image", "mask1", "mask2", "mask3"],
    name: "Image Motion [Dream]",
    display_name: "\ud83d\udd00 Image Motion",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udd00 transforms",
    output_node: false,
  },
  "Noise from Palette [Dream]": {
    input: {
      required: {
        palette: ["RGB_PALETTE"],
        width: ["INT", { default: 512, min: 1, max: 8192 }],
        height: ["INT", { default: 512, min: 1, max: 8192 }],
        blur_amount: ["FLOAT", { default: 0.3, min: 0, max: 1.0, step: 0.05 }],
        density: ["FLOAT", { default: 0.5, min: 0.1, max: 1.0, step: 0.025 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Noise from Palette [Dream]",
    display_name: "\ud83c\udf2b Noise from Palette",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\u26a1 generate",
    output_node: false,
  },
  "Analyze Palette [Dream]": {
    input: { required: { palette: ["RGB_PALETTE"] } },
    output: ["FLOAT", "FLOAT", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false, false, false],
    output_name: ["brightness", "contrast", "redness", "greenness", "blueness"],
    name: "Analyze Palette [Dream]",
    display_name: "\ud83d\udcca Analyze Palette",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Palette Color Shift [Dream]": {
    input: {
      required: {
        palette: ["RGB_PALETTE"],
        red_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.1 },
        ],
        green_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.1 },
        ],
        blue_multiplier: [
          "FLOAT",
          { default: 1.0, min: 0.0, max: 100.0, step: 0.1 },
        ],
        fixed_brightness: [["yes", "no"]],
      },
    },
    output: ["RGB_PALETTE"],
    output_is_list: [false],
    output_name: ["palette"],
    name: "Palette Color Shift [Dream]",
    display_name: "\ud83c\udfa8 Palette Color Shift",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "File Count [Dream]": {
    input: {
      required: {
        directory_path: [["__inputs__"]],
        patterns: [
          "STRING",
          { default: "*.jpg|*.png|*.jpeg", multiline: false },
        ],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["TOTAL"],
    name: "File Count [Dream]",
    display_name: "\ud83d\udcc2 File Count",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Frame Counter Offset [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        offset: ["INT", { default: -1 }],
      },
    },
    output: ["FRAME_COUNTER"],
    output_is_list: [false],
    output_name: ["frame_counter"],
    name: "Frame Counter Offset [Dream]",
    display_name: "\u00b1 Frame Counter Offset",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Frame Counter (Directory) [Dream]": {
    input: {
      required: {
        directory_path: [["__inputs__"]],
        pattern: ["STRING", { default: "*", multiline: false }],
        indexing: [["numeric", "alphabetic order"]],
        total_frames: ["INT", { default: 100, min: 2, max: 5184000 }],
        frames_per_second: ["INT", { min: 1, default: 30 }],
      },
    },
    output: ["FRAME_COUNTER"],
    output_is_list: [false],
    output_name: ["frame_counter"],
    name: "Frame Counter (Directory) [Dream]",
    display_name: "\u268b Frame Counter (Directory)",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Frame Counter (Simple) [Dream]": {
    input: {
      required: {
        frame_index: ["INT", { min: 0, default: 0 }],
        total_frames: ["INT", { default: 100, min: 1, max: 5184000 }],
        frames_per_second: ["INT", { min: 1, default: 25 }],
      },
    },
    output: ["FRAME_COUNTER"],
    output_is_list: [false],
    output_name: ["frame_counter"],
    name: "Frame Counter (Simple) [Dream]",
    display_name: "\u268b Frame Counter (Simple)",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Image Sequence Loader [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        directory_path: [["__inputs__"]],
        pattern: ["STRING", { default: "*", multiline: false }],
        indexing: [["numeric", "alphabetic order"]],
      },
      optional: { default_image: ["IMAGE", { default: null }] },
    },
    output: ["IMAGE", "STRING"],
    output_is_list: [false, false],
    output_name: ["image", "frame_name"],
    name: "Image Sequence Loader [Dream]",
    display_name: "\ud83d\udcbe Image Sequence Loader",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Image Sequence Saver [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        image: ["IMAGE"],
        prefix: ["STRING", { default: "frame", multiline: false }],
        digits: ["INT", { default: 5 }],
        at_end: [["stop output", "raise error", "keep going"]],
        filetype: [["png with embedded workflow", "png", "jpg"]],
      },
      hidden: { prompt: "PROMPT", extra_pnginfo: "EXTRA_PNGINFO" },
    },
    output: ["ANIMATION_SEQUENCE", "LOG_ENTRY"],
    output_is_list: [false, false],
    output_name: ["sequence", "log_entry"],
    name: "Image Sequence Saver [Dream]",
    display_name: "\ud83d\udcbe Image Sequence Saver",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa5 animation",
    output_node: true,
  },
  "CSV Generator [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        value: ["FLOAT", { forceInput: true, default: 0.0 }],
        csvfile: ["STRING", { default: "", multiline: false }],
        csv_dialect: [["excel", "excel-tab", "unix"]],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "CSV Generator [Dream]",
    display_name: "\u2317 CSV Generator",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: true,
  },
  "Sample Image Area as Palette [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        samples: ["INT", { default: 256, min: 1, max: 4096 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        area: [
          [
            "top-left",
            "top-center",
            "top-right",
            "center-left",
            "center",
            "center-right",
            "bottom-left",
            "bottom-center",
            "bottom-right",
          ],
        ],
      },
    },
    output: ["RGB_PALETTE"],
    output_is_list: [false],
    output_name: ["palette"],
    name: "Sample Image Area as Palette [Dream]",
    display_name: "\ud83c\udfa8 Sample Image Area as Palette",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "FFMPEG Video Encoder [Dream]": {
    input: {
      required: {
        sequence: ["ANIMATION_SEQUENCE"],
        name: ["STRING", { default: "video", multiline: false }],
        framerate_factor: ["FLOAT", { default: 1.0, min: 0.01, max: 100.0 }],
        remove_images: ["BOOLEAN", { default: true }],
      },
    },
    output: ["LOG_ENTRY"],
    output_is_list: [false],
    output_name: ["log_entry"],
    name: "FFMPEG Video Encoder [Dream]",
    display_name: "\ud83c\udfac Video Encoder (FFMPEG)",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing",
    output_node: true,
  },
  "Image Sequence Tweening [Dream]": {
    input: {
      required: {
        sequence: ["ANIMATION_SEQUENCE"],
        multiplier: ["INT", { default: 2, min: 2, max: 10 }],
      },
    },
    output: ["ANIMATION_SEQUENCE"],
    output_is_list: [false],
    output_name: ["sequence"],
    name: "Image Sequence Tweening [Dream]",
    display_name: "\u2699 Image Sequence Tweening",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing",
    output_node: false,
  },
  "Image Sequence Blend [Dream]": {
    input: {
      required: {
        sequence: ["ANIMATION_SEQUENCE"],
        fade_in: ["FLOAT", { default: 0.1, min: 0.01, max: 0.5 }],
        fade_out: ["FLOAT", { default: 0.1, min: 0.01, max: 0.5 }],
        iterations: ["INT", { default: 1, min: 1, max: 10 }],
      },
    },
    output: ["ANIMATION_SEQUENCE"],
    output_is_list: [false],
    output_name: ["sequence"],
    name: "Image Sequence Blend [Dream]",
    display_name: "\u2699 Image Sequence Blend",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\u2699 postprocessing",
    output_node: false,
  },
  "Palette Color Align [Dream]": {
    input: {
      required: {
        palette: ["RGB_PALETTE"],
        target_align: ["RGB_PALETTE"],
        alignment_factor: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 10.0, step: 0.1 },
        ],
      },
    },
    output: ["RGB_PALETTE"],
    output_is_list: [false],
    output_name: ["palette"],
    name: "Palette Color Align [Dream]",
    display_name: "\ud83c\udfa8 Palette Color Align",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Sample Image as Palette [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        samples: ["INT", { default: 1024, min: 1, max: 4096 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["RGB_PALETTE"],
    output_is_list: [false],
    output_name: ["palette"],
    name: "Sample Image as Palette [Dream]",
    display_name: "\ud83c\udfa8 Sample Image as Palette",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Noise from Area Palettes [Dream]": {
    input: {
      optional: {
        top_left_palette: ["RGB_PALETTE"],
        top_center_palette: ["RGB_PALETTE"],
        top_right_palette: ["RGB_PALETTE"],
        center_left_palette: ["RGB_PALETTE"],
        center_palette: ["RGB_PALETTE"],
        center_right_palette: ["RGB_PALETTE"],
        bottom_left_palette: ["RGB_PALETTE"],
        bottom_center_palette: ["RGB_PALETTE"],
        bottom_right_palette: ["RGB_PALETTE"],
      },
      required: {
        area_sharpness: [
          "FLOAT",
          { default: 0.5, min: 0.0, max: 1.0, step: 0.05 },
        ],
        width: ["INT", { default: 512, min: 1, max: 8192 }],
        height: ["INT", { default: 512, min: 1, max: 8192 }],
        blur_amount: ["FLOAT", { default: 0.3, min: 0, max: 1.0, step: 0.05 }],
        density: ["FLOAT", { default: 0.5, min: 0.1, max: 1.0, step: 0.025 }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Noise from Area Palettes [Dream]",
    display_name: "\ud83c\udf2b Noise from Area Palettes",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\u26a1 generate",
    output_node: false,
  },
  "String Input [Dream]": {
    input: {
      required: { value: ["STRING", { default: "", multiline: false }] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "String Input [Dream]",
    display_name: "\u270d String Input",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Float Input [Dream]": {
    input: { required: { value: ["FLOAT", { default: 0.0 }] } },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["FLOAT"],
    name: "Float Input [Dream]",
    display_name: "\u270d Float Input",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Int Input [Dream]": {
    input: { required: { value: ["INT", { default: 0 }] } },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["INT"],
    name: "Int Input [Dream]",
    display_name: "\u270d Int Input",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Text Input [Dream]": {
    input: {
      required: { value: ["STRING", { default: "", multiline: true }] },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["STRING"],
    name: "Text Input [Dream]",
    display_name: "\u270d Text Input",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Big Latent Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["LATENT"],
        input_1: ["LATENT"],
        input_2: ["LATENT"],
        input_3: ["LATENT"],
        input_4: ["LATENT"],
        input_5: ["LATENT"],
        input_6: ["LATENT"],
        input_7: ["LATENT"],
        input_8: ["LATENT"],
        input_9: ["LATENT"],
      },
    },
    output: ["LATENT"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Latent Switch [Dream]",
    display_name: "\u2b46 Big Latent Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Frame Count Calculator [Dream]": {
    input: {
      required: {
        hours: ["INT", { min: 0, default: 0, max: 23 }],
        minutes: ["INT", { min: 0, default: 0, max: 59 }],
        seconds: ["INT", { min: 0, default: 10, max: 59 }],
        milliseconds: ["INT", { min: 0, default: 0, max: 59 }],
        frames_per_second: ["INT", { min: 1, default: 30 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["TOTAL"],
    name: "Frame Count Calculator [Dream]",
    display_name: "\u231b Frame Count Calculator",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Big Image Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["IMAGE"],
        input_1: ["IMAGE"],
        input_2: ["IMAGE"],
        input_3: ["IMAGE"],
        input_4: ["IMAGE"],
        input_5: ["IMAGE"],
        input_6: ["IMAGE"],
        input_7: ["IMAGE"],
        input_8: ["IMAGE"],
        input_9: ["IMAGE"],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Image Switch [Dream]",
    display_name: "\u2b46 Big Image Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Big Text Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["STRING", { default: "\u2b46", forceInput: true }],
        input_1: ["STRING", { default: "\u2b46", forceInput: true }],
        input_2: ["STRING", { default: "\u2b46", forceInput: true }],
        input_3: ["STRING", { default: "\u2b46", forceInput: true }],
        input_4: ["STRING", { default: "\u2b46", forceInput: true }],
        input_5: ["STRING", { default: "\u2b46", forceInput: true }],
        input_6: ["STRING", { default: "\u2b46", forceInput: true }],
        input_7: ["STRING", { default: "\u2b46", forceInput: true }],
        input_8: ["STRING", { default: "\u2b46", forceInput: true }],
        input_9: ["STRING", { default: "\u2b46", forceInput: true }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Text Switch [Dream]",
    display_name: "\u2b46 Big Text Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Big Float Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_1: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_2: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_3: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_4: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_5: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_6: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_7: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_8: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
        input_9: ["FLOAT", { default: 9.223372036854776e18, forceInput: true }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Float Switch [Dream]",
    display_name: "\u2b46 Big Float Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Big Int Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_1: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_2: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_3: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_4: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_5: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_6: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_7: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_8: ["INT", { default: 9223372036854775807, forceInput: true }],
        input_9: ["INT", { default: 9223372036854775807, forceInput: true }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Int Switch [Dream]",
    display_name: "\u2b46 Big Int Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Big Palette Switch [Dream]": {
    input: {
      required: {
        select: ["INT", { default: 0, min: 0, max: 9 }],
        on_missing: [["previous", "next"]],
      },
      optional: {
        input_0: ["RGB_PALETTE"],
        input_1: ["RGB_PALETTE"],
        input_2: ["RGB_PALETTE"],
        input_3: ["RGB_PALETTE"],
        input_4: ["RGB_PALETTE"],
        input_5: ["RGB_PALETTE"],
        input_6: ["RGB_PALETTE"],
        input_7: ["RGB_PALETTE"],
        input_8: ["RGB_PALETTE"],
        input_9: ["RGB_PALETTE"],
      },
    },
    output: ["RGB_PALETTE"],
    output_is_list: [false],
    output_name: ["selected"],
    name: "Big Palette Switch [Dream]",
    display_name: "\u2b46 Big Palette Switch",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Build Prompt [Dream]": {
    input: {
      optional: { partial_prompt: ["PARTIAL_PROMPT"] },
      required: {
        added_prompt: ["STRING", { default: "", multiline: true }],
        weight: ["FLOAT", { default: 1.0 }],
      },
    },
    output: ["PARTIAL_PROMPT"],
    output_is_list: [false],
    output_name: ["partial_prompt"],
    name: "Build Prompt [Dream]",
    display_name: "\u2696 Build Prompt",
    description: "",
    category: "\u2728 Dream/\u262f conditioning",
    output_node: false,
  },
  "Finalize Prompt [Dream]": {
    input: {
      required: {
        partial_prompt: ["PARTIAL_PROMPT"],
        adjustment: [["raw", "by_abs_max", "by_abs_sum"]],
        clamp: ["FLOAT", { default: 2.0, min: 0.1, step: 0.1 }],
        adjustment_reference: ["FLOAT", { default: 1.0, min: 0.1 }],
      },
    },
    output: ["STRING", "STRING"],
    output_is_list: [false, false],
    output_name: ["positive", "negative"],
    name: "Finalize Prompt [Dream]",
    display_name: "\ud83d\uddeb Finalize Prompt",
    description: "",
    category: "\u2728 Dream/\u262f conditioning",
    output_node: false,
  },
  "Frame Counter Info [Dream]": {
    input: { required: { frame_counter: ["FRAME_COUNTER"] } },
    output: [
      "INT",
      "INT",
      "BOOLEAN",
      "BOOLEAN",
      "FLOAT",
      "FLOAT",
      "FLOAT",
      "FLOAT",
    ],
    output_is_list: [false, false, false, false, false, false, false, false],
    output_name: [
      "frames_completed",
      "total_frames",
      "first_frame",
      "last_frame",
      "elapsed_seconds",
      "remaining_seconds",
      "total_seconds",
      "completion",
    ],
    name: "Frame Counter Info [Dream]",
    display_name: "\u268b Frame Counter Info",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
  "Boolean To Float [Dream]": {
    input: {
      required: {
        boolean: ["BOOLEAN", { default: false }],
        on_true: ["FLOAT", { default: 1.0 }],
        on_false: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["FLOAT"],
    output_is_list: [false],
    output_name: ["result"],
    name: "Boolean To Float [Dream]",
    display_name: "\u2b16 Boolean To Float",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Boolean To Int [Dream]": {
    input: {
      required: {
        boolean: ["BOOLEAN", { default: false }],
        on_true: ["INT", { default: 1 }],
        on_false: ["INT", { default: 0 }],
      },
    },
    output: ["INT"],
    output_is_list: [false],
    output_name: ["result"],
    name: "Boolean To Int [Dream]",
    display_name: "\u2b16 Boolean To Int",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils/\u2b46 switches",
    output_node: false,
  },
  "Saw Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        max_value: ["FLOAT", { default: 1.0, multiline: false }],
        min_value: ["FLOAT", { default: 0.0, multiline: false }],
        periodicity_seconds: [
          "FLOAT",
          { default: 10.0, multiline: false, min: 0.01 },
        ],
        phase: ["FLOAT", { default: 0.0, multiline: false, min: -1, max: 1 }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Saw Curve [Dream]",
    display_name: "\ud83d\udcc8 Saw Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Triangle Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        max_value: ["FLOAT", { default: 1.0, multiline: false }],
        min_value: ["FLOAT", { default: 0.0, multiline: false }],
        periodicity_seconds: [
          "FLOAT",
          { default: 10.0, multiline: false, min: 0.01 },
        ],
        phase: ["FLOAT", { default: 0.0, multiline: false, min: -1, max: 1 }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Triangle Curve [Dream]",
    display_name: "\ud83d\udcc8 Triangle Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Triangle Event Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        max_value: ["FLOAT", { default: 1.0, multiline: false }],
        min_value: ["FLOAT", { default: 0.0, multiline: false }],
        width_seconds: ["FLOAT", { default: 1.0, multiline: false, min: 0.1 }],
        center_seconds: [
          "FLOAT",
          { default: 10.0, multiline: false, min: 0.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Triangle Event Curve [Dream]",
    display_name: "\ud83d\udcc8 Triangle Event Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Smooth Event Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        max_value: ["FLOAT", { default: 1.0, multiline: false }],
        min_value: ["FLOAT", { default: 0.0, multiline: false }],
        width_seconds: ["FLOAT", { default: 1.0, multiline: false, min: 0.1 }],
        center_seconds: [
          "FLOAT",
          { default: 10.0, multiline: false, min: 0.0 },
        ],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Smooth Event Curve [Dream]",
    display_name: "\ud83d\udcc8 Smooth Event Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Calculation [Dream]": {
    input: {
      required: {
        expression: [
          "STRING",
          { default: "a + b + c - (r * s * t)", multiline: true },
        ],
      },
      optional: {
        a_int: ["INT", { default: 0, multiline: false }],
        b_int: ["INT", { default: 0, multiline: false }],
        c_int: ["INT", { default: 0, multiline: false }],
        r_float: ["FLOAT", { default: 0.0, multiline: false }],
        s_float: ["FLOAT", { default: 0.0, multiline: false }],
        t_float: ["FLOAT", { default: 0.0, multiline: false }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "Calculation [Dream]",
    display_name: "\ud83d\udda9 Calculation",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Image Color Shift [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        red_multiplier: ["FLOAT", { default: 1.0, min: 0.0 }],
        green_multiplier: ["FLOAT", { default: 1.0, min: 0.0 }],
        blue_multiplier: ["FLOAT", { default: 1.0, min: 0.0 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Color Shift [Dream]",
    display_name: "\ud83d\uddbc Image Color Shift",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Compare Palettes [Dream]": {
    input: { required: { a: ["RGB_PALETTE"], b: ["RGB_PALETTE"] } },
    output: ["FLOAT", "FLOAT", "FLOAT", "FLOAT"],
    output_is_list: [false, false, false, false],
    output_name: [
      "brightness_multiplier",
      "contrast_multiplier",
      "red_multiplier",
      "green_multiplier",
      "blue_multiplier",
    ],
    name: "Compare Palettes [Dream]",
    display_name: "\ud83d\udcca Compare Palettes",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Image Contrast Adjustment [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        factor: ["FLOAT", { default: 1.0, min: 0.0 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Contrast Adjustment [Dream]",
    display_name: "\u25d0 Image Contrast Adjustment",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Image Brightness Adjustment [Dream]": {
    input: {
      required: {
        image: ["IMAGE"],
        factor: ["FLOAT", { default: 1.0, min: 0.0 }],
      },
    },
    output: ["IMAGE"],
    output_is_list: [false],
    output_name: ["image"],
    name: "Image Brightness Adjustment [Dream]",
    display_name: "\u263c Image Brightness Adjustment",
    description: "",
    category: "\u2728 Dream/\ud83c\udf04 image/\ud83c\udfa8 color",
    output_node: false,
  },
  "Log File [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        log_directory: [
          "STRING",
          {
            default:
              "/Users/nc/Desktop/flowt-workbench/flowt-execution-pipeline-v2/temp/output",
          },
        ],
        log_filename: ["STRING", { default: "dreamlog.txt" }],
        stdout: ["BOOLEAN", { default: true }],
        active: ["BOOLEAN", { default: true }],
        clock_has_24_hours: ["BOOLEAN", { default: true }],
      },
      optional: {
        entry_0: ["LOG_ENTRY"],
        entry_1: ["LOG_ENTRY"],
        entry_2: ["LOG_ENTRY"],
        entry_3: ["LOG_ENTRY"],
        entry_4: ["LOG_ENTRY"],
        entry_5: ["LOG_ENTRY"],
        entry_6: ["LOG_ENTRY"],
        entry_7: ["LOG_ENTRY"],
      },
    },
    output: [],
    output_is_list: [],
    output_name: [],
    name: "Log File [Dream]",
    display_name: "\ud83d\uddce Log File",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: true,
  },
  "Laboratory [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        key: ["STRING", { default: "Random value 722725" }],
        seed: ["INT", { default: 0, min: 0, max: 18446744073709551615 }],
        renew_policy: [["every frame", "first frame"]],
        min_value: ["FLOAT", { default: 0.0 }],
        max_value: ["FLOAT", { default: 1.0 }],
        mode: [["random uniform", "random bell", "ladder", "random walk"]],
      },
      optional: { step_size: ["FLOAT", { default: 0.1 }] },
    },
    output: ["FLOAT", "INT", "LOG_ENTRY"],
    output_is_list: [false, false, false],
    output_name: ["FLOAT", "INT", "log_entry"],
    name: "Laboratory [Dream]",
    display_name: "\ud83e\uddea Laboratory",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "String to Log Entry [Dream]": {
    input: {
      required: { text: ["STRING", { default: "" }] },
      optional: { label: ["STRING", { default: "" }] },
    },
    output: ["LOG_ENTRY"],
    output_is_list: [false],
    output_name: ["log_entry"],
    name: "String to Log Entry [Dream]",
    display_name: "\ud83d\uddce String to Log Entry",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: true,
  },
  "Int to Log Entry [Dream]": {
    input: {
      required: {
        value: ["INT", { default: 0 }],
        label: ["STRING", { default: "" }],
      },
    },
    output: ["LOG_ENTRY"],
    output_is_list: [false],
    output_name: ["log_entry"],
    name: "Int to Log Entry [Dream]",
    display_name: "\ud83d\uddce Int to Log Entry",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Float to Log Entry [Dream]": {
    input: {
      required: {
        value: ["FLOAT", { default: 0 }],
        label: ["STRING", { default: "" }],
      },
    },
    output: ["LOG_ENTRY"],
    output_is_list: [false],
    output_name: ["log_entry"],
    name: "Float to Log Entry [Dream]",
    display_name: "\ud83d\uddce Float to Log Entry",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "Log Entry Joiner [Dream]": {
    input: {
      optional: {
        entry_0: ["LOG_ENTRY"],
        entry_1: ["LOG_ENTRY"],
        entry_2: ["LOG_ENTRY"],
        entry_3: ["LOG_ENTRY"],
      },
    },
    output: ["LOG_ENTRY"],
    output_is_list: [false],
    output_name: ["log_entry"],
    name: "Log Entry Joiner [Dream]",
    display_name: "\ud83d\uddce Log Entry Joiner",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: false,
  },
  "String Tokenizer [Dream]": {
    input: {
      required: {
        text: ["STRING", { default: "", multiline: true }],
        separator: ["STRING", { default: "," }],
        selected: ["INT", { default: 0, min: 0 }],
      },
    },
    output: ["STRING"],
    output_is_list: [false],
    output_name: ["token"],
    name: "String Tokenizer [Dream]",
    display_name: "\ud83e\ude99 String Tokenizer",
    description: "",
    category: "\u2728 Dream/\ud83d\udee0 utils",
    output_node: true,
  },
  "WAV Curve [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        wav_path: ["STRING", { default: "audio.wav" }],
        scale: ["FLOAT", { default: 1.0, multiline: false }],
      },
    },
    output: ["FLOAT", "INT"],
    output_is_list: [false, false],
    output_name: ["FLOAT", "INT"],
    name: "WAV Curve [Dream]",
    display_name: "\u223f WAV Curve",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation/\ud83d\udcc8 curves",
    output_node: false,
  },
  "Frame Counter Time Offset [Dream]": {
    input: {
      required: {
        frame_counter: ["FRAME_COUNTER"],
        offset_seconds: ["FLOAT", { default: 0.0 }],
      },
    },
    output: ["FRAME_COUNTER"],
    output_is_list: [false],
    output_name: ["frame_counter"],
    name: "Frame Counter Time Offset [Dream]",
    display_name: "\u00b1 Frame Counter Time Offset",
    description: "",
    category: "\u2728 Dream/\ud83c\udfa5 animation",
    output_node: false,
  },
};
