export const nodeDefinitions = {
    "KSampler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSampler",
        "display_name": "KSampler",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "CheckpointLoaderSimple": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoaderSimple",
        "display_name": "Load Checkpoint",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "CLIPTextEncode": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncode",
        "display_name": "CLIP Text Encode (Prompt)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "CLIPSetLastLayer": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "stop_at_clip_layer": [
                    "INT",
                    {
                        "default": -1,
                        "min": -24,
                        "max": -1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP"
        ],
        "name": "CLIPSetLastLayer",
        "display_name": "CLIP Set Last Layer",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "VAEDecode": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "VAEDecode",
        "display_name": "VAE Decode",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "VAEEncode": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VAEEncode",
        "display_name": "VAE Encode",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "VAEEncodeForInpaint": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "mask": [
                    "MASK"
                ],
                "grow_mask_by": [
                    "INT",
                    {
                        "default": 6,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VAEEncodeForInpaint",
        "display_name": "VAE Encode (for Inpainting)",
        "description": "",
        "category": "latent/inpaint",
        "output_node": false
    },
    "VAELoader": {
        "input": {
            "required": {
                "vae_name": [
                    []
                ]
            }
        },
        "output": [
            "VAE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VAE"
        ],
        "name": "VAELoader",
        "display_name": "Load VAE",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "EmptyLatentImage": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "EmptyLatentImage",
        "display_name": "Empty Latent Image",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "LatentUpscale": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentUpscale",
        "display_name": "Upscale Latent",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "LatentUpscaleBy": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "scale_by": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 0.01,
                        "max": 8.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentUpscaleBy",
        "display_name": "Upscale Latent By",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "LatentFromBatch": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "batch_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 63
                    }
                ],
                "length": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentFromBatch",
        "display_name": "Latent From Batch",
        "description": "",
        "category": "latent/batch",
        "output_node": false
    },
    "RepeatLatentBatch": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "amount": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RepeatLatentBatch",
        "display_name": "Repeat Latent Batch",
        "description": "",
        "category": "latent/batch",
        "output_node": false
    },
    "SaveImage": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveImage",
        "display_name": "Save Image",
        "description": "",
        "category": "image",
        "output_node": true
    },
    "PreviewImage": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "PreviewImage",
        "display_name": "Preview Image",
        "description": "",
        "category": "image",
        "output_node": true
    },
    "LoadImage": {
        "input": {
            "required": {
                "image": [
                    [
                        "__inputs__"
                    ],
                    {
                        "image_upload": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "LoadImage",
        "display_name": "Load Image",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "LoadImageMask": {
        "input": {
            "required": {
                "image": [
                    [
                        "__inputs__"
                    ],
                    {
                        "image_upload": true
                    }
                ],
                "channel": [
                    [
                        "alpha",
                        "red",
                        "green",
                        "blue"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "LoadImageMask",
        "display_name": "Load Image (as Mask)",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "ImageScale": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "lanczos"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageScale",
        "display_name": "Upscale Image",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "ImageScaleBy": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "lanczos"
                    ]
                ],
                "scale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 8.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageScaleBy",
        "display_name": "Upscale Image By",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "ImageInvert": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageInvert",
        "display_name": "Invert Image",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "ImageBatch": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBatch",
        "display_name": "Batch Images",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "ImagePadForOutpaint": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "left": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "top": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "right": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "bottom": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 40,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "ImagePadForOutpaint",
        "display_name": "Pad Image for Outpainting",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "EmptyImage": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "color": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 16777215,
                        "step": 1,
                        "display": "color"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "EmptyImage",
        "display_name": "EmptyImage",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "ConditioningAverage": {
        "input": {
            "required": {
                "conditioning_to": [
                    "CONDITIONING"
                ],
                "conditioning_from": [
                    "CONDITIONING"
                ],
                "conditioning_to_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningAverage",
        "display_name": "ConditioningAverage",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningCombine": {
        "input": {
            "required": {
                "conditioning_1": [
                    "CONDITIONING"
                ],
                "conditioning_2": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningCombine",
        "display_name": "Conditioning (Combine)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningConcat": {
        "input": {
            "required": {
                "conditioning_to": [
                    "CONDITIONING"
                ],
                "conditioning_from": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningConcat",
        "display_name": "Conditioning (Concat)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningSetArea": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetArea",
        "display_name": "Conditioning (Set Area)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningSetAreaPercentage": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "width": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "height": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "x": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetAreaPercentage",
        "display_name": "Conditioning (Set Area with Percentage)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningSetAreaStrength": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetAreaStrength",
        "display_name": "ConditioningSetAreaStrength",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ConditioningSetMask": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "mask": [
                    "MASK"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "set_cond_area": [
                    [
                        "default",
                        "mask bounds"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetMask",
        "display_name": "Conditioning (Set Mask)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "KSamplerAdvanced": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "add_noise": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "start_at_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_at_step": [
                    "INT",
                    {
                        "default": 10000,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "return_with_leftover_noise": [
                    [
                        "disable",
                        "enable"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSamplerAdvanced",
        "display_name": "KSampler (Advanced)",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "SetLatentNoiseMask": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "SetLatentNoiseMask",
        "display_name": "Set Latent Noise Mask",
        "description": "",
        "category": "latent/inpaint",
        "output_node": false
    },
    "LatentComposite": {
        "input": {
            "required": {
                "samples_to": [
                    "LATENT"
                ],
                "samples_from": [
                    "LATENT"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentComposite",
        "display_name": "Latent Composite",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "LatentBlend": {
        "input": {
            "required": {
                "samples1": [
                    "LATENT"
                ],
                "samples2": [
                    "LATENT"
                ],
                "blend_factor": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentBlend",
        "display_name": "Latent Blend",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "LatentRotate": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "rotation": [
                    [
                        "none",
                        "90 degrees",
                        "180 degrees",
                        "270 degrees"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentRotate",
        "display_name": "Rotate Latent",
        "description": "",
        "category": "latent/transform",
        "output_node": false
    },
    "LatentFlip": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "flip_method": [
                    [
                        "x-axis: vertically",
                        "y-axis: horizontally"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentFlip",
        "display_name": "Flip Latent",
        "description": "",
        "category": "latent/transform",
        "output_node": false
    },
    "LatentCrop": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentCrop",
        "display_name": "Crop Latent",
        "description": "",
        "category": "latent/transform",
        "output_node": false
    },
    "LoraLoader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    []
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -20.0,
                        "max": 20.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -20.0,
                        "max": 20.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP"
        ],
        "name": "LoraLoader",
        "display_name": "Load LoRA",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "CLIPLoader": {
        "input": {
            "required": {
                "clip_name": [
                    []
                ],
                "type": [
                    [
                        "stable_diffusion",
                        "stable_cascade"
                    ]
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP"
        ],
        "name": "CLIPLoader",
        "display_name": "Load CLIP",
        "description": "",
        "category": "advanced/loaders",
        "output_node": false
    },
    "UNETLoader": {
        "input": {
            "required": {
                "unet_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "UNETLoader",
        "display_name": "UNETLoader",
        "description": "",
        "category": "advanced/loaders",
        "output_node": false
    },
    "DualCLIPLoader": {
        "input": {
            "required": {
                "clip_name1": [
                    []
                ],
                "clip_name2": [
                    []
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP"
        ],
        "name": "DualCLIPLoader",
        "display_name": "DualCLIPLoader",
        "description": "",
        "category": "advanced/loaders",
        "output_node": false
    },
    "CLIPVisionEncode": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "CLIP_VISION_OUTPUT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP_VISION_OUTPUT"
        ],
        "name": "CLIPVisionEncode",
        "display_name": "CLIP Vision Encode",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "StyleModelApply": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "style_model": [
                    "STYLE_MODEL"
                ],
                "clip_vision_output": [
                    "CLIP_VISION_OUTPUT"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "StyleModelApply",
        "display_name": "Apply Style Model",
        "description": "",
        "category": "conditioning/style_model",
        "output_node": false
    },
    "unCLIPConditioning": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "clip_vision_output": [
                    "CLIP_VISION_OUTPUT"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "noise_augmentation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "unCLIPConditioning",
        "display_name": "unCLIPConditioning",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ControlNetApply": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ControlNetApply",
        "display_name": "Apply ControlNet",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ControlNetApplyAdvanced": {
        "input": {
            "required": {
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative"
        ],
        "name": "ControlNetApplyAdvanced",
        "display_name": "Apply ControlNet (Advanced)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "ControlNetLoader": {
        "input": {
            "required": {
                "control_net_name": [
                    []
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "ControlNetLoader",
        "display_name": "Load ControlNet Model",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "DiffControlNetLoader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "control_net_name": [
                    []
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "DiffControlNetLoader",
        "display_name": "Load ControlNet Model (diff)",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "StyleModelLoader": {
        "input": {
            "required": {
                "style_model_name": [
                    []
                ]
            }
        },
        "output": [
            "STYLE_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STYLE_MODEL"
        ],
        "name": "StyleModelLoader",
        "display_name": "Load Style Model",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "CLIPVisionLoader": {
        "input": {
            "required": {
                "clip_name": [
                    []
                ]
            }
        },
        "output": [
            "CLIP_VISION"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP_VISION"
        ],
        "name": "CLIPVisionLoader",
        "display_name": "Load CLIP Vision",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "VAEDecodeTiled": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "VAEDecodeTiled",
        "display_name": "VAE Decode (Tiled)",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "VAEEncodeTiled": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VAEEncodeTiled",
        "display_name": "VAE Encode (Tiled)",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "unCLIPCheckpointLoader": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "CLIP_VISION"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "CLIP_VISION"
        ],
        "name": "unCLIPCheckpointLoader",
        "display_name": "unCLIPCheckpointLoader",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "GLIGENLoader": {
        "input": {
            "required": {
                "gligen_name": [
                    []
                ]
            }
        },
        "output": [
            "GLIGEN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "GLIGEN"
        ],
        "name": "GLIGENLoader",
        "display_name": "GLIGENLoader",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "GLIGENTextBoxApply": {
        "input": {
            "required": {
                "conditioning_to": [
                    "CONDITIONING"
                ],
                "clip": [
                    "CLIP"
                ],
                "gligen_textbox_model": [
                    "GLIGEN"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 8,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 64,
                        "min": 8,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "GLIGENTextBoxApply",
        "display_name": "GLIGENTextBoxApply",
        "description": "",
        "category": "conditioning/gligen",
        "output_node": false
    },
    "InpaintModelConditioning": {
        "input": {
            "required": {
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "vae": [
                    "VAE"
                ],
                "pixels": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "InpaintModelConditioning",
        "display_name": "InpaintModelConditioning",
        "description": "",
        "category": "conditioning/inpaint",
        "output_node": false
    },
    "CheckpointLoader": {
        "input": {
            "required": {
                "config_name": [
                    []
                ],
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoader",
        "display_name": "Load Checkpoint With Config (DEPRECATED)",
        "description": "",
        "category": "advanced/loaders",
        "output_node": false
    },
    "DiffusersLoader": {
        "input": {
            "required": {
                "model_path": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "DiffusersLoader",
        "display_name": "DiffusersLoader",
        "description": "",
        "category": "advanced/loaders/deprecated",
        "output_node": false
    },
    "LoadLatent": {
        "input": {
            "required": {
                "latent": [
                    []
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LoadLatent",
        "display_name": "LoadLatent",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "SaveLatent": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "latents/ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveLatent",
        "display_name": "SaveLatent",
        "description": "",
        "category": "_for_testing",
        "output_node": true
    },
    "ConditioningZeroOut": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningZeroOut",
        "display_name": "ConditioningZeroOut",
        "description": "",
        "category": "advanced/conditioning",
        "output_node": false
    },
    "ConditioningSetTimestepRange": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "start": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetTimestepRange",
        "display_name": "ConditioningSetTimestepRange",
        "description": "",
        "category": "advanced/conditioning",
        "output_node": false
    },
    "LoraLoaderModelOnly": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "lora_name": [
                    []
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -20.0,
                        "max": 20.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "LoraLoaderModelOnly",
        "display_name": "LoraLoaderModelOnly",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "LatentAdd": {
        "input": {
            "required": {
                "samples1": [
                    "LATENT"
                ],
                "samples2": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentAdd",
        "display_name": "LatentAdd",
        "description": "",
        "category": "latent/advanced",
        "output_node": false
    },
    "LatentSubtract": {
        "input": {
            "required": {
                "samples1": [
                    "LATENT"
                ],
                "samples2": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentSubtract",
        "display_name": "LatentSubtract",
        "description": "",
        "category": "latent/advanced",
        "output_node": false
    },
    "LatentMultiply": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentMultiply",
        "display_name": "LatentMultiply",
        "description": "",
        "category": "latent/advanced",
        "output_node": false
    },
    "LatentInterpolate": {
        "input": {
            "required": {
                "samples1": [
                    "LATENT"
                ],
                "samples2": [
                    "LATENT"
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentInterpolate",
        "display_name": "LatentInterpolate",
        "description": "",
        "category": "latent/advanced",
        "output_node": false
    },
    "LatentBatch": {
        "input": {
            "required": {
                "samples1": [
                    "LATENT"
                ],
                "samples2": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentBatch",
        "display_name": "LatentBatch",
        "description": "",
        "category": "latent/batch",
        "output_node": false
    },
    "LatentBatchSeedBehavior": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "seed_behavior": [
                    [
                        "random",
                        "fixed"
                    ],
                    {
                        "default": "fixed"
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentBatchSeedBehavior",
        "display_name": "LatentBatchSeedBehavior",
        "description": "",
        "category": "latent/advanced",
        "output_node": false
    },
    "HypernetworkLoader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "hypernetwork_name": [
                    []
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "HypernetworkLoader",
        "display_name": "HypernetworkLoader",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "UpscaleModelLoader": {
        "input": {
            "required": {
                "model_name": [
                    []
                ]
            }
        },
        "output": [
            "UPSCALE_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALE_MODEL"
        ],
        "name": "UpscaleModelLoader",
        "display_name": "Load Upscale Model",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "ImageUpscaleWithModel": {
        "input": {
            "required": {
                "upscale_model": [
                    "UPSCALE_MODEL"
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageUpscaleWithModel",
        "display_name": "Upscale Image (using Model)",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "ImageBlend": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "blend_factor": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "blend_mode": [
                    [
                        "normal",
                        "multiply",
                        "screen",
                        "overlay",
                        "soft_light",
                        "difference"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBlend",
        "display_name": "ImageBlend",
        "description": "",
        "category": "image/postprocessing",
        "output_node": false
    },
    "ImageBlur": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "blur_radius": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 31,
                        "step": 1
                    }
                ],
                "sigma": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBlur",
        "display_name": "ImageBlur",
        "description": "",
        "category": "image/postprocessing",
        "output_node": false
    },
    "ImageQuantize": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "colors": [
                    "INT",
                    {
                        "default": 256,
                        "min": 1,
                        "max": 256,
                        "step": 1
                    }
                ],
                "dither": [
                    [
                        "none",
                        "floyd-steinberg",
                        "bayer-2",
                        "bayer-4",
                        "bayer-8",
                        "bayer-16"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageQuantize",
        "display_name": "ImageQuantize",
        "description": "",
        "category": "image/postprocessing",
        "output_node": false
    },
    "ImageSharpen": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "sharpen_radius": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 31,
                        "step": 1
                    }
                ],
                "sigma": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "alpha": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageSharpen",
        "display_name": "ImageSharpen",
        "description": "",
        "category": "image/postprocessing",
        "output_node": false
    },
    "ImageScaleToTotalPixels": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "lanczos"
                    ]
                ],
                "megapixels": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageScaleToTotalPixels",
        "display_name": "ImageScaleToTotalPixels",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "LatentCompositeMasked": {
        "input": {
            "required": {
                "destination": [
                    "LATENT"
                ],
                "source": [
                    "LATENT"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "resize_source": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentCompositeMasked",
        "display_name": "LatentCompositeMasked",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "ImageCompositeMasked": {
        "input": {
            "required": {
                "destination": [
                    "IMAGE"
                ],
                "source": [
                    "IMAGE"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "resize_source": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageCompositeMasked",
        "display_name": "ImageCompositeMasked",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "MaskToImage": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MaskToImage",
        "display_name": "Mask To Image (mtb)",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "ImageToMask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "channel": [
                    [
                        "red",
                        "green",
                        "blue",
                        "alpha"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImageToMask",
        "display_name": "Convert Image to Mask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "ImageColorToMask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "color": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 16777215,
                        "step": 1,
                        "display": "color"
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImageColorToMask",
        "display_name": "ImageColorToMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "SolidMask": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "SolidMask",
        "display_name": "SolidMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "InvertMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "InvertMask",
        "display_name": "InvertMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "CropMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "CropMask",
        "display_name": "CropMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "MaskComposite": {
        "input": {
            "required": {
                "destination": [
                    "MASK"
                ],
                "source": [
                    "MASK"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "operation": [
                    [
                        "multiply",
                        "add",
                        "subtract",
                        "and",
                        "or",
                        "xor"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskComposite",
        "display_name": "MaskComposite",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "FeatherMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "left": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "top": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "right": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "bottom": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "FeatherMask",
        "display_name": "FeatherMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "GrowMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "expand": [
                    "INT",
                    {
                        "default": 0,
                        "min": -8192,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "tapered_corners": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "GrowMask",
        "display_name": "GrowMask",
        "description": "",
        "category": "mask",
        "output_node": false
    },
    "PorterDuffImageComposite": {
        "input": {
            "required": {
                "source": [
                    "IMAGE"
                ],
                "source_alpha": [
                    "MASK"
                ],
                "destination": [
                    "IMAGE"
                ],
                "destination_alpha": [
                    "MASK"
                ],
                "mode": [
                    [
                        "ADD",
                        "CLEAR",
                        "DARKEN",
                        "DST",
                        "DST_ATOP",
                        "DST_IN",
                        "DST_OUT",
                        "DST_OVER",
                        "LIGHTEN",
                        "MULTIPLY",
                        "OVERLAY",
                        "SCREEN",
                        "SRC",
                        "SRC_ATOP",
                        "SRC_IN",
                        "SRC_OUT",
                        "SRC_OVER",
                        "XOR"
                    ],
                    {
                        "default": "DST"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "PorterDuffImageComposite",
        "display_name": "Porter-Duff Image Composite",
        "description": "",
        "category": "mask/compositing",
        "output_node": false
    },
    "SplitImageWithAlpha": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "SplitImageWithAlpha",
        "display_name": "Split Image with Alpha",
        "description": "",
        "category": "mask/compositing",
        "output_node": false
    },
    "JoinImageWithAlpha": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "alpha": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JoinImageWithAlpha",
        "display_name": "Join Image with Alpha",
        "description": "",
        "category": "mask/compositing",
        "output_node": false
    },
    "RebatchLatents": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RebatchLatents",
        "display_name": "Rebatch Latents",
        "description": "",
        "category": "latent/batch",
        "output_node": false
    },
    "RebatchImages": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "RebatchImages",
        "display_name": "Rebatch Images",
        "description": "",
        "category": "image/batch",
        "output_node": false
    },
    "ModelMergeSimple": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeSimple",
        "display_name": "ModelMergeSimple",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ModelMergeBlocks": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "input": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeBlocks",
        "display_name": "ModelMergeBlocks",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ModelMergeSubtract": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeSubtract",
        "display_name": "ModelMergeSubtract",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ModelMergeAdd": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeAdd",
        "display_name": "ModelMergeAdd",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "CheckpointSave": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "checkpoints/ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CheckpointSave",
        "display_name": "CheckpointSave",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": true
    },
    "CLIPMergeSimple": {
        "input": {
            "required": {
                "clip1": [
                    "CLIP"
                ],
                "clip2": [
                    "CLIP"
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP"
        ],
        "name": "CLIPMergeSimple",
        "display_name": "CLIPMergeSimple",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "CLIPSave": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "clip/ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CLIPSave",
        "display_name": "CLIPSave",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": true
    },
    "VAESave": {
        "input": {
            "required": {
                "vae": [
                    "VAE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "vae/ComfyUI_vae"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "VAESave",
        "display_name": "VAESave",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": true
    },
    "TomePatchModel": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "TomePatchModel",
        "display_name": "TomePatchModel",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "CLIPTextEncodeSDXLRefiner": {
        "input": {
            "required": {
                "ascore": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncodeSDXLRefiner",
        "display_name": "CLIPTextEncodeSDXLRefiner",
        "description": "",
        "category": "advanced/conditioning",
        "output_node": false
    },
    "CLIPTextEncodeSDXL": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_G"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "text_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_L"
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncodeSDXL",
        "display_name": "CLIPTextEncodeSDXL",
        "description": "",
        "category": "advanced/conditioning",
        "output_node": false
    },
    "Canny": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "low_threshold": [
                    "FLOAT",
                    {
                        "default": 0.4,
                        "min": 0.01,
                        "max": 0.99,
                        "step": 0.01
                    }
                ],
                "high_threshold": [
                    "FLOAT",
                    {
                        "default": 0.8,
                        "min": 0.01,
                        "max": 0.99,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Canny",
        "display_name": "Canny",
        "description": "",
        "category": "image/preprocessors",
        "output_node": false
    },
    "FreeU": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "b1": [
                    "FLOAT",
                    {
                        "default": 1.1,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "b2": [
                    "FLOAT",
                    {
                        "default": 1.2,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "s1": [
                    "FLOAT",
                    {
                        "default": 0.9,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "s2": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "FreeU",
        "display_name": "FreeU",
        "description": "",
        "category": "model_patches",
        "output_node": false
    },
    "FreeU_V2": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "b1": [
                    "FLOAT",
                    {
                        "default": 1.3,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "b2": [
                    "FLOAT",
                    {
                        "default": 1.4,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "s1": [
                    "FLOAT",
                    {
                        "default": 0.9,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "s2": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "FreeU_V2",
        "display_name": "FreeU_V2",
        "description": "",
        "category": "model_patches",
        "output_node": false
    },
    "SamplerCustom": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "add_noise": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "sampler": [
                    "SAMPLER"
                ],
                "sigmas": [
                    "SIGMAS"
                ],
                "latent_image": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "output",
            "denoised_output"
        ],
        "name": "SamplerCustom",
        "display_name": "SamplerCustom",
        "description": "",
        "category": "sampling/custom_sampling",
        "output_node": false
    },
    "BasicScheduler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "BasicScheduler",
        "display_name": "BasicScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "KarrasScheduler": {
        "input": {
            "required": {
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "sigma_max": [
                    "FLOAT",
                    {
                        "default": 14.614642,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "sigma_min": [
                    "FLOAT",
                    {
                        "default": 0.0291675,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "rho": [
                    "FLOAT",
                    {
                        "default": 7.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "KarrasScheduler",
        "display_name": "KarrasScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "ExponentialScheduler": {
        "input": {
            "required": {
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "sigma_max": [
                    "FLOAT",
                    {
                        "default": 14.614642,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "sigma_min": [
                    "FLOAT",
                    {
                        "default": 0.0291675,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "ExponentialScheduler",
        "display_name": "ExponentialScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "PolyexponentialScheduler": {
        "input": {
            "required": {
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "sigma_max": [
                    "FLOAT",
                    {
                        "default": 14.614642,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "sigma_min": [
                    "FLOAT",
                    {
                        "default": 0.0291675,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "rho": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "PolyexponentialScheduler",
        "display_name": "PolyexponentialScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "VPScheduler": {
        "input": {
            "required": {
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "beta_d": [
                    "FLOAT",
                    {
                        "default": 19.9,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "beta_min": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "eps_s": [
                    "FLOAT",
                    {
                        "default": 0.001,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.0001,
                        "round": false
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "VPScheduler",
        "display_name": "VPScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "SDTurboScheduler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "SDTurboScheduler",
        "display_name": "SDTurboScheduler",
        "description": "",
        "category": "sampling/custom_sampling/schedulers",
        "output_node": false
    },
    "KSamplerSelect": {
        "input": {
            "required": {
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ]
            }
        },
        "output": [
            "SAMPLER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAMPLER"
        ],
        "name": "KSamplerSelect",
        "display_name": "KSamplerSelect",
        "description": "",
        "category": "sampling/custom_sampling/samplers",
        "output_node": false
    },
    "SamplerDPMPP_2M_SDE": {
        "input": {
            "required": {
                "solver_type": [
                    [
                        "midpoint",
                        "heun"
                    ]
                ],
                "eta": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "s_noise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "noise_device": [
                    [
                        "gpu",
                        "cpu"
                    ]
                ]
            }
        },
        "output": [
            "SAMPLER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAMPLER"
        ],
        "name": "SamplerDPMPP_2M_SDE",
        "display_name": "SamplerDPMPP_2M_SDE",
        "description": "",
        "category": "sampling/custom_sampling/samplers",
        "output_node": false
    },
    "SamplerDPMPP_SDE": {
        "input": {
            "required": {
                "eta": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "s_noise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "r": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01,
                        "round": false
                    }
                ],
                "noise_device": [
                    [
                        "gpu",
                        "cpu"
                    ]
                ]
            }
        },
        "output": [
            "SAMPLER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAMPLER"
        ],
        "name": "SamplerDPMPP_SDE",
        "display_name": "SamplerDPMPP_SDE",
        "description": "",
        "category": "sampling/custom_sampling/samplers",
        "output_node": false
    },
    "SplitSigmas": {
        "input": {
            "required": {
                "sigmas": [
                    "SIGMAS"
                ],
                "step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "SIGMAS",
            "SIGMAS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SIGMAS",
            "SIGMAS"
        ],
        "name": "SplitSigmas",
        "display_name": "SplitSigmas",
        "description": "",
        "category": "sampling/custom_sampling/sigmas",
        "output_node": false
    },
    "FlipSigmas": {
        "input": {
            "required": {
                "sigmas": [
                    "SIGMAS"
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "FlipSigmas",
        "display_name": "FlipSigmas",
        "description": "",
        "category": "sampling/custom_sampling/sigmas",
        "output_node": false
    },
    "HyperTile": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 256,
                        "min": 1,
                        "max": 2048
                    }
                ],
                "swap_size": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 128
                    }
                ],
                "max_depth": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10
                    }
                ],
                "scale_depth": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "HyperTile",
        "display_name": "HyperTile",
        "description": "",
        "category": "model_patches",
        "output_node": false
    },
    "ModelSamplingDiscrete": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "sampling": [
                    [
                        "eps",
                        "v_prediction",
                        "lcm",
                        "x0"
                    ]
                ],
                "zsnr": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelSamplingDiscrete",
        "display_name": "ModelSamplingDiscrete",
        "description": "",
        "category": "advanced/model",
        "output_node": false
    },
    "ModelSamplingContinuousEDM": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "sampling": [
                    [
                        "v_prediction",
                        "eps"
                    ]
                ],
                "sigma_max": [
                    "FLOAT",
                    {
                        "default": 120.0,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.001,
                        "round": false
                    }
                ],
                "sigma_min": [
                    "FLOAT",
                    {
                        "default": 0.002,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.001,
                        "round": false
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelSamplingContinuousEDM",
        "display_name": "ModelSamplingContinuousEDM",
        "description": "",
        "category": "advanced/model",
        "output_node": false
    },
    "ModelSamplingStableCascade": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "shift": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelSamplingStableCascade",
        "display_name": "ModelSamplingStableCascade",
        "description": "",
        "category": "advanced/model",
        "output_node": false
    },
    "RescaleCFG": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "RescaleCFG",
        "display_name": "RescaleCFG",
        "description": "",
        "category": "advanced/model",
        "output_node": false
    },
    "PatchModelAddDownscale": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "block_number": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 32,
                        "step": 1
                    }
                ],
                "downscale_factor": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.1,
                        "max": 9.0,
                        "step": 0.001
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent": [
                    "FLOAT",
                    {
                        "default": 0.35,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "downscale_after_skip": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "downscale_method": [
                    [
                        "bicubic",
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bislerp"
                    ]
                ],
                "upscale_method": [
                    [
                        "bicubic",
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bislerp"
                    ]
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "PatchModelAddDownscale",
        "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "ImageCrop": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageCrop",
        "display_name": "ImageCrop",
        "description": "",
        "category": "image/transform",
        "output_node": false
    },
    "RepeatImageBatch": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "amount": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "RepeatImageBatch",
        "display_name": "RepeatImageBatch",
        "description": "",
        "category": "image/batch",
        "output_node": false
    },
    "ImageFromBatch": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "batch_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 63
                    }
                ],
                "length": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageFromBatch",
        "display_name": "ImageFromBatch",
        "description": "",
        "category": "image/batch",
        "output_node": false
    },
    "SaveAnimatedWEBP": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ],
                "fps": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.01,
                        "max": 1000.0,
                        "step": 0.01
                    }
                ],
                "lossless": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "quality": [
                    "INT",
                    {
                        "default": 80,
                        "min": 0,
                        "max": 100
                    }
                ],
                "method": [
                    [
                        "default",
                        "fastest",
                        "slowest"
                    ]
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveAnimatedWEBP",
        "display_name": "SaveAnimatedWEBP",
        "description": "",
        "category": "image/animation",
        "output_node": true
    },
    "SaveAnimatedPNG": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ],
                "fps": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.01,
                        "max": 1000.0,
                        "step": 0.01
                    }
                ],
                "compress_level": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 9
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveAnimatedPNG",
        "display_name": "SaveAnimatedPNG",
        "description": "",
        "category": "image/animation",
        "output_node": true
    },
    "ImageOnlyCheckpointLoader": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP_VISION",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP_VISION",
            "VAE"
        ],
        "name": "ImageOnlyCheckpointLoader",
        "display_name": "Image Only Checkpoint Loader (img2vid model)",
        "description": "",
        "category": "loaders/video_models",
        "output_node": false
    },
    "SVD_img2vid_Conditioning": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "init_image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 576,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "video_frames": [
                    "INT",
                    {
                        "default": 14,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "motion_bucket_id": [
                    "INT",
                    {
                        "default": 127,
                        "min": 1,
                        "max": 1023
                    }
                ],
                "fps": [
                    "INT",
                    {
                        "default": 6,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "augmentation_level": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "SVD_img2vid_Conditioning",
        "display_name": "SVD_img2vid_Conditioning",
        "description": "",
        "category": "conditioning/video_models",
        "output_node": false
    },
    "VideoLinearCFGGuidance": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "min_cfg": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.5,
                        "round": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "VideoLinearCFGGuidance",
        "display_name": "VideoLinearCFGGuidance",
        "description": "",
        "category": "sampling/video_models",
        "output_node": false
    },
    "ImageOnlyCheckpointSave": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "vae": [
                    "VAE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "checkpoints/ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImageOnlyCheckpointSave",
        "display_name": "ImageOnlyCheckpointSave",
        "description": "",
        "category": "_for_testing",
        "output_node": true
    },
    "SelfAttentionGuidance": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "scale": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": -2.0,
                        "max": 5.0,
                        "step": 0.1
                    }
                ],
                "blur_sigma": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "SelfAttentionGuidance",
        "display_name": "Self-Attention Guidance",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "PerpNeg": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "empty_conditioning": [
                    "CONDITIONING"
                ],
                "neg_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "PerpNeg",
        "display_name": "Perp-Neg",
        "description": "",
        "category": "_for_testing",
        "output_node": false
    },
    "StableZero123_Conditioning": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "init_image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "elevation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ],
                "azimuth": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "StableZero123_Conditioning",
        "display_name": "StableZero123_Conditioning",
        "description": "",
        "category": "conditioning/3d_models",
        "output_node": false
    },
    "StableZero123_Conditioning_Batched": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "init_image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "elevation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ],
                "azimuth": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ],
                "elevation_batch_increment": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ],
                "azimuth_batch_increment": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -180.0,
                        "max": 180.0
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "StableZero123_Conditioning_Batched",
        "display_name": "StableZero123_Conditioning_Batched",
        "description": "",
        "category": "conditioning/3d_models",
        "output_node": false
    },
    "SD_4XUpscale_Conditioning": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "scale_ratio": [
                    "FLOAT",
                    {
                        "default": 4.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "noise_augmentation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "SD_4XUpscale_Conditioning",
        "display_name": "SD_4XUpscale_Conditioning",
        "description": "",
        "category": "conditioning/upscale_diffusion",
        "output_node": false
    },
    "PhotoMakerLoader": {
        "input": {
            "required": {
                "photomaker_model_name": [
                    []
                ]
            }
        },
        "output": [
            "PHOTOMAKER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PHOTOMAKER"
        ],
        "name": "PhotoMakerLoader",
        "display_name": "PhotoMakerLoader",
        "description": "",
        "category": "_for_testing/photomaker",
        "output_node": false
    },
    "PhotoMakerEncode": {
        "input": {
            "required": {
                "photomaker": [
                    "PHOTOMAKER"
                ],
                "image": [
                    "IMAGE"
                ],
                "clip": [
                    "CLIP"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "photograph of photomaker"
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "PhotoMakerEncode",
        "display_name": "PhotoMakerEncode",
        "description": "",
        "category": "_for_testing/photomaker",
        "output_node": false
    },
    "CLIPTextEncodeControlnet": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "conditioning": [
                    "CONDITIONING"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncodeControlnet",
        "display_name": "CLIPTextEncodeControlnet",
        "description": "",
        "category": "_for_testing/conditioning",
        "output_node": false
    },
    "StableCascade_EmptyLatentImage": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "compression": [
                    "INT",
                    {
                        "default": 42,
                        "min": 4,
                        "max": 128,
                        "step": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "stage_c",
            "stage_b"
        ],
        "name": "StableCascade_EmptyLatentImage",
        "display_name": "StableCascade_EmptyLatentImage",
        "description": "",
        "category": "_for_testing/stable_cascade",
        "output_node": false
    },
    "StableCascade_StageB_Conditioning": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "stage_c": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "StableCascade_StageB_Conditioning",
        "display_name": "StableCascade_StageB_Conditioning",
        "description": "",
        "category": "_for_testing/stable_cascade",
        "output_node": false
    },
    "StableCascade_StageC_VAEEncode": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "compression": [
                    "INT",
                    {
                        "default": 42,
                        "min": 4,
                        "max": 128,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "stage_c",
            "stage_b"
        ],
        "name": "StableCascade_StageC_VAEEncode",
        "display_name": "StableCascade_StageC_VAEEncode",
        "description": "",
        "category": "_for_testing/stable_cascade",
        "output_node": false
    },
    "CR Image Output": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "output_type": [
                    [
                        "Preview",
                        "Save",
                        "UI (no batch)"
                    ]
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "CR"
                    }
                ],
                "prefix_presets": [
                    [
                        "None",
                        "yyyyMMdd"
                    ]
                ],
                "file_format": [
                    [
                        "png",
                        "jpg",
                        "webp",
                        "tif"
                    ]
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            },
            "optional": {
                "trigger": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "trigger"
        ],
        "name": "CR Image Output",
        "display_name": "\ud83d\udcbe CR Image Output",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": true
    },
    "CR Latent Batch Size": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "CR Latent Batch Size",
        "display_name": "\u2699\ufe0f CR Latent Batch Size",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR Conditioning Mixer": {
        "input": {
            "required": {
                "conditioning_1": [
                    "CONDITIONING"
                ],
                "conditioning_2": [
                    "CONDITIONING"
                ],
                "mix_method": [
                    [
                        "Combine",
                        "Average",
                        "Concatenate"
                    ]
                ],
                "average_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "show_help"
        ],
        "name": "CR Conditioning Mixer",
        "display_name": "\u2699\ufe0f CR Conditioning Mixer",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR Select Model": {
        "input": {
            "required": {
                "ckpt_name1": [
                    [
                        "None"
                    ]
                ],
                "ckpt_name2": [
                    [
                        "None"
                    ]
                ],
                "ckpt_name3": [
                    [
                        "None"
                    ]
                ],
                "ckpt_name4": [
                    [
                        "None"
                    ]
                ],
                "ckpt_name5": [
                    [
                        "None"
                    ]
                ],
                "select_model": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 5
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "ckpt_name",
            "show_help"
        ],
        "name": "CR Select Model",
        "display_name": "\ud83d\udd2e CR Select Model",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR Seed": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "seed",
            "show_help"
        ],
        "name": "CR Seed",
        "display_name": "\ud83c\udf31 CR Seed",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": true
    },
    "CR Prompt Text": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "default": "prompt",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "prompt",
            "show_help"
        ],
        "name": "CR Prompt Text",
        "display_name": "\u2699\ufe0f CR Prompt Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR Combine Prompt": {
        "input": {
            "required": {},
            "optional": {
                "part1": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ],
                "part2": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ],
                "part3": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ],
                "part4": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ],
                "separator": [
                    "STRING",
                    {
                        "default": ",",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "prompt",
            "show_help"
        ],
        "name": "CR Combine Prompt",
        "display_name": "\u2699\ufe0f CR Combine Prompt",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR VAE Decode": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "tiled": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "circular": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR VAE Decode",
        "display_name": "\u2699\ufe0f CR VAE Decode",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core",
        "output_node": false
    },
    "CR Text List": {
        "input": {
            "required": {
                "multiline_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999
                    }
                ],
                "max_rows": [
                    "INT",
                    {
                        "default": 1000,
                        "min": 1,
                        "max": 9999
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text List",
        "display_name": "\ud83d\udcdc CR Text List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Prompt List": {
        "input": {
            "required": {
                "prepend_text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "multiline_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "body_text"
                    }
                ],
                "append_text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999
                    }
                ],
                "max_rows": [
                    "INT",
                    {
                        "default": 1000,
                        "min": 1,
                        "max": 9999
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            true,
            true,
            false
        ],
        "output_name": [
            "prompt",
            "body_text",
            "show_help"
        ],
        "name": "CR Prompt List",
        "display_name": "\ud83d\udcdc CR Prompt List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Simple List": {
        "input": {
            "required": {
                "list_values": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "LIST",
            "show_help"
        ],
        "name": "CR Simple List",
        "display_name": "\ud83d\udcdc CR Simple List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Float Range List": {
        "input": {
            "required": {
                "start": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -99999.99,
                        "max": 99999.99,
                        "step": 0.01
                    }
                ],
                "end": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -99999.99,
                        "max": 99999.99,
                        "step": 0.01
                    }
                ],
                "step": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -99999.99,
                        "max": 99999.99,
                        "step": 0.01
                    }
                ],
                "operation": [
                    [
                        "none",
                        "sin",
                        "cos",
                        "tan"
                    ]
                ],
                "decimal_places": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 10
                    }
                ],
                "ignore_first_value": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "max_values_per_loop": [
                    "INT",
                    {
                        "default": 128,
                        "min": 1,
                        "max": 99999
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999
                    }
                ],
                "ping_pong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "FLOAT",
            "show_help"
        ],
        "name": "CR Float Range List",
        "display_name": "\ud83d\udcdc CR Float Range List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Integer Range List": {
        "input": {
            "required": {
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": -99999,
                        "max": 99999
                    }
                ],
                "end": [
                    "INT",
                    {
                        "default": 0,
                        "min": -99999,
                        "max": 99999
                    }
                ],
                "step": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999
                    }
                ],
                "ping_pong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Integer Range List",
        "display_name": "\ud83d\udcdc CR Integer Range List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Load Text List": {
        "input": {
            "required": {
                "input_file_path": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_name": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_extension": [
                    [
                        "txt",
                        "csv"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Load Text List",
        "display_name": "\ud83d\udcdc CR Load Text List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Binary To Bit List": {
        "input": {
            "required": {
                "bit_string": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Binary To Bit List",
        "display_name": "\ud83d\udcdc CR Binary To Bit List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Text Cycler": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ],
                "repeats": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "STRING",
            "show_text"
        ],
        "name": "CR Text Cycler",
        "display_name": "\ud83d\udcdc CR Text Cycler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Value Cycler": {
        "input": {
            "required": {
                "values": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ],
                "repeats": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            true,
            true,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT",
            "show_text"
        ],
        "name": "CR Value Cycler",
        "display_name": "\ud83d\udcdc CR Value Cycler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List",
        "output_node": false
    },
    "CR Load Image List": {
        "input": {
            "required": {
                "input_folder": [
                    [
                        "__inputs__"
                    ]
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999
                    }
                ],
                "max_images": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 9999
                    }
                ]
            },
            "optional": {
                "input_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Load Image List",
        "display_name": "\u2328\ufe0f CR Load Image List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Load Image List Plus": {
        "input": {
            "required": {
                "input_folder": [
                    [
                        "__inputs__"
                    ]
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 99999
                    }
                ],
                "max_images": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            },
            "optional": {
                "input_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "INT",
            "STRING",
            "INT",
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            true,
            true,
            true,
            true,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "index",
            "filename",
            "width",
            "height",
            "list_length",
            "show_help"
        ],
        "name": "CR Load Image List Plus",
        "display_name": "\u2328\ufe0f CR Load Image List Plus",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Load GIF As List": {
        "input": {
            "required": {
                "input_folder": [
                    []
                ],
                "gif_filename": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "text"
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 99999
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            },
            "optional": {
                "input_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "STRING"
        ],
        "output_is_list": [
            true,
            true,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "show_help"
        ],
        "name": "CR Load GIF As List",
        "display_name": "\u2328\ufe0f CR Load GIF As List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Font File List": {
        "input": {
            "required": {
                "source_folder": [
                    [
                        "system",
                        "Comfyroll",
                        "from folder"
                    ]
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999
                    }
                ],
                "max_rows": [
                    "INT",
                    {
                        "default": 1000,
                        "min": 1,
                        "max": 9999
                    }
                ]
            },
            "optional": {
                "folder_path": [
                    "STRING",
                    {
                        "default": "C:\\Windows\\Fonts",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "LIST",
            "show_help"
        ],
        "name": "CR Font File List",
        "display_name": "\u2328\ufe0f CR Font File List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Batch Images From List": {
        "input": {
            "required": {
                "image_list": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image_batch",
            "show_help"
        ],
        "name": "CR Batch Images From List",
        "display_name": "\ud83d\udee0\ufe0f CR Batch Images From List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR Intertwine Lists": {
        "input": {
            "required": {
                "list1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "",
                        "forceInput": true
                    }
                ],
                "list2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "",
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Intertwine Lists",
        "display_name": "\ud83d\udee0\ufe0f CR Intertwine Lists",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR Repeater": {
        "input": {
            "required": {
                "input_data": [
                    "*"
                ],
                "repeats": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            true,
            false
        ],
        "output_name": [
            "list",
            "show_help"
        ],
        "name": "CR Repeater",
        "display_name": "\ud83d\udee0\ufe0f CR Repeater",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR XY Product": {
        "input": {
            "required": {
                "text_x": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "text_y": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "*",
            "*",
            "STRING"
        ],
        "output_is_list": [
            true,
            true,
            false
        ],
        "output_name": [
            "x_values",
            "y_values",
            "show_help"
        ],
        "name": "CR XY Product",
        "display_name": "\ud83d\udee0\ufe0f CR XY Product",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR Text List To String": {
        "input": {
            "required": {
                "text_list": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text List To String",
        "display_name": "\ud83d\udee0\ufe0f CR Text List To String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR SD1.5 Aspect Ratio": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "1:1 square 512x512",
                        "1:1 square 1024x1024",
                        "2:3 portrait 512x768",
                        "3:4 portrait 512x682",
                        "3:2 landscape 768x512",
                        "4:3 landscape 682x512",
                        "16:9 cinema 910x512",
                        "1.85:1 cinema 952x512",
                        "2:1 cinema 1024x512",
                        "2.39:1 anamorphic 1224x512"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR SD1.5 Aspect Ratio",
        "display_name": "\ud83d\udd33 CR SD1.5 Aspect Ratio",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR SDXL Aspect Ratio": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "1:1 square 1024x1024",
                        "3:4 portrait 896x1152",
                        "5:8 portrait 832x1216",
                        "9:16 portrait 768x1344",
                        "9:21 portrait 640x1536",
                        "4:3 landscape 1152x896",
                        "3:2 landscape 1216x832",
                        "16:9 landscape 1344x768",
                        "21:9 landscape 1536x640"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR SDXL Aspect Ratio",
        "display_name": "\ud83d\udd33 CR SDXL Aspect Ratio",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR Aspect Ratio": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "SD1.5 - 1:1 square 512x512",
                        "SD1.5 - 2:3 portrait 512x768",
                        "SD1.5 - 3:4 portrait 512x682",
                        "SD1.5 - 3:2 landscape 768x512",
                        "SD1.5 - 4:3 landscape 682x512",
                        "SD1.5 - 16:9 cinema 910x512",
                        "SD1.5 - 1.85:1 cinema 952x512",
                        "SD1.5 - 2:1 cinema 1024x512",
                        "SDXL - 1:1 square 1024x1024",
                        "SDXL - 3:4 portrait 896x1152",
                        "SDXL - 5:8 portrait 832x1216",
                        "SDXL - 9:16 portrait 768x1344",
                        "SDXL - 9:21 portrait 640x1536",
                        "SDXL - 4:3 landscape 1152x896",
                        "SDXL - 3:2 landscape 1216x832",
                        "SDXL - 16:9 landscape 1344x768",
                        "SDXL - 21:9 landscape 1536x640"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "prescale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "prescale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR Aspect Ratio",
        "display_name": "\ud83d\udd33 CR Aspect Ratio",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR Aspect Ratio Banners": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "Large Rectangle - 336x280",
                        "Medium Rectangle - 300x250",
                        "Small Rectangle - 180x150",
                        "Square - 250x250",
                        "Small Square - 200x200",
                        "Button - 125x125",
                        "Half Page - 300x600",
                        "Vertical Banner - 120x240",
                        "Wide Skyscraper - 160x600",
                        "Skyscraper - 120x600",
                        "Billboard - 970x250",
                        "Portrait - 300x1050",
                        "Banner - 468x60",
                        "Leaderboard - 728x90"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "prescale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "prescale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR Aspect Ratio Banners",
        "display_name": "\ud83d\udd33 CR Aspect Ratio Banners",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR Aspect Ratio Social Media": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "Instagram Portrait - 1080x1350",
                        "Instagram Square - 1080x1080",
                        "Instagram Landscape - 1080x608",
                        "Instagram Stories/Reels - 1080x1920",
                        "Facebook Landscape - 1080x1350",
                        "Facebook Marketplace - 1200x1200",
                        "Facebook Stories - 1080x1920",
                        "TikTok - 1080x1920",
                        "YouTube Banner - 2560\u00d71440",
                        "LinkedIn Profile Banner - 1584x396",
                        "LinkedIn Page Cover - 1128x191",
                        "LinkedIn Post - 1200x627",
                        "Pinterest Pin Image - 1000x1500",
                        "CivitAI Cover - 1600x400",
                        "OpenArt App - 1500x1000"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "prescale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "prescale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR Aspect Ratio Social Media",
        "display_name": "\ud83d\udd33 CR Aspect Ratio Social Media",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR_Aspect Ratio For Print": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "aspect_ratio": [
                    [
                        "A4 - 2480x3508",
                        "A5 - 1748x2480",
                        "A6 - 1240x1748",
                        "A7 - 874x1240",
                        "A8 - 614x874",
                        "A9 - 437x614",
                        "A10 - 307x437",
                        "B4 - 2953x4169",
                        "B5 - 2079x2953",
                        "B6 - 1476x2079",
                        "B7 - 1039x1476",
                        "B8 - 732x1039",
                        "B9 - 520x732",
                        "B10 - 366x520",
                        "C4 - 2705x3827",
                        "C5 - 1913x2705",
                        "C6 - 1346x1913",
                        "C7 - 957x1346",
                        "C8 - 673x957",
                        "C9 - 472x673",
                        "C10 - 331x472",
                        "Letter (8.5 x 11 inches) - 2550x3300",
                        "Legal (8.5 x 14 inches) - 2550x4200"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "prescale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "upscale_factor",
            "prescale_factor",
            "batch_size",
            "empty_latent",
            "show_help"
        ],
        "name": "CR_Aspect Ratio For Print",
        "display_name": "\ud83d\udd33 CR_Aspect Ratio For Print",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio",
        "output_node": false
    },
    "CR Image Size": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2000
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "Width",
            "Height",
            "upscale_factor",
            "show_help"
        ],
        "name": "CR Image Size",
        "display_name": "CR Image Size (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Aspect Ratio SDXL": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "aspect_ratio": [
                    [
                        "custom",
                        "1:1 square 1024x1024",
                        "3:4 portrait 896x1152",
                        "5:8 portrait 832x1216",
                        "9:16 portrait 768x1344",
                        "9:21 portrait 640x1536",
                        "4:3 landscape 1152x896",
                        "3:2 landscape 1216x832",
                        "16:9 landscape 1344x768",
                        "21:9 landscape 1536x640"
                    ]
                ],
                "swap_dimensions": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "upscale_factor1": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2000
                    }
                ],
                "upscale_factor2": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2000
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "FLOAT",
            "FLOAT",
            "INT",
            "show_help"
        ],
        "name": "CR Aspect Ratio SDXL",
        "display_name": "CR Aspect Ratio SDXL (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR SDXL Prompt Mixer": {
        "input": {
            "required": {},
            "optional": {
                "prompt_positive": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "BASE_POSITIVE"
                    }
                ],
                "prompt_negative": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "BASE_NEGATIVE"
                    }
                ],
                "style_positive": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "REFINER_POSTIVE"
                    }
                ],
                "style_negative": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "REFINER_NEGATIVE"
                    }
                ],
                "preset": [
                    [
                        "preset 1",
                        "preset 2",
                        "preset 3",
                        "preset 4",
                        "preset 5"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pos_g",
            "pos_l",
            "pos_r",
            "neg_g",
            "neg_l",
            "neg_r"
        ],
        "name": "CR SDXL Prompt Mixer",
        "display_name": "CR SDXL Prompt Mixer (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Seed to Int": {
        "input": {
            "required": {
                "seed": [
                    "SEED"
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Seed to Int",
        "display_name": "CR Seed to Int (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Apply ControlNet": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "switch": [
                    [
                        "On",
                        "Off"
                    ]
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "show_help"
        ],
        "name": "CR Apply ControlNet",
        "display_name": "\ud83d\udd79\ufe0f CR Apply ControlNet",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
        "output_node": false
    },
    "CR Multi-ControlNet Stack": {
        "input": {
            "required": {},
            "optional": {
                "switch_1": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "controlnet_1": [
                    [
                        "None"
                    ]
                ],
                "controlnet_strength_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent_1": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "switch_2": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "controlnet_2": [
                    [
                        "None"
                    ]
                ],
                "controlnet_strength_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent_2": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "switch_3": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "controlnet_3": [
                    [
                        "None"
                    ]
                ],
                "controlnet_strength_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent_3": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "image_1": [
                    "IMAGE"
                ],
                "image_2": [
                    "IMAGE"
                ],
                "image_3": [
                    "IMAGE"
                ],
                "controlnet_stack": [
                    "CONTROL_NET_STACK"
                ]
            }
        },
        "output": [
            "CONTROL_NET_STACK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONTROLNET_STACK",
            "show_help"
        ],
        "name": "CR Multi-ControlNet Stack",
        "display_name": "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
        "output_node": false
    },
    "CR Apply Multi-ControlNet": {
        "input": {
            "required": {
                "base_positive": [
                    "CONDITIONING"
                ],
                "base_negative": [
                    "CONDITIONING"
                ],
                "switch": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "controlnet_stack": [
                    "CONTROL_NET_STACK"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "base_pos",
            "base_neg",
            "show_help"
        ],
        "name": "CR Apply Multi-ControlNet",
        "display_name": "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet",
        "output_node": false
    },
    "CR Load LoRA": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "switch": [
                    [
                        "On",
                        "Off"
                    ]
                ],
                "lora_name": [
                    [
                        "None"
                    ]
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "show_help"
        ],
        "name": "CR Load LoRA",
        "display_name": "\ud83d\udc8a CR Load LoRA",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
        "output_node": false
    },
    "CR LoRA Stack": {
        "input": {
            "required": {
                "switch_1": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "lora_name_1": [
                    [
                        "None"
                    ]
                ],
                "model_weight_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "switch_2": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "lora_name_2": [
                    [
                        "None"
                    ]
                ],
                "model_weight_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "switch_3": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "lora_name_3": [
                    [
                        "None"
                    ]
                ],
                "model_weight_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "lora_stack": [
                    "LORA_STACK"
                ]
            }
        },
        "output": [
            "LORA_STACK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LORA_STACK",
            "show_help"
        ],
        "name": "CR LoRA Stack",
        "display_name": "\ud83d\udc8a CR LoRA Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
        "output_node": false
    },
    "CR Random LoRA Stack": {
        "input": {
            "required": {
                "exclusive_mode": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "force_randomize_after_stride": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "lora_name_1": [
                    [
                        "None"
                    ]
                ],
                "switch_1": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "chance_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "model_weight_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_name_2": [
                    [
                        "None"
                    ]
                ],
                "switch_2": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "chance_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "model_weight_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_name_3": [
                    [
                        "None"
                    ]
                ],
                "switch_3": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "chance_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "model_weight_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "lora_stack": [
                    "LORA_STACK"
                ]
            }
        },
        "output": [
            "LORA_STACK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LORA_STACK"
        ],
        "name": "CR Random LoRA Stack",
        "display_name": "\ud83d\udc8a CR Random LoRA Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
        "output_node": false
    },
    "CR Random Weight LoRA": {
        "input": {
            "required": {
                "stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "force_randomize_after_stride": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "lora_name": [
                    [
                        "None"
                    ]
                ],
                "switch": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "weight_min": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "weight_max": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_weight": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "lora_stack": [
                    "LORA_STACK"
                ]
            }
        },
        "output": [
            "LORA_STACK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LORA_STACK"
        ],
        "name": "CR Random Weight LoRA",
        "display_name": "\ud83d\udc8a CR Random Weight LoRA",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
        "output_node": false
    },
    "CR Apply LoRA Stack": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_stack": [
                    "LORA_STACK"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "show_help"
        ],
        "name": "CR Apply LoRA Stack",
        "display_name": "\ud83d\udc8a CR Apply LoRA Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA",
        "output_node": false
    },
    "CR Apply Model Merge": {
        "input": {
            "required": {
                "model_stack": [
                    "MODEL_STACK"
                ],
                "merge_method": [
                    [
                        "Recursive",
                        "Weighted"
                    ]
                ],
                "normalise_ratios": [
                    [
                        "Yes",
                        "No"
                    ]
                ],
                "weight_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "model_mix_info",
            "show_help"
        ],
        "name": "CR Apply Model Merge",
        "display_name": "\u26cf\ufe0f CR Apply Model Merge",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge",
        "output_node": false
    },
    "CR Model Merge Stack": {
        "input": {
            "required": {
                "switch_1": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "ckpt_name1": [
                    [
                        "None"
                    ]
                ],
                "model_ratio1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "clip_ratio1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "switch_2": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "ckpt_name2": [
                    [
                        "None"
                    ]
                ],
                "model_ratio2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "clip_ratio2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "switch_3": [
                    [
                        "Off",
                        "On"
                    ]
                ],
                "ckpt_name3": [
                    [
                        "None"
                    ]
                ],
                "model_ratio3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "clip_ratio3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -100.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "model_stack": [
                    "MODEL_STACK"
                ]
            }
        },
        "output": [
            "MODEL_STACK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL_STACK",
            "show_help"
        ],
        "name": "CR Model Merge Stack",
        "display_name": "\u26cf\ufe0f CR Model Merge Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge",
        "output_node": false
    },
    "CR Data Bus In": {
        "input": {
            "required": {},
            "optional": {
                "pipe": [
                    "*"
                ],
                "any1": [
                    "*"
                ],
                "any2": [
                    "*"
                ],
                "any3": [
                    "*"
                ],
                "any4": [
                    "*"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR Data Bus In",
        "display_name": "\ud83d\ude8c CR Data Bus In",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
        "output_node": false
    },
    "CR Data Bus Out": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "*",
            "*",
            "*",
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pipe",
            "any1",
            "any2",
            "any3",
            "any4",
            "show_help"
        ],
        "name": "CR Data Bus Out",
        "display_name": "\ud83d\ude8c CR Data Bus Out",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
        "output_node": false
    },
    "CR 8 Channel In": {
        "input": {
            "required": {},
            "optional": {
                "pipe": [
                    "*"
                ],
                "ch1": [
                    "*"
                ],
                "ch2": [
                    "*"
                ],
                "ch3": [
                    "*"
                ],
                "ch4": [
                    "*"
                ],
                "ch5": [
                    "*"
                ],
                "ch6": [
                    "*"
                ],
                "ch7": [
                    "*"
                ],
                "ch8": [
                    "*"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR 8 Channel In",
        "display_name": "\ud83d\ude8c CR 8 Channel In",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
        "output_node": false
    },
    "CR 8 Channel Out": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pipe",
            "ch1",
            "ch2",
            "ch3",
            "ch4",
            "ch5",
            "ch6",
            "ch7",
            "ch8",
            "show_help"
        ],
        "name": "CR 8 Channel Out",
        "display_name": "\ud83d\ude8c CR 8 Channel Out",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus",
        "output_node": false
    },
    "CR Module Pipe Loader": {
        "input": {
            "required": {},
            "optional": {
                "model": [
                    "MODEL"
                ],
                "pos": [
                    "CONDITIONING"
                ],
                "neg": [
                    "CONDITIONING"
                ],
                "latent": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "clip": [
                    "CLIP"
                ],
                "controlnet": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR Module Pipe Loader",
        "display_name": "\u2708\ufe0f CR Module Pipe Loader",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
        "output_node": false
    },
    "CR Module Input": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "MODEL",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "VAE",
            "CLIP",
            "CONTROL_NET",
            "IMAGE",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pipe",
            "model",
            "pos",
            "neg",
            "latent",
            "vae",
            "clip",
            "controlnet",
            "image",
            "seed",
            "show_help"
        ],
        "name": "CR Module Input",
        "display_name": "\u2708\ufe0f CR Module Input",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
        "output_node": false
    },
    "CR Module Output": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            },
            "optional": {
                "model": [
                    "MODEL"
                ],
                "pos": [
                    "CONDITIONING"
                ],
                "neg": [
                    "CONDITIONING"
                ],
                "latent": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "clip": [
                    "CLIP"
                ],
                "controlnet": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR Module Output",
        "display_name": "\u2708\ufe0f CR Module Output",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module",
        "output_node": false
    },
    "CR Image Pipe In": {
        "input": {
            "required": {},
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2000
                    }
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR Image Pipe In",
        "display_name": "\ud83d\udee9 CR Image Pipe In",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
        "output_node": false
    },
    "CR Image Pipe Edit": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "forceInput": true
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "forceInput": true
                    }
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2000,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "pipe",
            "show_help"
        ],
        "name": "CR Image Pipe Edit",
        "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Edit",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
        "output_node": false
    },
    "CR Image Pipe Out": {
        "input": {
            "required": {
                "pipe": [
                    "PIPE_LINE"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "IMAGE",
            "INT",
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pipe",
            "image",
            "width",
            "height",
            "upscale_factor",
            "show_help"
        ],
        "name": "CR Image Pipe Out",
        "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Out",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image",
        "output_node": false
    },
    "CR Pipe Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ],
                "pipe1": [
                    "PIPE_LINE"
                ],
                "pipe2": [
                    "PIPE_LINE"
                ]
            }
        },
        "output": [
            "PIPE_LINE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "PIPE_LINE",
            "show_help"
        ],
        "name": "CR Pipe Switch",
        "display_name": "\ud83d\udd00\ufe0f CR Pipe Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe",
        "output_node": true
    },
    "CR SDXL Prompt Mix Presets": {
        "input": {
            "required": {},
            "optional": {
                "prompt_positive": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt_pos"
                    }
                ],
                "prompt_negative": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt_neg"
                    }
                ],
                "style_positive": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "style_pos"
                    }
                ],
                "style_negative": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "style_neg"
                    }
                ],
                "preset": [
                    [
                        "default with no style text",
                        "default with style text",
                        "style boost 1",
                        "style boost 2",
                        "style text to refiner"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "pos_g",
            "pos_l",
            "pos_r",
            "neg_g",
            "neg_l",
            "neg_r",
            "show_help"
        ],
        "name": "CR SDXL Prompt Mix Presets",
        "display_name": "\ud83c\udf1f CR SDXL Prompt Mix Presets",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
        "output_node": false
    },
    "CR SDXL Style Text": {
        "input": {
            "required": {
                "positive_style": [
                    "STRING",
                    {
                        "default": "POS_STYLE",
                        "multiline": true
                    }
                ],
                "negative_style": [
                    "STRING",
                    {
                        "default": "NEG_STYLE",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive_prompt_text_l",
            "negative_prompt_text_l",
            "show_help"
        ],
        "name": "CR SDXL Style Text",
        "display_name": "\ud83c\udf1f CR SDXL Style Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
        "output_node": false
    },
    "CR SDXL Base Prompt Encoder": {
        "input": {
            "required": {
                "base_clip": [
                    "CLIP"
                ],
                "pos_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "POS_G"
                    }
                ],
                "pos_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "POS_L"
                    }
                ],
                "neg_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "NEG_G"
                    }
                ],
                "neg_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "NEG_L"
                    }
                ],
                "preset": [
                    [
                        "preset A",
                        "preset B",
                        "preset C"
                    ]
                ],
                "base_width": [
                    "INT",
                    {
                        "default": 4096.0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "base_height": [
                    "INT",
                    {
                        "default": 4096.0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 4096.0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 4096.0,
                        "min": 0,
                        "max": 8192,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "base_positive",
            "base_negative",
            "show_help"
        ],
        "name": "CR SDXL Base Prompt Encoder",
        "display_name": "\ud83c\udf1f CR SDXL Base Prompt Encoder",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL",
        "output_node": false
    },
    "CR Multi Upscale Stack": {
        "input": {
            "required": {
                "switch_1": [
                    [
                        "On",
                        "Off"
                    ]
                ],
                "upscale_model_1": [
                    [
                        "None"
                    ]
                ],
                "rescale_factor_1": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "switch_2": [
                    [
                        "On",
                        "Off"
                    ]
                ],
                "upscale_model_2": [
                    [
                        "None"
                    ]
                ],
                "rescale_factor_2": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "switch_3": [
                    [
                        "On",
                        "Off"
                    ]
                ],
                "upscale_model_3": [
                    [
                        "None"
                    ]
                ],
                "rescale_factor_3": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "upscale_stack": [
                    "UPSCALE_STACK"
                ]
            }
        },
        "output": [
            "UPSCALE_STACK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "UPSCALE_STACK",
            "show_help"
        ],
        "name": "CR Multi Upscale Stack",
        "display_name": "\ud83d\udd0d CR Multi Upscale Stack",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
        "output_node": false
    },
    "CR Upscale Image": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_model": [
                    []
                ],
                "mode": [
                    [
                        "rescale",
                        "resize"
                    ]
                ],
                "rescale_factor": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "resize_width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "resampling_method": [
                    [
                        "lanczos",
                        "nearest",
                        "bilinear",
                        "bicubic"
                    ]
                ],
                "supersample": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "rounding_modulus": [
                    "INT",
                    {
                        "default": 8,
                        "min": 8,
                        "max": 1024,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Upscale Image",
        "display_name": "\ud83d\udd0d CR Upscale Image",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
        "output_node": false
    },
    "CR Apply Multi Upscale": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "resampling_method": [
                    [
                        "lanczos",
                        "nearest",
                        "bilinear",
                        "bicubic"
                    ]
                ],
                "supersample": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "rounding_modulus": [
                    "INT",
                    {
                        "default": 8,
                        "min": 8,
                        "max": 1024,
                        "step": 8
                    }
                ],
                "upscale_stack": [
                    "UPSCALE_STACK"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Apply Multi Upscale",
        "display_name": "\ud83d\udd0d CR Apply Multi Upscale",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale",
        "output_node": false
    },
    "CR XY List": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "list1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "x"
                    }
                ],
                "x_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "x_append": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "x_annotation_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "list2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "y"
                    }
                ],
                "y_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "y_append": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "y_annotation_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "X",
            "Y",
            "x_annotation",
            "y_annotation",
            "trigger",
            "show_help"
        ],
        "name": "CR XY List",
        "display_name": "\ud83d\udcc9 CR XY List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
        "output_node": false
    },
    "CR XY Interpolate": {
        "input": {
            "required": {
                "x_columns": [
                    "INT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "x_start_value": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "x_step": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "x_annotation_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "y_rows": [
                    "INT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_start_value": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "y_step": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "y_annotation_prepend": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "gradient_profile": [
                    [
                        "Lerp"
                    ]
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT",
            "STRING",
            "STRING",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "X",
            "Y",
            "x_annotation",
            "y_annotation",
            "trigger",
            "show_help"
        ],
        "name": "CR XY Interpolate",
        "display_name": "\ud83d\udcc9 CR XY Interpolate",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
        "output_node": false
    },
    "CR XY From Folder": {
        "input": {
            "required": {
                "image_folder": [
                    [
                        "__inputs__"
                    ]
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "max_columns": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "x_annotation": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "y_annotation": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1
                    }
                ],
                "gap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            },
            "optional": {
                "trigger": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "trigger",
            "show_help"
        ],
        "name": "CR XY From Folder",
        "display_name": "\ud83d\udcc9 CR XY From Folder",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
        "output_node": false
    },
    "CR XY Save Grid Image": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Save",
                        "Preview"
                    ]
                ],
                "output_folder": [
                    []
                ],
                "image": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "CR"
                    }
                ],
                "file_format": [
                    [
                        "webp",
                        "jpg",
                        "png",
                        "tif"
                    ]
                ]
            },
            "optional": {
                "output_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "trigger": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CR XY Save Grid Image",
        "display_name": "\ud83d\udcc9 CR XY Save Grid Image",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
        "output_node": true
    },
    "CR XY Index": {
        "input": {
            "required": {
                "x_columns": [
                    "INT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_rows": [
                    "INT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "x",
            "y",
            "show_help"
        ],
        "name": "CR XY Index",
        "display_name": "\ud83d\udcc9 CR XY Index",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid",
        "output_node": false
    },
    "CR Halftone Grid": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "dot_style": [
                    [
                        "Accent",
                        "afmhot",
                        "autumn",
                        "binary",
                        "Blues",
                        "bone",
                        "BrBG",
                        "brg",
                        "BuGn",
                        "BuPu",
                        "bwr",
                        "cividis",
                        "CMRmap",
                        "cool",
                        "coolwarm",
                        "copper",
                        "cubehelix",
                        "Dark2",
                        "flag",
                        "gist_earth",
                        "gist_gray",
                        "gist_heat",
                        "gist_rainbow",
                        "gist_stern",
                        "gist_yarg",
                        "GnBu",
                        "gnuplot",
                        "gnuplot2",
                        "gray",
                        "Greens",
                        "Greys",
                        "hot",
                        "hsv",
                        "inferno",
                        "jet",
                        "magma",
                        "nipy_spectral",
                        "ocean",
                        "Oranges",
                        "OrRd",
                        "Paired",
                        "Pastel1",
                        "Pastel2",
                        "pink",
                        "PiYG",
                        "plasma",
                        "PRGn",
                        "prism",
                        "PuBu",
                        "PuBuGn",
                        "PuOr",
                        "PuRd",
                        "Purples",
                        "rainbow",
                        "RdBu",
                        "RdGy",
                        "RdPu",
                        "RdYlBu",
                        "RdYlGn",
                        "Reds",
                        "seismic",
                        "Set1",
                        "Set2",
                        "Set3",
                        "Spectral",
                        "spring",
                        "summer",
                        "tab10",
                        "tab20",
                        "tab20b",
                        "tab20c",
                        "terrain",
                        "turbo",
                        "twilight",
                        "twilight_shifted",
                        "viridis",
                        "winter",
                        "Wistia",
                        "YlGn",
                        "YlGnBu",
                        "YlOrBr",
                        "YlOrRd"
                    ]
                ],
                "reverse_dot_style": [
                    [
                        "No",
                        "Yes"
                    ]
                ],
                "dot_frequency": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 200,
                        "step": 1
                    }
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "x_pos": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.01
                    }
                ],
                "y_pos": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Halftone Grid",
        "display_name": "\ud83d\udfeb CR Halftone Grid",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Color Bars": {
        "input": {
            "required": {
                "mode": [
                    [
                        "2-color"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "color_1": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color_2": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "orientation": [
                    [
                        "vertical",
                        "horizontal",
                        "diagonal",
                        "alt_diagonal"
                    ]
                ],
                "bar_frequency": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 200,
                        "step": 1
                    }
                ],
                "offset": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 20,
                        "step": 0.05
                    }
                ]
            },
            "optional": {
                "color1_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color2_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Color Bars",
        "display_name": "\ud83d\udfeb CR Color Bars",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Style Bars": {
        "input": {
            "required": {
                "mode": [
                    [
                        "color bars",
                        "sin wave",
                        "gradient bars"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "bar_style": [
                    [
                        "Accent",
                        "afmhot",
                        "autumn",
                        "binary",
                        "Blues",
                        "bone",
                        "BrBG",
                        "brg",
                        "BuGn",
                        "BuPu",
                        "bwr",
                        "cividis",
                        "CMRmap",
                        "cool",
                        "coolwarm",
                        "copper",
                        "cubehelix",
                        "Dark2",
                        "flag",
                        "gist_earth",
                        "gist_gray",
                        "gist_heat",
                        "gist_rainbow",
                        "gist_stern",
                        "gist_yarg",
                        "GnBu",
                        "gnuplot",
                        "gnuplot2",
                        "gray",
                        "Greens",
                        "Greys",
                        "hot",
                        "hsv",
                        "inferno",
                        "jet",
                        "magma",
                        "nipy_spectral",
                        "ocean",
                        "Oranges",
                        "OrRd",
                        "Paired",
                        "Pastel1",
                        "Pastel2",
                        "pink",
                        "PiYG",
                        "plasma",
                        "PRGn",
                        "prism",
                        "PuBu",
                        "PuBuGn",
                        "PuOr",
                        "PuRd",
                        "Purples",
                        "rainbow",
                        "RdBu",
                        "RdGy",
                        "RdPu",
                        "RdYlBu",
                        "RdYlGn",
                        "Reds",
                        "seismic",
                        "Set1",
                        "Set2",
                        "Set3",
                        "Spectral",
                        "spring",
                        "summer",
                        "tab10",
                        "tab20",
                        "tab20b",
                        "tab20c",
                        "terrain",
                        "turbo",
                        "twilight",
                        "twilight_shifted",
                        "viridis",
                        "winter",
                        "Wistia",
                        "YlGn",
                        "YlGnBu",
                        "YlOrBr",
                        "YlOrRd"
                    ]
                ],
                "orientation": [
                    [
                        "vertical",
                        "horizontal"
                    ]
                ],
                "bar_frequency": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 200,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Style Bars",
        "display_name": "\ud83d\udfea CR Style Bars",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Checker Pattern": {
        "input": {
            "required": {
                "mode": [
                    [
                        "regular",
                        "stepped"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "color_1": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color_2": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "grid_frequency": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 200,
                        "step": 1
                    }
                ],
                "step": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 200,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "color1_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color2_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Checker Pattern",
        "display_name": "\ud83d\udfe6 CR Checker Pattern",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Polygons": {
        "input": {
            "required": {
                "mode": [
                    [
                        "hexagons",
                        "triangles"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 512
                    }
                ],
                "columns": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 512
                    }
                ],
                "face_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "line_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "line_width": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 512
                    }
                ]
            },
            "optional": {
                "face_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "line_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Polygons",
        "display_name": "\ud83d\udfe9 CR Polygons",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Color Gradient": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "start_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "end_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "gradient_distance": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 2,
                        "step": 0.05
                    }
                ],
                "linear_transition": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "orientation": [
                    [
                        "vertical",
                        "horizontal"
                    ]
                ]
            },
            "optional": {
                "start_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "end_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Color Gradient",
        "display_name": "\ud83d\udfe8 CR Color Gradient",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Radial Gradient": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "start_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "end_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "gradient_distance": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 2,
                        "step": 0.05
                    }
                ],
                "radial_center_x": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "radial_center_y": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            },
            "optional": {
                "start_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "end_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_Help"
        ],
        "name": "CR Radial Gradient",
        "display_name": "\ud83d\udfe8 CR Radial Gradient",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Starburst Lines": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "num_lines": [
                    "INT",
                    {
                        "default": 6,
                        "min": 1,
                        "max": 500
                    }
                ],
                "line_length": [
                    "FLOAT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "line_width": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 512
                    }
                ],
                "line_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "center_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "center_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "rotation": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 720
                    }
                ]
            },
            "optional": {
                "line_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Starburst Lines",
        "display_name": "\ud83d\udfe7 CR Starburst Lines",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Starburst Colors": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "num_triangles": [
                    "INT",
                    {
                        "default": 6,
                        "min": 1,
                        "max": 512
                    }
                ],
                "color_1": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color_2": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "center_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 512
                    }
                ],
                "center_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 512
                    }
                ],
                "rotation": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 720
                    }
                ],
                "bbox_factor": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 2,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "color1_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color2_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Starburst Colors",
        "display_name": "\ud83d\udfe7 CR Starburst Colors",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Simple Binary Pattern": {
        "input": {
            "required": {
                "binary_pattern": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "10101"
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Simple Binary Pattern",
        "display_name": "\ud83d\udfe5 CR Simple Binary Pattern",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Binary Pattern": {
        "input": {
            "required": {
                "binary_pattern": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "10101"
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color_0": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color_1": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "jitter_distance": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "bias": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            },
            "optional": {
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color0_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color1_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "outline_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Binary Pattern",
        "display_name": "\ud83d\udfe5 CR Binary Pattern",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern",
        "output_node": false
    },
    "CR Draw Shape": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "shape": [
                    [
                        "circle",
                        "oval",
                        "square",
                        "diamond",
                        "triangle",
                        "hexagon",
                        "octagon",
                        "quarter circle",
                        "half circle",
                        "quarter circle",
                        "starburst",
                        "star",
                        "cross",
                        "diagonal regions"
                    ]
                ],
                "shape_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "back_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "x_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "y_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "zoom": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.05
                    }
                ],
                "rotation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 3600.0,
                        "step": 0.1
                    }
                ]
            },
            "optional": {
                "shape_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Draw Shape",
        "display_name": "\ud83d\udfe1 CR Draw Shape",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
        "output_node": false
    },
    "CR Draw Pie": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "pie_start": [
                    "FLOAT",
                    {
                        "default": 30.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pie_stop": [
                    "FLOAT",
                    {
                        "default": 330.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "shape_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "back_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "x_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "y_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "zoom": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.05
                    }
                ],
                "rotation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 3600.0,
                        "step": 0.1
                    }
                ]
            },
            "optional": {
                "shape_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Draw Pie",
        "display_name": "\ud83d\udfe2 CR Draw Pie",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
        "output_node": false
    },
    "CR Random Shape Pattern": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096
                    }
                ],
                "num_rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 128
                    }
                ],
                "num_cols": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 128
                    }
                ],
                "color1": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "color2": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ]
            },
            "optional": {
                "color1_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "color2_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Random Shape Pattern",
        "display_name": "\ud83d\udd35 CR Random Shape Pattern",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape",
        "output_node": false
    },
    "CR Overlay Text": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "align": [
                    [
                        "center",
                        "top",
                        "bottom"
                    ]
                ],
                "justify": [
                    [
                        "center",
                        "left",
                        "right"
                    ]
                ],
                "margins": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "line_spacing": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "position_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "position_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "rotation_angle": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -360.0,
                        "max": 360.0,
                        "step": 0.1
                    }
                ],
                "rotation_options": [
                    [
                        "text center",
                        "image center"
                    ]
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Overlay Text",
        "display_name": "\ud83d\udd24 CR Overlay Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Draw Text": {
        "input": {
            "required": {
                "image_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "image_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "align": [
                    [
                        "center",
                        "top",
                        "bottom"
                    ]
                ],
                "justify": [
                    [
                        "center",
                        "left",
                        "right"
                    ]
                ],
                "margins": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "line_spacing": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "position_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "position_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "rotation_angle": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -360.0,
                        "max": 360.0,
                        "step": 0.1
                    }
                ],
                "rotation_options": [
                    [
                        "text center",
                        "image center"
                    ]
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Draw Text",
        "display_name": "\ud83d\udd24\ufe0f CR Draw Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Mask Text": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "align": [
                    [
                        "center",
                        "top",
                        "bottom"
                    ]
                ],
                "justify": [
                    [
                        "center",
                        "left",
                        "right"
                    ]
                ],
                "margins": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "line_spacing": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "position_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "position_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "rotation_angle": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -360.0,
                        "max": 360.0,
                        "step": 0.1
                    }
                ],
                "rotation_options": [
                    [
                        "text center",
                        "image center"
                    ]
                ]
            },
            "optional": {
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Mask Text",
        "display_name": "\ud83d\udd24\ufe0f CR Mask Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Composite Text": {
        "input": {
            "required": {
                "image_text": [
                    "IMAGE"
                ],
                "image_background": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "align": [
                    [
                        "center",
                        "top",
                        "bottom"
                    ]
                ],
                "justify": [
                    [
                        "center",
                        "left",
                        "right"
                    ]
                ],
                "margins": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "line_spacing": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "position_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "position_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "rotation_angle": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -360.0,
                        "max": 360.0,
                        "step": 0.1
                    }
                ],
                "rotation_options": [
                    [
                        "text center",
                        "image center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Composite Text",
        "display_name": "\ud83d\udd24\ufe0f CR Composite Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Simple Text Watermark": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "@ your name"
                    }
                ],
                "align": [
                    [
                        "center",
                        "top left",
                        "top center",
                        "top right",
                        "bottom left",
                        "bottom center",
                        "bottom right"
                    ]
                ],
                "opacity": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "x_margin": [
                    "INT",
                    {
                        "default": 20,
                        "min": -1024,
                        "max": 1024
                    }
                ],
                "y_margin": [
                    "INT",
                    {
                        "default": 20,
                        "min": -1024,
                        "max": 1024
                    }
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Simple Text Watermark",
        "display_name": "\ud83d\udd24\ufe0f CR Simple Text Watermark",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Select Font": {
        "input": {
            "required": {
                "font_name": [
                    []
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "font_name",
            "show_help"
        ],
        "name": "CR Select Font",
        "display_name": "\ud83d\udd24\ufe0f CR Select Font",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Halftone Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "dot_size": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 30,
                        "step": 1
                    }
                ],
                "dot_shape": [
                    [
                        "ellipse",
                        "rectangle"
                    ],
                    {
                        "default": "ellipse"
                    }
                ],
                "resolution": [
                    [
                        "normal",
                        "hi-res (2x output size)"
                    ],
                    {
                        "default": "normal"
                    }
                ],
                "angle_c": [
                    "INT",
                    {
                        "default": 75,
                        "min": 0,
                        "max": 360,
                        "step": 1
                    }
                ],
                "angle_m": [
                    "INT",
                    {
                        "default": 45,
                        "min": 0,
                        "max": 360,
                        "step": 1
                    }
                ],
                "angle_y": [
                    "INT",
                    {
                        "default": 15,
                        "min": 0,
                        "max": 360,
                        "step": 1
                    }
                ],
                "angle_k": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 360,
                        "step": 1
                    }
                ],
                "greyscale": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "antialias": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "antialias_scale": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 4,
                        "step": 1
                    }
                ],
                "border_blending": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Halftone Filter",
        "display_name": "\ud83c\udfa8 Halftone Filter",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
        "output_node": false
    },
    "CR Color Tint": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 1.0,
                        "step": 0.1
                    }
                ],
                "mode": [
                    [
                        "custom",
                        "white",
                        "black",
                        "sepia",
                        "red",
                        "green",
                        "blue",
                        "cyan",
                        "magenta",
                        "yellow",
                        "purple",
                        "orange",
                        "warm",
                        "cool",
                        "lime",
                        "navy",
                        "vintage",
                        "rose",
                        "teal",
                        "maroon",
                        "peach",
                        "lavender",
                        "olive"
                    ]
                ]
            },
            "optional": {
                "tint_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Color Tint",
        "display_name": "\ud83c\udfa8 CR Color Tint",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
        "output_node": false
    },
    "CR Vignette Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "vignette_shape": [
                    [
                        "circle",
                        "oval",
                        "square",
                        "diamond"
                    ]
                ],
                "feather_amount": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "x_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "y_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2048,
                        "max": 2048
                    }
                ],
                "zoom": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "reverse": [
                    [
                        "no",
                        "yes"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "show_help"
        ],
        "name": "CR Vignette Filter",
        "display_name": "\ud83c\udfa8 CR Vignette Filter",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter",
        "output_node": false
    },
    "CR Page Layout": {
        "input": {
            "required": {
                "layout_options": [
                    [
                        "header",
                        "footer",
                        "header and footer",
                        "no header or footer"
                    ]
                ],
                "image_panel": [
                    "IMAGE"
                ],
                "header_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "header_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "header_align": [
                    [
                        "left",
                        "center",
                        "right"
                    ]
                ],
                "footer_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "footer_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "footer_align": [
                    [
                        "left",
                        "center",
                        "right"
                    ]
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "header_font_size": [
                    "INT",
                    {
                        "default": 150,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "footer_font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "border_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "border_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "border_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Page Layout",
        "display_name": "\ud83c\udf01 CR Page Layout",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Image Panel": {
        "input": {
            "required": {
                "image_1": [
                    "IMAGE"
                ],
                "border_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "border_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_color": [
                    [
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "layout_direction": [
                    [
                        "horizontal",
                        "vertical"
                    ]
                ]
            },
            "optional": {
                "image_2": [
                    "IMAGE"
                ],
                "image_3": [
                    "IMAGE"
                ],
                "image_4": [
                    "IMAGE"
                ],
                "border_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Image Panel",
        "display_name": "\ud83c\udf01 CR Image Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Image Grid Panel": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "border_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "border_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_color": [
                    [
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "max_columns": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 256
                    }
                ]
            },
            "optional": {
                "border_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Image Grid Panel",
        "display_name": "\ud83c\udf01 CR Image Grid Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Image Border": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "top_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "bottom_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "left_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "right_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "border_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_color": [
                    [
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ]
            },
            "optional": {
                "border_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Image Border",
        "display_name": "\ud83c\udf01 CR Image Border",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Feathered Border": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "top_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "bottom_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "left_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "right_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ],
                "border_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "feather_amount": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024
                    }
                ]
            },
            "optional": {
                "border_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Feathered Border",
        "display_name": "\ud83c\udf01 CR Feathered Border",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Simple Text Panel": {
        "input": {
            "required": {
                "panel_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "panel_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "font_outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 50
                    }
                ],
                "font_outline_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "align": [
                    [
                        "top",
                        "center",
                        "bottom"
                    ]
                ],
                "justify": [
                    [
                        "left",
                        "center",
                        "right"
                    ]
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Simple Text Panel",
        "display_name": "\ud83c\udf01 CR Simple Text Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Color Panel": {
        "input": {
            "required": {
                "panel_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "panel_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "fill_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ]
            },
            "optional": {
                "fill_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Color Panel",
        "display_name": "\ud83c\udf01 CR Color Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Overlay Transparent Image": {
        "input": {
            "required": {
                "back_image": [
                    "IMAGE"
                ],
                "overlay_image": [
                    "IMAGE"
                ],
                "transparency": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ],
                "offset_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "offset_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "rotation_angle": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -360.0,
                        "max": 360.0,
                        "step": 0.1
                    }
                ],
                "overlay_scale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CR Overlay Transparent Image",
        "display_name": "\ud83c\udf01 CR Overlay Transparent Image",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Half Drop Panel": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "pattern": [
                    [
                        "none",
                        "half drop",
                        "quarter drop",
                        "custom drop %"
                    ]
                ]
            },
            "optional": {
                "drop_percentage": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Half Drop Panel",
        "display_name": "\ud83c\udf01 CR Half Drop Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Diamond Panel": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "pattern": [
                    [
                        "none",
                        "diamond"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Diamond Panel",
        "display_name": "\ud83c\udf01 CR Diamond Panel",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout",
        "output_node": false
    },
    "CR Simple Meme Template": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "preset": [
                    [
                        "custom",
                        "One Does Not Simply ... MEME IN COMFY",
                        "This is fine.",
                        "Good Morning ... No Such Thing!"
                    ]
                ],
                "text_top": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text_top"
                    }
                ],
                "text_bottom": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text_bottom"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "max_font_size": [
                    "INT",
                    {
                        "default": 150,
                        "min": 20,
                        "max": 2048
                    }
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "font_outline": [
                    [
                        "none",
                        "thin",
                        "thick",
                        "extra thick"
                    ]
                ],
                "bar_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "bar_options": [
                    [
                        "no bars",
                        "top",
                        "bottom",
                        "top and bottom"
                    ]
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bar_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Simple Meme Template",
        "display_name": "\ud83d\udcf1 CR Simple Meme Template",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": false
    },
    "CR Simple Banner": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "banner_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "max_font_size": [
                    "INT",
                    {
                        "default": 150,
                        "min": 20,
                        "max": 2048
                    }
                ],
                "font_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 500
                    }
                ],
                "outline_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "margin_size": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 500
                    }
                ]
            },
            "optional": {
                "font_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "outline_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Simple Banner",
        "display_name": "\ud83d\udcf1 CR Simple Banner",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": false
    },
    "CR Comic Panel Templates": {
        "input": {
            "required": {
                "page_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "page_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096
                    }
                ],
                "template": [
                    [
                        "custom",
                        "G22",
                        "G33",
                        "H2",
                        "H3",
                        "H12",
                        "H13",
                        "H21",
                        "H23",
                        "H31",
                        "H32",
                        "V2",
                        "V3",
                        "V12",
                        "V13",
                        "V21",
                        "V23",
                        "V31",
                        "V32"
                    ]
                ],
                "reading_direction": [
                    [
                        "left to right",
                        "right to left"
                    ]
                ],
                "border_thickness": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_thickness": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "outline_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "panel_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ],
                "background_color": [
                    [
                        "custom",
                        "white",
                        "black",
                        "red",
                        "green",
                        "blue",
                        "yellow",
                        "cyan",
                        "magenta",
                        "orange",
                        "purple",
                        "pink",
                        "brown",
                        "gray",
                        "lightgray",
                        "darkgray",
                        "olive",
                        "lime",
                        "teal",
                        "navy",
                        "maroon",
                        "fuchsia",
                        "aqua",
                        "silver",
                        "gold",
                        "turquoise",
                        "lavender",
                        "violet",
                        "coral",
                        "indigo"
                    ]
                ]
            },
            "optional": {
                "images": [
                    "IMAGE"
                ],
                "custom_panel_layout": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "H123"
                    }
                ],
                "outline_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "panel_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "bg_color_hex": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Comic Panel Templates",
        "display_name": "\ud83d\udcf1 CR Comic Panel Templates",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": false
    },
    "CR Simple Image Compare": {
        "input": {
            "required": {
                "text1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "text"
                    }
                ],
                "footer_height": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "font_name": [
                    [
                        "Quicksand-Bold.ttf",
                        "AlumniSansCollegiateOne-Regular.ttf",
                        "Roboto-Regular.ttf",
                        "YoungSerif-Regular.ttf",
                        "PixelifySans-Bold.ttf",
                        "NotoSansArabic-Regular.ttf",
                        "impact.ttf",
                        "Caveat-VariableFont_wght.ttf",
                        "comic.ttf",
                        "Oswald-Bold.ttf"
                    ]
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 1024
                    }
                ],
                "mode": [
                    [
                        "normal",
                        "dark"
                    ]
                ],
                "border_thickness": [
                    "INT",
                    {
                        "default": 20,
                        "min": 0,
                        "max": 1024
                    }
                ]
            },
            "optional": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "show_help"
        ],
        "name": "CR Simple Image Compare",
        "display_name": "\ud83d\udcf1 CR Simple Image Compare",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": false
    },
    "CR Thumbnail Preview": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "rescale_factor": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.1,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "max_columns": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 256
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "show_help"
        ],
        "name": "CR Thumbnail Preview",
        "display_name": "\ud83d\udcf1 CR Thumbnail Preview",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": true
    },
    "CR Seamless Checker": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "rescale_factor": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.1,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "grid_options": [
                    [
                        "2x2",
                        "3x3",
                        "4x4",
                        "5x5",
                        "6x6"
                    ]
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "show_help"
        ],
        "name": "CR Seamless Checker",
        "display_name": "\ud83d\udcf1 CR Seamless Checker",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template",
        "output_node": true
    },
    "CR Image Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Image Input Switch",
        "display_name": "\ud83d\udd00 CR Image Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Image Input Switch (4 way)": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4
                    }
                ]
            },
            "optional": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "image3": [
                    "IMAGE"
                ],
                "image4": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Image Input Switch (4 way)",
        "display_name": "\ud83d\udd00 CR Image Input Switch (4 way)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Latent Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "latent1": [
                    "LATENT"
                ],
                "latent2": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "show_help"
        ],
        "name": "CR Latent Input Switch",
        "display_name": "\ud83d\udd00 CR Latent Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Conditioning Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "conditioning1": [
                    "CONDITIONING"
                ],
                "conditioning2": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "show_help"
        ],
        "name": "CR Conditioning Input Switch",
        "display_name": "\ud83d\udd00 CR Conditioning Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Clip Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "clip1": [
                    "CLIP"
                ],
                "clip2": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CLIP",
            "show_help"
        ],
        "name": "CR Clip Input Switch",
        "display_name": "\ud83d\udd00 CR Clip Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Model Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ]
            }
        },
        "output": [
            "MODEL",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "show_help"
        ],
        "name": "CR Model Input Switch",
        "display_name": "\ud83d\udd00 CR Model Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR ControlNet Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ],
                "control_net1": [
                    "CONTROL_NET"
                ],
                "control_net2": [
                    "CONTROL_NET"
                ]
            },
            "optional": {
                "control_net1": [
                    "CONTROL_NET"
                ],
                "control_net2": [
                    "CONTROL_NET"
                ]
            }
        },
        "output": [
            "CONTROL_NET",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONTROL_NET",
            "show_help"
        ],
        "name": "CR ControlNet Input Switch",
        "display_name": "\ud83d\udd00 CR ControlNet Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR VAE Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "VAE1": [
                    "VAE",
                    {
                        "forceInput": true
                    }
                ],
                "VAE2": [
                    "VAE",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "VAE",
            "show_help"
        ],
        "name": "CR VAE Input Switch",
        "display_name": "\ud83d\udd00 CR VAE Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Text Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ]
            },
            "optional": {
                "text1": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Input Switch",
        "display_name": "\ud83d\udd00 CR Text Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Text Input Switch (4 way)": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4
                    }
                ]
            },
            "optional": {
                "text1": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text3": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text4": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Input Switch (4 way)",
        "display_name": "\ud83d\udd00 CR Text Input Switch (4 way)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Switch Model and CLIP": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ],
                "model1": [
                    "MODEL"
                ],
                "clip1": [
                    "CLIP"
                ],
                "model2": [
                    "MODEL"
                ],
                "clip2": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "show_help"
        ],
        "name": "CR Switch Model and CLIP",
        "display_name": "\ud83d\udd00 CR Switch Model and CLIP",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic",
        "output_node": false
    },
    "CR Batch Process Switch": {
        "input": {
            "required": {
                "Input": [
                    [
                        "image",
                        "image batch"
                    ]
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "image_batch": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Batch Process Switch",
        "display_name": "\ud83d\udd02 CR Batch Process Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
        "output_node": false
    },
    "CR Img2Img Process Switch": {
        "input": {
            "required": {
                "Input": [
                    [
                        "txt2img",
                        "img2img"
                    ]
                ]
            },
            "optional": {
                "txt2img": [
                    "LATENT"
                ],
                "img2img": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "show_help"
        ],
        "name": "CR Img2Img Process Switch",
        "display_name": "\ud83d\udd02 CR Img2Img Process Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
        "output_node": false
    },
    "CR Hires Fix Process Switch": {
        "input": {
            "required": {
                "Input": [
                    [
                        "latent_upscale",
                        "image_upscale"
                    ]
                ]
            },
            "optional": {
                "latent_upscale": [
                    "LATENT"
                ],
                "image_upscale": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "STRING"
        ],
        "name": "CR Hires Fix Process Switch",
        "display_name": "\ud83d\udd02 CR Hires Fix Process Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process",
        "output_node": false
    },
    "CR Index": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "print_to_console": [
                    [
                        "Yes",
                        "No"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Index",
        "display_name": "\ud83d\udd22 CR Index",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
        "output_node": false
    },
    "CR Index Increment": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 1,
                        "min": -10000,
                        "max": 10000,
                        "forceInput": true
                    }
                ],
                "interval": [
                    "INT",
                    {
                        "default": 1,
                        "min": -10000,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "index",
            "interval",
            "show_help"
        ],
        "name": "CR Index Increment",
        "display_name": "\ud83d\udd22 CR Index Increment",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
        "output_node": false
    },
    "CR Index Multiply": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000,
                        "forceInput": true
                    }
                ],
                "factor": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "index",
            "factor",
            "show_help"
        ],
        "name": "CR Index Multiply",
        "display_name": "\ud83d\udd22 CR Index Multiply",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
        "output_node": false
    },
    "CR Index Reset": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000,
                        "forceInput": true
                    }
                ],
                "reset_to": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "index",
            "reset_to",
            "show_help"
        ],
        "name": "CR Index Reset",
        "display_name": "\ud83d\udd22 CR Index Reset",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
        "output_node": false
    },
    "CR Trigger": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "trigger_value": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "INT",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "index",
            "trigger",
            "show_help"
        ],
        "name": "CR Trigger",
        "display_name": "\ud83d\udd22 CR Trigger",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index",
        "output_node": false
    },
    "CR String To Number": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "text",
                        "forceInput": true
                    }
                ],
                "round_integer": [
                    [
                        "round",
                        "round down",
                        "round up"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT",
            "show_help"
        ],
        "name": "CR String To Number",
        "display_name": "\ud83d\udd27 CR String To Number",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR String To Combo": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "any",
            "show_help"
        ],
        "name": "CR String To Combo",
        "display_name": "\ud83d\udd27 CR String To Combo",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR Float To String": {
        "input": {
            "required": {
                "float_": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1000000.0,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Float To String",
        "display_name": "\ud83d\udd27 CR Float To String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR Float To Integer": {
        "input": {
            "required": {
                "_float": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Float To Integer",
        "display_name": "\ud83d\udd27 CR Float To Integer",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR Integer To String": {
        "input": {
            "required": {
                "int_": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Integer To String",
        "display_name": "\ud83d\udd27 CR Integer To String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR String To Boolean": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "BOOLEAN",
            "show_help"
        ],
        "name": "CR String To Boolean",
        "display_name": "\ud83d\udd27 CR String To Boolean",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion",
        "output_node": false
    },
    "CR Random Hex Color": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "hex_color1",
            "hex_color2",
            "hex_color3",
            "hex_color4",
            "show_help"
        ],
        "name": "CR Random Hex Color",
        "display_name": "\ud83c\udfb2 CR Random Hex Color",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Random RGB": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "rgb_1",
            "rgb_2",
            "rgb_3",
            "rgb_4",
            "show_help"
        ],
        "name": "CR Random RGB",
        "display_name": "\ud83c\udfb2 CR Random RGB",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Random Multiline Values": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "value_type": [
                    [
                        "binary",
                        "decimal",
                        "natural",
                        "hexadecimal",
                        "alphabetic",
                        "alphanumeric",
                        "custom"
                    ]
                ],
                "rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 2048
                    }
                ],
                "string_length": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "custom_values": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "123ABC"
                    }
                ],
                "prepend_text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "multiline_text",
            "show_help"
        ],
        "name": "CR Random Multiline Values",
        "display_name": "\ud83c\udfb2 CR Random Multiline Values",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Random Multiline Colors": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "value_type": [
                    [
                        "rgb",
                        "hex color",
                        "matplotlib xkcd"
                    ]
                ],
                "rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 2048
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "multiline_text",
            "show_help"
        ],
        "name": "CR Random Multiline Colors",
        "display_name": "\ud83c\udfb2 CR Random Multiline Colors",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Random RGB Gradient": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 2048
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "multiline_text",
            "show_help"
        ],
        "name": "CR Random RGB Gradient",
        "display_name": "\ud83c\udfb2 CR Random RGB Gradient",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Random Panel Codes": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 2048
                    }
                ],
                "string_length": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 1024
                    }
                ],
                "values": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "123"
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "multiline_text",
            "show_help"
        ],
        "name": "CR Random Panel Codes",
        "display_name": "\ud83c\udfb2 CR Random Panel Codes",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random",
        "output_node": false
    },
    "CR Text": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "text",
            "show_help"
        ],
        "name": "CR Text",
        "display_name": "\ud83d\udd24 CR Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Multiline Text": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ],
                "convert_from_csv": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "csv_quote_char": [
                    "STRING",
                    {
                        "default": "'",
                        "choices": [
                            "'",
                            "\""
                        ]
                    }
                ],
                "remove_chars": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "chars_to_remove": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "split_string": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "multiline_text",
            "show_help"
        ],
        "name": "CR Multiline Text",
        "display_name": "\ud83d\udd24 CR Multiline Text",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Split String": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "text"
                    }
                ]
            },
            "optional": {
                "delimiter": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ","
                    }
                ]
            }
        },
        "output": [
            "*",
            "*",
            "*",
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "string_1",
            "string_2",
            "string_3",
            "string_4",
            "show_help"
        ],
        "name": "CR Split String",
        "display_name": "\ud83d\udd24 CR Split String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Text Concatenate": {
        "input": {
            "required": {},
            "optional": {
                "text1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ],
                "separator": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Concatenate",
        "display_name": "\ud83d\udd24 CR Text Concatenate",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Text Replace": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "",
                        "forceInput": true
                    }
                ]
            },
            "optional": {
                "find1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "replace1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "find2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "replace2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "find3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "replace3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Replace",
        "display_name": "\ud83d\udd24 CR Text Replace",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Text Length": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Text Length",
        "display_name": "\ud83d\udd24 CR Text Length",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Text Operation": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ],
                "operation": [
                    [
                        "uppercase",
                        "lowercase",
                        "capitalize",
                        "invert_case",
                        "reverse",
                        "trim",
                        "remove_spaces"
                    ]
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Operation",
        "display_name": "\ud83d\udd24 CR Text Operation",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Text Blacklist": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "",
                        "forceInput": true
                    }
                ],
                "blacklist_words": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ]
            },
            "optional": {
                "replacement_text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Blacklist",
        "display_name": "\ud83d\udd24 Text Blacklist",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": false
    },
    "CR Save Text To File": {
        "input": {
            "required": {
                "multiline_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ],
                "output_file_path": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_name": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_extension": [
                    [
                        "txt",
                        "csv"
                    ]
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "show_help"
        ],
        "name": "CR Save Text To File",
        "display_name": "\ud83d\udd24 CR Save Text To File",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text",
        "output_node": true
    },
    "CR Set Value On Boolean": {
        "input": {
            "required": {
                "boolean": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "forceInput": true
                    }
                ],
                "value_if_true": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "value_if_false": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT",
            "show_help"
        ],
        "name": "CR Set Value On Boolean",
        "display_name": "\u2699\ufe0f CR Set Value On Boolean",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
        "output_node": false
    },
    "CR Set Value On Binary": {
        "input": {
            "required": {
                "binary": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1,
                        "forceInput": true
                    }
                ],
                "value_if_1": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "value_if_0": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT",
            "show_help"
        ],
        "name": "CR Set Value On Binary",
        "display_name": "\u2699\ufe0f CR Set Value On Binary",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
        "output_node": false
    },
    "CR Set Value on String": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ]
            },
            "optional": {
                "test_string": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "value_if_true": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "value_if_false": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "BOOLEAN",
            "show_help"
        ],
        "name": "CR Set Value on String",
        "display_name": "\u2699\ufe0f CR Set Value on String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
        "output_node": false
    },
    "CR Set Switch From String": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "",
                        "forceInput": true
                    }
                ]
            },
            "optional": {
                "switch_1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "switch_2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "switch_3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "switch_4": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "switch",
            "show_help"
        ],
        "name": "CR Set Switch From String",
        "display_name": "\u2699\ufe0f CR Set Switch From String",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional",
        "output_node": false
    },
    "CR Value": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT",
            "show_help"
        ],
        "name": "CR Value",
        "display_name": "\u2699\ufe0f CR Value",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Integer Multiple": {
        "input": {
            "required": {
                "integer": [
                    "INT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "multiple": [
                    "FLOAT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Integer Multiple",
        "display_name": "\u2699\ufe0f CR Integer Multiple",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Clamp Value": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "range_min": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "range_max": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "a",
            "show_help"
        ],
        "name": "CR Clamp Value",
        "display_name": "\u2699\ufe0f CR Clamp Value",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Math Operation": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "operation": [
                    [
                        "sin",
                        "cos",
                        "tan",
                        "sqrt",
                        "exp",
                        "log",
                        "neg",
                        "abs"
                    ]
                ],
                "decimal_places": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 10
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "a",
            "show_help"
        ],
        "name": "CR Math Operation",
        "display_name": "\u2699\ufe0f CR Math Operation",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Get Parameter From Prompt": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt",
                        "forceInput": true
                    }
                ],
                "search_string": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "!findme"
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "*",
            "FLOAT",
            "BOOLEAN",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "prompt",
            "text",
            "float",
            "boolean",
            "show_help"
        ],
        "name": "CR Get Parameter From Prompt",
        "display_name": "\u2699\ufe0f CR Get Parameter From Prompt",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Select Resize Method": {
        "input": {
            "required": {
                "method": [
                    [
                        "Fit",
                        "Crop"
                    ]
                ]
            }
        },
        "output": [
            "*",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "method",
            "show_help"
        ],
        "name": "CR Select Resize Method",
        "display_name": "\u2699\ufe0f CR Select Resize Method",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Select ISO Size": {
        "input": {
            "required": {
                "iso_size": [
                    [
                        "A0 - 9933x14043",
                        "A1 - 7016x9933",
                        "A2 - 4960x7016",
                        "A3 - 3508x4960",
                        "A4 - 2480x3508",
                        "A5 - 1748x2480",
                        "A6 - 1240x1748",
                        "A7 - 874x1240",
                        "A8 - 614x874",
                        "A9 - 437x614",
                        "A10 - 307x437",
                        "A11 - 213x307",
                        "A12 - 154x213",
                        "A13 - 106x154",
                        "B0 - 11811x16701",
                        "B1 - 8350x11811",
                        "B2 - 5906x8350",
                        "B3 - 4169x5906",
                        "B4 - 2953x4169",
                        "B5 - 2079x2953",
                        "B6 - 1476x2079",
                        "B7 - 1039x1476",
                        "B8 - 732x1039",
                        "B9 - 520x732",
                        "B10 - 366x520",
                        "C0 - 10831x15319",
                        "C1 - 7654x10831",
                        "C2 - 5409x7654",
                        "C3 - 3827x5409",
                        "C4 - 2705x3827",
                        "C5 - 1913x2705",
                        "C6 - 1346x1913",
                        "C7 - 957x1346",
                        "C8 - 673x957",
                        "C9 - 472x673",
                        "C10 - 331x472"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "width",
            "height",
            "show_help"
        ],
        "name": "CR Select ISO Size",
        "display_name": "\u2699\ufe0f CR Select ISO Size",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other",
        "output_node": false
    },
    "CR Simple Schedule": {
        "input": {
            "required": {
                "schedule": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "frame_number, item_alias, [attr_value1, attr_value2]"
                    }
                ],
                "schedule_type": [
                    [
                        "Value",
                        "Text",
                        "Prompt",
                        "Prompt Weight",
                        "Model",
                        "LoRA",
                        "ControlNet",
                        "Style",
                        "Upscale",
                        "Camera",
                        "Job"
                    ]
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            }
        },
        "output": [
            "SCHEDULE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_help"
        ],
        "name": "CR Simple Schedule",
        "display_name": "\ud83d\udccb CR Simple Schedule",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": false
    },
    "CR Central Schedule": {
        "input": {
            "required": {
                "schedule_1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "schedule"
                    }
                ],
                "schedule_type1": [
                    [
                        "Value",
                        "Text",
                        "Prompt",
                        "Prompt Weight",
                        "Model",
                        "LoRA",
                        "ControlNet",
                        "Style",
                        "Upscale",
                        "Camera",
                        "Job"
                    ]
                ],
                "schedule_alias1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "schedule_2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "schedule"
                    }
                ],
                "schedule_type2": [
                    [
                        "Value",
                        "Text",
                        "Prompt",
                        "Prompt Weight",
                        "Model",
                        "LoRA",
                        "ControlNet",
                        "Style",
                        "Upscale",
                        "Camera",
                        "Job"
                    ]
                ],
                "schedule_alias2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "schedule_3": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "schedule"
                    }
                ],
                "schedule_type3": [
                    [
                        "Value",
                        "Text",
                        "Prompt",
                        "Prompt Weight",
                        "Model",
                        "LoRA",
                        "ControlNet",
                        "Style",
                        "Upscale",
                        "Camera",
                        "Job"
                    ]
                ],
                "schedule_alias3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            },
            "optional": {
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "SCHEDULE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_text"
        ],
        "name": "CR Central Schedule",
        "display_name": "\ud83d\udccb CR Central Schedule",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": false
    },
    "CR Combine Schedules": {
        "input": {
            "required": {},
            "optional": {
                "schedule_1": [
                    "SCHEDULE"
                ],
                "schedule_2": [
                    "SCHEDULE"
                ],
                "schedule_3": [
                    "SCHEDULE"
                ],
                "schedule_4": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "SCHEDULE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_text"
        ],
        "name": "CR Combine Schedules",
        "display_name": "\ud83d\udccb CR Combine Schedules",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": false
    },
    "CR Output Schedule To File": {
        "input": {
            "required": {
                "output_file_path": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_name": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_extension": [
                    [
                        "txt",
                        "csv"
                    ]
                ],
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CR Output Schedule To File",
        "display_name": "\ud83d\udccb CR Output Schedule To File",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": true
    },
    "CR Load Schedule From File": {
        "input": {
            "required": {
                "input_file_path": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_name": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "file_extension": [
                    [
                        "txt",
                        "csv"
                    ]
                ]
            }
        },
        "output": [
            "SCHEDULE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_text"
        ],
        "name": "CR Load Schedule From File",
        "display_name": "\ud83d\udccb CR Load Schedule From File",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": false
    },
    "CR Schedule Input Switch": {
        "input": {
            "required": {
                "Input": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 2
                    }
                ],
                "schedule1": [
                    "SCHEDULE"
                ],
                "schedule2": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "SCHEDULE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_help"
        ],
        "name": "CR Schedule Input Switch",
        "display_name": "\ud83d\udccb CR Schedule Input Switch",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": true
    },
    "CR Bit Schedule": {
        "input": {
            "required": {
                "binary_string": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ],
                "interval": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 99999
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SCHEDULE",
            "show_text"
        ],
        "name": "CR Bit Schedule",
        "display_name": "\ud83d\udccb CR Bit Schedule",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule",
        "output_node": false
    },
    "CR Simple Value Scheduler": {
        "input": {
            "required": {
                "schedule": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "frame_number, value"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT",
            "show_help"
        ],
        "name": "CR Simple Value Scheduler",
        "display_name": "\ud83d\udcd1 CR Simple Value Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Simple Text Scheduler": {
        "input": {
            "required": {
                "schedule": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "frame_number, text"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Simple Text Scheduler",
        "display_name": "\ud83d\udcd1 CR Simple Text Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Value Scheduler": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Default Value",
                        "Schedule"
                    ]
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "default_value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            },
            "optional": {
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT",
            "show_help"
        ],
        "name": "CR Value Scheduler",
        "display_name": "\ud83d\udcd1 CR Value Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Text Scheduler": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Default Text",
                        "Schedule"
                    ]
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "default_text": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "default text"
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            },
            "optional": {
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Text Scheduler",
        "display_name": "\ud83d\udcd1 CR Text Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Load Scheduled Models": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Load default Model",
                        "Schedule"
                    ]
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "default_model": [
                    []
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            },
            "optional": {
                "model_list": [
                    "MODEL_LIST"
                ],
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "show_help"
        ],
        "name": "CR Load Scheduled Models",
        "display_name": "\ud83d\udcd1 CR Load Scheduled Models",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Load Scheduled LoRAs": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Off",
                        "Load default LoRA",
                        "Schedule"
                    ]
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "default_lora": [
                    []
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            },
            "optional": {
                "lora_list": [
                    "LORA_LIST"
                ],
                "schedule": [
                    "SCHEDULE"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "show_help"
        ],
        "name": "CR Load Scheduled LoRAs",
        "display_name": "\ud83d\udcd1 CR Load Scheduled LoRAs",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Prompt Scheduler": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Default Prompt",
                        "Keyframe List",
                        "Schedule"
                    ]
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "default_prompt": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "default prompt"
                    }
                ],
                "schedule_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ],
                "interpolate_prompt": [
                    [
                        "Yes",
                        "No"
                    ]
                ]
            },
            "optional": {
                "schedule": [
                    "SCHEDULE"
                ],
                "schedule_alias": [
                    "STRING",
                    {
                        "default prompt": "",
                        "multiline": false
                    }
                ],
                "keyframe_list": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "keyframe list"
                    }
                ],
                "prepend_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prepend text"
                    }
                ],
                "append_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "append text"
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "current_prompt",
            "next_prompt",
            "weight",
            "show_help"
        ],
        "name": "CR Prompt Scheduler",
        "display_name": "\ud83d\udcd1 CR Prompt Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Simple Prompt Scheduler": {
        "input": {
            "required": {
                "keyframe_list": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "frame_number, text"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "keyframe_format": [
                    [
                        "CR",
                        "Deforum"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "current_prompt",
            "next_prompt",
            "weight",
            "show_help"
        ],
        "name": "CR Simple Prompt Scheduler",
        "display_name": "\ud83d\udcd1 CR Simple Prompt Scheduler",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers",
        "output_node": false
    },
    "CR Keyframe List": {
        "input": {
            "required": {
                "keyframe_list": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "keyframes"
                    }
                ],
                "keyframe_format": [
                    [
                        "Deforum",
                        "CR"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "keyframe_list",
            "show_help"
        ],
        "name": "CR Keyframe List",
        "display_name": "\ud83d\udcdd CR Keyframe List",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
        "output_node": false
    },
    "CR Encode Scheduled Prompts": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "current_prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "next_prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "weight": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "show_help"
        ],
        "name": "CR Encode Scheduled Prompts",
        "display_name": "\ud83d\udcdd CR Encode Scheduled Prompts",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt",
        "output_node": false
    },
    "CR Gradient Float": {
        "input": {
            "required": {
                "start_value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "end_value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.01
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "frame_duration": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "gradient_profile": [
                    [
                        "Lerp"
                    ]
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "show_help"
        ],
        "name": "CR Gradient Float",
        "display_name": "\ud83d\udd22 CR Gradient Float",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
        "output_node": false
    },
    "CR Gradient Integer": {
        "input": {
            "required": {
                "start_value": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "end_value": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "frame_duration": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "gradient_profile": [
                    [
                        "Lerp"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Gradient Integer",
        "display_name": "\ud83d\udd22 CR Gradient Integer",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
        "output_node": false
    },
    "CR Increment Float": {
        "input": {
            "required": {
                "start_value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.001
                    }
                ],
                "step": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.001
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "frame_duration": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "show_help"
        ],
        "name": "CR Increment Float",
        "display_name": "\ud83d\udd22 CR Increment Float",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
        "output_node": true
    },
    "CR Increment Integer": {
        "input": {
            "required": {
                "start_value": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "step": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "frame_duration": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "show_help"
        ],
        "name": "CR Increment Integer",
        "display_name": "\ud83d\udd22 CR Increment Integer",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
        "output_node": true
    },
    "CR Interpolate Latents": {
        "input": {
            "required": {
                "latent1": [
                    "LATENT"
                ],
                "latent2": [
                    "LATENT"
                ],
                "weight": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "method": [
                    [
                        "lerp"
                    ]
                ]
            }
        },
        "output": [
            "LATENT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "show_help"
        ],
        "name": "CR Interpolate Latents",
        "display_name": "\ud83d\udd22 CR Interpolate Latents",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate",
        "output_node": false
    },
    "CR Debatch Frames": {
        "input": {
            "required": {
                "frames": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "debatched_frames"
        ],
        "name": "CR Debatch Frames",
        "display_name": "\ud83d\udee0\ufe0f CR Debatch Frames",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR Current Frame": {
        "input": {
            "required": {
                "index": [
                    "INT",
                    {
                        "default": 1,
                        "min": -10000,
                        "max": 10000
                    }
                ],
                "print_to_console": [
                    [
                        "Yes",
                        "No"
                    ]
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "index"
        ],
        "name": "CR Current Frame",
        "display_name": "\ud83d\udee0\ufe0f CR Current Frame",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils",
        "output_node": false
    },
    "CR Load Animation Frames": {
        "input": {
            "required": {
                "image_sequence_folder": [
                    [
                        "__inputs__"
                    ]
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Load Animation Frames",
        "display_name": "\u2328\ufe0f CR Load Animation Frames",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Load Flow Frames": {
        "input": {
            "required": {
                "input_folder": [
                    []
                ],
                "sort_by": [
                    [
                        "Index",
                        "Alphabetic"
                    ]
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000,
                        "forceInput": true
                    }
                ],
                "skip_start_frames": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "image_folder": [
                    [
                        "__inputs__"
                    ]
                ]
            },
            "optional": {
                "input_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "file_pattern": [
                    "STRING",
                    {
                        "default": "*.png",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "current_image",
            "previous_image",
            "current_frame",
            "show_help"
        ],
        "name": "CR Load Flow Frames",
        "display_name": "\u2328\ufe0f CR Load Flow Frames",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
        "output_node": false
    },
    "CR Output Flow Frames": {
        "input": {
            "required": {
                "output_folder": [
                    []
                ],
                "current_image": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "CR"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999999,
                        "forceInput": true
                    }
                ]
            },
            "optional": {
                "interpolated_img": [
                    "IMAGE"
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CR Output Flow Frames",
        "display_name": "\u2328\ufe0f CR Output Flow Frames",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO",
        "output_node": true
    },
    "CR Prompt List Keyframes": {
        "input": {
            "required": {
                "prompt_list": [
                    "PROMPT_LIST"
                ],
                "keyframe_format": [
                    [
                        "Deforum"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "keyframe_list",
            "show_help"
        ],
        "name": "CR Prompt List Keyframes",
        "display_name": "CR Prompt List Keyframes (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Simple Prompt List": {
        "input": {
            "required": {
                "prompt_1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt"
                    }
                ],
                "prompt_2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt"
                    }
                ],
                "prompt_3": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt"
                    }
                ],
                "prompt_4": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt"
                    }
                ],
                "prompt_5": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "prompt"
                    }
                ]
            },
            "optional": {
                "simple_prompt_list": [
                    "SIMPLE_PROMPT_LIST"
                ]
            }
        },
        "output": [
            "SIMPLE_PROMPT_LIST",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "SIMPLE_PROMPT_LIST",
            "show_help"
        ],
        "name": "CR Simple Prompt List",
        "display_name": "CR Simple Prompt List (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Simple Prompt List Keyframes": {
        "input": {
            "required": {
                "simple_prompt_list": [
                    "SIMPLE_PROMPT_LIST"
                ],
                "keyframe_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "transition_type": [
                    [
                        "Default"
                    ]
                ],
                "transition_speed": [
                    [
                        "Default"
                    ]
                ],
                "transition_profile": [
                    [
                        "Default"
                    ]
                ],
                "keyframe_format": [
                    [
                        "Deforum"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "keyframe_list",
            "show_help"
        ],
        "name": "CR Simple Prompt List Keyframes",
        "display_name": "CR Simple Prompt List Keyframes (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle Models": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Off",
                        "Sequential"
                    ]
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "model_list": [
                    "MODEL_LIST"
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "show_help"
        ],
        "name": "CR Cycle Models",
        "display_name": "CR Cycle Models (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle LoRAs": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Off",
                        "Sequential"
                    ]
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_list": [
                    "LORA_LIST"
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "show_help"
        ],
        "name": "CR Cycle LoRAs",
        "display_name": "CR Cycle LoRAs (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle Text": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Sequential"
                    ]
                ],
                "text_list": [
                    "TEXT_LIST"
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Cycle Text",
        "display_name": "CR Cycle Text (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle Text Simple": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Sequential"
                    ]
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "text_1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_4": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_5": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_list_simple": [
                    "TEXT_LIST_SIMPLE"
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "show_help"
        ],
        "name": "CR Cycle Text Simple",
        "display_name": "CR Cycle Text Simple (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle Images": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Sequential"
                    ]
                ],
                "image_list": [
                    "IMAGE_LIST"
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Cycle Images",
        "display_name": "CR Cycle Images (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Cycle Images Simple": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Sequential"
                    ]
                ],
                "frame_interval": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 999,
                        "step": 1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "image_1": [
                    "IMAGE"
                ],
                "image_2": [
                    "IMAGE"
                ],
                "image_3": [
                    "IMAGE"
                ],
                "image_4": [
                    "IMAGE"
                ],
                "image_5": [
                    "IMAGE"
                ],
                "image_list_simple": [
                    "IMAGE_LIST_SIMPLE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "show_help"
        ],
        "name": "CR Cycle Images Simple",
        "display_name": "CR Cycle Images Simple (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Model List": {
        "input": {
            "required": {
                "ckpt_name1": [
                    [
                        "None"
                    ]
                ],
                "alias1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "ckpt_name2": [
                    [
                        "None"
                    ]
                ],
                "alias2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "ckpt_name3": [
                    [
                        "None"
                    ]
                ],
                "alias3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "ckpt_name4": [
                    [
                        "None"
                    ]
                ],
                "alias4": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "ckpt_name5": [
                    [
                        "None"
                    ]
                ],
                "alias5": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            },
            "optional": {
                "model_list": [
                    "MODEL_LIST"
                ]
            }
        },
        "output": [
            "MODEL_LIST",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL_LIST",
            "show_text"
        ],
        "name": "CR Model List",
        "display_name": "CR Model List (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR LoRA List": {
        "input": {
            "required": {
                "lora_name1": [
                    [
                        "None"
                    ]
                ],
                "alias1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "model_strength_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_strength_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_name2": [
                    [
                        "None"
                    ]
                ],
                "alias2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "model_strength_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_strength_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_name3": [
                    [
                        "None"
                    ]
                ],
                "alias3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "model_strength_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "clip_strength_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "lora_list": [
                    "lora_LIST"
                ]
            }
        },
        "output": [
            "LORA_LIST",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LORA_LIST",
            "show_text"
        ],
        "name": "CR LoRA List",
        "display_name": "CR LoRA List (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Text List Simple": {
        "input": {
            "required": {},
            "optional": {
                "text_1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_4": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_5": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "text_list_simple": [
                    "TEXT_LIST_SIMPLE"
                ]
            }
        },
        "output": [
            "TEXT_LIST_SIMPLE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "TEXT_LIST_SIMPLE",
            "show_help"
        ],
        "name": "CR Text List Simple",
        "display_name": "CR Text List Simple (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Image List": {
        "input": {
            "required": {},
            "optional": {
                "image_1": [
                    "IMAGE"
                ],
                "alias1": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "image_2": [
                    "IMAGE"
                ],
                "alias2": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "image_3": [
                    "IMAGE"
                ],
                "alias3": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "image_4": [
                    "IMAGE"
                ],
                "alias4": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "image_5": [
                    "IMAGE"
                ],
                "alias5": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ],
                "image_list": [
                    "image_LIST"
                ]
            }
        },
        "output": [
            "IMAGE_LIST",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE_LIST",
            "show_help"
        ],
        "name": "CR Image List",
        "display_name": "CR Image List (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "CR Image List Simple": {
        "input": {
            "required": {},
            "optional": {
                "image_1": [
                    "IMAGE"
                ],
                "image_2": [
                    "IMAGE"
                ],
                "image_3": [
                    "IMAGE"
                ],
                "image_4": [
                    "IMAGE"
                ],
                "image_5": [
                    "IMAGE"
                ],
                "image_list_simple": [
                    "IMAGE_LIST_SIMPLE"
                ]
            }
        },
        "output": [
            "IMAGE_LIST_SIMPLE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE_LIST_SIMPLE",
            "show_help"
        ],
        "name": "CR Image List Simple",
        "display_name": "CR Image List Simple (Legacy)",
        "description": "",
        "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy",
        "output_node": false
    },
    "Tiled KSampler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "tiling": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Tiled KSampler",
        "display_name": "Tiled KSampler",
        "description": "",
        "category": "Sampling/Tiled",
        "output_node": false
    },
    "Asymmetric Tiled KSampler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "tileX": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1
                    }
                ],
                "tileY": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Asymmetric Tiled KSampler",
        "display_name": "Asymmetric Tiled KSampler",
        "description": "",
        "category": "Sampling/Tiled",
        "output_node": false
    },
    "Circular VAEDecode": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Circular VAEDecode",
        "display_name": "Circular VAEDecode",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "CM_BoolToInt": {
        "input": {
            "required": {
                "a": [
                    "BOOL",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CM_BoolToInt",
        "display_name": "BoolToInt",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_IntToBool": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_IntToBool",
        "display_name": "IntToBool",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_FloatToInt": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CM_FloatToInt",
        "display_name": "FloatToInt",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_IntToFloat": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_IntToFloat",
        "display_name": "IntToFloat",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_IntToNumber": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "CM_IntToNumber",
        "display_name": "IntToNumber",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_NumberToInt": {
        "input": {
            "required": {
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CM_NumberToInt",
        "display_name": "NumberToInt",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_FloatToNumber": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "CM_FloatToNumber",
        "display_name": "FloatToNumber",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_NumberToFloat": {
        "input": {
            "required": {
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_NumberToFloat",
        "display_name": "NumberToFloat",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_ComposeVec2": {
        "input": {
            "required": {
                "x": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "VEC2"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC2"
        ],
        "name": "CM_ComposeVec2",
        "display_name": "ComposeVec2",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_ComposeVec3": {
        "input": {
            "required": {
                "x": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "z": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "VEC3"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC3"
        ],
        "name": "CM_ComposeVec3",
        "display_name": "ComposeVec3",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_ComposeVec4": {
        "input": {
            "required": {
                "x": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "z": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "w": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "VEC4"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC4"
        ],
        "name": "CM_ComposeVec4",
        "display_name": "ComposeVec4",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_BreakoutVec2": {
        "input": {
            "required": {
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT"
        ],
        "name": "CM_BreakoutVec2",
        "display_name": "BreakoutVec2",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_BreakoutVec3": {
        "input": {
            "required": {
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "name": "CM_BreakoutVec3",
        "display_name": "BreakoutVec3",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_BreakoutVec4": {
        "input": {
            "required": {
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "name": "CM_BreakoutVec4",
        "display_name": "BreakoutVec4",
        "description": "",
        "category": "math/conversion",
        "output_node": false
    },
    "CM_BoolUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Not"
                    ]
                ],
                "a": [
                    "BOOL",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_BoolUnaryOperation",
        "display_name": "BoolUnaryOperation",
        "description": "",
        "category": "math/bool",
        "output_node": false
    },
    "CM_BoolBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Nor",
                        "Xor",
                        "Nand",
                        "And",
                        "Xnor",
                        "Or",
                        "Eq",
                        "Neq"
                    ]
                ],
                "a": [
                    "BOOL",
                    {
                        "default": false
                    }
                ],
                "b": [
                    "BOOL",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_BoolBinaryOperation",
        "display_name": "BoolBinaryOperation",
        "description": "",
        "category": "math/bool",
        "output_node": false
    },
    "CM_IntUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Abs",
                        "Neg",
                        "Inc",
                        "Dec",
                        "Sqr",
                        "Cube",
                        "Not",
                        "Factorial"
                    ]
                ],
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CM_IntUnaryOperation",
        "display_name": "IntUnaryOperation",
        "description": "",
        "category": "math/int",
        "output_node": false
    },
    "CM_IntUnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsNonZero",
                        "IsPositive",
                        "IsNegative",
                        "IsEven",
                        "IsOdd"
                    ]
                ],
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_IntUnaryCondition",
        "display_name": "IntUnaryCondition",
        "description": "",
        "category": "math/int",
        "output_node": false
    },
    "CM_IntBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Mul",
                        "Div",
                        "Mod",
                        "Pow",
                        "And",
                        "Nand",
                        "Or",
                        "Nor",
                        "Xor",
                        "Xnor",
                        "Shl",
                        "Shr",
                        "Max",
                        "Min"
                    ]
                ],
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CM_IntBinaryOperation",
        "display_name": "IntBinaryOperation",
        "description": "",
        "category": "math/int",
        "output_node": false
    },
    "CM_IntBinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq",
                        "Gt",
                        "Lt",
                        "Geq",
                        "Leq"
                    ]
                ],
                "a": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_IntBinaryCondition",
        "display_name": "IntBinaryCondition",
        "description": "",
        "category": "math/int",
        "output_node": false
    },
    "CM_FloatUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Neg",
                        "Inc",
                        "Dec",
                        "Abs",
                        "Sqr",
                        "Cube",
                        "Sqrt",
                        "Exp",
                        "Ln",
                        "Log10",
                        "Log2",
                        "Sin",
                        "Cos",
                        "Tan",
                        "Asin",
                        "Acos",
                        "Atan",
                        "Sinh",
                        "Cosh",
                        "Tanh",
                        "Asinh",
                        "Acosh",
                        "Atanh",
                        "Round",
                        "Floor",
                        "Ceil",
                        "Trunc",
                        "Erf",
                        "Erfc",
                        "Gamma",
                        "Radians",
                        "Degrees"
                    ]
                ],
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_FloatUnaryOperation",
        "display_name": "FloatUnaryOperation",
        "description": "",
        "category": "math/float",
        "output_node": false
    },
    "CM_FloatUnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsPositive",
                        "IsNegative",
                        "IsNonZero",
                        "IsPositiveInfinity",
                        "IsNegativeInfinity",
                        "IsNaN",
                        "IsFinite",
                        "IsInfinite",
                        "IsEven",
                        "IsOdd"
                    ]
                ],
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_FloatUnaryCondition",
        "display_name": "FloatUnaryCondition",
        "description": "",
        "category": "math/float",
        "output_node": false
    },
    "CM_FloatBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Mul",
                        "Div",
                        "Mod",
                        "Pow",
                        "FloorDiv",
                        "Max",
                        "Min",
                        "Log",
                        "Atan2"
                    ]
                ],
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_FloatBinaryOperation",
        "display_name": "FloatBinaryOperation",
        "description": "",
        "category": "math/float",
        "output_node": false
    },
    "CM_FloatBinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq",
                        "Gt",
                        "Gte",
                        "Lt",
                        "Lte"
                    ]
                ],
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_FloatBinaryCondition",
        "display_name": "FloatBinaryCondition",
        "description": "",
        "category": "math/float",
        "output_node": false
    },
    "CM_NumberUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Neg",
                        "Inc",
                        "Dec",
                        "Abs",
                        "Sqr",
                        "Cube",
                        "Sqrt",
                        "Exp",
                        "Ln",
                        "Log10",
                        "Log2",
                        "Sin",
                        "Cos",
                        "Tan",
                        "Asin",
                        "Acos",
                        "Atan",
                        "Sinh",
                        "Cosh",
                        "Tanh",
                        "Asinh",
                        "Acosh",
                        "Atanh",
                        "Round",
                        "Floor",
                        "Ceil",
                        "Trunc",
                        "Erf",
                        "Erfc",
                        "Gamma",
                        "Radians",
                        "Degrees"
                    ]
                ],
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "CM_NumberUnaryOperation",
        "display_name": "NumberUnaryOperation",
        "description": "",
        "category": "math/number",
        "output_node": false
    },
    "CM_NumberUnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsPositive",
                        "IsNegative",
                        "IsNonZero",
                        "IsPositiveInfinity",
                        "IsNegativeInfinity",
                        "IsNaN",
                        "IsFinite",
                        "IsInfinite",
                        "IsEven",
                        "IsOdd"
                    ]
                ],
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_NumberUnaryCondition",
        "display_name": "NumberUnaryCondition",
        "description": "",
        "category": "math/number",
        "output_node": false
    },
    "CM_NumberBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Mul",
                        "Div",
                        "Mod",
                        "Pow",
                        "FloorDiv",
                        "Max",
                        "Min",
                        "Log",
                        "Atan2"
                    ]
                ],
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ],
                "b": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "CM_NumberBinaryOperation",
        "display_name": "NumberBinaryOperation",
        "description": "",
        "category": "math/number",
        "output_node": false
    },
    "CM_NumberBinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq",
                        "Gt",
                        "Gte",
                        "Lt",
                        "Lte"
                    ]
                ],
                "a": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ],
                "b": [
                    "NUMBER",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_NumberBinaryCondition",
        "display_name": "NumberBinaryCondition",
        "description": "",
        "category": "math/float",
        "output_node": false
    },
    "CM_Vec2UnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Neg",
                        "Normalize"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC2"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC2"
        ],
        "name": "CM_Vec2UnaryOperation",
        "display_name": "Vec2UnaryOperation",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2UnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsNotZero",
                        "IsNormalized",
                        "IsNotNormalized"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec2UnaryCondition",
        "display_name": "Vec2UnaryCondition",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2ToScalarUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Norm"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec2ToScalarUnaryOperation",
        "display_name": "Vec2ToScalarUnaryOperation",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2BinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Cross"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC2"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC2"
        ],
        "name": "CM_Vec2BinaryOperation",
        "display_name": "Vec2BinaryOperation",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2BinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec2BinaryCondition",
        "display_name": "Vec2BinaryCondition",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2ToScalarBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Dot",
                        "Distance"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec2ToScalarBinaryOperation",
        "display_name": "Vec2ToScalarBinaryOperation",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec2ScalarOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Mul",
                        "Div"
                    ]
                ],
                "a": [
                    "VEC2",
                    {
                        "default": [
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "FLOAT"
                ]
            }
        },
        "output": [
            "VEC2"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC2"
        ],
        "name": "CM_Vec2ScalarOperation",
        "display_name": "Vec2ScalarOperation",
        "description": "",
        "category": "math/vec2",
        "output_node": false
    },
    "CM_Vec3UnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Neg",
                        "Normalize"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC3"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC3"
        ],
        "name": "CM_Vec3UnaryOperation",
        "display_name": "Vec3UnaryOperation",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3UnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsNotZero",
                        "IsNormalized",
                        "IsNotNormalized"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec3UnaryCondition",
        "display_name": "Vec3UnaryCondition",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3ToScalarUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Norm"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec3ToScalarUnaryOperation",
        "display_name": "Vec3ToScalarUnaryOperation",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3BinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Cross"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC3"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC3"
        ],
        "name": "CM_Vec3BinaryOperation",
        "display_name": "Vec3BinaryOperation",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3BinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec3BinaryCondition",
        "display_name": "Vec3BinaryCondition",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3ToScalarBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Dot",
                        "Distance"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec3ToScalarBinaryOperation",
        "display_name": "Vec3ToScalarBinaryOperation",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec3ScalarOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Mul",
                        "Div"
                    ]
                ],
                "a": [
                    "VEC3",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "FLOAT"
                ]
            }
        },
        "output": [
            "VEC3"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC3"
        ],
        "name": "CM_Vec3ScalarOperation",
        "display_name": "Vec3ScalarOperation",
        "description": "",
        "category": "math/vec3",
        "output_node": false
    },
    "CM_Vec4UnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Neg",
                        "Normalize"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC4"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC4"
        ],
        "name": "CM_Vec4UnaryOperation",
        "display_name": "Vec4UnaryOperation",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4UnaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "IsZero",
                        "IsNotZero",
                        "IsNormalized",
                        "IsNotNormalized"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec4UnaryCondition",
        "display_name": "Vec4UnaryCondition",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4ToScalarUnaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Norm"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec4ToScalarUnaryOperation",
        "display_name": "Vec4ToScalarUnaryOperation",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4BinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Add",
                        "Sub",
                        "Cross"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "VEC4"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC4"
        ],
        "name": "CM_Vec4BinaryOperation",
        "display_name": "Vec4BinaryOperation",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4BinaryCondition": {
        "input": {
            "required": {
                "op": [
                    [
                        "Eq",
                        "Neq"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "BOOL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOL"
        ],
        "name": "CM_Vec4BinaryCondition",
        "display_name": "Vec4BinaryCondition",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4ToScalarBinaryOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Dot",
                        "Distance"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "CM_Vec4ToScalarBinaryOperation",
        "display_name": "Vec4ToScalarBinaryOperation",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_Vec4ScalarOperation": {
        "input": {
            "required": {
                "op": [
                    [
                        "Mul",
                        "Div"
                    ]
                ],
                "a": [
                    "VEC4",
                    {
                        "default": [
                            0.0,
                            0.0,
                            0.0,
                            0.0
                        ]
                    }
                ],
                "b": [
                    "FLOAT"
                ]
            }
        },
        "output": [
            "VEC4"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VEC4"
        ],
        "name": "CM_Vec4ScalarOperation",
        "display_name": "Vec4ScalarOperation",
        "description": "",
        "category": "math/vec4",
        "output_node": false
    },
    "CM_SDXLResolution": {
        "input": {
            "required": {
                "resolution": [
                    [
                        "1024x1024",
                        "1152x896",
                        "896x1152",
                        "1216x832",
                        "832x1216",
                        "1344x768",
                        "768x1344",
                        "1536x640",
                        "640x1536"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "width",
            "height"
        ],
        "name": "CM_SDXLResolution",
        "display_name": "SDXLResolution",
        "description": "",
        "category": "math/graphics",
        "output_node": false
    },
    "CM_NearestSDXLResolution": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "width",
            "height"
        ],
        "name": "CM_NearestSDXLResolution",
        "display_name": "NearestSDXLResolution",
        "description": "",
        "category": "math/graphics",
        "output_node": false
    },
    "Range(Step) - Int": {
        "input": {
            "required": {
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "stop": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "step": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "end_mode": [
                    [
                        "Inclusive",
                        "Exclusive"
                    ],
                    {
                        "default": "Inclusive"
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            true,
            true
        ],
        "output_name": [
            "range",
            "range_sizes"
        ],
        "name": "Range(Step) - Int",
        "display_name": "Range(Step) - Int",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Range(Num Steps) - Int": {
        "input": {
            "required": {
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "stop": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "num_steps": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "end_mode": [
                    [
                        "Inclusive",
                        "Exclusive"
                    ],
                    {
                        "default": "Inclusive"
                    }
                ],
                "allow_uneven_steps": [
                    [
                        "True",
                        "False"
                    ],
                    {
                        "default": "False"
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            true,
            true
        ],
        "output_name": [
            "range",
            "range_sizes"
        ],
        "name": "Range(Num Steps) - Int",
        "display_name": "Range(Num Steps) - Int",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Range(Step) - Float": {
        "input": {
            "required": {
                "start": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "stop": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "step": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "end_mode": [
                    [
                        "Inclusive",
                        "Exclusive"
                    ],
                    {
                        "default": "Inclusive"
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            true,
            true
        ],
        "output_name": [
            "range",
            "range_sizes"
        ],
        "name": "Range(Step) - Float",
        "display_name": "Range(Step) - Float",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Range(Num Steps) - Float": {
        "input": {
            "required": {
                "start": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "stop": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "num_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            true,
            true
        ],
        "output_name": [
            "range",
            "range_sizes"
        ],
        "name": "Range(Num Steps) - Float",
        "display_name": "Range(Num Steps) - Float",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "List Length": {
        "input": {
            "required": {
                "In": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Length"
        ],
        "name": "List Length",
        "display_name": "List Length",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Image Overlay": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            },
            "optional": {
                "float_labels": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ],
                "int_labels": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "str_labels": [
                    "STR",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Images"
        ],
        "name": "Image Overlay",
        "display_name": "Image Overlay",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Stack Images": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "splits": [
                    "INT",
                    {
                        "forceInput": true,
                        "min": 1
                    }
                ],
                "stack_mode": [
                    [
                        "horizontal",
                        "vertical"
                    ],
                    {
                        "default": "horizontal"
                    }
                ],
                "batch_stack_mode": [
                    [
                        "horizontal",
                        "vertical"
                    ],
                    {
                        "default": "horizontal"
                    }
                ]
            },
            "optional": {
                "horizontal_labels": [
                    "*",
                    {}
                ],
                "vertical_labels": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Image"
        ],
        "name": "Stack Images",
        "display_name": "Stack Images(Deprecated)",
        "description": "",
        "category": "List Stuff",
        "output_node": true
    },
    "Empty Images": {
        "input": {
            "required": {},
            "optional": {
                "num_images": [
                    "INT",
                    {
                        "forceInput": true,
                        "min": 1
                    }
                ],
                "splits": [
                    "INT",
                    {
                        "forceInput": true,
                        "min": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Image"
        ],
        "name": "Empty Images",
        "display_name": "Empty Images",
        "description": "",
        "category": "List Stuff",
        "output_node": true
    },
    "Join Image Lists": {
        "input": {
            "required": {
                "In1": [
                    "IMAGE"
                ],
                "In2": [
                    "IMAGE"
                ]
            },
            "optional": {
                "In3": [
                    "IMAGE"
                ],
                "In4": [
                    "IMAGE"
                ],
                "In5": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            true,
            true
        ],
        "output_name": [
            "Joined",
            "Sizes"
        ],
        "name": "Join Image Lists",
        "display_name": "Join Image Lists",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Join Float Lists": {
        "input": {
            "required": {
                "In1": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ],
                "In2": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Joined"
        ],
        "name": "Join Float Lists",
        "display_name": "Join Float Lists",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "XYAny": {
        "input": {
            "required": {
                "X": [
                    "*",
                    {}
                ],
                "Y": [
                    "*",
                    {}
                ],
                "X_Label_Fallback": [
                    [
                        "str()",
                        "Numbers"
                    ],
                    {
                        "default": "str()"
                    }
                ],
                "Y_Label_Fallback": [
                    [
                        "str()",
                        "Numbers"
                    ],
                    {
                        "default": "str()"
                    }
                ],
                "Z_Label_Fallback": [
                    [
                        "str()",
                        "Numbers"
                    ],
                    {
                        "default": "str()"
                    }
                ]
            },
            "optional": {
                "Z": [
                    "*",
                    {}
                ],
                "X_Labels": [
                    "*",
                    {}
                ],
                "Y_Labels": [
                    "*",
                    {}
                ],
                "Z_Labels": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "*",
            "STRING",
            "*",
            "STRING",
            "*",
            "STRING",
            "INT",
            "INT"
        ],
        "output_is_list": [
            true,
            true,
            true,
            true,
            true,
            true,
            false,
            false
        ],
        "output_name": [
            "X Values",
            "X Labels",
            "Y Values",
            "Y Labels",
            "Z Values",
            "Z Labels",
            "Total Images",
            "Split Every"
        ],
        "name": "XYAny",
        "display_name": "XYAny",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "XYImage": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "splits": [
                    "INT",
                    {
                        "forceInput": true,
                        "min": 1
                    }
                ],
                "flip_axis": [
                    [
                        "False",
                        "True"
                    ],
                    {
                        "default": "False"
                    }
                ],
                "batch_stack_mode": [
                    [
                        "horizontal",
                        "vertical"
                    ],
                    {
                        "default": "horizontal"
                    }
                ],
                "z_enabled": [
                    [
                        "False",
                        "True"
                    ],
                    {
                        "default": "False"
                    }
                ]
            },
            "optional": {
                "x_main_label": [
                    "STRING",
                    {}
                ],
                "y_main_label": [
                    "STRING",
                    {}
                ],
                "z_main_label": [
                    "STRING",
                    {}
                ],
                "x_labels": [
                    "*",
                    {}
                ],
                "y_labels": [
                    "*",
                    {}
                ],
                "z_labels": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Image"
        ],
        "name": "XYImage",
        "display_name": "XYImage",
        "description": "",
        "category": "List Stuff",
        "output_node": true
    },
    "ImageListLoader": {
        "input": {
            "required": {
                "folder_path": [
                    "STRING",
                    {}
                ],
                "file_filter": [
                    "STRING",
                    {
                        "default": "*.png"
                    }
                ],
                "sort_method": [
                    [
                        "numerical",
                        "alphabetical"
                    ],
                    {
                        "default": "numerical"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Images"
        ],
        "name": "ImageListLoader",
        "display_name": "Image List Loader",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "KepStringList": {
        "input": {
            "required": {
                "Text1": [
                    "STRING",
                    {}
                ],
                "Text2": [
                    "STRING",
                    {}
                ]
            },
            "optional": {
                "Text3": [
                    "STRING",
                    {}
                ],
                "Text4": [
                    "STRING",
                    {}
                ],
                "Text5": [
                    "STRING",
                    {}
                ],
                "Text6": [
                    "STRING",
                    {}
                ],
                "Text7": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "STRING",
            "INT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Strings",
            "Num Strings"
        ],
        "name": "KepStringList",
        "display_name": "String List",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "KepStringListFromNewline": {
        "input": {
            "required": {
                "Text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "INT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Strings",
            "Num Strings"
        ],
        "name": "KepStringListFromNewline",
        "display_name": "String List From Newline",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Kep_VariableImageBuilder": {
        "input": {
            "required": {
                "r": [
                    "INT",
                    {
                        "defaultInput": true,
                        "min": 0,
                        "max": 255
                    }
                ],
                "g": [
                    "INT",
                    {
                        "defaultInput": true,
                        "min": 0,
                        "max": 255
                    }
                ],
                "b": [
                    "INT",
                    {
                        "defaultInput": true,
                        "min": 0,
                        "max": 255
                    }
                ],
                "a": [
                    "INT",
                    {
                        "defaultInput": true,
                        "min": 0,
                        "max": 255
                    }
                ],
                "width": [
                    "INT",
                    {
                        "defaultInput": false,
                        "default": 512
                    }
                ],
                "height": [
                    "INT",
                    {
                        "defaultInput": false,
                        "default": 512
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Image"
        ],
        "name": "Kep_VariableImageBuilder",
        "display_name": "Variable Image Builder",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Kep_ReverseList": {
        "input": {
            "required": {
                "In": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Reversed"
        ],
        "name": "Kep_ReverseList",
        "display_name": "Reverse List",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Kep_RepeatList": {
        "input": {
            "required": {
                "In": [
                    "*",
                    {}
                ],
                "Count": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 99999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Extended"
        ],
        "name": "Kep_RepeatList",
        "display_name": "Repeat List",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "Kep_JoinListAny": {
        "input": {
            "required": {
                "In1": [
                    "*",
                    {}
                ],
                "In2": [
                    "*",
                    {}
                ]
            },
            "optional": {
                "In3": [
                    "*",
                    {}
                ],
                "In4": [
                    "*",
                    {}
                ],
                "In5": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "Joined",
            "Sizes"
        ],
        "name": "Kep_JoinListAny",
        "display_name": "Join List Any",
        "description": "",
        "category": "List Stuff",
        "output_node": false
    },
    "CreateRequestMetadata": {
        "input": {
            "required": {
                "request_id": [
                    "STRING",
                    {
                        "default": "insert_id"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "CreateRequestMetadata",
        "display_name": "CreateRequestMetadata",
        "description": "",
        "category": "Bmad/api",
        "output_node": true
    },
    "SetRequestStateToComplete": {
        "input": {
            "required": {
                "resource_0": [
                    "TASK_DONE"
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SetRequestStateToComplete",
        "display_name": "SetRequestStateToComplete",
        "description": "",
        "category": "Bmad/api",
        "output_node": true
    },
    "Save Image (api)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "resource_name": [
                    "STRING",
                    {
                        "default": "image"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "TASK_DONE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TASK_DONE"
        ],
        "name": "Save Image (api)",
        "display_name": "Save Image (api)",
        "description": "",
        "category": "Bmad/api",
        "output_node": false
    },
    "Load 64 Encoded Image": {
        "input": {
            "required": {
                "image_code": [
                    "STRING",
                    {
                        "default": "insert encoded image here"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Load 64 Encoded Image",
        "display_name": "Load 64 Encoded Image",
        "description": "",
        "category": "Bmad/api",
        "output_node": false
    },
    "RequestInputs": {
        "input": {
            "required": {
                "values": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "name": "RequestInputs",
        "display_name": "RequestInputs",
        "description": "",
        "category": "Bmad/api",
        "output_node": false
    },
    "String to Integer": {
        "input": {
            "required": {
                "inStr": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "String to Integer",
        "display_name": "String to Integer",
        "description": "",
        "category": "Bmad/api/parseInput",
        "output_node": false
    },
    "String to Float": {
        "input": {
            "required": {
                "inStr": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "String to Float",
        "display_name": "String to Float",
        "description": "",
        "category": "Bmad/api/parseInput",
        "output_node": false
    },
    "Input/String to Int Array": {
        "input": {
            "required": {
                "inStr": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "INT_ARRAY"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT_ARRAY"
        ],
        "name": "Input/String to Int Array",
        "display_name": "Input/String to Int Array",
        "description": "",
        "category": "Bmad/api/parseInput",
        "output_node": false
    },
    "CheckpointLoader (dirty)": {
        "input": {
            "required": {
                "config_name": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "ckpt_name": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoader (dirty)",
        "display_name": "CheckpointLoader (dirty)",
        "description": "",
        "category": "Bmad/api/dirty loaders",
        "output_node": false
    },
    "CheckpointLoaderSimple (dirty)": {
        "input": {
            "required": {
                "ckpt_name": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoaderSimple (dirty)",
        "display_name": "CheckpointLoaderSimple (dirty)",
        "description": "",
        "category": "Bmad/api/dirty loaders",
        "output_node": false
    },
    "LoraLoader (dirty)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP"
        ],
        "name": "LoraLoader (dirty)",
        "display_name": "LoraLoader (dirty)",
        "description": "",
        "category": "Bmad/api/dirty loaders",
        "output_node": false
    },
    "HypernetworkLoader (dirty)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "hypernetwork_name": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "HypernetworkLoader (dirty)",
        "display_name": "HypernetworkLoader (dirty)",
        "description": "",
        "category": "Bmad/api/dirty loaders",
        "output_node": false
    },
    "Get Models": {
        "input": {
            "required": {
                "dump": [
                    [
                        "all models",
                        "checkpoints",
                        "clip",
                        "clip_vision",
                        "configs",
                        "controlnet",
                        "diffusers",
                        "embeddings",
                        "gligen",
                        "hypernetworks",
                        "loras",
                        "style_models",
                        "upscale_models",
                        "vae"
                    ],
                    {
                        "default": "all models"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Get Models",
        "display_name": "Get Models",
        "description": "",
        "category": "Bmad/dump",
        "output_node": true
    },
    "Get Prompt": {
        "input": {
            "required": {
                "api_prompt": [
                    [
                        "print to console",
                        "save to file"
                    ],
                    {
                        "default": "print to console"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Get Prompt",
        "display_name": "Get Prompt",
        "description": "",
        "category": "Bmad/dump",
        "output_node": true
    },
    "String": {
        "input": {
            "required": {
                "inStr": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "String",
        "display_name": "String",
        "description": "",
        "category": "Bmad",
        "output_node": false
    },
    "Add String To Many": {
        "input": {
            "required": {
                "to_add": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "inputs_len": [
                    "INT",
                    {
                        "default": 3,
                        "min": 2,
                        "max": 32,
                        "step": 1
                    }
                ],
                "operation": [
                    [
                        "append",
                        "prepend"
                    ],
                    {
                        "default": "append"
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "name": "Add String To Many",
        "display_name": "Add String To Many",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "Color (RGB)": {
        "input": {
            "required": {
                "r": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "g": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "COLOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "COLOR"
        ],
        "name": "Color (RGB)",
        "display_name": "Color (RGB)",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Color (hexadecimal)": {
        "input": {
            "required": {
                "hex": [
                    "STRING",
                    {
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "COLOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "COLOR"
        ],
        "name": "Color (hexadecimal)",
        "display_name": "Color (hexadecimal)",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Color Clip": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "target": [
                    [
                        "TO_BLACK",
                        "TO_WHITE",
                        "NOTHING"
                    ],
                    {
                        "default": "TO_BLACK"
                    }
                ],
                "complement": [
                    [
                        "TO_BLACK",
                        "TO_WHITE",
                        "NOTHING"
                    ],
                    {
                        "default": "TO_WHITE"
                    }
                ],
                "color": [
                    "COLOR"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Color Clip",
        "display_name": "Color Clip",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Color Clip (advanced)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "target": [
                    [
                        "NOTHING",
                        "TO_A",
                        "TO_B"
                    ],
                    {
                        "default": "NOTHING"
                    }
                ],
                "complement": [
                    [
                        "NOTHING",
                        "TO_A",
                        "TO_B"
                    ],
                    {
                        "default": "TO_A"
                    }
                ],
                "color": [
                    "COLOR"
                ]
            },
            "optional": {
                "color_a": [
                    "COLOR"
                ],
                "color_b": [
                    "COLOR"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Color Clip (advanced)",
        "display_name": "Color Clip (advanced)",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "MonoMerge": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "target": [
                    [
                        "white",
                        "black"
                    ],
                    {
                        "default": "white"
                    }
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MonoMerge",
        "display_name": "MonoMerge",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Repeat Into Grid (latent)": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Repeat Into Grid (latent)",
        "display_name": "Repeat Into Grid (latent)",
        "description": "",
        "category": "Bmad/latent",
        "output_node": false
    },
    "Repeat Into Grid (image)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Repeat Into Grid (image)",
        "display_name": "Repeat Into Grid (image)",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "UnGridify (image)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "UnGridify (image)",
        "display_name": "UnGridify (image)",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Conditioning Grid (cond)": {
        "input": {
            "required": {
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 3
                    }
                ],
                "base": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Conditioning Grid (cond)",
        "display_name": "Conditioning Grid (cond)",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "Conditioning Grid (string)": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "base": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 3
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Conditioning Grid (string)",
        "display_name": "Conditioning Grid (string)",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "AdjustRect": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "min": 0,
                        "max": 2147483647,
                        "step": 1
                    }
                ],
                "b": [
                    "INT",
                    {
                        "min": 0,
                        "max": 2147483647,
                        "step": 1
                    }
                ],
                "c": [
                    "INT",
                    {
                        "min": 0,
                        "max": 2147483647,
                        "step": 1
                    }
                ],
                "d": [
                    "INT",
                    {
                        "min": 0,
                        "max": 2147483647,
                        "step": 1
                    }
                ],
                "xm": [
                    "INT",
                    {
                        "default": 64,
                        "min": 2,
                        "max": 1280,
                        "step": 2
                    }
                ],
                "ym": [
                    "INT",
                    {
                        "default": 64,
                        "min": 2,
                        "max": 1280,
                        "step": 2
                    }
                ],
                "round_mode": [
                    [
                        "Floor",
                        "Ceil",
                        "Round",
                        "Exact"
                    ],
                    {
                        "default": "Round"
                    }
                ],
                "input_format": [
                    [
                        "top-left XY + WH",
                        "top-left XY + bottom-right XY",
                        "center XY (floored) + WH",
                        "center XY + half WH (all floored)"
                    ],
                    {
                        "default": "top-left XY + bottom-right XY"
                    }
                ],
                "output_format": [
                    [
                        "top-left XY + WH",
                        "top-left XY + bottom-right XY",
                        "center XY (floored) + WH",
                        "center XY + half WH (all floored)"
                    ],
                    {
                        "default": "top-left XY + bottom-right XY"
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "name": "AdjustRect",
        "display_name": "AdjustRect",
        "description": "",
        "category": "Bmad",
        "output_node": false
    },
    "VAEEncodeBatch": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 3,
                        "min": 2,
                        "max": 32,
                        "step": 1
                    }
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VAEEncodeBatch",
        "display_name": "VAEEncodeBatch",
        "description": "",
        "category": "Bmad",
        "output_node": false
    },
    "AnyToAny": {
        "input": {
            "required": {
                "v": [
                    "*"
                ],
                "function": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*",
            "*"
        ],
        "name": "AnyToAny",
        "display_name": "AnyToAny",
        "description": "",
        "category": "Bmad/\u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f",
        "output_node": false
    },
    "MaskGrid N KSamplers Advanced": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "add_noise": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "start_at_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_at_step": [
                    "INT",
                    {
                        "default": 10000,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "return_with_leftover_noise": [
                    [
                        "disable",
                        "enable"
                    ]
                ],
                "mask": [
                    "IMAGE"
                ],
                "rows": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 16
                    }
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 16
                    }
                ],
                "mode": [
                    [
                        "Sample then Fork",
                        "Fork then Sample"
                    ],
                    {
                        "default": "Sample then Fork"
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "MaskGrid N KSamplers Advanced",
        "display_name": "MaskGrid N KSamplers Advanced",
        "description": "",
        "category": "Bmad/experimental",
        "output_node": false
    },
    "Merge Latent Batch Gridwise": {
        "input": {
            "required": {
                "batch": [
                    "LATENT"
                ],
                "mask": [
                    "IMAGE"
                ],
                "rows": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 16
                    }
                ],
                "columns": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 16
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Merge Latent Batch Gridwise",
        "display_name": "Merge Latent Batch Gridwise",
        "description": "",
        "category": "Bmad/latent",
        "output_node": false
    },
    "CLIPEncodeMultiple": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "inputs_len": [
                    "INT",
                    {
                        "default": 9,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPEncodeMultiple",
        "display_name": "CLIPEncodeMultiple",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "ControlNetHadamard": {
        "input": {
            "required": {
                "conds": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ControlNetHadamard",
        "display_name": "ControlNetHadamard",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "ControlNetHadamard (manual)": {
        "input": {
            "required": {
                "conds": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "inputs_len": [
                    "INT",
                    {
                        "default": 9,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ControlNetHadamard (manual)",
        "display_name": "ControlNetHadamard (manual)",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "FlatLatentsIntoSingleGrid": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "FlatLatentsIntoSingleGrid",
        "display_name": "FlatLatentsIntoSingleGrid",
        "description": "",
        "category": "Bmad/latent",
        "output_node": false
    },
    "ImageBatchToList": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBatchToList",
        "display_name": "ImageBatchToList",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "FromListGetMasks": {
        "input": {
            "required": {
                "list": [
                    "MASK",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK",
            "MASK"
        ],
        "name": "FromListGetMasks",
        "display_name": "FromListGetMasks",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetImages": {
        "input": {
            "required": {
                "list": [
                    "IMAGE",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "name": "FromListGetImages",
        "display_name": "FromListGetImages",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetConds": {
        "input": {
            "required": {
                "list": [
                    "CONDITIONING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "name": "FromListGetConds",
        "display_name": "FromListGetConds",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetLatents": {
        "input": {
            "required": {
                "list": [
                    "LATENT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT",
            "LATENT"
        ],
        "name": "FromListGetLatents",
        "display_name": "FromListGetLatents",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetModels": {
        "input": {
            "required": {
                "list": [
                    "MODEL",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL",
            "MODEL"
        ],
        "name": "FromListGetModels",
        "display_name": "FromListGetModels",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetColors": {
        "input": {
            "required": {
                "list": [
                    "COLOR",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR",
            "COLOR"
        ],
        "name": "FromListGetColors",
        "display_name": "FromListGetColors",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetStrings": {
        "input": {
            "required": {
                "list": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "name": "FromListGetStrings",
        "display_name": "FromListGetStrings",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetInts": {
        "input": {
            "required": {
                "list": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "name": "FromListGetInts",
        "display_name": "FromListGetInts",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGetFloats": {
        "input": {
            "required": {
                "list": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "name": "FromListGetFloats",
        "display_name": "FromListGetFloats",
        "description": "",
        "category": "Bmad/Lists/GetAll",
        "output_node": false
    },
    "FromListGet1Mask": {
        "input": {
            "required": {
                "list": [
                    "MASK",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "FromListGet1Mask",
        "display_name": "FromListGet1Mask",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Image": {
        "input": {
            "required": {
                "list": [
                    "IMAGE",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FromListGet1Image",
        "display_name": "FromListGet1Image",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Latent": {
        "input": {
            "required": {
                "list": [
                    "LATENT",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "FromListGet1Latent",
        "display_name": "FromListGet1Latent",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Cond": {
        "input": {
            "required": {
                "list": [
                    "CONDITIONING",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "FromListGet1Cond",
        "display_name": "FromListGet1Cond",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Model": {
        "input": {
            "required": {
                "list": [
                    "MODEL",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "FromListGet1Model",
        "display_name": "FromListGet1Model",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Color": {
        "input": {
            "required": {
                "list": [
                    "COLOR",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "COLOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "COLOR"
        ],
        "name": "FromListGet1Color",
        "display_name": "FromListGet1Color",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1String": {
        "input": {
            "required": {
                "list": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "FromListGet1String",
        "display_name": "FromListGet1String",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Int": {
        "input": {
            "required": {
                "list": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "FromListGet1Int",
        "display_name": "FromListGet1Int",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "FromListGet1Float": {
        "input": {
            "required": {
                "list": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -2147483648
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "FromListGet1Float",
        "display_name": "FromListGet1Float",
        "description": "",
        "category": "Bmad/Lists/Get1",
        "output_node": false
    },
    "ToMaskList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ToMaskList",
        "display_name": "ToMaskList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToImageList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ToImageList",
        "display_name": "ToImageList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToLatentList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "ToLatentList",
        "display_name": "ToLatentList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToCondList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ToCondList",
        "display_name": "ToCondList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToModelList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ToModelList",
        "display_name": "ToModelList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToColorList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "COLOR"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "COLOR"
        ],
        "name": "ToColorList",
        "display_name": "ToColorList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToStringList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ToStringList",
        "display_name": "ToStringList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToIntList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "INT"
        ],
        "name": "ToIntList",
        "display_name": "ToIntList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ToFloatList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "ToFloatList",
        "display_name": "ToFloatList",
        "description": "",
        "category": "Bmad/Lists/Make or Intercalate",
        "output_node": false
    },
    "ExtendMaskList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ExtendMaskList",
        "display_name": "ExtendMaskList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendImageList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ExtendImageList",
        "display_name": "ExtendImageList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendLatentList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "ExtendLatentList",
        "display_name": "ExtendLatentList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendCondList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ExtendCondList",
        "display_name": "ExtendCondList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendModelList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ExtendModelList",
        "display_name": "ExtendModelList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendColorList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "COLOR"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "COLOR"
        ],
        "name": "ExtendColorList",
        "display_name": "ExtendColorList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendStringList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ExtendStringList",
        "display_name": "ExtendStringList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendIntList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "INT"
        ],
        "name": "ExtendIntList",
        "display_name": "ExtendIntList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ExtendFloatList": {
        "input": {
            "required": {
                "inputs_len": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "ExtendFloatList",
        "display_name": "ExtendFloatList",
        "description": "",
        "category": "Bmad/Lists/Extend",
        "output_node": false
    },
    "ConvertImg": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "to": [
                    [
                        "RGBA",
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ConvertImg",
        "display_name": "ConvertImg",
        "description": "",
        "category": "Bmad/CV",
        "output_node": false
    },
    "CopyMakeBorder": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "border_size": [
                    "INT",
                    {
                        "default": 64
                    }
                ],
                "border_type": [
                    [
                        "BORDER_CONSTANT",
                        "BORDER_REPLICATE",
                        "BORDER_REFLECT",
                        "BORDER_REFLECT101",
                        "BORDER_WRAP",
                        "BORDER_REFLECT_101",
                        "BORDER_DEFAULT",
                        "BORDER_ISOLATED"
                    ],
                    "BORDER_CONSTANT"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CopyMakeBorder",
        "display_name": "CopyMakeBorder",
        "description": "",
        "category": "Bmad/CV/Misc",
        "output_node": false
    },
    "AddAlpha": {
        "input": {
            "required": {
                "rgb_image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "alpha": [
                    "IMAGE"
                ],
                "method": [
                    [
                        "default",
                        "invert"
                    ],
                    {
                        "default": "default"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AddAlpha",
        "display_name": "AddAlpha",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "FadeMaskEdges": {
        "input": {
            "required": {
                "binary_image": [
                    "IMAGE"
                ],
                "edge_size": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 1.0,
                        "step": 1.0
                    }
                ],
                "edge_tightness": [
                    "FLOAT",
                    {
                        "default": 1.1,
                        "min": 1.0,
                        "max": 10.0,
                        "step": 0.05
                    }
                ],
                "edge_exponent": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "smoothing_diameter": [
                    "INT",
                    {
                        "default": 10,
                        "min": 2,
                        "max": 256,
                        "step": 1
                    }
                ],
                "paste_original_blacks": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FadeMaskEdges",
        "display_name": "FadeMaskEdges",
        "description": "",
        "category": "Bmad/CV/Misc",
        "output_node": false
    },
    "Framed Mask Grab Cut": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "thresh": [
                    "IMAGE"
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 25,
                        "min": 0,
                        "max": 200,
                        "step": 1
                    }
                ],
                "margin": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 100,
                        "step": 1
                    }
                ],
                "frame_option": [
                    [
                        "FULL_FRAME",
                        "IGNORE_BOTTOM",
                        "IGNORE_TOP",
                        "IGNORE_RIGHT",
                        "IGNORE_LEFT",
                        "IGNORE_HORIZONTAL",
                        "IGNORE_VERTICAL"
                    ],
                    {
                        "default": "FULL_FRAME"
                    }
                ],
                "threshold_FGD": [
                    "INT",
                    {
                        "default": 250,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold_PR_FGD": [
                    "INT",
                    {
                        "default": 128,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Framed Mask Grab Cut",
        "display_name": "Framed Mask Grab Cut",
        "description": "",
        "category": "Bmad/CV/GrabCut",
        "output_node": false
    },
    "Framed Mask Grab Cut 2": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "thresh_maybe": [
                    "IMAGE"
                ],
                "thresh_sure": [
                    "IMAGE"
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 25,
                        "min": 0,
                        "max": 200,
                        "step": 1
                    }
                ],
                "margin": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 100,
                        "step": 1
                    }
                ],
                "frame_option": [
                    [
                        "FULL_FRAME",
                        "IGNORE_BOTTOM",
                        "IGNORE_TOP",
                        "IGNORE_RIGHT",
                        "IGNORE_LEFT",
                        "IGNORE_HORIZONTAL",
                        "IGNORE_VERTICAL"
                    ],
                    {
                        "default": "FULL_FRAME"
                    }
                ],
                "binary_threshold": [
                    "INT",
                    {
                        "default": 128,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "maybe_black_is_sure_background": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Framed Mask Grab Cut 2",
        "display_name": "Framed Mask Grab Cut 2",
        "description": "",
        "category": "Bmad/CV/GrabCut",
        "output_node": false
    },
    "Rect Grab Cut": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "x1": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 2000,
                        "step": 1
                    }
                ],
                "y1": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 2000,
                        "step": 1
                    }
                ],
                "x2": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 2000,
                        "step": 1
                    }
                ],
                "y2": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 2000,
                        "step": 1
                    }
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 25,
                        "min": 0,
                        "max": 200,
                        "step": 1
                    }
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Rect Grab Cut",
        "display_name": "Rect Grab Cut",
        "description": "",
        "category": "Bmad/CV/GrabCut",
        "output_node": false
    },
    "Contours": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "retrieval_mode": [
                    [
                        "RETR_EXTERNAL",
                        "RETR_LIST",
                        "RETR_CCOMP",
                        "RETR_TREE",
                        "RETR_FLOODFILL"
                    ],
                    {
                        "default": "RETR_LIST"
                    }
                ],
                "approximation_mode": [
                    [
                        "CHAIN_APPROX_NONE",
                        "CHAIN_APPROX_SIMPLE",
                        "CHAIN_APPROX_TC89_L1",
                        "CHAIN_APPROX_TC89_KCOS"
                    ],
                    {
                        "default": "CHAIN_APPROX_SIMPLE"
                    }
                ]
            }
        },
        "output": [
            "CV_CONTOURS",
            "CV_CONTOUR",
            "CV_CONTOURS_HIERARCHY"
        ],
        "output_is_list": [
            false,
            true,
            false
        ],
        "output_name": [
            "CV_CONTOURS",
            "CV_CONTOUR",
            "CV_CONTOURS_HIERARCHY"
        ],
        "name": "Contours",
        "display_name": "Contours",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "Draw Contour(s)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "contours": [
                    "CV_CONTOURS"
                ],
                "index_to_draw": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "thickness": [
                    "INT",
                    {
                        "default": 5,
                        "min": -1,
                        "max": 32,
                        "step": 1
                    }
                ],
                "color": [
                    "COLOR"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Draw Contour(s)",
        "display_name": "Draw Contour(s)",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "Get Contour from list": {
        "input": {
            "required": {
                "contours": [
                    "CV_CONTOURS"
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "CV_CONTOUR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CV_CONTOUR"
        ],
        "name": "Get Contour from list",
        "display_name": "Get Contour from list",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "BoundingRect (contours)": {
        "input": {
            "required": {
                "contour": [
                    "CV_CONTOUR"
                ],
                "return_mode": [
                    [
                        "top-left XY + WH",
                        "top-left XY + bottom-right XY",
                        "center XY (floored) + WH",
                        "center XY + half WH (all floored)"
                    ],
                    {
                        "default": "top-left XY + bottom-right XY"
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "name": "BoundingRect (contours)",
        "display_name": "BoundingRect (contours)",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "Filter Contour": {
        "input": {
            "required": {
                "contours": [
                    "CV_CONTOURS"
                ],
                "fitness": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "# Contour Fitness Function\n"
                    }
                ],
                "select": [
                    [
                        "MAX",
                        "MIN",
                        "MODE",
                        "FILTER"
                    ],
                    {
                        "default": "MAX"
                    }
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "aux_contour": [
                    "CV_CONTOUR"
                ]
            }
        },
        "output": [
            "CV_CONTOUR",
            "CV_CONTOURS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CV_CONTOUR",
            "CV_CONTOURS"
        ],
        "name": "Filter Contour",
        "display_name": "Filter Contour",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "Contour To Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "contour": [
                    "CV_CONTOUR"
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Contour To Mask",
        "display_name": "Contour To Mask",
        "description": "",
        "category": "Bmad/CV/Contour",
        "output_node": false
    },
    "SeamlessClone": {
        "input": {
            "required": {
                "dst": [
                    "IMAGE"
                ],
                "src": [
                    "IMAGE"
                ],
                "src_mask": [
                    "IMAGE"
                ],
                "flag": [
                    [
                        "NORMAL",
                        "MIXED",
                        "MONO"
                    ],
                    {
                        "default": "NORMAL"
                    }
                ],
                "cx": [
                    "INT",
                    {
                        "default": 0,
                        "min": -999999,
                        "step": 1
                    }
                ],
                "cy": [
                    "INT",
                    {
                        "default": 0,
                        "min": -999999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SeamlessClone",
        "display_name": "SeamlessClone",
        "description": "",
        "category": "Bmad/CV/C.Photography",
        "output_node": false
    },
    "SeamlessClone (simple)": {
        "input": {
            "required": {
                "dst": [
                    "IMAGE"
                ],
                "src": [
                    "IMAGE"
                ],
                "src_mask": [
                    "IMAGE"
                ],
                "flag": [
                    [
                        "NORMAL",
                        "MIXED",
                        "MONO"
                    ],
                    {
                        "default": "NORMAL"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SeamlessClone (simple)",
        "display_name": "SeamlessClone (simple)",
        "description": "",
        "category": "Bmad/CV/C.Photography",
        "output_node": false
    },
    "Inpaint": {
        "input": {
            "required": {
                "img": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ],
                "radius": [
                    "INT",
                    {
                        "default": 3,
                        "min": 0,
                        "step": 1
                    }
                ],
                "flag": [
                    [
                        "TELEA",
                        "NS"
                    ],
                    {
                        "default": "TELEA"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Inpaint",
        "display_name": "Inpaint",
        "description": "",
        "category": "Bmad/CV/C.Photography",
        "output_node": false
    },
    "ChameleonMask": {
        "input": {
            "required": {
                "dst": [
                    "IMAGE"
                ],
                "src": [
                    "IMAGE"
                ],
                "thresh_blur": [
                    "INT",
                    {
                        "default": 30,
                        "min": 2,
                        "step": 2
                    }
                ],
                "close_dist": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "step": 1
                    }
                ],
                "open_dist": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "step": 1
                    }
                ],
                "size_dist": [
                    "INT",
                    {
                        "default": 8,
                        "min": -99999,
                        "step": 1
                    }
                ],
                "mask_blur": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "step": 2
                    }
                ],
                "contrast_adjust": [
                    "FLOAT",
                    {
                        "default": 2.4,
                        "min": 0,
                        "max": 20,
                        "step": 0.5
                    }
                ],
                "mode": [
                    [
                        "GRAY",
                        "VALUE",
                        "LIGHTNESS",
                        "HUE",
                        "SATURATION (HSV)",
                        "SATURATION (HSL)"
                    ],
                    {
                        "default": "GRAY"
                    }
                ],
                "output_format": [
                    [
                        "RGB",
                        "GRAY"
                    ],
                    {
                        "default": "RGB"
                    }
                ]
            },
            "optional": {
                "optional_roi_mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "ChameleonMask",
        "display_name": "ChameleonMask",
        "description": "",
        "category": "Bmad/CV/C.Photography",
        "output_node": false
    },
    "OtsuThreshold": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "threshold_type": [
                    [
                        "BINARY",
                        "BINARY_INV",
                        "TRUNC",
                        "TOZERO",
                        "TOZERO_INV"
                    ],
                    {
                        "default": "BINARY"
                    }
                ],
                "gaussian_blur_x": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 200,
                        "step": 2
                    }
                ],
                "gaussian_blur_y": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 200,
                        "step": 2
                    }
                ],
                "gaussian_border_type": [
                    [
                        "BORDER_CONSTANT",
                        "BORDER_REPLICATE",
                        "BORDER_REFLECT",
                        "BORDER_REFLECT101",
                        "BORDER_WRAP",
                        "BORDER_TRANSPARENT",
                        "BORDER_REFLECT_101",
                        "BORDER_DEFAULT",
                        "BORDER_ISOLATED"
                    ],
                    {
                        "default": "BORDER_CONSTANT"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "OtsuThreshold",
        "display_name": "OtsuThreshold",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "AdaptiveThresholding": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ],
                "max_value": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "adaptive_method": [
                    [
                        "ADAPTIVE_THRESH_MEAN_C",
                        "ADAPTIVE_THRESH_GAUSSIAN_C"
                    ],
                    {
                        "default": "ADAPTIVE_THRESH_GAUSSIAN_C"
                    }
                ],
                "threshold_type": [
                    [
                        "BINARY",
                        "BINARY_INV",
                        "TRUNC",
                        "TOZERO",
                        "TOZERO_INV"
                    ],
                    {
                        "default": "BINARY"
                    }
                ],
                "block_size": [
                    "INT",
                    {
                        "default": 4,
                        "min": 2,
                        "step": 2
                    }
                ],
                "c": [
                    "INT",
                    {
                        "default": 2,
                        "min": -999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AdaptiveThresholding",
        "display_name": "AdaptiveThresholding",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "EqualizeHistogram": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "EqualizeHistogram",
        "display_name": "EqualizeHistogram",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "CLAHE": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ],
                "clip_limit": [
                    "INT",
                    {
                        "default": 2,
                        "step": 1
                    }
                ],
                "tile_grid_x": [
                    "INT",
                    {
                        "default": 8,
                        "min": 2,
                        "step": 1
                    }
                ],
                "tile_grid_y": [
                    "INT",
                    {
                        "default": 8,
                        "min": 2,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CLAHE",
        "display_name": "CLAHE",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "FindThreshold": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ],
                "start_at": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "end_at": [
                    "INT",
                    {
                        "default": 255,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "thresh_type": [
                    [
                        "BINARY",
                        "BINARY_INV",
                        "TRUNC",
                        "TOZERO",
                        "TOZERO_INV"
                    ],
                    {
                        "default": "BINARY"
                    }
                ],
                "downscale_factor": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "step": 1
                    }
                ],
                "condition": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "# Some expression that returns True or False\n"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FindThreshold",
        "display_name": "FindThreshold",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "InRange (hsv)": {
        "input": {
            "required": {
                "rgb_image": [
                    "IMAGE"
                ],
                "color_a": [
                    "HSV_COLOR"
                ],
                "color_b": [
                    "HSV_COLOR"
                ],
                "hue_mode": [
                    [
                        "SMALLEST",
                        "LARGEST",
                        "IGNORE",
                        "SINGLE",
                        "SPLIT"
                    ],
                    {
                        "default": "SMALLEST"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "InRange (hsv)",
        "display_name": "InRange (hsv)",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "DistanceTransform": {
        "input": {
            "required": {
                "binary_image": [
                    "IMAGE"
                ],
                "distance_type": [
                    [
                        "DIST_L2",
                        "DIST_L1",
                        "DIST_C"
                    ],
                    {
                        "default": "DIST_L2"
                    }
                ],
                "mask_size": [
                    [
                        "DIST_MASK_3",
                        "DIST_MASK_5",
                        "DIST_MASK_PRECISE"
                    ],
                    {
                        "default": "DIST_MASK_3"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "DistanceTransform",
        "display_name": "DistanceTransform",
        "description": "",
        "category": "Bmad/CV/Thresholding",
        "output_node": false
    },
    "MorphologicOperation": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ],
                "operation": [
                    [
                        "MORPH_ERODE",
                        "MORPH_DILATE",
                        "MORPH_OPEN",
                        "MORPH_CLOSE",
                        "MORPH_GRADIENT",
                        "MORPH_TOPHAT",
                        "MORPH_BLACKHAT"
                    ],
                    [
                        "MORPH_ERODE",
                        "MORPH_DILATE",
                        "MORPH_OPEN",
                        "MORPH_CLOSE",
                        "MORPH_GRADIENT",
                        "MORPH_TOPHAT",
                        "MORPH_BLACKHAT"
                    ]
                ],
                "kernel_type": [
                    [
                        "MORPH_RECT",
                        "MORPH_ELLIPSE",
                        "MORPH_CROSS"
                    ],
                    [
                        "MORPH_RECT",
                        "MORPH_ELLIPSE",
                        "MORPH_CROSS"
                    ]
                ],
                "kernel_size_x": [
                    "INT",
                    {
                        "default": 4,
                        "min": 2,
                        "step": 2
                    }
                ],
                "kernel_size_y": [
                    "INT",
                    {
                        "default": 4,
                        "min": 2,
                        "step": 2
                    }
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MorphologicOperation",
        "display_name": "MorphologicOperation",
        "description": "",
        "category": "Bmad/CV/Morphology",
        "output_node": false
    },
    "MorphologicSkeletoning": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MorphologicSkeletoning",
        "display_name": "MorphologicSkeletoning",
        "description": "",
        "category": "Bmad/CV/Morphology",
        "output_node": false
    },
    "ColorDictionary": {
        "input": {
            "required": {
                "number_of_colors": [
                    "INT",
                    {
                        "default": 8,
                        "min": 2,
                        "max": 12
                    }
                ]
            }
        },
        "output": [
            "COLOR_DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "COLOR_DICT"
        ],
        "name": "ColorDictionary",
        "display_name": "ColorDictionary",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "ColorDictionary (custom)": {
        "input": {
            "required": {
                "color_names": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "colors": [
                    "COLOR",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "COLOR_DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "COLOR_DICT"
        ],
        "name": "ColorDictionary (custom)",
        "display_name": "ColorDictionary (custom)",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "FindComplementaryColor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "color_dict": [
                    "COLOR_DICT"
                ],
                "power": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 10,
                        "step": "0.01"
                    }
                ]
            },
            "optional": {
                "mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "COLOR",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "COLOR",
            "STRING"
        ],
        "name": "FindComplementaryColor",
        "display_name": "FindComplementaryColor",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "KMeansColor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "number_of_colors": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1
                    }
                ],
                "max_iterations": [
                    "INT",
                    {
                        "default": 100
                    }
                ],
                "eps": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "KMeansColor",
        "display_name": "KMeansColor",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "NaiveAutoKMeansColor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "max_k": [
                    "INT",
                    {
                        "default": 8,
                        "min": 3,
                        "max": 16
                    }
                ],
                "rc_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "max": 1,
                        "min": 0.01,
                        "step": 0.01
                    }
                ],
                "max_iterations": [
                    "INT",
                    {
                        "default": 100
                    }
                ],
                "eps": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "INT"
        ],
        "name": "NaiveAutoKMeansColor",
        "display_name": "NaiveAutoKMeansColor",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "RGB to HSV": {
        "input": {
            "required": {
                "rgb_color": [
                    "COLOR"
                ]
            }
        },
        "output": [
            "HSV_COLOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "HSV_COLOR"
        ],
        "name": "RGB to HSV",
        "display_name": "RGB to HSV",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "SampleColorHSV": {
        "input": {
            "required": {
                "rgb_image": [
                    "IMAGE"
                ],
                "sample_size": [
                    "INT",
                    {
                        "default": 1000,
                        "min": 1,
                        "max": 65536
                    }
                ],
                "sampling_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "HSV_SAMPLES"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "HSV_SAMPLES"
        ],
        "name": "SampleColorHSV",
        "display_name": "SampleColorHSV",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "BuildColorRangeHSV (hsv)": {
        "input": {
            "required": {
                "samples": [
                    "HSV_SAMPLES"
                ],
                "percentage_modifier": [
                    "INT",
                    {
                        "default": 50,
                        "min": 1,
                        "max": 100
                    }
                ],
                "interval_type": [
                    [
                        "median to extremes interpolation",
                        "average +- 3x max deviation",
                        "average +- 2x standard deviation",
                        "sample percentage centered at median"
                    ],
                    "median to extremes interpolation"
                ]
            }
        },
        "output": [
            "HSV_COLOR",
            "HSV_COLOR",
            [
                "SMALLEST",
                "LARGEST",
                "IGNORE",
                "SINGLE",
                "SPLIT"
            ]
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "HSV_COLOR",
            "HSV_COLOR",
            [
                "SMALLEST",
                "LARGEST",
                "IGNORE",
                "SINGLE",
                "SPLIT"
            ]
        ],
        "name": "BuildColorRangeHSV (hsv)",
        "display_name": "BuildColorRangeHSV (hsv)",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "BuildColorRangeAdvanced (hsv)": {
        "input": {
            "required": {
                "samples": [
                    "HSV_SAMPLES"
                ],
                "hue_exp": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "# hue\nh_quant2(0, 1).scale_by_constant(16) if 2 < v_median < 253 else to_interval(0, 180)\n    "
                    }
                ],
                "sat_exp": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "# saturation\nto_interval(5, 255) if 2 < v_median < 253 else s_quant2(0,1).interpolate(0.2, [0, 255])\n    "
                    }
                ],
                "val_exp": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "# value\nv_quant2(0,1).interpolate(.5, [0, 255]).scale_by_constant(50) if 2 < v_median < 253 else v_quant2(0,1).scale_by_constant(8)\n    "
                    }
                ]
            }
        },
        "output": [
            "HSV_COLOR",
            "HSV_COLOR",
            [
                "SMALLEST",
                "LARGEST",
                "IGNORE",
                "SINGLE",
                "SPLIT"
            ]
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "HSV_COLOR",
            "HSV_COLOR",
            [
                "SMALLEST",
                "LARGEST",
                "IGNORE",
                "SINGLE",
                "SPLIT"
            ]
        ],
        "name": "BuildColorRangeAdvanced (hsv)",
        "display_name": "BuildColorRangeAdvanced (hsv)",
        "description": "",
        "category": "Bmad/CV/Color A.",
        "output_node": false
    },
    "Remap": {
        "input": {
            "required": {
                "remap": [
                    "REMAP",
                    {
                        "forceInput": true
                    }
                ],
                "src": [
                    "IMAGE"
                ],
                "interpolation": [
                    [
                        "INTER_NEAREST",
                        "INTER_LINEAR",
                        "INTER_AREA",
                        "INTER_LANCZOS4",
                        "INTER_CUBIC"
                    ],
                    {
                        "default": "INTER_AREA"
                    }
                ]
            },
            "optional": {
                "src_mask": [
                    "MASK"
                ],
                "output_with_alpha": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "Remap",
        "display_name": "Remap",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapToInnerCylinder": {
        "input": {
            "required": {
                "fov": [
                    "INT",
                    {
                        "default": 90,
                        "min": 1,
                        "max": 179
                    }
                ],
                "swap_xy": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapToInnerCylinder",
        "display_name": "RemapToInnerCylinder",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapToOuterCylinder": {
        "input": {
            "required": {
                "fov": [
                    "INT",
                    {
                        "default": 90,
                        "min": 1,
                        "max": 179
                    }
                ],
                "swap_xy": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapToOuterCylinder",
        "display_name": "RemapToOuterCylinder",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapPinch": {
        "input": {
            "required": {
                "power_x": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "power_y": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "center_x": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "center_y": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapPinch",
        "display_name": "RemapPinch",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapStretch": {
        "input": {
            "required": {
                "power_x": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "power_y": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "center_x": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "center_y": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapStretch",
        "display_name": "RemapStretch",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapBarrelDistortion": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1e-05
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1e-05
                    }
                ],
                "c": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1e-05
                    }
                ]
            },
            "optional": {
                "d": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapBarrelDistortion",
        "display_name": "RemapBarrelDistortion",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapInsideParabolas": {
        "input": {
            "required": {
                "dst_mask_with_2_parabolas": [
                    "MASK"
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapInsideParabolas",
        "display_name": "RemapInsideParabolas",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapInsideParabolasAdvanced": {
        "input": {
            "required": {
                "dst_mask_with_2_parabolas": [
                    "MASK"
                ],
                "curve_wise_adjust": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0.3,
                        "max": 2,
                        "step": 0.01
                    }
                ],
                "ortho_wise_adjust": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 0.01
                    }
                ],
                "flip_ortho": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapInsideParabolasAdvanced",
        "display_name": "RemapInsideParabolasAdvanced",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapFromInsideParabolas": {
        "input": {
            "required": {
                "src_mask_with_2_parabolas": [
                    "MASK"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapFromInsideParabolas",
        "display_name": "RemapFromInsideParabolas",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapToQuadrilateral": {
        "input": {
            "required": {
                "dst_mask_with_4_points": [
                    "MASK"
                ],
                "mode": [
                    [
                        "HOMOGRAPHY",
                        "LENGTH-WISE",
                        "W-EDGE-PAIR"
                    ],
                    {
                        "default": "HOMOGRAPHY"
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapToQuadrilateral",
        "display_name": "RemapToQuadrilateral",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "RemapFromQuadrilateral (homography)": {
        "input": {
            "required": {
                "src_mask_with_4_points": [
                    "MASK"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "REMAP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMAP"
        ],
        "name": "RemapFromQuadrilateral (homography)",
        "display_name": "RemapFromQuadrilateral (homography)",
        "description": "",
        "category": "Bmad/CV/Transform",
        "output_node": false
    },
    "MaskOuterBlur": {
        "input": {
            "required": {
                "src": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ],
                "kernel_size": [
                    "INT",
                    {
                        "default": 16,
                        "min": 2,
                        "max": 150,
                        "step": 2
                    }
                ],
                "paste_src": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MaskOuterBlur",
        "display_name": "MaskOuterBlur",
        "description": "",
        "category": "Bmad/CV/Misc",
        "output_node": false
    },
    "Color Clip ADE20k": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "target": [
                    [
                        "TO_BLACK",
                        "TO_WHITE",
                        "NOTHING"
                    ],
                    {
                        "default": "TO_BLACK"
                    }
                ],
                "complement": [
                    [
                        "TO_BLACK",
                        "TO_WHITE",
                        "NOTHING"
                    ],
                    {
                        "default": "TO_WHITE"
                    }
                ],
                "class_name": [
                    [
                        "None",
                        "wall",
                        "building, edifice",
                        "sky",
                        "floor, flooring",
                        "tree",
                        "ceiling",
                        "road, route",
                        "bed ",
                        "windowpane, window ",
                        "grass",
                        "cabinet",
                        "sidewalk, pavement",
                        "person, individual, someone, somebody, mortal, soul",
                        "earth, ground",
                        "door, double door",
                        "table",
                        "mountain, mount",
                        "plant, flora, plant life",
                        "curtain, drape, drapery, mantle, pall",
                        "chair",
                        "car, auto, automobile, machine, motorcar",
                        "water",
                        "painting, picture",
                        "sofa, couch, lounge",
                        "shelf",
                        "house",
                        "sea",
                        "mirror",
                        "rug, carpet, carpeting",
                        "field",
                        "armchair",
                        "seat",
                        "fence, fencing",
                        "desk",
                        "rock, stone",
                        "wardrobe, closet, press",
                        "lamp",
                        "bathtub, bathing tub, bath, tub",
                        "railing, rail",
                        "cushion",
                        "base, pedestal, stand",
                        "box",
                        "column, pillar",
                        "signboard, sign",
                        "chest of drawers, chest, bureau, dresser",
                        "counter",
                        "sand",
                        "sink",
                        "skyscraper",
                        "fireplace, hearth, open fireplace",
                        "refrigerator, icebox",
                        "grandstand, covered stand",
                        "path",
                        "stairs, steps",
                        "runway",
                        "case, display case, showcase, vitrine",
                        "pool table, billiard table, snooker table",
                        "pillow",
                        "screen door, screen",
                        "stairway, staircase",
                        "river",
                        "bridge, span",
                        "bookcase",
                        "blind, screen",
                        "coffee table, cocktail table",
                        "toilet, can, commode, crapper, pot, potty, stool, throne",
                        "flower",
                        "book",
                        "hill",
                        "bench",
                        "countertop",
                        "stove, kitchen stove, range, kitchen range, cooking stove",
                        "palm, palm tree",
                        "kitchen island",
                        "computer, computing machine, computing device, data processor, electronic computer, information processing system",
                        "swivel chair",
                        "boat",
                        "bar",
                        "arcade machine",
                        "hovel, hut, hutch, shack, shanty",
                        "bus, autobus, coach, charabanc, double-decker, jitney, motorbus, motorcoach, omnibus, passenger vehicle",
                        "towel",
                        "light, light source",
                        "truck, motortruck",
                        "tower",
                        "chandelier, pendant, pendent",
                        "awning, sunshade, sunblind",
                        "streetlight, street lamp",
                        "booth, cubicle, stall, kiosk",
                        "television receiver, television, television set, tv, tv set, idiot box, boob tube, telly, goggle box",
                        "airplane, aeroplane, plane",
                        "dirt track",
                        "apparel, wearing apparel, dress, clothes",
                        "pole",
                        "land, ground, soil",
                        "bannister, banister, balustrade, balusters, handrail",
                        "escalator, moving staircase, moving stairway",
                        "ottoman, pouf, pouffe, puff, hassock",
                        "bottle",
                        "buffet, counter, sideboard",
                        "poster, posting, placard, notice, bill, card",
                        "stage",
                        "van",
                        "ship",
                        "fountain",
                        "conveyer belt, conveyor belt, conveyer, conveyor, transporter",
                        "canopy",
                        "washer, automatic washer, washing machine",
                        "plaything, toy",
                        "swimming pool, swimming bath, natatorium",
                        "stool",
                        "barrel, cask",
                        "basket, handbasket",
                        "waterfall, falls",
                        "tent, collapsible shelter",
                        "bag",
                        "minibike, motorbike",
                        "cradle",
                        "oven",
                        "ball",
                        "food, solid food",
                        "step, stair",
                        "tank, storage tank",
                        "trade name, brand name, brand, marque",
                        "microwave, microwave oven",
                        "pot, flowerpot",
                        "animal, animate being, beast, brute, creature, fauna",
                        "bicycle, bike, wheel, cycle ",
                        "lake",
                        "dishwasher, dish washer, dishwashing machine",
                        "screen, silver screen, projection screen",
                        "blanket, cover",
                        "sculpture",
                        "hood, exhaust hood",
                        "sconce",
                        "vase",
                        "traffic light, traffic signal, stoplight",
                        "tray",
                        "ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",
                        "fan",
                        "pier, wharf, wharfage, dock",
                        "crt screen",
                        "plate",
                        "monitor, monitoring device",
                        "bulletin board, notice board",
                        "shower",
                        "radiator",
                        "glass, drinking glass",
                        "clock",
                        "flag"
                    ],
                    {
                        "default": "animal, animate being, beast, brute, creature, fauna"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Color Clip ADE20k",
        "display_name": "Color Clip ADE20k",
        "description": "",
        "category": "Bmad/image",
        "output_node": false
    },
    "Conditioning Grid (string) Advanced": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "base": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "columns": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "rows": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 3
                    }
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++",
                        "down_weight"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Conditioning Grid (string) Advanced",
        "display_name": "Conditioning Grid (string) Advanced",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "CLIPEncodeMultipleAdvanced": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++",
                        "down_weight"
                    ]
                ],
                "inputs_len": [
                    "INT",
                    {
                        "default": 9,
                        "min": 0,
                        "max": 32
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPEncodeMultipleAdvanced",
        "display_name": "CLIPEncodeMultipleAdvanced",
        "description": "",
        "category": "Bmad/conditioning",
        "output_node": false
    },
    "BLIP Model Loader": {
        "input": {
            "required": {
                "blip_model": [
                    [
                        "caption",
                        "interrogate"
                    ]
                ]
            }
        },
        "output": [
            "BLIP_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BLIP_MODEL"
        ],
        "name": "BLIP Model Loader",
        "display_name": "BLIP Model Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "Blend Latents": {
        "input": {
            "required": {
                "latent_a": [
                    "LATENT"
                ],
                "latent_b": [
                    "LATENT"
                ],
                "operation": [
                    [
                        "add",
                        "multiply",
                        "divide",
                        "subtract",
                        "overlay",
                        "hard_light",
                        "soft_light",
                        "screen",
                        "linear_dodge",
                        "difference",
                        "exclusion",
                        "random"
                    ]
                ],
                "blend": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Blend Latents",
        "display_name": "Blend Latents",
        "description": "",
        "category": "WAS Suite/Latent",
        "output_node": false
    },
    "Bus Node": {
        "input": {
            "required": {},
            "optional": {
                "bus": [
                    "BUS"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "BUS",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "bus",
            "model",
            "clip",
            "vae",
            "positive",
            "negative"
        ],
        "name": "Bus Node",
        "display_name": "Bus Node",
        "description": "",
        "category": "WAS Suite/Utilities",
        "output_node": false
    },
    "Cache Node": {
        "input": {
            "required": {
                "latent_suffix": [
                    "STRING",
                    {
                        "default": "94363199_cache",
                        "multiline": false
                    }
                ],
                "image_suffix": [
                    "STRING",
                    {
                        "default": "90183450_cache",
                        "multiline": false
                    }
                ],
                "conditioning_suffix": [
                    "STRING",
                    {
                        "default": "92519966_cache",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "output_path": [
                    "STRING",
                    {
                        "default": "/ComfyUI/custom_nodes/was-node-suite-comfyui/cache",
                        "multiline": false
                    }
                ],
                "latent": [
                    "LATENT"
                ],
                "image": [
                    "IMAGE"
                ],
                "conditioning": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "latent_filename",
            "image_filename",
            "conditioning_filename"
        ],
        "name": "Cache Node",
        "display_name": "Cache Node",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": true
    },
    "Checkpoint Loader": {
        "input": {
            "required": {
                "config_name": [
                    []
                ],
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "NAME_STRING"
        ],
        "name": "Checkpoint Loader",
        "display_name": "Checkpoint Loader",
        "description": "",
        "category": "WAS Suite/Loaders/Advanced",
        "output_node": false
    },
    "Checkpoint Loader (Simple)": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "NAME_STRING"
        ],
        "name": "Checkpoint Loader (Simple)",
        "display_name": "Checkpoint Loader (Simple)",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "CLIPTextEncode (NSP)": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Noodle Soup Prompts",
                        "Wildcards"
                    ]
                ],
                "noodle_key": [
                    "STRING",
                    {
                        "default": "__",
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "conditioning",
            "parsed_text",
            "raw_text"
        ],
        "name": "CLIPTextEncode (NSP)",
        "display_name": "CLIPTextEncode (NSP)",
        "description": "",
        "category": "WAS Suite/Conditioning",
        "output_node": true
    },
    "CLIP Input Switch": {
        "input": {
            "required": {
                "clip_a": [
                    "CLIP"
                ],
                "clip_b": [
                    "CLIP"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP"
        ],
        "name": "CLIP Input Switch",
        "display_name": "CLIP Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "CLIP Vision Input Switch": {
        "input": {
            "required": {
                "clip_vision_a": [
                    "CLIP_VISION"
                ],
                "clip_vision_b": [
                    "CLIP_VISION"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "CLIP_VISION"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CLIP_VISION"
        ],
        "name": "CLIP Vision Input Switch",
        "display_name": "CLIP Vision Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Conditioning Input Switch": {
        "input": {
            "required": {
                "conditioning_a": [
                    "CONDITIONING"
                ],
                "conditioning_b": [
                    "CONDITIONING"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Conditioning Input Switch",
        "display_name": "Conditioning Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Constant Number": {
        "input": {
            "required": {
                "number_type": [
                    [
                        "integer",
                        "float",
                        "bool"
                    ]
                ],
                "number": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            },
            "optional": {
                "number_as_text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Constant Number",
        "display_name": "Constant Number",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "Create Grid Image": {
        "input": {
            "required": {
                "images_path": [
                    [
                        "__inputs__"
                    ]
                ],
                "pattern_glob": [
                    "STRING",
                    {
                        "default": "*",
                        "multiline": false
                    }
                ],
                "include_subfolders": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "border_width": [
                    "INT",
                    {
                        "default": 3,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "number_of_columns": [
                    "INT",
                    {
                        "default": 6,
                        "min": 1,
                        "max": 24,
                        "step": 1
                    }
                ],
                "max_cell_size": [
                    "INT",
                    {
                        "default": 256,
                        "min": 32,
                        "max": 1280,
                        "step": 1
                    }
                ],
                "border_red": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "border_green": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "border_blue": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Create Grid Image",
        "display_name": "Create Grid Image",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Create Grid Image from Batch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "border_width": [
                    "INT",
                    {
                        "default": 3,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "number_of_columns": [
                    "INT",
                    {
                        "default": 6,
                        "min": 1,
                        "max": 24,
                        "step": 1
                    }
                ],
                "max_cell_size": [
                    "INT",
                    {
                        "default": 256,
                        "min": 32,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "border_red": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "border_green": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "border_blue": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Create Grid Image from Batch",
        "display_name": "Create Grid Image from Batch",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Create Morph Image": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "transition_frames": [
                    "INT",
                    {
                        "default": 30,
                        "min": 2,
                        "max": 60,
                        "step": 1
                    }
                ],
                "still_image_delay_ms": [
                    "FLOAT",
                    {
                        "default": 2500.0,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "duration_ms": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "max_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 128,
                        "max": 1280,
                        "step": 1
                    }
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output",
                        "multiline": false
                    }
                ],
                "filename": [
                    "STRING",
                    {
                        "default": "morph",
                        "multiline": false
                    }
                ],
                "filetype": [
                    [
                        "GIF",
                        "APNG"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "image_a_pass",
            "image_b_pass",
            "filepath_text",
            "filename_text"
        ],
        "name": "Create Morph Image",
        "display_name": "Create Morph Image",
        "description": "",
        "category": "WAS Suite/Animation",
        "output_node": false
    },
    "Create Morph Image from Path": {
        "input": {
            "required": {
                "transition_frames": [
                    "INT",
                    {
                        "default": 30,
                        "min": 2,
                        "max": 60,
                        "step": 1
                    }
                ],
                "still_image_delay_ms": [
                    "FLOAT",
                    {
                        "default": 2500.0,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "duration_ms": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "max_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 128,
                        "max": 1280,
                        "step": 1
                    }
                ],
                "input_path": [
                    [
                        "__inputs__"
                    ]
                ],
                "input_pattern": [
                    "STRING",
                    {
                        "default": "*",
                        "multiline": false
                    }
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output",
                        "multiline": false
                    }
                ],
                "filename": [
                    "STRING",
                    {
                        "default": "morph",
                        "multiline": false
                    }
                ],
                "filetype": [
                    [
                        "GIF",
                        "APNG"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filepath_text",
            "filename_text"
        ],
        "name": "Create Morph Image from Path",
        "display_name": "Create Morph Image from Path",
        "description": "",
        "category": "WAS Suite/Animation",
        "output_node": false
    },
    "Create Video from Path": {
        "input": {
            "required": {
                "transition_frames": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 120,
                        "step": 1
                    }
                ],
                "image_delay_sec": [
                    "FLOAT",
                    {
                        "default": 2.5,
                        "min": 0.01,
                        "max": 60000.0,
                        "step": 0.01
                    }
                ],
                "fps": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 60.0,
                        "step": 1
                    }
                ],
                "max_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 128,
                        "max": 1920,
                        "step": 1
                    }
                ],
                "input_path": [
                    [
                        "__inputs__"
                    ]
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output",
                        "multiline": false
                    }
                ],
                "filename": [
                    "STRING",
                    {
                        "default": "comfy_video",
                        "multiline": false
                    }
                ],
                "codec": [
                    [
                        "AVC1",
                        "FFV1",
                        "H264",
                        "MP4V"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filepath_text",
            "filename_text"
        ],
        "name": "Create Video from Path",
        "display_name": "Create Video from Path",
        "description": "",
        "category": "WAS Suite/Animation",
        "output_node": false
    },
    "CLIPSeg Masking": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "clipseg_model": [
                    "CLIPSEG_MODEL"
                ]
            }
        },
        "output": [
            "MASK",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MASK",
            "MASK_IMAGE"
        ],
        "name": "CLIPSeg Masking",
        "display_name": "CLIPSeg Masking",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "CLIPSeg Model Loader": {
        "input": {
            "required": {
                "model": [
                    "STRING",
                    {
                        "default": "CIDAS/clipseg-rd64-refined",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "CLIPSEG_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "clipseg_model"
        ],
        "name": "CLIPSeg Model Loader",
        "display_name": "CLIPSeg Model Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "CLIPSeg Batch Masking": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "text_a": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "image_c": [
                    "IMAGE"
                ],
                "image_d": [
                    "IMAGE"
                ],
                "image_e": [
                    "IMAGE"
                ],
                "image_f": [
                    "IMAGE"
                ],
                "text_c": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_e": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_f": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGES_BATCH",
            "MASKS_BATCH",
            "MASK_IMAGES_BATCH"
        ],
        "name": "CLIPSeg Batch Masking",
        "display_name": "CLIPSeg Batch Masking",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Convert Masks to Images": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGES"
        ],
        "name": "Convert Masks to Images",
        "display_name": "Convert Masks to Images",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Control Net Model Input Switch": {
        "input": {
            "required": {
                "control_net_a": [
                    "CONTROL_NET"
                ],
                "control_net_b": [
                    "CONTROL_NET"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "Control Net Model Input Switch",
        "display_name": "Control Net Model Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Debug Number to Console": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ],
                "label": [
                    "STRING",
                    {
                        "default": "Debug to Console",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "Debug Number to Console",
        "display_name": "Debug Number to Console",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": true
    },
    "Dictionary to Console": {
        "input": {
            "required": {
                "dictionary": [
                    "DICT"
                ],
                "label": [
                    "STRING",
                    {
                        "default": "Dictionary Output",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DICT"
        ],
        "name": "Dictionary to Console",
        "display_name": "Dictionary to Console",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": true
    },
    "Diffusers Model Loader": {
        "input": {
            "required": {
                "model_path": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "NAME_STRING"
        ],
        "name": "Diffusers Model Loader",
        "display_name": "Diffusers Model Loader",
        "description": "",
        "category": "WAS Suite/Loaders/Advanced",
        "output_node": false
    },
    "Diffusers Hub Model Down-Loader": {
        "input": {
            "required": {
                "repo_id": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "revision": [
                    "STRING",
                    {
                        "default": "None",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "NAME_STRING"
        ],
        "name": "Diffusers Hub Model Down-Loader",
        "display_name": "Diffusers Hub Model Down-Loader",
        "description": "",
        "category": "WAS Suite/Loaders/Advanced",
        "output_node": false
    },
    "Export API": {
        "input": {
            "required": {
                "save_prompt_api": [
                    [
                        "true",
                        "true"
                    ]
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output/",
                        "multiline": false
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI_Prompt"
                    }
                ],
                "filename_delimiter": [
                    "STRING",
                    {
                        "default": "_"
                    }
                ],
                "filename_number_padding": [
                    "INT",
                    {
                        "default": 4,
                        "min": 2,
                        "max": 9,
                        "step": 1
                    }
                ],
                "parse_text_tokens": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Export API",
        "display_name": "Export API",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": true
    },
    "Latent Input Switch": {
        "input": {
            "required": {
                "latent_a": [
                    "LATENT"
                ],
                "latent_b": [
                    "LATENT"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Input Switch",
        "display_name": "Latent Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Load Cache": {
        "input": {
            "required": {
                "latent_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "image_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "conditioning_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "IMAGE",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "IMAGE",
            "CONDITIONING"
        ],
        "name": "Load Cache",
        "display_name": "Load Cache",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": false
    },
    "Logic Boolean": {
        "input": {
            "required": {
                "boolean_number": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "NUMBER",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "INT"
        ],
        "name": "Logic Boolean",
        "display_name": "Logic Boolean",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Logic Boolean Primitive": {
        "input": {
            "required": {
                "boolean": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Logic Boolean Primitive",
        "display_name": "Logic Boolean Primitive",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Logic Comparison OR": {
        "input": {
            "required": {
                "boolean_a": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "boolean_b": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Logic Comparison OR",
        "display_name": "Logic Comparison OR",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Logic Comparison AND": {
        "input": {
            "required": {
                "boolean_a": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "boolean_b": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Logic Comparison AND",
        "display_name": "Logic Comparison AND",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Logic Comparison XOR": {
        "input": {
            "required": {
                "boolean_a": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "boolean_b": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Logic Comparison XOR",
        "display_name": "Logic Comparison XOR",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Logic NOT": {
        "input": {
            "required": {
                "boolean": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Logic NOT",
        "display_name": "Logic NOT",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Lora Loader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    [
                        "None"
                    ]
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "NAME_STRING"
        ],
        "name": "Lora Loader",
        "display_name": "Lora Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "Image SSAO (Ambient Occlusion)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "depth_images": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 5.0,
                        "default": 1.0,
                        "step": 0.01
                    }
                ],
                "radius": [
                    "FLOAT",
                    {
                        "min": 0.01,
                        "max": 1024,
                        "default": 30,
                        "step": 0.01
                    }
                ],
                "ao_blur": [
                    "FLOAT",
                    {
                        "min": 0.01,
                        "max": 1024,
                        "default": 2.5,
                        "step": 0.01
                    }
                ],
                "specular_threshold": [
                    "INT",
                    {
                        "min": 0,
                        "max": 255,
                        "default": 25,
                        "step": 1
                    }
                ],
                "enable_specular_masking": [
                    [
                        "True",
                        "False"
                    ]
                ],
                "tile_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 512,
                        "default": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "composited_images",
            "ssao_images",
            "specular_mask_images"
        ],
        "name": "Image SSAO (Ambient Occlusion)",
        "display_name": "Image SSAO (Ambient Occlusion)",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image SSDO (Direct Occlusion)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "depth_images": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 5.0,
                        "default": 1.0,
                        "step": 0.01
                    }
                ],
                "radius": [
                    "FLOAT",
                    {
                        "min": 0.01,
                        "max": 1024,
                        "default": 30,
                        "step": 0.01
                    }
                ],
                "specular_threshold": [
                    "INT",
                    {
                        "min": 0,
                        "max": 255,
                        "default": 128,
                        "step": 1
                    }
                ],
                "colored_occlusion": [
                    [
                        "True",
                        "False"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "composited_images",
            "ssdo_images",
            "ssdo_image_masks",
            "light_source_image_masks"
        ],
        "name": "Image SSDO (Direct Occlusion)",
        "display_name": "Image SSDO (Direct Occlusion)",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Analyze": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "Black White Levels",
                        "RGB Levels"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Analyze",
        "display_name": "Image Analyze",
        "description": "",
        "category": "WAS Suite/Image/Analyze",
        "output_node": false
    },
    "Image Aspect Ratio": {
        "input": {
            "required": {},
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "NUMBER"
                ],
                "height": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "NUMBER",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "aspect_number",
            "aspect_float",
            "is_landscape_bool",
            "aspect_ratio_common",
            "aspect_type"
        ],
        "name": "Image Aspect Ratio",
        "display_name": "Image Aspect Ratio",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Image Batch": {
        "input": {
            "required": {},
            "optional": {
                "images_a": [
                    "IMAGE"
                ],
                "images_b": [
                    "IMAGE"
                ],
                "images_c": [
                    "IMAGE"
                ],
                "images_d": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Batch",
        "display_name": "Image Batch",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Image Blank": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "red": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "green": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "blue": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Blank",
        "display_name": "Image Blank",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Image Blend by Mask": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ],
                "blend_percentage": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Blend by Mask",
        "display_name": "Image Blend by Mask",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Image Blend": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "blend_percentage": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Blend",
        "display_name": "Image Blend",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Image Blending Mode": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "add",
                        "color",
                        "color_burn",
                        "color_dodge",
                        "darken",
                        "difference",
                        "exclusion",
                        "hard_light",
                        "hue",
                        "lighten",
                        "multiply",
                        "overlay",
                        "screen",
                        "soft_light"
                    ]
                ],
                "blend_percentage": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Blending Mode",
        "display_name": "Image Blending Mode",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Image Bloom Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "radius": [
                    "FLOAT",
                    {
                        "default": 10,
                        "min": 0.0,
                        "max": 1024,
                        "step": 0.1
                    }
                ],
                "intensity": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Bloom Filter",
        "display_name": "Image Bloom Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Canny Filter": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "enable_threshold": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "threshold_low": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "threshold_high": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Canny Filter",
        "display_name": "Image Canny Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Chromatic Aberration": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "red_offset": [
                    "INT",
                    {
                        "default": 2,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "green_offset": [
                    "INT",
                    {
                        "default": -1,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "blue_offset": [
                    "INT",
                    {
                        "default": 1,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "intensity": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "fade_radius": [
                    "INT",
                    {
                        "default": 12,
                        "min": 0,
                        "max": 1024,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Chromatic Aberration",
        "display_name": "Image Chromatic Aberration",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Color Palette": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "colors": [
                    "INT",
                    {
                        "default": 16,
                        "min": 8,
                        "max": 256,
                        "step": 1
                    }
                ],
                "mode": [
                    [
                        "Chart",
                        "back_to_back"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "LIST"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "color_palettes"
        ],
        "name": "Image Color Palette",
        "display_name": "Image Color Palette",
        "description": "",
        "category": "WAS Suite/Image/Analyze",
        "output_node": false
    },
    "Image Crop Face": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_padding_factor": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.01
                    }
                ],
                "cascade_xml": [
                    [
                        "lbpcascade_animeface.xml",
                        "haarcascade_frontalface_default.xml",
                        "haarcascade_frontalface_alt.xml",
                        "haarcascade_frontalface_alt2.xml",
                        "haarcascade_frontalface_alt_tree.xml",
                        "haarcascade_profileface.xml",
                        "haarcascade_upperbody.xml",
                        "haarcascade_eye.xml"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "CROP_DATA"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "CROP_DATA"
        ],
        "name": "Image Crop Face",
        "display_name": "Image Crop Face",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Crop Location": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "top": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "left": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "right": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "bottom": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "CROP_DATA"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "CROP_DATA"
        ],
        "name": "Image Crop Location",
        "display_name": "Image Crop Location",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Crop Square Location": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "max": 24576,
                        "min": 0,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "max": 24576,
                        "min": 0,
                        "step": 1
                    }
                ],
                "size": [
                    "INT",
                    {
                        "default": 256,
                        "max": 4096,
                        "min": 5,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "CROP_DATA"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "CROP_DATA"
        ],
        "name": "Image Crop Square Location",
        "display_name": "Image Crop Square Location",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Displacement Warp": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "displacement_maps": [
                    "IMAGE"
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 25.0,
                        "min": -4096,
                        "max": 4096,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Displacement Warp",
        "display_name": "Image Displacement Warp",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Lucy Sharpen": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 12,
                        "step": 1
                    }
                ],
                "kernel_size": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 16,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Lucy Sharpen",
        "display_name": "Image Lucy Sharpen",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Paste Face": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_image": [
                    "IMAGE"
                ],
                "crop_data": [
                    "CROP_DATA"
                ],
                "crop_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_sharpening": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 3,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK_IMAGE"
        ],
        "name": "Image Paste Face",
        "display_name": "Image Paste Face",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Paste Crop": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_image": [
                    "IMAGE"
                ],
                "crop_data": [
                    "CROP_DATA"
                ],
                "crop_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_sharpening": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 3,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "Image Paste Crop",
        "display_name": "Image Paste Crop",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Paste Crop by Location": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_image": [
                    "IMAGE"
                ],
                "top": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "left": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "right": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "bottom": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "crop_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_sharpening": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 3,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "Image Paste Crop by Location",
        "display_name": "Image Paste Crop by Location",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Pixelate": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "pixelation_size": [
                    "FLOAT",
                    {
                        "default": 164,
                        "min": 16,
                        "max": 480,
                        "step": 1
                    }
                ],
                "num_colors": [
                    "FLOAT",
                    {
                        "default": 16,
                        "min": 2,
                        "max": 256,
                        "step": 1
                    }
                ],
                "init_mode": [
                    [
                        "k-means++",
                        "random",
                        "none"
                    ]
                ],
                "max_iterations": [
                    "FLOAT",
                    {
                        "default": 100,
                        "min": 1,
                        "max": 256,
                        "step": 1
                    }
                ],
                "dither": [
                    [
                        "False",
                        "True"
                    ]
                ],
                "dither_mode": [
                    [
                        "FloydSteinberg",
                        "Ordered"
                    ]
                ]
            },
            "optional": {
                "color_palettes": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ],
                "color_palette_mode": [
                    [
                        "Brightness",
                        "BrightnessAndTonal",
                        "Linear",
                        "Tonal"
                    ]
                ],
                "reverse_palette": [
                    [
                        "False",
                        "True"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Pixelate",
        "display_name": "Image Pixelate",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Power Noise": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "frequency": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "max": 10.0,
                        "min": 0.0,
                        "step": 0.01
                    }
                ],
                "attenuation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "max": 10.0,
                        "min": 0.0,
                        "step": 0.01
                    }
                ],
                "noise_type": [
                    [
                        "grey",
                        "white",
                        "pink",
                        "blue",
                        "green",
                        "mix"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Power Noise",
        "display_name": "Image Power Noise",
        "description": "",
        "category": "WAS Suite/Image/Generate/Noise",
        "output_node": false
    },
    "Image Dragan Photography Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "saturation": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "contrast": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "brightness": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "sharpness": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 6.0,
                        "step": 0.01
                    }
                ],
                "highpass_radius": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.01
                    }
                ],
                "highpass_samples": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 6.0,
                        "step": 1
                    }
                ],
                "highpass_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 3.0,
                        "step": 0.01
                    }
                ],
                "colorize": [
                    [
                        "true",
                        "false"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Dragan Photography Filter",
        "display_name": "Image Dragan Photography Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Edge Detection Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "normal",
                        "laplacian"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Edge Detection Filter",
        "display_name": "Image Edge Detection Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Film Grain": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "density": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "intensity": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "highlights": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 255.0,
                        "step": 0.01
                    }
                ],
                "supersample_factor": [
                    "INT",
                    {
                        "default": 4,
                        "min": 1,
                        "max": 8,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Film Grain",
        "display_name": "Image Film Grain",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Filter Adjustments": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "brightness": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -1.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "contrast": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1.0,
                        "max": 2.0,
                        "step": 0.01
                    }
                ],
                "saturation": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "sharpness": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -5.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "blur": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 16,
                        "step": 1
                    }
                ],
                "gaussian_blur": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1024.0,
                        "step": 0.1
                    }
                ],
                "edge_enhance": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "detail_enhance": [
                    [
                        "false",
                        "true"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Filter Adjustments",
        "display_name": "Image Filter Adjustments",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Flip": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "horizontal",
                        "vertical"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Flip",
        "display_name": "Image Flip",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Gradient Map": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "gradient_image": [
                    "IMAGE"
                ],
                "flip_left_right": [
                    [
                        "false",
                        "true"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Gradient Map",
        "display_name": "Image Gradient Map",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Generate Gradient": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "direction": [
                    [
                        "horizontal",
                        "vertical"
                    ]
                ],
                "tolerance": [
                    "INT",
                    {
                        "default": 0,
                        "max": 255,
                        "min": 0,
                        "step": 1
                    }
                ],
                "gradient_stops": [
                    "STRING",
                    {
                        "default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Generate Gradient",
        "display_name": "Image Generate Gradient",
        "description": "",
        "category": "WAS Suite/Image/Generate",
        "output_node": false
    },
    "Image High Pass Filter": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "radius": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 500,
                        "step": 1
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "color_output": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "neutral_background": [
                    [
                        "true",
                        "false"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image High Pass Filter",
        "display_name": "Image High Pass Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image History Loader": {
        "input": {
            "required": {
                "image": [
                    [
                        "No History"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "filename_text"
        ],
        "name": "Image History Loader",
        "display_name": "Image History Loader",
        "description": "",
        "category": "WAS Suite/History",
        "output_node": false
    },
    "Image Input Switch": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Input Switch",
        "display_name": "Image Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Image Levels Adjustment": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "black_level": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "mid_level": [
                    "FLOAT",
                    {
                        "default": 127.5,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "white_level": [
                    "FLOAT",
                    {
                        "default": 255,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Levels Adjustment",
        "display_name": "Image Levels Adjustment",
        "description": "",
        "category": "WAS Suite/Image/Adjustment",
        "output_node": false
    },
    "Image Load": {
        "input": {
            "required": {
                "image_path": [
                    [
                        "__inputs__"
                    ]
                ],
                "RGBA": [
                    [
                        "false",
                        "true"
                    ]
                ]
            },
            "optional": {
                "filename_text_extension": [
                    [
                        "true",
                        "false"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "image",
            "mask",
            "filename_text"
        ],
        "name": "Image Load",
        "display_name": "Image Load",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": false
    },
    "Image Median Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "diameter": [
                    "INT",
                    {
                        "default": 2.0,
                        "min": 0.1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "sigma_color": [
                    "FLOAT",
                    {
                        "default": 10.0,
                        "min": -255.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "sigma_space": [
                    "FLOAT",
                    {
                        "default": 10.0,
                        "min": -255.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Median Filter",
        "display_name": "Image Median Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Mix RGB Channels": {
        "input": {
            "required": {
                "red_channel": [
                    "IMAGE"
                ],
                "green_channel": [
                    "IMAGE"
                ],
                "blue_channel": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Mix RGB Channels",
        "display_name": "Image Mix RGB Channels",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Monitor Effects Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "Digital Distortion",
                        "Signal Distortion",
                        "TV Distortion"
                    ]
                ],
                "amplitude": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "offset": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Monitor Effects Filter",
        "display_name": "Image Monitor Effects Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Nova Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "frequency": [
                    "FLOAT",
                    {
                        "default": 3.14,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Nova Filter",
        "display_name": "Image Nova Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Padding": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 120,
                        "min": 0,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "feather_second_pass": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "left_padding": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "right_padding": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "top_padding": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "bottom_padding": [
                    "INT",
                    {
                        "default": 512,
                        "min": 8,
                        "max": 48000,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "Image Padding",
        "display_name": "Image Padding",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Perlin Noise": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 2048,
                        "min": 64,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 2048,
                        "min": 64,
                        "step": 1
                    }
                ],
                "scale": [
                    "INT",
                    {
                        "default": 100,
                        "max": 2048,
                        "min": 2,
                        "step": 1
                    }
                ],
                "octaves": [
                    "INT",
                    {
                        "default": 4,
                        "max": 8,
                        "min": 0,
                        "step": 1
                    }
                ],
                "persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "max": 100.0,
                        "min": 0.01,
                        "step": 0.01
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Perlin Noise",
        "display_name": "Image Perlin Noise",
        "description": "",
        "category": "WAS Suite/Image/Generate/Noise",
        "output_node": false
    },
    "Image Rembg (Remove Background)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "transparency": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "model": [
                    [
                        "u2net",
                        "u2netp",
                        "u2net_human_seg",
                        "silueta",
                        "isnet-general-use",
                        "isnet-anime"
                    ]
                ],
                "post_processing": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "only_mask": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "alpha_matting": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "alpha_matting_foreground_threshold": [
                    "INT",
                    {
                        "default": 240,
                        "min": 0,
                        "max": 255
                    }
                ],
                "alpha_matting_background_threshold": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255
                    }
                ],
                "alpha_matting_erode_size": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255
                    }
                ],
                "background_color": [
                    [
                        "none",
                        "black",
                        "white",
                        "magenta",
                        "chroma green",
                        "chroma blue"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Rembg (Remove Background)",
        "display_name": "Image Rembg (Remove Background)",
        "description": "",
        "category": "WAS Suite/Image/AI",
        "output_node": false
    },
    "Image Perlin Power Fractal": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 8192,
                        "min": 64,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 8192,
                        "min": 64,
                        "step": 1
                    }
                ],
                "scale": [
                    "INT",
                    {
                        "default": 100,
                        "max": 2048,
                        "min": 2,
                        "step": 1
                    }
                ],
                "octaves": [
                    "INT",
                    {
                        "default": 4,
                        "max": 8,
                        "min": 0,
                        "step": 1
                    }
                ],
                "persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "max": 100.0,
                        "min": 0.01,
                        "step": 0.01
                    }
                ],
                "lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "max": 100.0,
                        "min": 0.01,
                        "step": 0.01
                    }
                ],
                "exponent": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "max": 100.0,
                        "min": 0.01,
                        "step": 0.01
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Perlin Power Fractal",
        "display_name": "Image Perlin Power Fractal",
        "description": "",
        "category": "WAS Suite/Image/Generate/Noise",
        "output_node": false
    },
    "Image Remove Background (Alpha)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "background",
                        "foreground"
                    ]
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 127,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold_tolerance": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 24,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Remove Background (Alpha)",
        "display_name": "Image Remove Background (Alpha)",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Remove Color": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "target_red": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "target_green": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "target_blue": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "replace_red": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "replace_green": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "replace_blue": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "clip_threshold": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Remove Color",
        "display_name": "Image Remove Color",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Resize": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "rescale",
                        "resize"
                    ]
                ],
                "supersample": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "resampling": [
                    [
                        "lanczos",
                        "nearest",
                        "bilinear",
                        "bicubic"
                    ]
                ],
                "rescale_factor": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "resize_width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "resize_height": [
                    "INT",
                    {
                        "default": 1536,
                        "min": 1,
                        "max": 48000,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Resize",
        "display_name": "Image Resize",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Rotate": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "transpose",
                        "internal"
                    ]
                ],
                "rotation": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 360,
                        "step": 90
                    }
                ],
                "sampler": [
                    [
                        "nearest",
                        "bilinear",
                        "bicubic"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Rotate",
        "display_name": "Image Rotate",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Rotate Hue": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "hue_shift": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Rotate Hue",
        "display_name": "Image Rotate Hue",
        "description": "",
        "category": "WAS Suite/Image/Adjustment",
        "output_node": false
    },
    "Image Save": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "[time(%Y-%m-%d)]",
                        "multiline": false
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ],
                "filename_delimiter": [
                    "STRING",
                    {
                        "default": "_"
                    }
                ],
                "filename_number_padding": [
                    "INT",
                    {
                        "default": 4,
                        "min": 1,
                        "max": 9,
                        "step": 1
                    }
                ],
                "filename_number_start": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "extension": [
                    [
                        "png",
                        "jpg",
                        "jpeg",
                        "gif",
                        "tiff",
                        "webp",
                        "bmp"
                    ]
                ],
                "quality": [
                    "INT",
                    {
                        "default": 100,
                        "min": 1,
                        "max": 100,
                        "step": 1
                    }
                ],
                "lossless_webp": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "overwrite_mode": [
                    [
                        "false",
                        "prefix_as_filename"
                    ]
                ],
                "show_history": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "show_history_by_prefix": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "embed_workflow": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "show_previews": [
                    [
                        "true",
                        "false"
                    ]
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Image Save",
        "display_name": "Image Save",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": true
    },
    "Image Seamless Texture": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "blending": [
                    "FLOAT",
                    {
                        "default": 0.4,
                        "max": 1.0,
                        "min": 0.0,
                        "step": 0.01
                    }
                ],
                "tiled": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "tiles": [
                    "INT",
                    {
                        "default": 2,
                        "max": 6,
                        "min": 2,
                        "step": 2
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Image Seamless Texture",
        "display_name": "Image Seamless Texture",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Select Channel": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "channel": [
                    [
                        "red",
                        "green",
                        "blue"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Select Channel",
        "display_name": "Image Select Channel",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Select Color": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "red": [
                    "INT",
                    {
                        "default": 255.0,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "green": [
                    "INT",
                    {
                        "default": 255.0,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "blue": [
                    "INT",
                    {
                        "default": 255.0,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "variance": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Select Color",
        "display_name": "Image Select Color",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Shadows and Highlights": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "shadow_threshold": [
                    "FLOAT",
                    {
                        "default": 75,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "shadow_factor": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": -12.0,
                        "max": 12.0,
                        "step": 0.1
                    }
                ],
                "shadow_smoothing": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": -255.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "highlight_threshold": [
                    "FLOAT",
                    {
                        "default": 175,
                        "min": 0.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "highlight_factor": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": -12.0,
                        "max": 12.0,
                        "step": 0.1
                    }
                ],
                "highlight_smoothing": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": -255.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ],
                "simplify_isolation": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -255.0,
                        "max": 255.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "image",
            "shadow_map",
            "highlight_map"
        ],
        "name": "Image Shadows and Highlights",
        "display_name": "Image Shadows and Highlights",
        "description": "",
        "category": "WAS Suite/Image/Adjustment",
        "output_node": false
    },
    "Image Size to Number": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "NUMBER",
            "NUMBER",
            "FLOAT",
            "FLOAT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "width_num",
            "height_num",
            "width_float",
            "height_float",
            "width_int",
            "height_int"
        ],
        "name": "Image Size to Number",
        "display_name": "Image Size to Number",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Image Stitch": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ],
                "stitch": [
                    [
                        "top",
                        "left",
                        "bottom",
                        "right"
                    ]
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 2048,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Stitch",
        "display_name": "Image Stitch",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image Style Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "style": [
                    [
                        "1977",
                        "aden",
                        "brannan",
                        "brooklyn",
                        "clarendon",
                        "earlybird",
                        "fairy tale",
                        "gingham",
                        "hudson",
                        "inkwell",
                        "kelvin",
                        "lark",
                        "lofi",
                        "maven",
                        "mayfair",
                        "moon",
                        "nashville",
                        "perpetua",
                        "reyes",
                        "rise",
                        "slumber",
                        "stinson",
                        "toaster",
                        "valencia",
                        "walden",
                        "willow",
                        "xpro2"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Style Filter",
        "display_name": "Image Style Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image Threshold": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Threshold",
        "display_name": "Image Threshold",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Tiled": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "num_tiles": [
                    "INT",
                    {
                        "default": 4,
                        "max": 64,
                        "min": 2,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGES"
        ],
        "name": "Image Tiled",
        "display_name": "Image Tiled",
        "description": "",
        "category": "WAS Suite/Image/Process",
        "output_node": false
    },
    "Image Transpose": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "image_overlay": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": -48000,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": -48000,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "X": [
                    "INT",
                    {
                        "default": 0,
                        "min": -48000,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "Y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -48000,
                        "max": 48000,
                        "step": 1
                    }
                ],
                "rotation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -360,
                        "max": 360,
                        "step": 1
                    }
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Transpose",
        "display_name": "Image Transpose",
        "description": "",
        "category": "WAS Suite/Image/Transform",
        "output_node": false
    },
    "Image fDOF Filter": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "depth": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "mock",
                        "gaussian",
                        "box"
                    ]
                ],
                "radius": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 128,
                        "step": 1
                    }
                ],
                "samples": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 3,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image fDOF Filter",
        "display_name": "Image fDOF Filter",
        "description": "",
        "category": "WAS Suite/Image/Filter",
        "output_node": false
    },
    "Image to Latent Mask": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "channel": [
                    [
                        "alpha",
                        "red",
                        "green",
                        "blue"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Image to Latent Mask",
        "display_name": "Image to Latent Mask",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Image to Noise": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "num_colors": [
                    "INT",
                    {
                        "default": 16,
                        "max": 256,
                        "min": 2,
                        "step": 2
                    }
                ],
                "black_mix": [
                    "INT",
                    {
                        "default": 0,
                        "max": 20,
                        "min": 0,
                        "step": 1
                    }
                ],
                "gaussian_mix": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "max": 1024,
                        "min": 0,
                        "step": 0.1
                    }
                ],
                "brightness": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "max": 2.0,
                        "min": 0.0,
                        "step": 0.01
                    }
                ],
                "output_mode": [
                    [
                        "batch",
                        "list"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image to Noise",
        "display_name": "Image to Noise",
        "description": "",
        "category": "WAS Suite/Image/Generate/Noise",
        "output_node": false
    },
    "Image to Seed": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "INT"
        ],
        "name": "Image to Seed",
        "display_name": "Image to Seed",
        "description": "",
        "category": "WAS Suite/Image/Analyze",
        "output_node": false
    },
    "Images to RGB": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Images to RGB",
        "display_name": "Images to RGB",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Images to Linear": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Images to Linear",
        "display_name": "Images to Linear",
        "description": "",
        "category": "WAS Suite/Image",
        "output_node": false
    },
    "Integer place counter": {
        "input": {
            "required": {
                "int_input": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000000,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT_PLACES"
        ],
        "name": "Integer place counter",
        "display_name": "Integer place counter",
        "description": "",
        "category": "WAS Suite/Integer",
        "output_node": false
    },
    "Image Voronoi Noise Filter": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 4096,
                        "min": 64,
                        "step": 1
                    }
                ],
                "density": [
                    "INT",
                    {
                        "default": 50,
                        "max": 256,
                        "min": 10,
                        "step": 2
                    }
                ],
                "modulator": [
                    "INT",
                    {
                        "default": 0,
                        "max": 8,
                        "min": 0,
                        "step": 1
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "optional": {
                "flat": [
                    [
                        "False",
                        "True"
                    ]
                ],
                "RGB_output": [
                    [
                        "True",
                        "False"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Voronoi Noise Filter",
        "display_name": "Image Voronoi Noise Filter",
        "description": "",
        "category": "WAS Suite/Image/Generate/Noise",
        "output_node": false
    },
    "KSampler (WAS)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "SEED"
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSampler (WAS)",
        "display_name": "KSampler (WAS)",
        "description": "",
        "category": "WAS Suite/Sampling",
        "output_node": false
    },
    "KSampler Cycle": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "tiled_vae": [
                    [
                        "disable",
                        "enable"
                    ]
                ],
                "latent_upscale": [
                    [
                        "disable",
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.1,
                        "max": 8.0,
                        "step": 0.1
                    }
                ],
                "upscale_cycles": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 12,
                        "step": 1
                    }
                ],
                "starting_denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "cycle_denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "scale_denoise": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "scale_sampling": [
                    [
                        "bilinear",
                        "bicubic",
                        "nearest",
                        "lanczos"
                    ]
                ],
                "vae": [
                    "VAE"
                ]
            },
            "optional": {
                "secondary_model": [
                    "MODEL"
                ],
                "secondary_start_cycle": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 16,
                        "step": 1
                    }
                ],
                "upscale_model": [
                    "UPSCALE_MODEL"
                ],
                "processor_model": [
                    "UPSCALE_MODEL"
                ],
                "pos_additive": [
                    "CONDITIONING"
                ],
                "neg_additive": [
                    "CONDITIONING"
                ],
                "pos_add_mode": [
                    [
                        "increment",
                        "decrement"
                    ]
                ],
                "pos_add_strength": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "pos_add_strength_scaling": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "pos_add_strength_cutoff": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.01,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "neg_add_mode": [
                    [
                        "increment",
                        "decrement"
                    ]
                ],
                "neg_add_strength": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "neg_add_strength_scaling": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "neg_add_strength_cutoff": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.01,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "sharpen_strength": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "sharpen_radius": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 12,
                        "step": 1
                    }
                ],
                "steps_scaling": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "steps_control": [
                    [
                        "decrement",
                        "increment"
                    ]
                ],
                "steps_scaling_value": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 20,
                        "step": 1
                    }
                ],
                "steps_cutoff": [
                    "INT",
                    {
                        "default": 20,
                        "min": 4,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "denoise_cutoff": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "latent(s)"
        ],
        "name": "KSampler Cycle",
        "display_name": "KSampler Cycle",
        "description": "",
        "category": "WAS Suite/Sampling",
        "output_node": false
    },
    "Latent Batch": {
        "input": {
            "required": {},
            "optional": {
                "latent_a": [
                    "LATENT"
                ],
                "latent_b": [
                    "LATENT"
                ],
                "latent_c": [
                    "LATENT"
                ],
                "latent_d": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "latent"
        ],
        "name": "Latent Batch",
        "display_name": "Latent Batch",
        "description": "",
        "category": "WAS Suite/Latent",
        "output_node": false
    },
    "Latent Noise Injection": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "noise_std": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Noise Injection",
        "display_name": "Latent Noise Injection",
        "description": "",
        "category": "WAS Suite/Latent/Generate",
        "output_node": false
    },
    "Latent Size to Number": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "NUMBER",
            "NUMBER",
            "FLOAT",
            "FLOAT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "tensor_w_num",
            "tensor_h_num"
        ],
        "name": "Latent Size to Number",
        "display_name": "Latent Size to Number",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Latent Upscale by Factor (WAS)": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "mode": [
                    [
                        "area",
                        "bicubic",
                        "bilinear",
                        "nearest"
                    ]
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.1,
                        "max": 8.0,
                        "step": 0.01
                    }
                ],
                "align": [
                    [
                        "true",
                        "false"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Upscale by Factor (WAS)",
        "display_name": "Latent Upscale by Factor (WAS)",
        "description": "",
        "category": "WAS Suite/Latent/Transform",
        "output_node": false
    },
    "Load Image Batch": {
        "input": {
            "required": {
                "mode": [
                    [
                        "single_image",
                        "incremental_image",
                        "random"
                    ]
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 150000,
                        "step": 1
                    }
                ],
                "label": [
                    "STRING",
                    {
                        "default": "Batch 001",
                        "multiline": false
                    }
                ],
                "path": [
                    [
                        "__inputs__"
                    ]
                ],
                "pattern": [
                    "STRING",
                    {
                        "default": "*",
                        "multiline": false
                    }
                ],
                "allow_RGBA_output": [
                    [
                        "false",
                        "true"
                    ]
                ]
            },
            "optional": {
                "filename_text_extension": [
                    [
                        "true",
                        "false"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "filename_text"
        ],
        "name": "Load Image Batch",
        "display_name": "Load Image Batch",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": false
    },
    "Load Text File": {
        "input": {
            "required": {
                "file_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "dictionary_name": [
                    "STRING",
                    {
                        "default": "[filename]",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "DICT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "DICT"
        ],
        "name": "Load Text File",
        "display_name": "Load Text File",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": false
    },
    "Load Lora": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    [
                        "None"
                    ]
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "NAME_STRING"
        ],
        "name": "Load Lora",
        "display_name": "Load Lora",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "Lora Input Switch": {
        "input": {
            "required": {
                "model_a": [
                    "MODEL"
                ],
                "clip_a": [
                    "CLIP"
                ],
                "model_b": [
                    "MODEL"
                ],
                "clip_b": [
                    "CLIP"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP"
        ],
        "name": "Lora Input Switch",
        "display_name": "Lora Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Masks Add": {
        "input": {
            "required": {
                "masks_a": [
                    "MASK"
                ],
                "masks_b": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Masks Add",
        "display_name": "Masks Add",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Masks Subtract": {
        "input": {
            "required": {
                "masks_a": [
                    "MASK"
                ],
                "masks_b": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Masks Subtract",
        "display_name": "Masks Subtract",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Arbitrary Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "size": [
                    "INT",
                    {
                        "default": 256,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 128,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Arbitrary Region",
        "display_name": "Mask Arbitrary Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Batch to Mask": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "batch_number": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "Mask Batch to Mask",
        "display_name": "Mask Batch to Mask",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Batch": {
        "input": {
            "optional": {
                "masks_a": [
                    "MASK"
                ],
                "masks_b": [
                    "MASK"
                ],
                "masks_c": [
                    "MASK"
                ],
                "masks_d": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "masks"
        ],
        "name": "Mask Batch",
        "display_name": "Mask Batch",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Ceiling Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Ceiling Region",
        "display_name": "Mask Ceiling Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Crop Dominant Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "padding": [
                    "INT",
                    {
                        "default": 24,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Crop Dominant Region",
        "display_name": "Mask Crop Dominant Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Crop Minority Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "padding": [
                    "INT",
                    {
                        "default": 24,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Crop Minority Region",
        "display_name": "Mask Crop Minority Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Crop Region": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "padding": [
                    "INT",
                    {
                        "default": 24,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "region_type": [
                    [
                        "dominant",
                        "minority"
                    ]
                ]
            }
        },
        "output": [
            "MASK",
            "CROP_DATA",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "cropped_mask",
            "crop_data",
            "top_int",
            "left_int",
            "right_int",
            "bottom_int",
            "width_int",
            "height_int"
        ],
        "name": "Mask Crop Region",
        "display_name": "Mask Crop Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Paste Region": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "crop_mask": [
                    "MASK"
                ],
                "crop_data": [
                    "CROP_DATA"
                ],
                "crop_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_sharpening": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 3,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MASK",
            "MASK"
        ],
        "name": "Mask Paste Region",
        "display_name": "Mask Paste Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Dilate Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 64,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Dilate Region",
        "display_name": "Mask Dilate Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Dominant Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 128,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Dominant Region",
        "display_name": "Mask Dominant Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Erode Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "iterations": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 64,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Erode Region",
        "display_name": "Mask Erode Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Fill Holes": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Fill Holes",
        "display_name": "Mask Fill Holes",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Floor Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Floor Region",
        "display_name": "Mask Floor Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Gaussian Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "radius": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 1024,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Gaussian Region",
        "display_name": "Mask Gaussian Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Invert": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Invert",
        "display_name": "Mask Invert",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Minority Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 128,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Minority Region",
        "display_name": "Mask Minority Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Smooth Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "sigma": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 128.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Smooth Region",
        "display_name": "Mask Smooth Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Mask Threshold Region": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ],
                "black_threshold": [
                    "INT",
                    {
                        "default": 75,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "white_threshold": [
                    "INT",
                    {
                        "default": 175,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASKS"
        ],
        "name": "Mask Threshold Region",
        "display_name": "Mask Threshold Region",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Masks Combine Regions": {
        "input": {
            "required": {
                "mask_a": [
                    "MASK"
                ],
                "mask_b": [
                    "MASK"
                ]
            },
            "optional": {
                "mask_c": [
                    "MASK"
                ],
                "mask_d": [
                    "MASK"
                ],
                "mask_e": [
                    "MASK"
                ],
                "mask_f": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "Masks Combine Regions",
        "display_name": "Masks Combine Regions",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Masks Combine Batch": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "Masks Combine Batch",
        "display_name": "Masks Combine Batch",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "MiDaS Model Loader": {
        "input": {
            "required": {
                "midas_model": [
                    [
                        "DPT_Large",
                        "DPT_Hybrid"
                    ]
                ]
            }
        },
        "output": [
            "MIDAS_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "midas_model"
        ],
        "name": "MiDaS Model Loader",
        "display_name": "MiDaS Model Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "MiDaS Depth Approximation": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "use_cpu": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "midas_type": [
                    [
                        "DPT_Large",
                        "DPT_Hybrid"
                    ]
                ],
                "invert_depth": [
                    [
                        "false",
                        "true"
                    ]
                ]
            },
            "optional": {
                "midas_model": [
                    "MIDAS_MODEL"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "MiDaS Depth Approximation",
        "display_name": "MiDaS Depth Approximation",
        "description": "",
        "category": "WAS Suite/Image/AI",
        "output_node": false
    },
    "MiDaS Mask Image": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "use_cpu": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "midas_model": [
                    [
                        "DPT_Large",
                        "DPT_Hybrid",
                        "DPT_Small"
                    ]
                ],
                "remove": [
                    [
                        "background",
                        "foregroud"
                    ]
                ],
                "threshold": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "threshold_low": [
                    "FLOAT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold_mid": [
                    "FLOAT",
                    {
                        "default": 200,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold_high": [
                    "FLOAT",
                    {
                        "default": 210,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "smoothing": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "background_red": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "background_green": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "background_blue": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "MiDaS Mask Image",
        "display_name": "MiDaS Mask Image",
        "description": "",
        "category": "WAS Suite/Image/AI",
        "output_node": false
    },
    "Model Input Switch": {
        "input": {
            "required": {
                "model_a": [
                    "MODEL"
                ],
                "model_b": [
                    "MODEL"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "Model Input Switch",
        "display_name": "Model Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Number Counter": {
        "input": {
            "required": {
                "number_type": [
                    [
                        "integer",
                        "float"
                    ]
                ],
                "mode": [
                    [
                        "increment",
                        "decrement",
                        "increment_to_stop",
                        "decrement_to_stop"
                    ]
                ],
                "start": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615,
                        "step": 0.01
                    }
                ],
                "stop": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615,
                        "step": 0.01
                    }
                ],
                "step": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 99999,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "reset_bool": [
                    "NUMBER"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "number",
            "float",
            "int"
        ],
        "name": "Number Counter",
        "display_name": "Number Counter",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "Number Operation": {
        "input": {
            "required": {
                "number_a": [
                    "NUMBER"
                ],
                "number_b": [
                    "NUMBER"
                ],
                "operation": [
                    [
                        "addition",
                        "subtraction",
                        "division",
                        "floor division",
                        "multiplication",
                        "exponentiation",
                        "modulus",
                        "greater-than",
                        "greater-than or equals",
                        "less-than",
                        "less-than or equals",
                        "equals",
                        "does not equal"
                    ]
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Number Operation",
        "display_name": "Number Operation",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Number to Float": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Number to Float",
        "display_name": "Number to Float",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Number Input Switch": {
        "input": {
            "required": {
                "number_a": [
                    "NUMBER"
                ],
                "number_b": [
                    "NUMBER"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Number Input Switch",
        "display_name": "Number Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Number Input Condition": {
        "input": {
            "required": {
                "number_a": [
                    "NUMBER"
                ],
                "number_b": [
                    "NUMBER"
                ],
                "return_boolean": [
                    [
                        "false",
                        "true"
                    ]
                ],
                "comparison": [
                    [
                        "and",
                        "or",
                        "greater-than",
                        "greater-than or equals",
                        "less-than",
                        "less-than or equals",
                        "equals",
                        "does not equal",
                        "divisible by",
                        "if A odd",
                        "if A even",
                        "if A prime",
                        "factor of"
                    ]
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Number Input Condition",
        "display_name": "Number Input Condition",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Number Multiple Of": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ],
                "multiple": [
                    "INT",
                    {
                        "default": 8,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Number Multiple Of",
        "display_name": "Number Multiple Of",
        "description": "",
        "category": "WAS Suite/Number/Functions",
        "output_node": false
    },
    "Number PI": {
        "input": {
            "required": {}
        },
        "output": [
            "NUMBER",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT"
        ],
        "name": "Number PI",
        "display_name": "Number PI",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "Number to Int": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "Number to Int",
        "display_name": "Number to Int",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Number to Seed": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "SEED"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEED"
        ],
        "name": "Number to Seed",
        "display_name": "Number to Seed",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Number to String": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Number to String",
        "display_name": "Number to String",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Number to Text": {
        "input": {
            "required": {
                "number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Number to Text",
        "display_name": "Number to Text",
        "description": "",
        "category": "WAS Suite/Number/Operations",
        "output_node": false
    },
    "Boolean To Text": {
        "input": {
            "required": {
                "boolean": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Boolean To Text",
        "display_name": "Boolean To Text",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Prompt Styles Selector": {
        "input": {
            "required": {
                "style": [
                    [
                        "None"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "positive_string",
            "negative_string"
        ],
        "name": "Prompt Styles Selector",
        "display_name": "Prompt Styles Selector",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Prompt Multiple Styles Selector": {
        "input": {
            "required": {
                "style1": [
                    [
                        "None"
                    ]
                ],
                "style2": [
                    [
                        "None"
                    ]
                ],
                "style3": [
                    [
                        "None"
                    ]
                ],
                "style4": [
                    [
                        "None"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "positive_string",
            "negative_string"
        ],
        "name": "Prompt Multiple Styles Selector",
        "display_name": "Prompt Multiple Styles Selector",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Random Number": {
        "input": {
            "required": {
                "number_type": [
                    [
                        "integer",
                        "float",
                        "bool"
                    ]
                ],
                "minimum": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "maximum": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "Random Number",
        "display_name": "Random Number",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "Save Text File": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output/[time(%Y-%m-%d)]",
                        "multiline": false
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ],
                "filename_delimiter": [
                    "STRING",
                    {
                        "default": "_"
                    }
                ],
                "filename_number_padding": [
                    "INT",
                    {
                        "default": 4,
                        "min": 2,
                        "max": 9,
                        "step": 1
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Text File",
        "display_name": "Save Text File",
        "description": "",
        "category": "WAS Suite/IO",
        "output_node": true
    },
    "Seed": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "SEED",
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "seed",
            "number",
            "float",
            "int"
        ],
        "name": "Seed",
        "display_name": "Seed",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "Tensor Batch to Image": {
        "input": {
            "required": {
                "images_batch": [
                    "IMAGE"
                ],
                "batch_image_number": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Tensor Batch to Image",
        "display_name": "Tensor Batch to Image",
        "description": "",
        "category": "WAS Suite/Latent/Transform",
        "output_node": false
    },
    "BLIP Analyze Image": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "caption",
                        "interrogate"
                    ]
                ],
                "question": [
                    "STRING",
                    {
                        "default": "What does the background consist of?",
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "blip_model": [
                    "BLIP_MODEL"
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "BLIP Analyze Image",
        "display_name": "BLIP Analyze Image",
        "description": "",
        "category": "WAS Suite/Text/AI",
        "output_node": false
    },
    "SAM Model Loader": {
        "input": {
            "required": {
                "model_size": [
                    [
                        "ViT-H",
                        "ViT-L",
                        "ViT-B"
                    ]
                ]
            }
        },
        "output": [
            "SAM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAM_MODEL"
        ],
        "name": "SAM Model Loader",
        "display_name": "SAM Model Loader",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "SAM Parameters": {
        "input": {
            "required": {
                "points": [
                    "STRING",
                    {
                        "default": "[128, 128]; [0, 0]",
                        "multiline": false
                    }
                ],
                "labels": [
                    "STRING",
                    {
                        "default": "[1, 0]",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "SAM_PARAMETERS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAM_PARAMETERS"
        ],
        "name": "SAM Parameters",
        "display_name": "SAM Parameters",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "SAM Parameters Combine": {
        "input": {
            "required": {
                "sam_parameters_a": [
                    "SAM_PARAMETERS"
                ],
                "sam_parameters_b": [
                    "SAM_PARAMETERS"
                ]
            }
        },
        "output": [
            "SAM_PARAMETERS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAM_PARAMETERS"
        ],
        "name": "SAM Parameters Combine",
        "display_name": "SAM Parameters Combine",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "SAM Image Mask": {
        "input": {
            "required": {
                "sam_model": [
                    "SAM_MODEL"
                ],
                "sam_parameters": [
                    "SAM_PARAMETERS"
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "SAM Image Mask",
        "display_name": "SAM Image Mask",
        "description": "",
        "category": "WAS Suite/Image/Masking",
        "output_node": false
    },
    "Samples Passthrough (Stat System)": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "samples"
        ],
        "name": "Samples Passthrough (Stat System)",
        "display_name": "Samples Passthrough (Stat System)",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": false
    },
    "String to Text": {
        "input": {
            "required": {
                "string": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "String to Text",
        "display_name": "String to Text",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "Image Bounds": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE_BOUNDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE_BOUNDS"
        ],
        "name": "Image Bounds",
        "display_name": "Image Bounds",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Inset Image Bounds": {
        "input": {
            "required": {
                "image_bounds": [
                    "IMAGE_BOUNDS"
                ],
                "inset_left": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "inset_right": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "inset_top": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "inset_bottom": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE_BOUNDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE_BOUNDS"
        ],
        "name": "Inset Image Bounds",
        "display_name": "Inset Image Bounds",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Bounded Image Blend": {
        "input": {
            "required": {
                "target": [
                    "IMAGE"
                ],
                "target_bounds": [
                    "IMAGE_BOUNDS"
                ],
                "source": [
                    "IMAGE"
                ],
                "blend_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Bounded Image Blend",
        "display_name": "Bounded Image Blend",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Bounded Image Blend with Mask": {
        "input": {
            "required": {
                "target": [
                    "IMAGE"
                ],
                "target_mask": [
                    "MASK"
                ],
                "target_bounds": [
                    "IMAGE_BOUNDS"
                ],
                "source": [
                    "IMAGE"
                ],
                "blend_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "feathering": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Bounded Image Blend with Mask",
        "display_name": "Bounded Image Blend with Mask",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Bounded Image Crop": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "image_bounds": [
                    "IMAGE_BOUNDS"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Bounded Image Crop",
        "display_name": "Bounded Image Crop",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Bounded Image Crop with Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ],
                "padding_left": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "padding_right": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "padding_top": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "padding_bottom": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE_BOUNDS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE_BOUNDS"
        ],
        "name": "Bounded Image Crop with Mask",
        "display_name": "Bounded Image Crop with Mask",
        "description": "",
        "category": "WAS Suite/Image/Bound",
        "output_node": false
    },
    "Image Bounds to Console": {
        "input": {
            "required": {
                "image_bounds": [
                    "IMAGE_BOUNDS"
                ],
                "label": [
                    "STRING",
                    {
                        "default": "Debug to Console",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE_BOUNDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE_BOUNDS"
        ],
        "name": "Image Bounds to Console",
        "display_name": "Image Bounds to Console",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": true
    },
    "Text Dictionary Update": {
        "input": {
            "required": {
                "dictionary_a": [
                    "DICT"
                ],
                "dictionary_b": [
                    "DICT"
                ]
            },
            "optional": {
                "dictionary_c": [
                    "DICT"
                ],
                "dictionary_d": [
                    "DICT"
                ]
            }
        },
        "output": [
            "DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DICT"
        ],
        "name": "Text Dictionary Update",
        "display_name": "Text Dictionary Update",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Dictionary Get": {
        "input": {
            "required": {
                "dictionary": [
                    "DICT"
                ],
                "key": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "default_value": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Dictionary Get",
        "display_name": "Text Dictionary Get",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Dictionary Convert": {
        "input": {
            "required": {
                "dictionary_text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DICT"
        ],
        "name": "Text Dictionary Convert",
        "display_name": "Text Dictionary Convert",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Dictionary New": {
        "input": {
            "required": {
                "key_1": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "value_1": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "key_2": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "value_2": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "key_3": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "value_3": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "key_4": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "value_4": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "key_5": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "value_5": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DICT"
        ],
        "name": "Text Dictionary New",
        "display_name": "Text Dictionary New",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Dictionary Keys": {
        "input": {
            "required": {
                "dictionary": [
                    "DICT"
                ]
            },
            "optional": {}
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LIST"
        ],
        "name": "Text Dictionary Keys",
        "display_name": "Text Dictionary Keys",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Dictionary To Text": {
        "input": {
            "required": {
                "dictionary": [
                    "DICT"
                ]
            },
            "optional": {}
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Dictionary To Text",
        "display_name": "Text Dictionary To Text",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Add Tokens": {
        "input": {
            "required": {
                "tokens": [
                    "STRING",
                    {
                        "default": "[hello]: world",
                        "multiline": true
                    }
                ],
                "print_current_tokens": [
                    [
                        "false",
                        "true"
                    ]
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Text Add Tokens",
        "display_name": "Text Add Tokens",
        "description": "",
        "category": "WAS Suite/Text/Tokens",
        "output_node": true
    },
    "Text Add Token by Input": {
        "input": {
            "required": {
                "token_name": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "token_value": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "print_current_tokens": [
                    [
                        "false",
                        "true"
                    ]
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Text Add Token by Input",
        "display_name": "Text Add Token by Input",
        "description": "",
        "category": "WAS Suite/Text/Tokens",
        "output_node": true
    },
    "Text Compare": {
        "input": {
            "required": {
                "text_a": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "mode": [
                    [
                        "similarity",
                        "difference"
                    ]
                ],
                "tolerance": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "NUMBER",
            "NUMBER",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "TEXT_A_PASS",
            "TEXT_B_PASS",
            "BOOL_NUMBER",
            "SCORE_NUMBER",
            "COMPARISON_TEXT"
        ],
        "name": "Text Compare",
        "display_name": "Text Compare",
        "description": "",
        "category": "WAS Suite/Text/Search",
        "output_node": false
    },
    "Text Concatenate": {
        "input": {
            "required": {
                "delimiter": [
                    "STRING",
                    {
                        "default": ", "
                    }
                ],
                "clean_whitespace": [
                    [
                        "true",
                        "false"
                    ]
                ]
            },
            "optional": {
                "text_a": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_c": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Concatenate",
        "display_name": "Text Concatenate",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text File History Loader": {
        "input": {
            "required": {
                "file": [
                    [
                        "No History"
                    ]
                ],
                "dictionary_name": [
                    "STRING",
                    {
                        "default": "[filename]",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "DICT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "DICT"
        ],
        "name": "Text File History Loader",
        "display_name": "Text File History Loader",
        "description": "",
        "category": "WAS Suite/History",
        "output_node": false
    },
    "Text Find and Replace by Dictionary": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "dictionary": [
                    "DICT"
                ],
                "replacement_key": [
                    "STRING",
                    {
                        "default": "__",
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Find and Replace by Dictionary",
        "display_name": "Text Find and Replace by Dictionary",
        "description": "",
        "category": "WAS Suite/Text/Search",
        "output_node": false
    },
    "Text Find and Replace Input": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "find": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "replace": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "result_text",
            "replacement_count_number",
            "replacement_count_float",
            "replacement_count_int"
        ],
        "name": "Text Find and Replace Input",
        "display_name": "Text Find and Replace Input",
        "description": "",
        "category": "WAS Suite/Text/Search",
        "output_node": false
    },
    "Text Find and Replace": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "find": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "replace": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "result_text",
            "replacement_count_number",
            "replacement_count_float",
            "replacement_count_int"
        ],
        "name": "Text Find and Replace",
        "display_name": "Text Find and Replace",
        "description": "",
        "category": "WAS Suite/Text/Search",
        "output_node": false
    },
    "Text Input Switch": {
        "input": {
            "required": {
                "text_a": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Input Switch",
        "display_name": "Text Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Text List": {
        "input": {
            "required": {},
            "optional": {
                "text_a": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_c": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_e": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_f": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LIST"
        ],
        "name": "Text List",
        "display_name": "Text List",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text List Concatenate": {
        "input": {
            "required": {},
            "optional": {
                "list_a": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ],
                "list_b": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ],
                "list_c": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ],
                "list_d": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LIST"
        ],
        "name": "Text List Concatenate",
        "display_name": "Text List Concatenate",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text List to Text": {
        "input": {
            "required": {
                "delimiter": [
                    "STRING",
                    {
                        "default": ", "
                    }
                ],
                "text_list": [
                    "LIST",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text List to Text",
        "display_name": "Text List to Text",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Load Line From File": {
        "input": {
            "required": {
                "file_path": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "dictionary_name": [
                    "STRING",
                    {
                        "default": "[filename]",
                        "multiline": false
                    }
                ],
                "label": [
                    "STRING",
                    {
                        "default": "TextBatch",
                        "multiline": false
                    }
                ],
                "mode": [
                    [
                        "automatic",
                        "index"
                    ]
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "multiline_text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "DICT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "line_text",
            "dictionary"
        ],
        "name": "Text Load Line From File",
        "display_name": "Text Load Line From File",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Multiline": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Multiline",
        "display_name": "Text Multiline",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Parse A1111 Embeddings": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Parse A1111 Embeddings",
        "display_name": "Text Parse A1111 Embeddings",
        "description": "",
        "category": "WAS Suite/Text/Parse",
        "output_node": false
    },
    "Text Parse Noodle Soup Prompts": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Noodle Soup Prompts",
                        "Wildcards"
                    ]
                ],
                "noodle_key": [
                    "STRING",
                    {
                        "default": "__",
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Parse Noodle Soup Prompts",
        "display_name": "Text Parse Noodle Soup Prompts",
        "description": "",
        "category": "WAS Suite/Text/Parse",
        "output_node": true
    },
    "Text Parse Tokens": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Parse Tokens",
        "display_name": "Text Parse Tokens",
        "description": "",
        "category": "WAS Suite/Text/Tokens",
        "output_node": false
    },
    "Text Random Line": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Random Line",
        "display_name": "Text Random Line",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Random Prompt": {
        "input": {
            "required": {
                "search_seed": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Random Prompt",
        "display_name": "Text Random Prompt",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text String": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "text_b": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_c": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "name": "Text String",
        "display_name": "Text String",
        "description": "",
        "category": "WAS Suite/Text",
        "output_node": false
    },
    "Text Contains": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ],
                "sub_text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "case_insensitive": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Text Contains",
        "display_name": "Text Contains",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Text Shuffle": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "separator": [
                    "STRING",
                    {
                        "default": ",",
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text Shuffle",
        "display_name": "Text Shuffle",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "Text to Conditioning": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Text to Conditioning",
        "display_name": "Text to Conditioning",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "Text to Console": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "label": [
                    "STRING",
                    {
                        "default": "Text Output",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text to Console",
        "display_name": "Text to Console",
        "description": "",
        "category": "WAS Suite/Debug",
        "output_node": true
    },
    "Text to Number": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "Text to Number",
        "display_name": "Text to Number",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "Text to String": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text to String",
        "display_name": "Text to String",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "Text String Truncate": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "truncate_by": [
                    [
                        "characters",
                        "words"
                    ]
                ],
                "truncate_from": [
                    [
                        "end",
                        "beginning"
                    ]
                ],
                "truncate_to": [
                    "INT",
                    {
                        "default": 10,
                        "min": -99999999,
                        "max": 99999999,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_c": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "name": "Text String Truncate",
        "display_name": "Text String Truncate",
        "description": "",
        "category": "WAS Suite/Text/Operations",
        "output_node": false
    },
    "True Random.org Number Generator": {
        "input": {
            "required": {
                "api_key": [
                    "STRING",
                    {
                        "default": "00000000-0000-0000-0000-000000000000",
                        "multiline": false
                    }
                ],
                "minimum": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "maximum": [
                    "FLOAT",
                    {
                        "default": 10000000,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "mode": [
                    [
                        "random",
                        "fixed"
                    ]
                ]
            }
        },
        "output": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "NUMBER",
            "FLOAT",
            "INT"
        ],
        "name": "True Random.org Number Generator",
        "display_name": "True Random.org Number Generator",
        "description": "",
        "category": "WAS Suite/Number",
        "output_node": false
    },
    "unCLIP Checkpoint Loader": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "CLIP_VISION",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE",
            "CLIP_VISION",
            "NAME_STRING"
        ],
        "name": "unCLIP Checkpoint Loader",
        "display_name": "unCLIP Checkpoint Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "Upscale Model Loader": {
        "input": {
            "required": {
                "model_name": [
                    []
                ]
            }
        },
        "output": [
            "UPSCALE_MODEL",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "UPSCALE_MODEL",
            "MODEL_NAME_TEXT"
        ],
        "name": "Upscale Model Loader",
        "display_name": "Upscale Model Loader",
        "description": "",
        "category": "WAS Suite/Loaders",
        "output_node": false
    },
    "Upscale Model Switch": {
        "input": {
            "required": {
                "upscale_model_a": [
                    "UPSCALE_MODEL"
                ],
                "upscale_model_b": [
                    "UPSCALE_MODEL"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "UPSCALE_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALE_MODEL"
        ],
        "name": "Upscale Model Switch",
        "display_name": "Upscale Model Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Write to GIF": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "transition_frames": [
                    "INT",
                    {
                        "default": 30,
                        "min": 2,
                        "max": 60,
                        "step": 1
                    }
                ],
                "image_delay_ms": [
                    "FLOAT",
                    {
                        "default": 2500.0,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "duration_ms": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "loops": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "max_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 128,
                        "max": 1280,
                        "step": 1
                    }
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "/ComfyUI/output",
                        "multiline": false
                    }
                ],
                "filename": [
                    "STRING",
                    {
                        "default": "morph_writer",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "image_pass",
            "filepath_text",
            "filename_text"
        ],
        "name": "Write to GIF",
        "display_name": "Write to GIF",
        "description": "",
        "category": "WAS Suite/Animation/Writer",
        "output_node": false
    },
    "Write to Video": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "transition_frames": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 120,
                        "step": 1
                    }
                ],
                "image_delay_sec": [
                    "FLOAT",
                    {
                        "default": 2.5,
                        "min": 0.1,
                        "max": 60000.0,
                        "step": 0.1
                    }
                ],
                "fps": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 60.0,
                        "step": 1
                    }
                ],
                "max_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 128,
                        "max": 1920,
                        "step": 1
                    }
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/output",
                        "multiline": false
                    }
                ],
                "filename": [
                    "STRING",
                    {
                        "default": "comfy_writer",
                        "multiline": false
                    }
                ],
                "codec": [
                    [
                        "AVC1",
                        "FFV1",
                        "H264",
                        "MP4V"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE_PASS",
            "filepath_text",
            "filename_text"
        ],
        "name": "Write to Video",
        "display_name": "Write to Video",
        "description": "",
        "category": "WAS Suite/Animation/Writer",
        "output_node": false
    },
    "VAE Input Switch": {
        "input": {
            "required": {
                "vae_a": [
                    "VAE"
                ],
                "vae_b": [
                    "VAE"
                ],
                "boolean_number": [
                    "NUMBER"
                ]
            }
        },
        "output": [
            "VAE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VAE"
        ],
        "name": "VAE Input Switch",
        "display_name": "VAE Input Switch",
        "description": "",
        "category": "WAS Suite/Logic",
        "output_node": false
    },
    "Video Dump Frames": {
        "input": {
            "required": {
                "video_path": [
                    [
                        "__inputs__"
                    ]
                ],
                "output_path": [
                    "STRING",
                    {
                        "default": "./ComfyUI/input/MyVideo",
                        "multiline": false
                    }
                ],
                "prefix": [
                    "STRING",
                    {
                        "default": "frame_",
                        "multiline": false
                    }
                ],
                "filenumber_digits": [
                    "INT",
                    {
                        "default": 4,
                        "min": -1,
                        "max": 8,
                        "step": 1
                    }
                ],
                "extension": [
                    [
                        "png",
                        "jpg",
                        "gif",
                        "tiff"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "NUMBER"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "output_path",
            "processed_count"
        ],
        "name": "Video Dump Frames",
        "display_name": "Video Dump Frames",
        "description": "",
        "category": "WAS Suite/Animation",
        "output_node": false
    },
    "CLIPTextEncode (BlenderNeko Advanced + NSP)": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Noodle Soup Prompts",
                        "Wildcards"
                    ]
                ],
                "noodle_key": [
                    "STRING",
                    {
                        "default": "__",
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++"
                    ]
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "conditioning",
            "parsed_text",
            "raw_text"
        ],
        "name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
        "display_name": "CLIPTextEncode (BlenderNeko Advanced + NSP)",
        "description": "A node based on Blenderneko's <a href='https://github.com/BlenderNeko/ComfyUI_ADV_CLIP_embw' target='_blank'>Advanced CLIP Text Encode</a>. This version adds the ability to use Noodle Soup Prompts and Wildcards. Wildcards are stored in WAS Node Suite root under the folder 'wildcards'. You can create the folder if it doesn't exist and move your wildcards into it.",
        "category": "WAS Suite/Conditioning",
        "output_node": true
    },
    "VHS_VideoCombine": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "frame_rate": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "step": 1
                    }
                ],
                "loop_count": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "AnimateDiff"
                    }
                ],
                "format": [
                    [
                        "image/gif",
                        "image/webp",
                        "video/16bit-png",
                        "video/ProRes",
                        [
                            "video/av1-webm",
                            [
                                [
                                    "pix_fmt",
                                    [
                                        "yuv420p10le",
                                        "yuv420p"
                                    ]
                                ],
                                [
                                    "crf",
                                    "INT",
                                    {
                                        "default": 23,
                                        "min": 0,
                                        "max": 100,
                                        "step": 1
                                    }
                                ],
                                [
                                    "input_color_depth",
                                    [
                                        "8bit",
                                        "16bit"
                                    ]
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ],
                        [
                            "video/h264-mp4",
                            [
                                [
                                    "pix_fmt",
                                    [
                                        "yuv420p",
                                        "yuv420p10le"
                                    ]
                                ],
                                [
                                    "crf",
                                    "INT",
                                    {
                                        "default": 19,
                                        "min": 0,
                                        "max": 100,
                                        "step": 1
                                    }
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ],
                        [
                            "video/h265-mp4",
                            [
                                [
                                    "pix_fmt",
                                    [
                                        "yuv420p10le",
                                        "yuv420p"
                                    ]
                                ],
                                [
                                    "crf",
                                    "INT",
                                    {
                                        "default": 22,
                                        "min": 0,
                                        "max": 100,
                                        "step": 1
                                    }
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ],
                        [
                            "video/nvenc_h264-mp4",
                            [
                                [
                                    "pix_fmt",
                                    [
                                        "yuv420p",
                                        "yuv420p10le"
                                    ]
                                ],
                                [
                                    "bitrate",
                                    "INT",
                                    {
                                        "default": 10,
                                        "min": 1,
                                        "max": 999,
                                        "step": 1
                                    }
                                ],
                                [
                                    "megabit",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ],
                        [
                            "video/nvenc_hevc-mp4",
                            [
                                [
                                    "pix_fmt",
                                    [
                                        "yuv420p",
                                        "yuv420p10le"
                                    ]
                                ],
                                [
                                    "bitrate",
                                    "INT",
                                    {
                                        "default": 10,
                                        "min": 1,
                                        "max": 999,
                                        "step": 1
                                    }
                                ],
                                [
                                    "megabit",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ],
                        [
                            "video/webm",
                            [
                                [
                                    "crf",
                                    "INT",
                                    {
                                        "default": 20,
                                        "min": 0,
                                        "max": 100,
                                        "step": 1
                                    }
                                ],
                                [
                                    "save_metadata",
                                    "BOOLEAN",
                                    {
                                        "default": true
                                    }
                                ]
                            ]
                        ]
                    ]
                ],
                "pingpong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "save_output": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            },
            "optional": {
                "audio": [
                    "VHS_AUDIO"
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "VHS_FILENAMES"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Filenames"
        ],
        "name": "VHS_VideoCombine",
        "display_name": "Video Combine \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": true
    },
    "VHS_LoadVideo": {
        "input": {
            "required": {
                "video": [
                    [
                        "__inputs__"
                    ]
                ],
                "force_rate": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 24,
                        "step": 1
                    }
                ],
                "force_size": [
                    [
                        "Disabled",
                        "Custom Height",
                        "Custom Width",
                        "Custom",
                        "256x?",
                        "?x256",
                        "256x256",
                        "512x?",
                        "?x512",
                        "512x512"
                    ]
                ],
                "custom_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 8
                    }
                ],
                "custom_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 8
                    }
                ],
                "frame_load_cap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "skip_first_frames": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "VHS_AUDIO"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "frame_count",
            "audio"
        ],
        "name": "VHS_LoadVideo",
        "display_name": "Load Video (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": false
    },
    "VHS_LoadVideoPath": {
        "input": {
            "required": {
                "video": [
                    [
                        "__inputs__"
                    ]
                ],
                "force_rate": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 24,
                        "step": 1
                    }
                ],
                "force_size": [
                    [
                        "Disabled",
                        "Custom Height",
                        "Custom Width",
                        "Custom",
                        "256x?",
                        "?x256",
                        "256x256",
                        "512x?",
                        "?x512",
                        "512x512"
                    ]
                ],
                "custom_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 8
                    }
                ],
                "custom_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 8
                    }
                ],
                "frame_load_cap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "skip_first_frames": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "VHS_AUDIO"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "frame_count",
            "audio"
        ],
        "name": "VHS_LoadVideoPath",
        "display_name": "Load Video (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": false
    },
    "VHS_LoadImages": {
        "input": {
            "required": {
                "directory": [
                    [
                        "__inputs__"
                    ]
                ]
            },
            "optional": {
                "image_load_cap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "skip_first_images": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "name": "VHS_LoadImages",
        "display_name": "Load Images (Upload) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": false
    },
    "VHS_LoadImagesPath": {
        "input": {
            "required": {
                "directory": [
                    [
                        "__inputs__"
                    ]
                ]
            },
            "optional": {
                "image_load_cap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "skip_first_images": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "name": "VHS_LoadImagesPath",
        "display_name": "Load Images (Path) \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": false
    },
    "VHS_LoadAudio": {
        "input": {
            "required": {
                "audio_file": [
                    [
                        "__inputs__"
                    ]
                ]
            },
            "optional": {
                "seek_seconds": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "VHS_AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "VHS_LoadAudio",
        "display_name": "Load Audio (Path)\ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": false
    },
    "VHS_PruneOutputs": {
        "input": {
            "required": {
                "filenames": [
                    "VHS_FILENAMES"
                ],
                "options": [
                    [
                        "Intermediate",
                        "Intermediate and Utility"
                    ]
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "VHS_PruneOutputs",
        "display_name": "Prune Outputs \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "output_node": true
    },
    "VHS_SplitLatents": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ],
                "split_index": [
                    "INT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -99999999999
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT",
            "LATENT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "LATENT_A",
            "A_count",
            "LATENT_B",
            "B_count"
        ],
        "name": "VHS_SplitLatents",
        "display_name": "Split Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
        "output_node": false
    },
    "VHS_SplitImages": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "split_index": [
                    "INT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -99999999999
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE_A",
            "A_count",
            "IMAGE_B",
            "B_count"
        ],
        "name": "VHS_SplitImages",
        "display_name": "Split Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
        "output_node": false
    },
    "VHS_SplitMasks": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "split_index": [
                    "INT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -99999999999
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "INT",
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MASK_A",
            "A_count",
            "MASK_B",
            "B_count"
        ],
        "name": "VHS_SplitMasks",
        "display_name": "Split Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
        "output_node": false
    },
    "VHS_MergeLatents": {
        "input": {
            "required": {
                "latents_A": [
                    "LATENT"
                ],
                "latents_B": [
                    "LATENT"
                ],
                "merge_strategy": [
                    [
                        "match A",
                        "match B",
                        "match smaller",
                        "match larger"
                    ]
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "LATENT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "count"
        ],
        "name": "VHS_MergeLatents",
        "display_name": "Merge Latent Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
        "output_node": false
    },
    "VHS_MergeImages": {
        "input": {
            "required": {
                "images_A": [
                    "IMAGE"
                ],
                "images_B": [
                    "IMAGE"
                ],
                "merge_strategy": [
                    [
                        "match A",
                        "match B",
                        "match smaller",
                        "match larger"
                    ]
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "count"
        ],
        "name": "VHS_MergeImages",
        "display_name": "Merge Image Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
        "output_node": false
    },
    "VHS_MergeMasks": {
        "input": {
            "required": {
                "mask_A": [
                    "MASK"
                ],
                "mask_B": [
                    "MASK"
                ],
                "merge_strategy": [
                    [
                        "match A",
                        "match B",
                        "match smaller",
                        "match larger"
                    ]
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "bislerp"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MASK",
            "count"
        ],
        "name": "VHS_MergeMasks",
        "display_name": "Merge Mask Batches \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
        "output_node": false
    },
    "VHS_SelectEveryNthLatent": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "count"
        ],
        "name": "VHS_SelectEveryNthLatent",
        "display_name": "Select Every Nth Latent \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
        "output_node": false
    },
    "VHS_SelectEveryNthImage": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "count"
        ],
        "name": "VHS_SelectEveryNthImage",
        "display_name": "Select Every Nth Image \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
        "output_node": false
    },
    "VHS_SelectEveryNthMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "select_every_nth": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MASK",
            "count"
        ],
        "name": "VHS_SelectEveryNthMask",
        "display_name": "Select Every Nth Mask \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
        "output_node": false
    },
    "VHS_GetLatentCount": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "count"
        ],
        "name": "VHS_GetLatentCount",
        "display_name": "Get Latent Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
        "output_node": false
    },
    "VHS_GetImageCount": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "count"
        ],
        "name": "VHS_GetImageCount",
        "display_name": "Get Image Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
        "output_node": false
    },
    "VHS_GetMaskCount": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "count"
        ],
        "name": "VHS_GetMaskCount",
        "display_name": "Get Mask Count \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
        "output_node": false
    },
    "VHS_DuplicateLatents": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ],
                "multiply_by": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "count"
        ],
        "name": "VHS_DuplicateLatents",
        "display_name": "Duplicate Latent Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/latent",
        "output_node": false
    },
    "VHS_DuplicateImages": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "multiply_by": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "count"
        ],
        "name": "VHS_DuplicateImages",
        "display_name": "Duplicate Image Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/image",
        "output_node": false
    },
    "VHS_DuplicateMasks": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "multiply_by": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MASK",
            "count"
        ],
        "name": "VHS_DuplicateMasks",
        "display_name": "Duplicate Mask Batch \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/mask",
        "output_node": false
    },
    "VHS_VAEEncodeBatched": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "per_batch": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VHS_VAEEncodeBatched",
        "display_name": "VAE Encode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
        "output_node": false
    },
    "VHS_VAEDecodeBatched": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "per_batch": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "VHS_VAEDecodeBatched",
        "display_name": "VAE Decode Batched \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62",
        "description": "",
        "category": "Video Helper Suite \ud83c\udfa5\ud83c\udd65\ud83c\udd57\ud83c\udd62/batched nodes",
        "output_node": false
    },
    "Lerp": {
        "input": {
            "required": {
                "num_Images": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "Lerp",
        "display_name": "Lerp \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "SinWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "SinWave",
        "display_name": "SinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "InvSinWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "InvSinWave",
        "display_name": "InvSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "CosWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "CosWave",
        "display_name": "CosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "InvCosWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "InvCosWave",
        "display_name": "InvCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "SquareWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "SquareWave",
        "display_name": "SquareWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "SawtoothWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "step_increment": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "start_value": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "SawtoothWave",
        "display_name": "SawtoothWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "TriangleWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "y_translation": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "TriangleWave",
        "display_name": "TriangleWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "AbsCosWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "max_value": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "AbsCosWave",
        "display_name": "AbsCosWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "AbsSinWave": {
        "input": {
            "required": {
                "phase": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "amplitude": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "x_translation": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ],
                "max_value": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 0.05
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "AbsSinWave",
        "display_name": "AbsSinWave \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/WaveNodes",
        "output_node": false
    },
    "PromptSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "POS",
            "NEG"
        ],
        "name": "PromptSchedule",
        "display_name": "Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "ValueSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "ValueSchedule",
        "display_name": "Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "PromptScheduleNodeFlow": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "num_frames": [
                    "INT",
                    {
                        "default": 24.0,
                        "min": 0.0,
                        "max": 9999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "in_text": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "STRING"
        ],
        "name": "PromptScheduleNodeFlow",
        "display_name": "Prompt Schedule NodeFlow \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "PromptScheduleNodeFlowEnd": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "forceInput": true
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE"
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "POS",
            "NEG"
        ],
        "name": "PromptScheduleNodeFlowEnd",
        "display_name": "Prompt Schedule NodeFlow End \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "PromptScheduleEncodeSDXL": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_G"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "text_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_L"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_G"
                    }
                ],
                "app_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_G"
                    }
                ],
                "pre_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_L"
                    }
                ],
                "app_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_L"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "PromptScheduleEncodeSDXL",
        "display_name": "Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "StringSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE"
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "StringSchedule",
        "display_name": "String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/ScheduleNodes",
        "output_node": false
    },
    "BatchPromptSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE"
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP"
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "POS",
            "NEG"
        ],
        "name": "BatchPromptSchedule",
        "display_name": "Batch Prompt Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchValueSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT"
        ],
        "name": "BatchValueSchedule",
        "display_name": "Batch Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchPromptScheduleEncodeSDXL": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_G"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "text_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_L"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_G"
                    }
                ],
                "app_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_G"
                    }
                ],
                "pre_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_L"
                    }
                ],
                "app_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_L"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "BatchPromptScheduleEncodeSDXL",
        "display_name": "Batch Prompt Schedule SDXL \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchStringSchedule": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 120.0,
                        "min": 1.0,
                        "max": 999999.0,
                        "step": 1.0
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE"
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "BatchStringSchedule",
        "display_name": "Batch String Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchValueScheduleLatentInput": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "0:(0),\n12:(0),\n24:(0),\n36:(0),\n48:(0),\n60:(0),\n72:(0),\n84:(0),\n96:(0),\n108:(0),\n120:(0)\n"
                    }
                ],
                "num_latents": [
                    "LATENT"
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "INT",
            "LATENT"
        ],
        "name": "BatchValueScheduleLatentInput",
        "display_name": "Batch Value Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchPromptScheduleSDXLLatentInput": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_G"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "text_l": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "CLIP_L"
                    }
                ],
                "num_latents": [
                    "LATENT"
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_G"
                    }
                ],
                "app_text_G": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_G"
                    }
                ],
                "pre_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE_L"
                    }
                ],
                "app_text_L": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP_L"
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "LATENT"
        ],
        "name": "BatchPromptScheduleSDXLLatentInput",
        "display_name": "Batch Prompt Schedule SDXL (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "BatchPromptScheduleLatentInput": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0\" :\"\",\n\"12\" :\"\",\n\"24\" :\"\",\n\"36\" :\"\",\n\"48\" :\"\",\n\"60\" :\"\",\n\"72\" :\"\",\n\"84\" :\"\",\n\"96\" :\"\",\n\"108\" :\"\",\n\"120\" :\"\"\n"
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "num_latents": [
                    "LATENT"
                ],
                "print_output": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "pre_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "PRE"
                    }
                ],
                "app_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "APP"
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0.0,
                        "min": 0,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "pw_a": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_b": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_c": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ],
                "pw_d": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -9999.0,
                        "max": 9999.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "POS",
            "NEG",
            "INPUT_LATENTS"
        ],
        "name": "BatchPromptScheduleLatentInput",
        "display_name": "Batch Prompt Schedule (Latent Input) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "ImageBatchFromValueSchedule": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "values": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1.0,
                        "max": 1.0,
                        "label": "values"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBatchFromValueSchedule",
        "display_name": "Image Batch From Value Schedule \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/BatchScheduleNodes",
        "output_node": false
    },
    "StringConcatenate": {
        "input": {
            "required": {
                "text_a": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_a": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_b": [
                    "INT",
                    {
                        "default": 12
                    }
                ]
            },
            "optional": {
                "text_c": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_c": [
                    "INT",
                    {
                        "default": 24
                    }
                ],
                "text_d": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_d": [
                    "INT",
                    {
                        "default": 36
                    }
                ],
                "text_e": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_e": [
                    "INT",
                    {
                        "default": 48
                    }
                ],
                "text_f": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_f": [
                    "INT",
                    {
                        "default": 60
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true,
                        "default": ""
                    }
                ],
                "frame_g": [
                    "INT",
                    {
                        "default": 72
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "StringConcatenate",
        "display_name": "String Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
        "output_node": false
    },
    "Init FizzFrame": {
        "input": {
            "required": {
                "frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "positive_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "negative_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "general_positive": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "general_negative": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "previous_frame": [
                    "FIZZFRAME",
                    {
                        "forceInput": true
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "FIZZFRAME",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "FIZZFRAME",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "name": "Init FizzFrame",
        "display_name": "Init Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
        "output_node": false
    },
    "FizzFrame": {
        "input": {
            "required": {
                "frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "previous_frame": [
                    "FIZZFRAME",
                    {
                        "forceInput": true
                    }
                ],
                "positive_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "negative_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "FIZZFRAME",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "FIZZFRAME",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "name": "FizzFrame",
        "display_name": "Node Frame \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
        "output_node": false
    },
    "FizzFrameConcatenate": {
        "input": {
            "required": {
                "frame": [
                    "FIZZFRAME",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "FizzFrameConcatenate",
        "display_name": "Frame Concatenate \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/FrameNodes",
        "output_node": false
    },
    "ConcatStringSingle": {
        "input": {
            "required": {
                "string_a": [
                    "STRING",
                    {
                        "forceInput": true,
                        "default": "",
                        "multiline": true
                    }
                ],
                "string_b": [
                    "STRING",
                    {
                        "forceInput": true,
                        "default": "",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ConcatStringSingle",
        "display_name": "Concat String (Single) \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
        "output_node": false
    },
    "convertKeyframeKeysToBatchKeys": {
        "input": {
            "required": {
                "input": [
                    "INT",
                    {
                        "forceInput": true,
                        "default": 0
                    }
                ],
                "num_latents": [
                    "INT",
                    {
                        "default": 16
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "convertKeyframeKeysToBatchKeys",
        "display_name": "Keyframe Keys To Batch Keys \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
        "output_node": false
    },
    "CalculateFrameOffset": {
        "input": {
            "required": {
                "current_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "max_frames": [
                    "INT",
                    {
                        "default": 18,
                        "min": 0
                    }
                ],
                "num_latent_inputs": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "CalculateFrameOffset",
        "display_name": "Calculate Frame Offset \ud83d\udcc5\ud83c\udd55\ud83c\udd5d",
        "description": "",
        "category": "FizzNodes \ud83d\udcc5\ud83c\udd55\ud83c\udd5d/HelperNodes",
        "output_node": false
    },
    "Float": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Float",
        "display_name": "Float",
        "description": "",
        "category": "Derfuu_Nodes/Variables",
        "output_node": false
    },
    "Integer": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "Integer",
        "display_name": "Integer",
        "description": "",
        "category": "Derfuu_Nodes/Variables",
        "output_node": false
    },
    "Text": {
        "input": {
            "required": {
                "Text": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text",
        "display_name": "Text",
        "description": "",
        "category": "Derfuu_Nodes/Variables",
        "output_node": false
    },
    "Text box": {
        "input": {
            "required": {
                "Text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Text box",
        "display_name": "Text box",
        "description": "",
        "category": "Derfuu_Nodes/Variables",
        "output_node": false
    },
    "Float debug print": {
        "input": {
            "required": {
                "Prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Float debug print",
        "display_name": "Float debug print",
        "description": "",
        "category": "Derfuu_Nodes/Debug",
        "output_node": true
    },
    "Int debug print": {
        "input": {
            "required": {
                "Prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "Value": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Int debug print",
        "display_name": "Int debug print",
        "description": "",
        "category": "Derfuu_Nodes/Debug",
        "output_node": true
    },
    "Tuple debug print": {
        "input": {
            "required": {
                "Prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "Values": [
                    "TUPLE"
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Tuple debug print",
        "display_name": "Tuple debug print",
        "description": "",
        "category": "Derfuu_Nodes/Debug",
        "output_node": true
    },
    "String debug print": {
        "input": {
            "required": {
                "Prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "Text": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "String debug print",
        "display_name": "String debug print",
        "description": "",
        "category": "Derfuu_Nodes/Debug",
        "output_node": true
    },
    "Random": {
        "input": {
            "required": {
                "Value_A": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Value_B": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Random",
        "display_name": "Random",
        "description": "",
        "category": "Derfuu_Nodes/Functions",
        "output_node": false
    },
    "Tuple": {
        "input": {
            "required": {
                "Value_A": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Value_B": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "round_": [
                    [
                        "No",
                        "Yes",
                        "Ceil",
                        "Floor"
                    ]
                ]
            }
        },
        "output": [
            "TUPLE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TUPLE"
        ],
        "name": "Tuple",
        "display_name": "Tuple",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Int to tuple": {
        "input": {
            "required": {
                "Value_A": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "Value_B": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "TUPLE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TUPLE"
        ],
        "name": "Int to tuple",
        "display_name": "Int to tuple",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Tuple to floats": {
        "input": {
            "required": {
                "Tuple": [
                    "TUPLE"
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT"
        ],
        "name": "Tuple to floats",
        "display_name": "Tuple to floats",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Tuple to ints": {
        "input": {
            "required": {
                "Tuple": [
                    "TUPLE"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT"
        ],
        "name": "Tuple to ints",
        "display_name": "Tuple to ints",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Tuple swap": {
        "input": {
            "required": {
                "Tuple": [
                    "TUPLE"
                ]
            }
        },
        "output": [
            "TUPLE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TUPLE"
        ],
        "name": "Tuple swap",
        "display_name": "Tuple swap",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Tuple multiply": {
        "input": {
            "required": {
                "Tuple": [
                    "TUPLE"
                ],
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "TUPLE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TUPLE"
        ],
        "name": "Tuple multiply",
        "display_name": "Tuple multiply",
        "description": "",
        "category": "Derfuu_Nodes/Tuples",
        "output_node": false
    },
    "Int to float": {
        "input": {
            "required": {
                "Value": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Int to float",
        "display_name": "Int to float",
        "description": "",
        "category": "Derfuu_Nodes/Functions/Converters",
        "output_node": false
    },
    "Ceil": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "Ceil",
        "display_name": "Ceil",
        "description": "",
        "category": "Derfuu_Nodes/Functions/Converters",
        "output_node": false
    },
    "Floor": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "Floor",
        "display_name": "Floor",
        "description": "",
        "category": "Derfuu_Nodes/Functions/Converters",
        "output_node": false
    },
    "Absolute value": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "negative_out": [
                    [
                        false,
                        true
                    ]
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Absolute value",
        "display_name": "Absolute value",
        "description": "",
        "category": "Derfuu_Nodes/Functions/Converters",
        "output_node": false
    },
    "Get latent size": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ],
                "original": [
                    [
                        false,
                        true
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "TUPLE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "TUPLE"
        ],
        "name": "Get latent size",
        "display_name": "Get latent size",
        "description": "",
        "category": "Derfuu_Nodes/Functions",
        "output_node": false
    },
    "Get image size": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "TUPLE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT",
            "TUPLE"
        ],
        "name": "Get image size",
        "display_name": "Get image size",
        "description": "",
        "category": "Derfuu_Nodes/Functions",
        "output_node": false
    },
    "Sum": {
        "input": {
            "required": {
                "Value_A": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Value_B": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Sum",
        "display_name": "Sum",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Subtract": {
        "input": {
            "required": {
                "Value_A": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Value_B": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Subtract",
        "display_name": "Subtract",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Multiply": {
        "input": {
            "required": {
                "Value_A": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Value_B": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Multiply",
        "display_name": "Multiply",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Divide": {
        "input": {
            "required": {
                "Numerator": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Denominator": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Divide",
        "display_name": "Divide",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Power": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "Exponent": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Power",
        "display_name": "Power",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Square root": {
        "input": {
            "required": {
                "Value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "FLOAT"
        ],
        "name": "Square root",
        "display_name": "Square root",
        "description": "",
        "category": "Derfuu_Nodes/Math",
        "output_node": false
    },
    "Sinus": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "type_": [
                    [
                        "RAD",
                        "DEG"
                    ]
                ],
                "arcSin": [
                    [
                        false,
                        true
                    ]
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Sinus",
        "display_name": "Sinus",
        "description": "",
        "category": "Derfuu_Nodes/Math/Trigonometry",
        "output_node": false
    },
    "Cosines": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "type_": [
                    [
                        "RAD",
                        "DEG"
                    ]
                ],
                "arcCos": [
                    [
                        false,
                        true
                    ]
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Cosines",
        "display_name": "Cosines",
        "description": "",
        "category": "Derfuu_Nodes/Math/Trigonometry",
        "output_node": false
    },
    "Tangent": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "type_": [
                    [
                        "RAD",
                        "DEG"
                    ]
                ],
                "arcTan": [
                    [
                        false,
                        true
                    ]
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Tangent",
        "display_name": "Tangent",
        "description": "",
        "category": "Derfuu_Nodes/Math/Trigonometry",
        "output_node": false
    },
    "Latent Scale by ratio": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ],
                "modifier": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Scale by ratio",
        "display_name": "Latent Scale by ratio",
        "description": "",
        "category": "Derfuu_Nodes/Modded nodes/Latent",
        "output_node": false
    },
    "Latent Scale to side": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ],
                "side_length": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "side": [
                    [
                        "Longest",
                        "Width",
                        "Height"
                    ]
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Scale to side",
        "display_name": "Latent Scale to side",
        "description": "",
        "category": "Derfuu_Nodes/Modded nodes/Latent",
        "output_node": false
    },
    "Image scale by ratio": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image scale by ratio",
        "display_name": "Image scale by ratio",
        "description": "",
        "category": "Derfuu_Nodes/Modded nodes/Image",
        "output_node": false
    },
    "Image scale to side": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "side_length": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "side": [
                    [
                        "Longest",
                        "Width",
                        "Height"
                    ]
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image scale to side",
        "display_name": "Image scale to side",
        "description": "",
        "category": "Derfuu_Nodes/Modded nodes/Image",
        "output_node": false
    },
    "Conditioning area scale by ratio": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "modifier": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ],
                "strength_modifier": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Conditioning area scale by ratio",
        "display_name": "Conditioning area scale by ratio",
        "description": "",
        "category": "Derfuu_Nodes/Modded nodes/Conditions",
        "output_node": false
    },
    "ConditioningSetArea with tuples": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "size_tuple": [
                    "TUPLE"
                ],
                "offset_tuple": [
                    "TUPLE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": -1.7976931348623157e+308,
                        "max": 1.7976931348623157e+308,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetArea with tuples",
        "display_name": "ConditioningSetArea with tuples",
        "description": "",
        "category": "Derfuu_Nodes/Tuples/Modded nodes/Conditioning",
        "output_node": false
    },
    "LatentComposite with tuples": {
        "input": {
            "required": {
                "samples_to": [
                    "LATENT"
                ],
                "samples_from": [
                    "LATENT"
                ],
                "position_tuple": [
                    "TUPLE"
                ],
                "feather": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentComposite with tuples",
        "display_name": "LatentComposite with tuples",
        "description": "",
        "category": "Derfuu_Nodes/Tuples/Modded nodes/Latents",
        "output_node": false
    },
    "SAIStringRegexSearchReplace": {
        "input": {
            "required": {
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Text for replacement..."
                    }
                ],
                "regex_pattern": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "\\b\\w{5}\\b"
                    }
                ],
                "replacement_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Replacement text..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "replaced_text"
        ],
        "name": "SAIStringRegexSearchReplace",
        "display_name": "Regex Search and Replace",
        "description": "",
        "category": "SALT/String/Process/Regex",
        "output_node": false
    },
    "SAIStringRegexSearchMatch": {
        "input": {
            "required": {
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Text to search..."
                    }
                ],
                "regex_pattern": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "\\b[a-zA-Z]{6}\\b"
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "matches"
        ],
        "name": "SAIStringRegexSearchMatch",
        "display_name": "Regex Search and Match",
        "description": "",
        "category": "SALT/String/Process/Regex",
        "output_node": false
    },
    "SAIPrimitiveConverter": {
        "input": {
            "required": {
                "input_value": [
                    "*"
                ],
                "output_type": [
                    [
                        "STRING",
                        "INT",
                        "FLOAT",
                        "BOOLEAN",
                        "LIST",
                        "DICT"
                    ]
                ]
            },
            "optional": {
                "sub_data_type": [
                    [
                        "ORIGIN",
                        "STRING",
                        "INT",
                        "FLOAT",
                        "BOOLEAN"
                    ]
                ],
                "index_or_key": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "output"
        ],
        "name": "SAIPrimitiveConverter",
        "display_name": "Primitive Value Converter",
        "description": "",
        "category": "SALT/Utility/Conversion",
        "output_node": false
    },
    "SaltAIStableVideoDiffusion": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "api_key": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 2.5,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "mbi": [
                    "INT",
                    {
                        "min": 1,
                        "max": 255,
                        "default": 40,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "frames"
        ],
        "name": "SaltAIStableVideoDiffusion",
        "display_name": "Stable Video Diffusion",
        "description": "",
        "category": "SALT/API/Stability API",
        "output_node": false
    },
    "SaltInput": {
        "input": {
            "required": {
                "input_name": [
                    "STRING",
                    {}
                ],
                "input_desc": [
                    "STRING",
                    {}
                ],
                "input_type": [
                    [
                        "STRING",
                        "FLOAT",
                        "INT",
                        "BOOLEAN",
                        "IMAGE",
                        "MASK",
                        "SEED",
                        "FILE"
                    ]
                ],
                "input_value": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {
                "input_image": [
                    "IMAGE"
                ],
                "input_mask": [
                    "MASK"
                ],
                "input_allowed_values": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "user_override_required": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "relative_path": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "value"
        ],
        "name": "SaltInput",
        "display_name": "Salt Workflow Input",
        "description": "",
        "category": "SALT/IO",
        "output_node": true
    },
    "SaltOutput": {
        "input": {
            "required": {
                "output_name": [
                    "STRING",
                    {}
                ],
                "output_desc": [
                    "STRING",
                    {}
                ],
                "output_type": [
                    [
                        "PNG",
                        "JPEG",
                        "GIF",
                        "WEBP",
                        "AVI",
                        "MP4",
                        "WEBM",
                        "STRING"
                    ]
                ],
                "output_data": [
                    "*",
                    {}
                ]
            },
            "optional": {
                "animation_fps": [
                    "INT",
                    {
                        "min": 1,
                        "max": 60,
                        "default": 8
                    }
                ],
                "animation_quality": [
                    [
                        "DEFAULT",
                        "HIGH"
                    ]
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "output_subdir": null
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaltOutput",
        "display_name": "Salt Workflow Output",
        "description": "",
        "category": "SALT/IO",
        "output_node": true
    },
    "SaltInfo": {
        "input": {
            "required": {
                "workflow_title": [
                    "STRING",
                    {}
                ],
                "workflow_description": [
                    "STRING",
                    {}
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "title",
            "description"
        ],
        "name": "SaltInfo",
        "display_name": "Salt Workflow Info",
        "description": "",
        "category": "SALT/IO",
        "output_node": true
    },
    "SAIColorTransfer": {
        "input": {
            "required": {
                "target_images": [
                    "IMAGE"
                ],
                "source_images": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "pdf_regrain",
                        "mean_transfer",
                        "lab_transfer"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "SAIColorTransfer",
        "display_name": "Color Transfer",
        "description": "",
        "category": "SALT/Image/Process",
        "output_node": false
    },
    "SaltLoadAudio": {
        "input": {
            "required": {
                "file_path": [
                    "STRING",
                    {}
                ],
                "start_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "default": 0.0
                    }
                ],
                "manual_bpm": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 300.0
                    }
                ],
                "frame_rate": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 244
                    }
                ]
            },
            "optional": {
                "duration_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "default": 0.0,
                        "optional": true
                    }
                ]
            }
        },
        "output": [
            "AUDIO",
            "FLOAT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "audio",
            "bpm",
            "frame_rate",
            "frame_count"
        ],
        "name": "SaltLoadAudio",
        "display_name": "Load Audio",
        "description": "",
        "category": "SALT/Audio",
        "output_node": false
    },
    "SaltSaveAudio": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "audio_sfx"
                    }
                ],
                "format": [
                    [
                        "wav",
                        "mp3",
                        "flac"
                    ]
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaltSaveAudio",
        "display_name": "Save Audio",
        "description": "",
        "category": "SALT/Audio",
        "output_node": true
    },
    "SaltAudioFramesyncSchedule": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "amp_control": [
                    "FLOAT",
                    {
                        "min": 0.1,
                        "max": 1024.0,
                        "default": 1.0,
                        "step": 0.01
                    }
                ],
                "amp_offset": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1023.0,
                        "default": 0.0,
                        "step": 0.01
                    }
                ],
                "frame_rate": [
                    "INT",
                    {
                        "min": 1,
                        "max": 244,
                        "default": 8
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "min": 0,
                        "default": 0
                    }
                ],
                "end_frame": [
                    "INT",
                    {
                        "min": -1
                    }
                ],
                "curves_mode": [
                    [
                        "None",
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out",
                        "bounce-in",
                        "bounce-out",
                        "bounce-in-out",
                        "sinusoidal-in",
                        "sinusoidal-out",
                        "sinusoidal-in-out",
                        "cubic",
                        "square",
                        "sawtooth",
                        "triangle",
                        "bump-dip",
                        "exponential-in",
                        "exponential-out",
                        "exponential-in-out"
                    ]
                ]
            },
            "optional": {
                "frequency_low": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 22050,
                        "default": 250,
                        "step": 0.01
                    }
                ],
                "frequency_high": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 22050,
                        "default": 4000,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "left_low_schedule",
            "left_mid_schedule",
            "left_high_schedule",
            "right_low_schedule",
            "right_mid_schedule",
            "right_high_schedule",
            "average_low",
            "average_mid",
            "average_high",
            "average_schedule",
            "frame_count",
            "frame_rate"
        ],
        "name": "SaltAudioFramesyncSchedule",
        "display_name": "Schedule Audio Framesync",
        "description": "",
        "category": "SALT/Audio/Scheduling",
        "output_node": false
    },
    "SaltAudio2VHS": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ]
            }
        },
        "output": [
            "VHS_AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "vhs_audio"
        ],
        "name": "SaltAudio2VHS",
        "display_name": "Audio to VHS Audio",
        "description": "",
        "category": "SALT/Audio/Util",
        "output_node": false
    },
    "SaltChangeAudioVolume": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "volume_decibals": [
                    "FLOAT",
                    {
                        "min": -60,
                        "max": 60,
                        "default": 0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltChangeAudioVolume",
        "display_name": "Audio Volume",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioFade": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "fade_type": [
                    [
                        "in",
                        "out"
                    ]
                ],
                "fade_duration": [
                    "FLOAT",
                    {
                        "min": 0.01
                    }
                ]
            },
            "optional": {
                "fade_start": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioFade",
        "display_name": "Audio Fade",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioFrequencyBoost": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "frequency": [
                    "INT",
                    {
                        "min": 20,
                        "max": 20000,
                        "default": 1000
                    }
                ],
                "bandwidth": [
                    "FLOAT",
                    {
                        "default": 2.0
                    }
                ],
                "gain_dB": [
                    "FLOAT",
                    {
                        "min": -60,
                        "max": 60,
                        "default": 0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioFrequencyBoost",
        "display_name": "Audio Frequency Boost",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioFrequencyCutoff": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "filter_type": [
                    [
                        "lowpass",
                        "highpass"
                    ]
                ],
                "cutoff_frequency": [
                    "INT",
                    {
                        "min": 20,
                        "max": 20000,
                        "default": 1000
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioFrequencyCutoff",
        "display_name": "Audio Frequency Cutoff",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioVisualizer": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "frame_rate": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 244
                    }
                ]
            },
            "optional": {
                "start_frame": [
                    "INT",
                    {
                        "min": 0,
                        "default": 0
                    }
                ],
                "end_frame": [
                    "INT",
                    {
                        "min": 0,
                        "default": -1
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaltAudioVisualizer",
        "display_name": "Audio Visualizer",
        "description": "",
        "category": "SALT/Audio/Util",
        "output_node": true
    },
    "SaltAudioStereoSplitter": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ]
            }
        },
        "output": [
            "AUDIO",
            "AUDIO"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "left_channel_mono",
            "right_channel_mono"
        ],
        "name": "SaltAudioStereoSplitter",
        "display_name": "Audio Stereo Splitter",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioMixer": {
        "input": {
            "required": {
                "audio_a": [
                    "AUDIO",
                    {}
                ],
                "audio_b": [
                    "AUDIO",
                    {}
                ],
                "mix_time_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "mixed_audio"
        ],
        "name": "SaltAudioMixer",
        "display_name": "Audio Mixer",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioStitcher": {
        "input": {
            "required": {
                "audio_a": [
                    "AUDIO",
                    {}
                ],
                "audio_b": [
                    "AUDIO",
                    {}
                ]
            },
            "optional": {
                "silent_transition_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "stitched_audio"
        ],
        "name": "SaltAudioStitcher",
        "display_name": "Audio Stitcher",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioSimpleReverb": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "reverb_level": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.1,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "decay": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.1,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioSimpleReverb",
        "display_name": "Audio Simple Reverb",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioSimpleEcho": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "times": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 10
                    }
                ],
                "delay_ms": [
                    "INT",
                    {
                        "default": 100,
                        "min": 100,
                        "max": 2000
                    }
                ],
                "decay_factor": [
                    "FLOAT",
                    {
                        "default": 0.4,
                        "min": 0.1,
                        "max": 0.9,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioSimpleEcho",
        "display_name": "Audio Simple Echo",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioNormalize": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioNormalize",
        "display_name": "Audio Normalize",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioBandpassFilter": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO"
                ],
                "low_cutoff_frequency": [
                    "INT",
                    {
                        "min": 20,
                        "max": 20000,
                        "default": 300
                    }
                ],
                "high_cutoff_frequency": [
                    "INT",
                    {
                        "min": 20,
                        "max": 20000,
                        "default": 3000
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioBandpassFilter",
        "display_name": "Audio Bandpass Filter",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioCompressor": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "threshold_dB": [
                    "FLOAT",
                    {
                        "default": -20.0,
                        "min": -60.0,
                        "max": 0.0
                    }
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 20.0
                    }
                ],
                "attack_ms": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 1000
                    }
                ],
                "release_ms": [
                    "INT",
                    {
                        "default": 200,
                        "min": 0,
                        "max": 3000
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioCompressor",
        "display_name": "Audio Compressor",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAdvancedAudioCompressor": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "threshold_dB": [
                    "FLOAT",
                    {
                        "default": -20.0,
                        "min": -60.0,
                        "max": 0.0
                    }
                ],
                "ratio": [
                    "FLOAT",
                    {
                        "default": 4.0,
                        "min": 1.0,
                        "max": 20.0
                    }
                ],
                "attack_ms": [
                    "INT",
                    {
                        "default": 5,
                        "min": 1,
                        "max": 100
                    }
                ],
                "release_ms": [
                    "INT",
                    {
                        "default": 50,
                        "min": 10,
                        "max": 1000
                    }
                ],
                "makeup_gain": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 24.0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAdvancedAudioCompressor",
        "display_name": "Audio Compressor Advanced",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioDeesser": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "intensity": [
                    "FLOAT",
                    {
                        "default": 0.125,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "amount": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "frequency_keep": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioDeesser",
        "display_name": "Audio De-esser",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioNoiseReductionSpectralSubtraction": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "noise_floor": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioNoiseReductionSpectralSubtraction",
        "display_name": "Audio Noise Reduction (Spectral Subtraction)",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioPitchShift": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "semitones": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -12.0,
                        "max": 12.0
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioPitchShift",
        "display_name": "Audio Pitch Shift",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioPitchShiftScheduled": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "schedule": [
                    "LIST",
                    {
                        "element_type": "FLOAT"
                    }
                ]
            },
            "optional": {
                "interpolate": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioPitchShiftScheduled",
        "display_name": "Audio Scheduled Pitch Shift",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioTrim": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "start_time_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "default": 0.0,
                        "step": 0.01
                    }
                ],
                "end_time_seconds": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioTrim",
        "display_name": "Audio Trim",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioRepeat": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "repeat_times": [
                    "INT",
                    {
                        "min": 1,
                        "default": 2
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioRepeat",
        "display_name": "Audio Repeat",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioPlaybackRate": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "speed_factor": [
                    "FLOAT",
                    {
                        "min": 0.5,
                        "max": 12.0,
                        "default": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioPlaybackRate",
        "display_name": "Audio Playback Rate",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioInversion": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioInversion",
        "display_name": "Audio Reverse",
        "description": "",
        "category": "SALT/Audio/Process",
        "output_node": false
    },
    "SaltAudioBassBoost": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "cutoff_freq": [
                    "INT",
                    {
                        "default": 150,
                        "min": 20,
                        "max": 300,
                        "step": 1
                    }
                ],
                "boost_dB": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 24.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioBassBoost",
        "display_name": "Audio Bass Boost",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioTrebleBoost": {
        "input": {
            "required": {
                "audio": [
                    "AUDIO",
                    {}
                ],
                "cutoff_freq": [
                    "INT",
                    {
                        "default": 150,
                        "min": 20,
                        "max": 300,
                        "step": 1
                    }
                ],
                "boost_dB": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 0.0,
                        "max": 24.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioTrebleBoost",
        "display_name": "Audio Treble Boost",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioStereoMerge": {
        "input": {
            "required": {
                "audio_a": [
                    "AUDIO",
                    {}
                ],
                "audio_b": [
                    "AUDIO",
                    {}
                ]
            }
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioStereoMerge",
        "display_name": "Audio Stereo Merge",
        "description": "",
        "category": "SALT/Audio/Effect",
        "output_node": false
    },
    "SaltAudioLDM2LoadModel": {
        "input": {
            "required": {
                "model": [
                    [
                        "cvssp/audioldm2",
                        "cvssp/audioldm2-large",
                        "cvssp/audioldm2-music"
                    ]
                ]
            },
            "optional": {
                "device": [
                    [
                        "cuda",
                        "cpu"
                    ]
                ]
            }
        },
        "output": [
            "AUDIOLDM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audioldm2_model"
        ],
        "name": "SaltAudioLDM2LoadModel",
        "display_name": "AudioLDM2 Model Loader",
        "description": "",
        "category": "SALT/Audio/AudioLDM2",
        "output_node": false
    },
    "SaltAudioLDM2Sampler": {
        "input": {
            "required": {
                "audioldm2_model": [
                    "AUDIOLDM_MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 200,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "guidance_scale": [
                    "FLOAT",
                    {
                        "default": 3.5,
                        "max": 12.0,
                        "min": 1.0
                    }
                ],
                "audio_length_seconds": [
                    "FLOAT",
                    {
                        "default": 10.0,
                        "min": 1.0,
                        "max": 20.0,
                        "step": 0.1
                    }
                ],
                "num_waveforms": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1
                    }
                ],
                "positive_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {}
        },
        "output": [
            "AUDIO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "audio"
        ],
        "name": "SaltAudioLDM2Sampler",
        "display_name": "AudioLDM2 Sampler",
        "description": "",
        "category": "SALT/Audio/AudioLDM2",
        "output_node": false
    },
    "SaltScheduledImageAdjust": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            },
            "optional": {
                "masks": [
                    "MASK"
                ],
                "brightness_schedule": [
                    "LIST"
                ],
                "contrast_schedule": [
                    "LIST"
                ],
                "saturation_schedule": [
                    "LIST"
                ],
                "sharpness_schedule": [
                    "LIST"
                ],
                "gaussian_blur_schedule": [
                    "LIST"
                ],
                "edge_enhance_schedule": [
                    "LIST"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SaltScheduledImageAdjust",
        "display_name": "Batch Image Scheduled Adjustments",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltScheduledShapeTransformation": {
        "input": {
            "required": {
                "max_frames": [
                    "INT",
                    {
                        "min": 1
                    }
                ],
                "image_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "image_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "initial_width": [
                    "INT",
                    {
                        "default": 256,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "initial_height": [
                    "INT",
                    {
                        "default": 256,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "initial_x_coord": [
                    "INT",
                    {
                        "default": 256,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "initial_y_coord": [
                    "INT",
                    {
                        "default": 256,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "initial_rotation": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 360,
                        "step": 0.01
                    }
                ],
                "shape_mode": [
                    [
                        "circle",
                        "diamond",
                        "triangle",
                        "square",
                        "hexagon",
                        "octagon"
                    ]
                ]
            },
            "optional": {
                "shape": [
                    "MASK"
                ],
                "width_schedule": [
                    "LIST"
                ],
                "height_schedule": [
                    "LIST"
                ],
                "x_schedule": [
                    "LIST"
                ],
                "y_schedule": [
                    "LIST"
                ],
                "rotation_schedule": [
                    "LIST"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "SaltScheduledShapeTransformation",
        "display_name": "Scheduled Shape Transform",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltScheduledVoronoiNoise": {
        "input": {
            "required": {
                "batch_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 4096
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 8192
                    }
                ]
            },
            "optional": {
                "distance_metric": [
                    [
                        "euclidean",
                        "manhattan",
                        "chebyshev",
                        "minkowski"
                    ]
                ],
                "x_schedule": [
                    "LIST"
                ],
                "y_schedule": [
                    "LIST"
                ],
                "scale_schedule": [
                    "LIST"
                ],
                "detail_schedule": [
                    "LIST"
                ],
                "randomness_schedule": [
                    "LIST"
                ],
                "seed_schedule": [
                    "LIST"
                ],
                "device": [
                    [
                        "cuda",
                        "cpu"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "images",
            "batch_size"
        ],
        "name": "SaltScheduledVoronoiNoise",
        "display_name": "Scheduled Voronoi Noise Generator",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltScheduledPerlinPowerFractalNoise": {
        "input": {
            "required": {
                "batch_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 4096
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 64,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 64,
                        "max": 8192
                    }
                ]
            },
            "optional": {
                "scale_schedule": [
                    "LIST"
                ],
                "octaves_schedule": [
                    "LIST"
                ],
                "persistence_schedule": [
                    "LIST"
                ],
                "lacunarity_schedule": [
                    "LIST"
                ],
                "exponent_schedule": [
                    "LIST"
                ],
                "seed_schedule": [
                    "LIST"
                ],
                "clamp_min_schedule": [
                    "LIST"
                ],
                "clamp_max_schedule": [
                    "LIST"
                ],
                "device": [
                    [
                        "cuda",
                        "cpu"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "images",
            "batch_size"
        ],
        "name": "SaltScheduledPerlinPowerFractalNoise",
        "display_name": "Scheduled Perline Power Fractal Generator",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltScheduledImageDisplacement": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "displacement_images": [
                    "IMAGE"
                ]
            },
            "optional": {
                "amplitude_schedule": [
                    "LIST"
                ],
                "angle_schedule": [
                    "LIST"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "SaltScheduledImageDisplacement",
        "display_name": "Scheduled Image Displacement",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltScheduledBinaryComparison": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "comparison_schedule": [
                    "LIST"
                ],
                "epsilon": [
                    "FLOAT",
                    {
                        "default": 1e-05,
                        "min": 1e-05,
                        "step": 1e-05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "SaltScheduledBinaryComparison",
        "display_name": "Scheduled Binary Comparison",
        "description": "",
        "category": "SALT/Scheduling/Image",
        "output_node": false
    },
    "SaltOPAC": {
        "input": {
            "required": {
                "use_wiggle": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "frame_count": [
                    "INT",
                    {
                        "default": 48,
                        "min": 1,
                        "max": 500
                    }
                ],
                "zoom_range": [
                    "STRING",
                    {
                        "default": "0.95,1.05"
                    }
                ],
                "zoom_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "angle_range": [
                    "STRING",
                    {
                        "default": "-5,5"
                    }
                ],
                "angle_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "trx_range": [
                    "STRING",
                    {
                        "default": "-10,10"
                    }
                ],
                "trx_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "try_range": [
                    "STRING",
                    {
                        "default": "-10,10"
                    }
                ],
                "try_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "trz_range": [
                    "STRING",
                    {
                        "default": "-10,10"
                    }
                ],
                "trz_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "rotx_range": [
                    "STRING",
                    {
                        "default": "-5,5"
                    }
                ],
                "rotx_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "roty_range": [
                    "STRING",
                    {
                        "default": "-5,5"
                    }
                ],
                "roty_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "rotz_range": [
                    "STRING",
                    {
                        "default": "-5,5"
                    }
                ],
                "rotz_tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ]
            },
            "optional": {
                "opac_perlin_settings": [
                    "DICT",
                    {}
                ]
            }
        },
        "output": [
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST",
            "LIST"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "zoom_schdule_list",
            "angle_schdule_list",
            "translation_x_schdule_list",
            "translation_y_schdule_list",
            "translation_z_schdule_list",
            "rotation_3d_x_schdule_list",
            "rotation_3d_y_schdule_list",
            "rotation_3d_z_schdule_list"
        ],
        "name": "SaltOPAC",
        "display_name": "Perlin Tremor Scheduler",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltOPACPerlinSettings": {
        "input": {
            "required": {
                "zoom_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "zoom_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "zoom_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "zoom_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "angle_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "angle_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "angle_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "angle_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "trx_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "trx_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "trx_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "trx_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "try_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "try_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "try_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "try_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "trz_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "trz_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "trz_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "trz_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "rotx_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "rotx_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "rotx_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "rotx_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "roty_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "roty_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "roty_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "roty_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ],
                "rotz_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "rotz_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "rotz_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ],
                "rotz_repeat": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 256,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "DICT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "opac_perlin_settings"
        ],
        "name": "SaltOPACPerlinSettings",
        "display_name": "Perlin Tremor Settings",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltSchedule2Floats": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ]
            }
        },
        "output": [
            "FLOATS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOATS"
        ],
        "name": "SaltSchedule2Floats",
        "display_name": "Convert Schedule to FLOATS (MTB)",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltScheduleVariance": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST",
                    {}
                ]
            },
            "optional": {
                "curves_mode": [
                    [
                        "None",
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out",
                        "bounce-in",
                        "bounce-out",
                        "bounce-in-out",
                        "sinusoidal-in",
                        "sinusoidal-out",
                        "sinusoidal-in-out",
                        "cubic",
                        "square",
                        "sawtooth",
                        "triangle",
                        "bump-dip",
                        "exponential-in",
                        "exponential-out",
                        "exponential-in-out"
                    ]
                ],
                "use_perlin_tremors": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "tremor_scale": [
                    "FLOAT",
                    {
                        "default": 0.05,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0
                    }
                ],
                "lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 4.0
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltScheduleVariance",
        "display_name": "Apply Easing to Schedule",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltSchedule2ExecSchedule": {
        "input": {
            "required": {
                "list_input": [
                    "LIST",
                    {}
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "float"
        ],
        "name": "SaltSchedule2ExecSchedule",
        "display_name": "Convert Schedule to Iterative Execution List",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltLayerScheduler": {
        "input": {
            "required": {
                "frame_count": [
                    "INT",
                    {
                        "default": 60,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "zoom_speed": [
                    "FLOAT",
                    {
                        "default": 0.01,
                        "min": 0.001,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "pan_speed": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.001,
                        "max": 5.0,
                        "step": 0.001
                    }
                ],
                "pan_directions": [
                    "STRING",
                    {
                        "default": "90,180,270"
                    }
                ],
                "direction_change_frames": [
                    "STRING",
                    {
                        "default": "10,20,40"
                    }
                ],
                "tremor_scale": [
                    "FLOAT",
                    {
                        "default": 64,
                        "min": 0.01,
                        "max": 1024.0,
                        "step": 0.01
                    }
                ],
                "tremor_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "tremor_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "tremor_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 3.0,
                        "step": 0.01
                    }
                ],
                "direction_curve": [
                    [
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out",
                        "bounce-in",
                        "bounce-out",
                        "bounce-in-out",
                        "sinusoidal-in",
                        "sinusoidal-out",
                        "sinusoidal-in-out",
                        "cubic",
                        "square",
                        "sawtooth",
                        "triangle",
                        "bump-dip",
                        "exponential-in",
                        "exponential-out",
                        "exponential-in-out"
                    ]
                ],
                "start_x": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -8192,
                        "max": 8192
                    }
                ],
                "start_y": [
                    "FLOAT",
                    {
                        "default": 0
                    }
                ],
                "zoom_mode": [
                    [
                        "zoom-in",
                        "zoom-out",
                        "zoom-in-out"
                    ]
                ],
                "layer_offsets": [
                    "STRING",
                    {
                        "default": "1,0.8,0.6"
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltLayerScheduler",
        "display_name": "Parallax Motion Camera Scheduler",
        "description": "",
        "category": "SALT/Scheduling/Parallax Motion",
        "output_node": false
    },
    "SaltLayerExtractor": {
        "input": {
            "required": {
                "float_layers": [
                    "LIST"
                ],
                "layer_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "LIST",
            "LIST",
            "LIST"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "zoom_schedule_lsit",
            "x_schedule_list",
            "y_schedule_list"
        ],
        "name": "SaltLayerExtractor",
        "display_name": "Parallax Motion Camera Scheduler Extractor",
        "description": "",
        "category": "SALT/Scheduling/Parallax Motion",
        "output_node": false
    },
    "SaltParallaxMotion": {
        "input": {
            "required": {
                "zoom_preset": [
                    [
                        "None",
                        "Zoom In",
                        "Zoom Out",
                        "Zoom In/Out",
                        "Zoom Out/In",
                        "Custom",
                        "Select Random"
                    ],
                    {
                        "default": "None"
                    }
                ],
                "horizontal_pan_preset": [
                    [
                        "None",
                        "Pan Left \u2192 Right",
                        "Pan Right \u2192 Left",
                        "Pan Left \u2192 Center",
                        "Pan Right \u2192 Center",
                        "Pan Center \u2192 Right",
                        "Pan Center \u2192 Left",
                        "Custom",
                        "Select Random"
                    ],
                    {
                        "default": "None"
                    }
                ],
                "vertical_pan_preset": [
                    [
                        "None",
                        "Pan Up \u2192 Down",
                        "Pan Down \u2192 Up",
                        "Pan Up \u2192 Center",
                        "Pan Down \u2192 Center",
                        "Pan Center \u2192 Up",
                        "Pan Center \u2192 Down",
                        "Custom",
                        "Select Random"
                    ],
                    {
                        "default": "None"
                    }
                ],
                "custom_x_min": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "custom_x_max": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "custom_y_min": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "custom_y_max": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "custom_z_min": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "custom_z_max": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "parallax_intensity": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "zoom_intensity": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "front_x_min",
            "front_x_max",
            "front_y_min",
            "front_y_max",
            "front_z_min",
            "front_z_max",
            "back_x_min",
            "back_x_max",
            "back_y_min",
            "back_y_max",
            "back_z_min",
            "back_z_max"
        ],
        "name": "SaltParallaxMotion",
        "display_name": "Parallax Motion Parameter Schedule Generator",
        "description": "",
        "category": "SALT/Scheduling/Parallax Motion",
        "output_node": false
    },
    "SaltFloatScheduler": {
        "input": {
            "required": {
                "repeat_sequence_times": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "curves_mode": [
                    [
                        "None",
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out",
                        "bounce-in",
                        "bounce-out",
                        "bounce-in-out",
                        "sinusoidal-in",
                        "sinusoidal-out",
                        "sinusoidal-in-out",
                        "cubic",
                        "square",
                        "sawtooth",
                        "triangle",
                        "bump-dip",
                        "exponential-in",
                        "exponential-out",
                        "exponential-in-out"
                    ]
                ],
                "use_perlin_tremors": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "tremor_scale": [
                    "FLOAT",
                    {
                        "default": 64,
                        "min": 0.01,
                        "max": 1024.0,
                        "step": 0.01
                    }
                ],
                "tremor_octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10
                    }
                ],
                "tremor_persistence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "tremor_lacunarity": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 3.0,
                        "step": 0.01
                    }
                ],
                "sequence": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "[1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]"
                    }
                ]
            },
            "optional": {
                "max_sequence_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LIST",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "schedule_list",
            "schedule_length"
        ],
        "name": "SaltFloatScheduler",
        "display_name": "Float Schedule",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltKSamplerSequence": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed_sequence": [
                    "LIST"
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.5,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise_start": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "denoise_sequence": [
                    "LIST"
                ],
                "positive_sequence": [
                    "CONDITIONING"
                ],
                "negative_sequence": [
                    "CONDITIONING"
                ],
                "use_latent_interpolation": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "latent_interpolation_mode": [
                    [
                        "Blend",
                        "Slerp",
                        "Cosine Interp"
                    ]
                ],
                "latent_interp_strength_sequence": [
                    "LIST"
                ],
                "unsample_latents": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "inject_noise": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "noise_strength_sequence": [
                    "LIST"
                ],
                "latent_image": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "SaltKSamplerSequence",
        "display_name": "KSampler Scheduled Sequence",
        "description": "",
        "category": "SALT/Scheduling/Sampling",
        "output_node": false
    },
    "SaltCLIPTextEncodeSequence": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++"
                    ]
                ],
                "frame_count": [
                    "INT",
                    {
                        "default": 100,
                        "min": 1,
                        "max": 1024,
                        "step": 1
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "\"0\": \"A portrait of a rosebud\",\n\"25\": \"A portrait of a blooming rosebud\",\n\"50\": \"A portrait of a blooming rose\",\n\"75\": \"A portrait of a rose\""
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "conditioning_sequence",
            "frame_count"
        ],
        "name": "SaltCLIPTextEncodeSequence",
        "display_name": "CLIPTextEncode Scheduled Sequence",
        "description": "",
        "category": "SALT/Scheduling/Conditioning",
        "output_node": false
    },
    "SaltThresholdSchedule": {
        "input": {
            "required": {
                "float_schedule": [
                    "LIST"
                ],
                "max_frames": [
                    "INT",
                    {
                        "min": 1,
                        "max": 4096,
                        "default": 16
                    }
                ],
                "output_mode": [
                    [
                        "prompt_schedule",
                        "float_list",
                        "int_list",
                        "raw"
                    ]
                ],
                "schedule_values": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "\"0.0\": \"A beautiful forest, (green:1.2) color scheme\",\n\"0.5\": \"A beautiful forest, (autumn:1.2) color scheme\",\n\"1.0\": \"A beautiful forest, (winter:1.2) color scheme\""
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "value_schedule_list"
        ],
        "name": "SaltThresholdSchedule",
        "display_name": "Schedule Value Threshold",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltListOperation": {
        "input": {
            "required": {
                "operation": [
                    [
                        "add",
                        "subtract",
                        "multiply",
                        "divide",
                        "average",
                        "max",
                        "min",
                        "normalize_a",
                        "logarithmic",
                        "exponential",
                        "sin",
                        "cos",
                        "tan",
                        "arcsin",
                        "arccos",
                        "arctan",
                        "percentage_of",
                        "modulo",
                        "custom_expression"
                    ]
                ],
                "output_type": [
                    [
                        "default",
                        "int",
                        "float",
                        "boolean"
                    ]
                ]
            },
            "optional": {
                "schedule_list_a": [
                    "*"
                ],
                "schedule_list_b": [
                    "*"
                ],
                "expression": [
                    "STRING",
                    {
                        "default": "",
                        "placeholder": "Custom expression...",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltListOperation",
        "display_name": "Schedule Numeric Operation",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltListClamp": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ],
                "min_value": [
                    "FLOAT",
                    {
                        "step": 0.01
                    }
                ],
                "max_value": [
                    "FLOAT",
                    {
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltListClamp",
        "display_name": "Schedule Numeric Clamp",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltListLinearInterpolation": {
        "input": {
            "required": {
                "schedule_list_a": [
                    "LIST"
                ],
                "schedule_list_b": [
                    "LIST"
                ],
                "interpolation_factor": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1.0
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltListLinearInterpolation",
        "display_name": "Schedule Linear Interpolation",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltScheduleListExponentialFade": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ],
                "fade_type": [
                    [
                        "in",
                        "out",
                        "in-and-out"
                    ]
                ],
                "strength": [
                    "FLOAT",
                    {
                        "min": 0.01,
                        "max": 10.0,
                        "default": 1.0
                    }
                ]
            },
            "optional": {
                "start_index": [
                    "INT",
                    {
                        "min": 0,
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltScheduleListExponentialFade",
        "display_name": "Schedule Exponential Fade",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltScheduleRandomValues": {
        "input": {
            "required": {
                "count": [
                    "INT",
                    {
                        "min": 1
                    }
                ],
                "min_value": [
                    "FLOAT",
                    {}
                ],
                "max_value": [
                    "FLOAT",
                    {}
                ]
            },
            "optional": {
                "force_integer": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltScheduleRandomValues",
        "display_name": "Schedule Random Values",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltScheduleSmoothing": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ],
                "smoothing_factor": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1.0,
                        "default": 0.5
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltScheduleSmoothing",
        "display_name": "Schedule Smoothing",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltCyclicalSchedule": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ],
                "start_index": [
                    "INT",
                    {
                        "min": 0
                    }
                ],
                "end_index": [
                    "INT",
                    {
                        "min": 0
                    }
                ],
                "repetitions": [
                    "INT",
                    {
                        "min": 1
                    }
                ]
            },
            "optional": {
                "ping_pong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltCyclicalSchedule",
        "display_name": "Schedule Cyclical Loop",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltScheduleSplit": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ],
                "split_index": [
                    "INT",
                    {
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "LIST",
            "LIST"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "schedule_list_a",
            "schedule_list_b"
        ],
        "name": "SaltScheduleSplit",
        "display_name": "Schedule Split",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "SaltScheduleMerge": {
        "input": {
            "required": {
                "schedule_list_a": [
                    "LIST"
                ],
                "schedule_list_b": [
                    "LIST"
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltScheduleMerge",
        "display_name": "Schedule Merge",
        "description": "",
        "category": "SALT/Scheduling/Filter",
        "output_node": false
    },
    "SaltKeyframeVisualizer": {
        "input": {
            "required": {
                "schedule_list": [
                    "LIST"
                ]
            },
            "optional": {
                "start_frame": [
                    "INT",
                    {
                        "min": 0,
                        "default": 0
                    }
                ],
                "end_frame": [
                    "INT",
                    {
                        "min": 0,
                        "default": -1
                    }
                ],
                "simulate_stereo": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaltKeyframeVisualizer",
        "display_name": "Schedule Visualizer",
        "description": "",
        "category": "SALT/Scheduling/Util",
        "output_node": true
    },
    "SaltKeyframeScheduler": {
        "input": {
            "required": {
                "keyframe_schedule": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "easing_mode": [
                    [
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out",
                        "bounce-in",
                        "bounce-out",
                        "bounce-in-out",
                        "sinusoidal-in",
                        "sinusoidal-out",
                        "sinusoidal-in-out",
                        "cubic",
                        "square",
                        "sawtooth",
                        "triangle",
                        "bump-dip",
                        "exponential-in",
                        "exponential-out",
                        "exponential-in-out"
                    ]
                ]
            },
            "optional": {
                "end_frame": [
                    "INT",
                    {
                        "min": 0
                    }
                ],
                "ndigits": [
                    "INT",
                    {
                        "min": 1,
                        "max": 12,
                        "default": 2
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "schedule_list"
        ],
        "name": "SaltKeyframeScheduler",
        "display_name": "Keyframe Scheduler",
        "description": "",
        "category": "SALT/Scheduling",
        "output_node": false
    },
    "ImageDirIterator": {
        "input": {
            "required": {
                "directory_path": [
                    "STRING",
                    {}
                ],
                "image_index": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageDirIterator",
        "display_name": "Image Dir Iterator",
        "description": "",
        "category": "cspnodes",
        "output_node": false
    },
    "Modelscopet2v": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {}
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "default": null
                    }
                ],
                "model_path": [
                    "STRING",
                    {
                        "default": "cerspense/zeroscope_v2_576w"
                    }
                ],
                "num_inference_steps": [
                    "INT",
                    {
                        "default": 25
                    }
                ],
                "guidance_scale": [
                    "FLOAT",
                    {
                        "default": 9.0
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 42
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 576
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 320
                    }
                ],
                "num_frames": [
                    "INT",
                    {
                        "default": 24
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Modelscopet2v",
        "display_name": "Modelscope t2v",
        "description": "",
        "category": "cspnodes/modelscope",
        "output_node": false
    },
    "Modelscopev2v": {
        "input": {
            "required": {
                "video_frames": [
                    "IMAGE",
                    {}
                ],
                "prompt": [
                    "STRING",
                    {}
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "default": null
                    }
                ],
                "model_path": [
                    "STRING",
                    {
                        "default": "cerspense/zeroscope_v2_XL"
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 0.7
                    }
                ],
                "num_inference_steps": [
                    "INT",
                    {
                        "default": 25
                    }
                ],
                "guidance_scale": [
                    "FLOAT",
                    {
                        "default": 8.5
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 42
                    }
                ],
                "enable_forward_chunking": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "enable_vae_slicing": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Modelscopev2v",
        "display_name": "Modelscope v2v",
        "description": "",
        "category": "cspnodes/modelscope",
        "output_node": false
    },
    "SeamlessTile": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "tiling": [
                    [
                        "enable",
                        "x_only",
                        "y_only",
                        "disable"
                    ]
                ],
                "copy_model": [
                    [
                        "Make a copy",
                        "Modify in place"
                    ]
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "SeamlessTile",
        "display_name": "Seamless Tile",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "CircularVAEDecode": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "tiling": [
                    [
                        "enable",
                        "x_only",
                        "y_only",
                        "disable"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CircularVAEDecode",
        "display_name": "Circular VAE Decode (tile)",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "MakeCircularVAE": {
        "input": {
            "required": {
                "vae": [
                    "VAE"
                ],
                "tiling": [
                    [
                        "enable",
                        "x_only",
                        "y_only",
                        "disable"
                    ]
                ],
                "copy_vae": [
                    [
                        "Make a copy",
                        "Modify in place"
                    ]
                ]
            }
        },
        "output": [
            "VAE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VAE"
        ],
        "name": "MakeCircularVAE",
        "display_name": "Make Circular VAE",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "OffsetImage": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "x_percent": [
                    "FLOAT",
                    {
                        "default": 50.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 1
                    }
                ],
                "y_percent": [
                    "FLOAT",
                    {
                        "default": 50.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "OffsetImage",
        "display_name": "Offset Image",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "SAMModelLoader (segment anything)": {
        "input": {
            "required": {
                "model_name": [
                    [
                        "sam_vit_h (2.56GB)",
                        "sam_vit_l (1.25GB)",
                        "sam_vit_b (375MB)",
                        "sam_hq_vit_h (2.57GB)",
                        "sam_hq_vit_l (1.25GB)",
                        "sam_hq_vit_b (379MB)",
                        "mobile_sam(39MB)"
                    ]
                ]
            }
        },
        "output": [
            "SAM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAM_MODEL"
        ],
        "name": "SAMModelLoader (segment anything)",
        "display_name": "SAMModelLoader (segment anything)",
        "description": "",
        "category": "segment_anything",
        "output_node": false
    },
    "GroundingDinoModelLoader (segment anything)": {
        "input": {
            "required": {
                "model_name": [
                    [
                        "GroundingDINO_SwinT_OGC (694MB)",
                        "GroundingDINO_SwinB (938MB)"
                    ]
                ]
            }
        },
        "output": [
            "GROUNDING_DINO_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "GROUNDING_DINO_MODEL"
        ],
        "name": "GroundingDinoModelLoader (segment anything)",
        "display_name": "GroundingDinoModelLoader (segment anything)",
        "description": "",
        "category": "segment_anything",
        "output_node": false
    },
    "GroundingDinoSAMSegment (segment anything)": {
        "input": {
            "required": {
                "sam_model": [
                    "SAM_MODEL",
                    {}
                ],
                "grounding_dino_model": [
                    "GROUNDING_DINO_MODEL",
                    {}
                ],
                "image": [
                    "IMAGE",
                    {}
                ],
                "prompt": [
                    "STRING",
                    {}
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "GroundingDinoSAMSegment (segment anything)",
        "display_name": "GroundingDinoSAMSegment (segment anything)",
        "description": "",
        "category": "segment_anything",
        "output_node": false
    },
    "InvertMask (segment anything)": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "InvertMask (segment anything)",
        "display_name": "InvertMask (segment anything)",
        "description": "",
        "category": "segment_anything",
        "output_node": false
    },
    "IsMaskEmpty": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "boolean_number"
        ],
        "name": "IsMaskEmpty",
        "display_name": "IsMaskEmpty",
        "description": "",
        "category": "segment_anything",
        "output_node": false
    },
    "Context Big (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "base_ctx": [
                    "RGTHREE_CONTEXT"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent": [
                    "LATENT"
                ],
                "images": [
                    "IMAGE"
                ],
                "seed": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "step_refiner": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ],
                "ckpt_name": [
                    [],
                    {
                        "forceInput": true
                    }
                ],
                "sampler": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ],
                    {
                        "forceInput": true
                    }
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ],
                    {
                        "forceInput": true
                    }
                ],
                "clip_width": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "clip_height": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "text_pos_g": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_pos_l": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_neg_g": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "text_neg_l": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "mask": [
                    "MASK"
                ],
                "control_net": [
                    "CONTROL_NET"
                ]
            },
            "hidden": {}
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT",
            "INT",
            "INT",
            "FLOAT",
            [],
            [
                "euler",
                "euler_ancestral",
                "heun",
                "heunpp2",
                "dpm_2",
                "dpm_2_ancestral",
                "lms",
                "dpm_fast",
                "dpm_adaptive",
                "dpmpp_2s_ancestral",
                "dpmpp_sde",
                "dpmpp_sde_gpu",
                "dpmpp_2m",
                "dpmpp_2m_sde",
                "dpmpp_2m_sde_gpu",
                "dpmpp_3m_sde",
                "dpmpp_3m_sde_gpu",
                "ddpm",
                "lcm",
                "ddim",
                "uni_pc",
                "uni_pc_bh2"
            ],
            [
                "normal",
                "karras",
                "exponential",
                "sgm_uniform",
                "simple",
                "ddim_uniform"
            ],
            "INT",
            "INT",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "MASK",
            "CONTROL_NET"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED",
            "STEPS",
            "STEP_REFINER",
            "CFG",
            "CKPT_NAME",
            "SAMPLER",
            "SCHEDULER",
            "CLIP_WIDTH",
            "CLIP_HEIGHT",
            "TEXT_POS_G",
            "TEXT_POS_L",
            "TEXT_NEG_G",
            "TEXT_NEG_L",
            "MASK",
            "CONTROL_NET"
        ],
        "name": "Context Big (rgthree)",
        "display_name": "Context Big (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Context (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "base_ctx": [
                    "RGTHREE_CONTEXT"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent": [
                    "LATENT"
                ],
                "images": [
                    "IMAGE"
                ],
                "seed": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ]
            },
            "hidden": {
                "version": "FLOAT"
            }
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED"
        ],
        "name": "Context (rgthree)",
        "display_name": "Context (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Context Switch (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "ctx_01": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_02": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_03": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_04": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_05": [
                    "RGTHREE_CONTEXT"
                ]
            }
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED"
        ],
        "name": "Context Switch (rgthree)",
        "display_name": "Context Switch (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Context Switch Big (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "ctx_01": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_02": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_03": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_04": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_05": [
                    "RGTHREE_CONTEXT"
                ]
            }
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT",
            "INT",
            "INT",
            "FLOAT",
            [],
            [
                "euler",
                "euler_ancestral",
                "heun",
                "heunpp2",
                "dpm_2",
                "dpm_2_ancestral",
                "lms",
                "dpm_fast",
                "dpm_adaptive",
                "dpmpp_2s_ancestral",
                "dpmpp_sde",
                "dpmpp_sde_gpu",
                "dpmpp_2m",
                "dpmpp_2m_sde",
                "dpmpp_2m_sde_gpu",
                "dpmpp_3m_sde",
                "dpmpp_3m_sde_gpu",
                "ddpm",
                "lcm",
                "ddim",
                "uni_pc",
                "uni_pc_bh2"
            ],
            [
                "normal",
                "karras",
                "exponential",
                "sgm_uniform",
                "simple",
                "ddim_uniform"
            ],
            "INT",
            "INT",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "MASK",
            "CONTROL_NET"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED",
            "STEPS",
            "STEP_REFINER",
            "CFG",
            "CKPT_NAME",
            "SAMPLER",
            "SCHEDULER",
            "CLIP_WIDTH",
            "CLIP_HEIGHT",
            "TEXT_POS_G",
            "TEXT_POS_L",
            "TEXT_NEG_G",
            "TEXT_NEG_L",
            "MASK",
            "CONTROL_NET"
        ],
        "name": "Context Switch Big (rgthree)",
        "display_name": "Context Switch Big (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Context Merge (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "ctx_01": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_02": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_03": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_04": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_05": [
                    "RGTHREE_CONTEXT"
                ]
            }
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED"
        ],
        "name": "Context Merge (rgthree)",
        "display_name": "Context Merge (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Context Merge Big (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "ctx_01": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_02": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_03": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_04": [
                    "RGTHREE_CONTEXT"
                ],
                "ctx_05": [
                    "RGTHREE_CONTEXT"
                ]
            }
        },
        "output": [
            "RGTHREE_CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "IMAGE",
            "INT",
            "INT",
            "INT",
            "FLOAT",
            [],
            [
                "euler",
                "euler_ancestral",
                "heun",
                "heunpp2",
                "dpm_2",
                "dpm_2_ancestral",
                "lms",
                "dpm_fast",
                "dpm_adaptive",
                "dpmpp_2s_ancestral",
                "dpmpp_sde",
                "dpmpp_sde_gpu",
                "dpmpp_2m",
                "dpmpp_2m_sde",
                "dpmpp_2m_sde_gpu",
                "dpmpp_3m_sde",
                "dpmpp_3m_sde_gpu",
                "ddpm",
                "lcm",
                "ddim",
                "uni_pc",
                "uni_pc_bh2"
            ],
            [
                "normal",
                "karras",
                "exponential",
                "sgm_uniform",
                "simple",
                "ddim_uniform"
            ],
            "INT",
            "INT",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "MASK",
            "CONTROL_NET"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONTEXT",
            "MODEL",
            "CLIP",
            "VAE",
            "POSITIVE",
            "NEGATIVE",
            "LATENT",
            "IMAGE",
            "SEED",
            "STEPS",
            "STEP_REFINER",
            "CFG",
            "CKPT_NAME",
            "SAMPLER",
            "SCHEDULER",
            "CLIP_WIDTH",
            "CLIP_HEIGHT",
            "TEXT_POS_G",
            "TEXT_POS_L",
            "TEXT_NEG_G",
            "TEXT_NEG_L",
            "MASK",
            "CONTROL_NET"
        ],
        "name": "Context Merge Big (rgthree)",
        "display_name": "Context Merge Big (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Display Int (rgthree)": {
        "input": {
            "required": {
                "input": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Display Int (rgthree)",
        "display_name": "Display Int (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": true
    },
    "Display Any (rgthree)": {
        "input": {
            "required": {
                "source": [
                    "*",
                    {}
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Display Any (rgthree)",
        "display_name": "Display Any (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": true
    },
    "Lora Loader Stack (rgthree)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_01": [
                    [
                        "None"
                    ]
                ],
                "strength_01": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_02": [
                    [
                        "None"
                    ]
                ],
                "strength_02": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_03": [
                    [
                        "None"
                    ]
                ],
                "strength_03": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "lora_04": [
                    [
                        "None"
                    ]
                ],
                "strength_04": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP"
        ],
        "name": "Lora Loader Stack (rgthree)",
        "display_name": "Lora Loader Stack (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Seed (rgthree)": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1125899906842624,
                        "max": 1125899906842624
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEED"
        ],
        "name": "Seed (rgthree)",
        "display_name": "Seed (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Image Inset Crop (rgthree)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "measurement": [
                    [
                        "Pixels",
                        "Percentage"
                    ]
                ],
                "left": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "right": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "top": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "bottom": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Inset Crop (rgthree)",
        "display_name": "Image Inset Crop (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Power Prompt (rgthree)": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "opt_model": [
                    "MODEL"
                ],
                "opt_clip": [
                    "CLIP"
                ],
                "insert_lora": [
                    [
                        "CHOOSE",
                        "DISABLE LORAS"
                    ]
                ],
                "insert_embedding": [
                    [
                        "CHOOSE"
                    ]
                ],
                "insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            },
            "hidden": {
                "values_insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "MODEL",
            "CLIP",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "MODEL",
            "CLIP",
            "TEXT"
        ],
        "name": "Power Prompt (rgthree)",
        "display_name": "Power Prompt (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Power Prompt - Simple (rgthree)": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "opt_clip": [
                    "CLIP"
                ],
                "insert_embedding": [
                    [
                        "CHOOSE"
                    ]
                ],
                "insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            },
            "hidden": {
                "values_insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "TEXT"
        ],
        "name": "Power Prompt - Simple (rgthree)",
        "display_name": "Power Prompt - Simple (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "KSampler Config (rgthree)": {
        "input": {
            "required": {
                "steps_total": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "refiner_step": [
                    "INT",
                    {
                        "default": 24,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.5
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "FLOAT",
            [
                "euler",
                "euler_ancestral",
                "heun",
                "heunpp2",
                "dpm_2",
                "dpm_2_ancestral",
                "lms",
                "dpm_fast",
                "dpm_adaptive",
                "dpmpp_2s_ancestral",
                "dpmpp_sde",
                "dpmpp_sde_gpu",
                "dpmpp_2m",
                "dpmpp_2m_sde",
                "dpmpp_2m_sde_gpu",
                "dpmpp_3m_sde",
                "dpmpp_3m_sde_gpu",
                "ddpm",
                "lcm",
                "ddim",
                "uni_pc",
                "uni_pc_bh2"
            ],
            [
                "normal",
                "karras",
                "exponential",
                "sgm_uniform",
                "simple",
                "ddim_uniform"
            ]
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "STEPS",
            "REFINER_STEP",
            "CFG",
            "SAMPLER",
            "SCHEDULER"
        ],
        "name": "KSampler Config (rgthree)",
        "display_name": "KSampler Config (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "SDXL Empty Latent Image (rgthree)": {
        "input": {
            "required": {
                "dimensions": [
                    [
                        "1536 x 640   (landscape)",
                        "1344 x 768   (landscape)",
                        "1216 x 832   (landscape)",
                        "1152 x 896   (landscape)",
                        "1024 x 1024  (square)",
                        " 896 x 1152  (portrait)",
                        " 832 x 1216  (portrait)",
                        " 768 x 1344  (portrait)",
                        " 640 x 1536  (portrait)"
                    ],
                    {
                        "default": "1024 x 1024  (square)"
                    }
                ],
                "clip_scale": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 1.0,
                        "max": 10.0,
                        "step": 0.5
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "CLIP_WIDTH",
            "CLIP_HEIGHT"
        ],
        "name": "SDXL Empty Latent Image (rgthree)",
        "display_name": "SDXL Empty Latent Image (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "SDXL Power Prompt - Positive (rgthree)": {
        "input": {
            "required": {
                "prompt_g": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "prompt_l": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "opt_model": [
                    "MODEL"
                ],
                "opt_clip": [
                    "CLIP"
                ],
                "opt_clip_width": [
                    "INT",
                    {
                        "forceInput": true,
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "opt_clip_height": [
                    "INT",
                    {
                        "forceInput": true,
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "insert_lora": [
                    [
                        "CHOOSE",
                        "DISABLE LORAS"
                    ]
                ],
                "insert_embedding": [
                    [
                        "CHOOSE"
                    ]
                ],
                "insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ],
                "target_width": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "crop_width": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "crop_height": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ]
            },
            "hidden": {
                "values_insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "MODEL",
            "CLIP",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "MODEL",
            "CLIP",
            "TEXT_G",
            "TEXT_L"
        ],
        "name": "SDXL Power Prompt - Positive (rgthree)",
        "display_name": "SDXL Power Prompt - Positive (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "SDXL Power Prompt - Simple / Negative (rgthree)": {
        "input": {
            "required": {
                "prompt_g": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "prompt_l": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "opt_clip": [
                    "CLIP"
                ],
                "opt_clip_width": [
                    "INT",
                    {
                        "forceInput": true,
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "opt_clip_height": [
                    "INT",
                    {
                        "forceInput": true,
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "insert_embedding": [
                    [
                        "CHOOSE"
                    ]
                ],
                "insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ],
                "target_width": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "crop_width": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ],
                "crop_height": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "max": 8192
                    }
                ]
            },
            "hidden": {
                "values_insert_saved": [
                    [
                        "CHOOSE"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "CONDITIONING",
            "TEXT_G",
            "TEXT_L"
        ],
        "name": "SDXL Power Prompt - Simple / Negative (rgthree)",
        "display_name": "SDXL Power Prompt - Simple / Negative (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Any Switch (rgthree)": {
        "input": {
            "required": {},
            "optional": {
                "any_01": [
                    "*"
                ],
                "any_02": [
                    "*"
                ],
                "any_03": [
                    "*"
                ],
                "any_04": [
                    "*"
                ],
                "any_05": [
                    "*"
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "Any Switch (rgthree)",
        "display_name": "Any Switch (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": false
    },
    "Image Comparer (rgthree)": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ]
            },
            "optional": {
                "image_b": [
                    "IMAGE"
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Image Comparer (rgthree)",
        "display_name": "Image Comparer (rgthree)",
        "description": "",
        "category": "rgthree",
        "output_node": true
    },
    "BNK_CLIPTextEncodeAdvanced": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++",
                        "down_weight"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "BNK_CLIPTextEncodeAdvanced",
        "display_name": "CLIP Text Encode (Advanced)",
        "description": "",
        "category": "conditioning/advanced",
        "output_node": false
    },
    "BNK_CLIPTextEncodeSDXLAdvanced": {
        "input": {
            "required": {
                "text_l": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "text_g": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++",
                        "down_weight"
                    ]
                ],
                "balance": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "BNK_CLIPTextEncodeSDXLAdvanced",
        "display_name": "CLIP Text Encode SDXL (Advanced)",
        "description": "",
        "category": "conditioning/advanced",
        "output_node": false
    },
    "BNK_AddCLIPSDXLParams": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "target_height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "BNK_AddCLIPSDXLParams",
        "display_name": "Add CLIP SDXL Params",
        "description": "",
        "category": "conditioning/advanced",
        "output_node": false
    },
    "BNK_AddCLIPSDXLRParams": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "ascore": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "BNK_AddCLIPSDXLRParams",
        "display_name": "Add CLIP SDXL Refiner Params",
        "description": "",
        "category": "conditioning/advanced",
        "output_node": false
    },
    "Mask By Text": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "precision": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "normalize": [
                    [
                        "no",
                        "yes"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "IMAGE"
        ],
        "name": "Mask By Text",
        "display_name": "Mask By Text",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Mask Morphology": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "distance": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 128,
                        "step": 1
                    }
                ],
                "op": [
                    [
                        "dilate",
                        "erode",
                        "open",
                        "close"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Mask Morphology",
        "display_name": "Mask Morphology",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Combine Masks": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "op": [
                    [
                        "union (max)",
                        "intersection (min)",
                        "difference",
                        "multiply",
                        "multiply_alpha",
                        "add",
                        "greater_or_equal",
                        "greater"
                    ]
                ],
                "clamp_result": [
                    [
                        "yes",
                        "no"
                    ]
                ],
                "round_result": [
                    [
                        "no",
                        "yes"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Combine Masks",
        "display_name": "Combine Masks",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Unary Mask Op": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "op": [
                    [
                        "invert",
                        "average",
                        "round",
                        "clamp",
                        "abs"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Unary Mask Op",
        "display_name": "Unary Mask Op",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Unary Image Op": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "op": [
                    [
                        "invert",
                        "average",
                        "round",
                        "clamp",
                        "abs"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Unary Image Op",
        "display_name": "Unary Image Op",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Blur": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "radius": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 48,
                        "step": 1
                    }
                ],
                "sigma_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 3.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Blur",
        "display_name": "Blur",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Image To Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "method": [
                    [
                        "intensity",
                        "alpha"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "Image To Mask",
        "display_name": "Image To Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Mix Images By Mask": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Mix Images By Mask",
        "display_name": "Mix Images By Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Mix Color By Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "r": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "g": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Mix Color By Mask",
        "display_name": "Mix Color By Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Mask To Region": {
        "input": {
            "required": {
                "mask": [
                    "IMAGE"
                ],
                "padding": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "constraints": [
                    [
                        "keep_ratio",
                        "keep_ratio_divisible",
                        "multiple_of",
                        "ignore"
                    ]
                ],
                "constraint_x": [
                    "INT",
                    {
                        "default": 64,
                        "min": 2,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "constraint_y": [
                    "INT",
                    {
                        "default": 64,
                        "min": 2,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "min_width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "min_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "batch_behavior": [
                    [
                        "match_ratio",
                        "match_size"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Mask To Region",
        "display_name": "Mask To Region",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Cut By Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ],
                "force_resize_width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "force_resize_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "mask_mapping_optional": [
                    "MASK_MAPPING"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Cut By Mask",
        "display_name": "Cut By Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Paste By Mask": {
        "input": {
            "required": {
                "image_base": [
                    "IMAGE"
                ],
                "image_to_paste": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ],
                "resize_behavior": [
                    [
                        "resize",
                        "keep_ratio_fill",
                        "keep_ratio_fit",
                        "source_size",
                        "source_size_unmasked"
                    ]
                ]
            },
            "optional": {
                "mask_mapping_optional": [
                    "MASK_MAPPING"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Paste By Mask",
        "display_name": "Paste By Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Get Image Size": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "INT"
        ],
        "name": "Get Image Size",
        "display_name": "Get Image Size",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Change Channel Count": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "kind": [
                    [
                        "mask",
                        "RGB",
                        "RGBA"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Change Channel Count",
        "display_name": "Change Channel Count",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Constant Mask": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -8.0,
                        "max": 8.0,
                        "step": 0.01
                    }
                ],
                "explicit_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "explicit_width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "copy_image_size": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Constant Mask",
        "display_name": "Constant Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Prune By Mask": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Prune By Mask",
        "display_name": "Prune By Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Separate Mask Components": {
        "input": {
            "required": {
                "mask": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK_MAPPING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK_MAPPING"
        ],
        "name": "Separate Mask Components",
        "display_name": "Separate Mask Components",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Create Rect Mask": {
        "input": {
            "required": {
                "mode": [
                    [
                        "percent",
                        "pixels"
                    ]
                ],
                "origin": [
                    [
                        "topleft",
                        "bottomleft",
                        "topright",
                        "bottomright"
                    ]
                ],
                "x": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "width": [
                    "FLOAT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "height": [
                    "FLOAT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 1048576,
                        "step": 1
                    }
                ],
                "image_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 1048576,
                        "step": 64
                    }
                ],
                "image_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 1048576,
                        "step": 64
                    }
                ]
            },
            "optional": {
                "copy_image_size": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Create Rect Mask",
        "display_name": "Create Rect Mask",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Make Image Batch": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ]
            },
            "optional": {
                "image2": [
                    "IMAGE"
                ],
                "image3": [
                    "IMAGE"
                ],
                "image4": [
                    "IMAGE"
                ],
                "image5": [
                    "IMAGE"
                ],
                "image6": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Make Image Batch",
        "display_name": "Make Image Batch",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Create QR Code": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "qr_version": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 40,
                        "step": 1
                    }
                ],
                "error_correction": [
                    [
                        "L",
                        "M",
                        "Q",
                        "H"
                    ],
                    {
                        "default": "H"
                    }
                ],
                "box_size": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 100,
                        "step": 1
                    }
                ],
                "border": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Create QR Code",
        "display_name": "Create QR Code",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "Convert Color Space": {
        "input": {
            "required": {
                "in_space": [
                    [
                        "RGB",
                        "HSV",
                        "HSL"
                    ]
                ],
                "out_space": [
                    [
                        "RGB",
                        "HSV",
                        "HSL"
                    ]
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Convert Color Space",
        "display_name": "Convert Color Space",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "MasqueradeIncrementer": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1,
                        "max": 18446744073709551615,
                        "step": 1
                    }
                ],
                "max_value": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 18446744073709551615,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "MasqueradeIncrementer",
        "display_name": "Incrementer",
        "description": "",
        "category": "Masquerade Nodes",
        "output_node": false
    },
    "GetImageSize+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "width",
            "height"
        ],
        "name": "GetImageSize+",
        "display_name": "\ud83d\udd27 Get Image Size",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageResize+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "interpolation": [
                    [
                        "nearest",
                        "bilinear",
                        "bicubic",
                        "area",
                        "nearest-exact",
                        "lanczos"
                    ]
                ],
                "keep_proportion": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "condition": [
                    [
                        "always",
                        "only if bigger",
                        "only if smaller"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "width",
            "height"
        ],
        "name": "ImageResize+",
        "display_name": "\ud83d\udd27 Image Resize",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageCrop+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "position": [
                    [
                        "top-left",
                        "top-center",
                        "top-right",
                        "right-center",
                        "bottom-right",
                        "bottom-center",
                        "bottom-left",
                        "left-center",
                        "center"
                    ]
                ],
                "x_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -99999,
                        "step": 1
                    }
                ],
                "y_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -99999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "x",
            "y"
        ],
        "name": "ImageCrop+",
        "display_name": "\ud83d\udd27 Image Crop",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageFlip+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "axis": [
                    [
                        "x",
                        "y",
                        "xy"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageFlip+",
        "display_name": "\ud83d\udd27 Image Flip",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageDesaturate+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageDesaturate+",
        "display_name": "\ud83d\udd27 Image Desaturate",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImagePosterize+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImagePosterize+",
        "display_name": "\ud83d\udd27 Image Posterize",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageCASharpening+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "amount": [
                    "FLOAT",
                    {
                        "default": 0.8,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageCASharpening+",
        "display_name": "\ud83d\udd27 Image Contrast Adaptive Sharpening",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageSeamCarving+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "energy": [
                    [
                        "backward",
                        "forward"
                    ]
                ],
                "order": [
                    [
                        "width-first",
                        "height-first"
                    ]
                ]
            },
            "optional": {
                "keep_mask": [
                    "MASK"
                ],
                "drop_mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageSeamCarving+",
        "display_name": "\ud83d\udd27 Image Seam Carving",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageEnhanceDifference+": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "exponent": [
                    "FLOAT",
                    {
                        "default": 0.75,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageEnhanceDifference+",
        "display_name": "\ud83d\udd27 Image Enhance Difference",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageExpandBatch+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "size": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "step": 1
                    }
                ],
                "method": [
                    [
                        "expand",
                        "repeat all",
                        "repeat first",
                        "repeat last"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageExpandBatch+",
        "display_name": "\ud83d\udd27 Image Expand Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageFromBatch+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "length": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageFromBatch+",
        "display_name": "\ud83d\udd27 Image From Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageCompositeFromMaskBatch+": {
        "input": {
            "required": {
                "image_from": [
                    "IMAGE"
                ],
                "image_to": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageCompositeFromMaskBatch+",
        "display_name": "\ud83d\udd27 Image Composite From Mask Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ExtractKeyframes+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.85,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "KEYFRAMES",
            "indexes"
        ],
        "name": "ExtractKeyframes+",
        "display_name": "\ud83d\udd27 Extract Keyframes (experimental)",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageApplyLUT+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "lut_file": [
                    []
                ],
                "log_colorspace": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "clip_values": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageApplyLUT+",
        "display_name": "\ud83d\udd27 Image Apply LUT",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskBlur+": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "amount": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0,
                        "step": 0.5
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskBlur+",
        "display_name": "\ud83d\udd27 Mask Blur",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskFlip+": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "axis": [
                    [
                        "x",
                        "y",
                        "xy"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskFlip+",
        "display_name": "\ud83d\udd27 Mask Flip",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskPreview+": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "MaskPreview+",
        "display_name": "\ud83d\udd27 Mask Preview",
        "description": "",
        "category": "essentials",
        "output_node": true
    },
    "MaskBatch+": {
        "input": {
            "required": {
                "mask1": [
                    "MASK"
                ],
                "mask2": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskBatch+",
        "display_name": "\ud83d\udd27 Mask Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskExpandBatch+": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "size": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "step": 1
                    }
                ],
                "method": [
                    [
                        "expand",
                        "repeat all",
                        "repeat first",
                        "repeat last"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskExpandBatch+",
        "display_name": "\ud83d\udd27 Mask Expand Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "TransitionMask+": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "start_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "end_frame": [
                    "INT",
                    {
                        "default": 9999,
                        "min": 0,
                        "step": 1
                    }
                ],
                "transition_type": [
                    [
                        "horizontal slide",
                        "vertical slide",
                        "horizontal bar",
                        "vertical bar",
                        "center box",
                        "horizontal door",
                        "vertical door",
                        "circle",
                        "fade"
                    ]
                ],
                "timing_function": [
                    [
                        "linear",
                        "in",
                        "out",
                        "in-out"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "TransitionMask+",
        "display_name": "\ud83d\udd27 Transition Mask",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskFromColor+": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "red": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "green": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "blue": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 127,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskFromColor+",
        "display_name": "\ud83d\udd27 Mask From Color",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "MaskFromBatch+": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "length": [
                    "INT",
                    {
                        "default": -1,
                        "min": -1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskFromBatch+",
        "display_name": "\ud83d\udd27 Mask From Batch",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "SimpleMath+": {
        "input": {
            "optional": {
                "a": [
                    "INT,FLOAT",
                    {
                        "default": 0.0,
                        "step": 0.1
                    }
                ],
                "b": [
                    "INT,FLOAT",
                    {
                        "default": 0.0,
                        "step": 0.1
                    }
                ]
            },
            "required": {
                "value": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT"
        ],
        "name": "SimpleMath+",
        "display_name": "\ud83d\udd27 Simple Math",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ConsoleDebug+": {
        "input": {
            "required": {
                "value": [
                    "*",
                    {}
                ]
            },
            "optional": {
                "prefix": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "Value:"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ConsoleDebug+",
        "display_name": "\ud83d\udd27 Console Debug",
        "description": "",
        "category": "essentials",
        "output_node": true
    },
    "DebugTensorShape+": {
        "input": {
            "required": {
                "tensor": [
                    "*",
                    {}
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "DebugTensorShape+",
        "display_name": "\ud83d\udd27 Tensor Shape Debug",
        "description": "",
        "category": "essentials",
        "output_node": true
    },
    "ModelCompile+": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "fullgraph": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "dynamic": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "mode": [
                    [
                        "default",
                        "reduce-overhead",
                        "max-autotune",
                        "max-autotune-no-cudagraphs"
                    ]
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelCompile+",
        "display_name": "\ud83d\udd27 Compile Model",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "BatchCount+": {
        "input": {
            "required": {
                "batch": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "BatchCount+",
        "display_name": "\ud83d\udd27 Batch Count",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "KSamplerVariationsStochastic+": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 25,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 7.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "sampler": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "variation_seed": [
                    "INT:seed",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "variation_strength": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05,
                        "round": 0.01
                    }
                ],
                "cfg_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05,
                        "round": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSamplerVariationsStochastic+",
        "display_name": "\ud83d\udd27 KSampler Stochastic Variations",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "KSamplerVariationsWithNoise+": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "main_seed": [
                    "INT:seed",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.1,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "variation_strength": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01,
                        "round": 0.01
                    }
                ],
                "variation_seed": [
                    "INT:seed",
                    {
                        "default": 11084911229573929176,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSamplerVariationsWithNoise+",
        "display_name": "\ud83d\udd27 KSampler Variations with Noise Injection",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "CLIPTextEncodeSDXL+": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024.0,
                        "min": 0,
                        "max": 8192
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncodeSDXL+",
        "display_name": "\ud83d\udd27 SDXLCLIPTextEncode",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "SDXLEmptyLatentSizePicker+": {
        "input": {
            "required": {
                "resolution": [
                    [
                        "704x1408 (0.5)",
                        "704x1344 (0.52)",
                        "768x1344 (0.57)",
                        "768x1280 (0.6)",
                        "832x1216 (0.68)",
                        "832x1152 (0.72)",
                        "896x1152 (0.78)",
                        "896x1088 (0.82)",
                        "960x1088 (0.88)",
                        "960x1024 (0.94)",
                        "1024x1024 (1.0)",
                        "1024x960 (1.07)",
                        "1088x960 (1.13)",
                        "1088x896 (1.21)",
                        "1152x896 (1.29)",
                        "1152x832 (1.38)",
                        "1216x832 (1.46)",
                        "1280x768 (1.67)",
                        "1344x768 (1.75)",
                        "1344x704 (1.91)",
                        "1408x704 (2.0)",
                        "1472x704 (2.09)",
                        "1536x640 (2.4)",
                        "1600x640 (2.5)",
                        "1664x576 (2.89)",
                        "1728x576 (3.0)"
                    ],
                    {
                        "default": "1024x1024 (1.0)"
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "width",
            "height"
        ],
        "name": "SDXLEmptyLatentSizePicker+",
        "display_name": "\ud83d\udd27 SDXL Empty Latent Size Picker",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "DrawText+": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Hello, World!"
                    }
                ],
                "font": [
                    []
                ],
                "size": [
                    "INT",
                    {
                        "default": 56,
                        "min": 1,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "color": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#FFFFFF"
                    }
                ],
                "background_color": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#00000000"
                    }
                ],
                "shadow_distance": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "shadow_blur": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "shadow_color": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "#000000"
                    }
                ],
                "alignment": [
                    [
                        "left",
                        "center",
                        "right"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "DrawText+",
        "display_name": "\ud83d\udd27 Draw Text",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "RemBGSession+": {
        "input": {
            "required": {
                "model": [
                    [
                        "u2net: general purpose",
                        "u2netp: lightweight general purpose",
                        "u2net_human_seg: human segmentation",
                        "u2net_cloth_seg: cloths Parsing",
                        "silueta: very small u2net",
                        "isnet-general-use: general purpose",
                        "isnet-anime: anime illustrations",
                        "sam: general purpose"
                    ]
                ],
                "providers": [
                    [
                        "CPU",
                        "CUDA",
                        "ROCM",
                        "DirectML",
                        "OpenVINO",
                        "CoreML",
                        "Tensorrt",
                        "Azure"
                    ]
                ]
            }
        },
        "output": [
            "REMBG_SESSION"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REMBG_SESSION"
        ],
        "name": "RemBGSession+",
        "display_name": "\ud83d\udd27 RemBG Session",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "ImageRemoveBackground+": {
        "input": {
            "required": {
                "rembg_session": [
                    "REMBG_SESSION"
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "ImageRemoveBackground+",
        "display_name": "\ud83d\udd27 Image Remove Background",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "RemoveLatentMask+": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RemoveLatentMask+",
        "display_name": "\ud83d\udd27 Remove Latent Mask",
        "description": "",
        "category": "essentials",
        "output_node": false
    },
    "Automatic CFG": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "Automatic CFG",
        "display_name": "Automatic CFG",
        "description": "",
        "category": "model_patches",
        "output_node": false
    },
    "DiffusionEdge_Preprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "environment": [
                    [
                        "indoor",
                        "urban",
                        "natrual"
                    ],
                    {
                        "default": "indoor"
                    }
                ],
                "patch_batch_size": [
                    "INT",
                    {
                        "default": 4,
                        "min": 1,
                        "max": 16
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "DiffusionEdge_Preprocessor",
        "display_name": "Diffusion Edge (batch size \u2191 => speed \u2191, VRAM \u2191)",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "Zoe-DepthMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Zoe-DepthMapPreprocessor",
        "display_name": "Zoe Depth Map",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "HEDPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "safe": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "HEDPreprocessor",
        "display_name": "HED Soft-Edge Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "FakeScribblePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "safe": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FakeScribblePreprocessor",
        "display_name": "Fake Scribble Lines (aka scribble_hed)",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "AnimeFace_SemSegPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "remove_background_using_abg": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 512,
                        "max": 512,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "ABG_CHARACTER_MASK (MASK)"
        ],
        "name": "AnimeFace_SemSegPreprocessor",
        "display_name": "Anime Face Segmentor",
        "description": "",
        "category": "ControlNet Preprocessors/Semantic Segmentation",
        "output_node": false
    },
    "DWPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "detect_hand": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "detect_body": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "detect_face": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ],
                "bbox_detector": [
                    [
                        "yolox_l.torchscript.pt",
                        "yolox_l.onnx",
                        "yolo_nas_l_fp16.onnx",
                        "yolo_nas_m_fp16.onnx",
                        "yolo_nas_s_fp16.onnx"
                    ],
                    {
                        "default": "yolox_l.onnx"
                    }
                ],
                "pose_estimator": [
                    [
                        "dw-ll_ucoco_384_bs5.torchscript.pt",
                        "dw-ll_ucoco_384.onnx",
                        "dw-ll_ucoco.onnx"
                    ],
                    {
                        "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "name": "DWPreprocessor",
        "display_name": "DWPose Estimator",
        "description": "",
        "category": "ControlNet Preprocessors/Faces and Poses Estimators",
        "output_node": false
    },
    "AnimalPosePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "bbox_detector": [
                    [
                        "yolox_l.torchscript.pt",
                        "yolox_l.onnx",
                        "yolo_nas_l_fp16.onnx",
                        "yolo_nas_m_fp16.onnx",
                        "yolo_nas_s_fp16.onnx"
                    ],
                    {
                        "default": "yolox_l.torchscript.pt"
                    }
                ],
                "pose_estimator": [
                    [
                        "rtmpose-m_ap10k_256_bs5.torchscript.pt",
                        "rtmpose-m_ap10k_256.onnx"
                    ],
                    {
                        "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "name": "AnimalPosePreprocessor",
        "display_name": "AnimalPose Estimator (AP10K)",
        "description": "",
        "category": "ControlNet Preprocessors/Faces and Poses Estimators",
        "output_node": false
    },
    "DepthAnythingPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "ckpt_name": [
                    [
                        "depth_anything_vitl14.pth",
                        "depth_anything_vitb14.pth",
                        "depth_anything_vits14.pth"
                    ],
                    {
                        "default": "depth_anything_vitl14.pth"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "DepthAnythingPreprocessor",
        "display_name": "Depth Anything",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "Zoe_DepthAnythingPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "environment": [
                    [
                        "indoor",
                        "outdoor"
                    ],
                    {
                        "default": "indoor"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Zoe_DepthAnythingPreprocessor",
        "display_name": "Zoe Depth Anything",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "TEEDPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "safe_steps": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 10
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "TEEDPreprocessor",
        "display_name": "TEEDPreprocessor",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "TilePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "pyrUp_iters": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "TilePreprocessor",
        "display_name": "Tile",
        "description": "",
        "category": "ControlNet Preprocessors/others",
        "output_node": false
    },
    "OpenposePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "detect_hand": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "detect_body": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "detect_face": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "POSE_KEYPOINT"
        ],
        "name": "OpenposePreprocessor",
        "display_name": "OpenPose Pose",
        "description": "",
        "category": "ControlNet Preprocessors/Faces and Poses Estimators",
        "output_node": false
    },
    "InpaintPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "InpaintPreprocessor",
        "display_name": "Inpaint Preprocessor",
        "description": "",
        "category": "ControlNet Preprocessors/others",
        "output_node": false
    },
    "DensePosePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "model": [
                    [
                        "densepose_r50_fpn_dl.torchscript",
                        "densepose_r101_fpn_dl.torchscript"
                    ],
                    {
                        "default": "densepose_r50_fpn_dl.torchscript"
                    }
                ],
                "cmap": [
                    [
                        "Viridis (MagicAnimate)",
                        "Parula (CivitAI)"
                    ],
                    {
                        "default": "Viridis (MagicAnimate)"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "DensePosePreprocessor",
        "display_name": "DensePose Estimator",
        "description": "",
        "category": "ControlNet Preprocessors/Faces and Poses Estimators",
        "output_node": false
    },
    "OneFormer-COCO-SemSegPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "OneFormer-COCO-SemSegPreprocessor",
        "display_name": "OneFormer COCO Segmentor",
        "description": "",
        "category": "ControlNet Preprocessors/Semantic Segmentation",
        "output_node": false
    },
    "OneFormer-ADE20K-SemSegPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "OneFormer-ADE20K-SemSegPreprocessor",
        "display_name": "OneFormer ADE20K Segmentor",
        "description": "",
        "category": "ControlNet Preprocessors/Semantic Segmentation",
        "output_node": false
    },
    "MiDaS-NormalMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "a": [
                    "FLOAT",
                    {
                        "default": 6.283185307179586,
                        "min": 0.0,
                        "max": 15.707963267948966,
                        "step": 0.05
                    }
                ],
                "bg_threshold": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MiDaS-NormalMapPreprocessor",
        "display_name": "MiDaS Normal Map",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "MiDaS-DepthMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "a": [
                    "FLOAT",
                    {
                        "default": 6.283185307179586,
                        "min": 0.0,
                        "max": 15.707963267948966,
                        "step": 0.05
                    }
                ],
                "bg_threshold": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MiDaS-DepthMapPreprocessor",
        "display_name": "MiDaS Depth Map",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "BinaryPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "bin_threshold": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "BinaryPreprocessor",
        "display_name": "Binary Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "MeshGraphormer-DepthMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "mask_bbox_padding": [
                    "INT",
                    {
                        "default": 30,
                        "min": 0,
                        "max": 100
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ],
                "mask_type": [
                    [
                        "based_on_depth",
                        "tight_bboxes",
                        "original"
                    ],
                    {
                        "default": "based_on_depth"
                    }
                ],
                "mask_expand": [
                    "INT",
                    {
                        "default": 5,
                        "min": -2048,
                        "max": 2048,
                        "step": 1
                    }
                ],
                "rand_seed": [
                    "INT",
                    {
                        "default": 88,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "INPAINTING_MASK"
        ],
        "name": "MeshGraphormer-DepthMapPreprocessor",
        "display_name": "MeshGraphormer Hand Refiner",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "MediaPipe-FaceMeshPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "max_faces": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 50,
                        "step": 1
                    }
                ],
                "min_confidence": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.01,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "MediaPipe-FaceMeshPreprocessor",
        "display_name": "MediaPipe Face Mesh",
        "description": "",
        "category": "ControlNet Preprocessors/Faces and Poses Estimators",
        "output_node": false
    },
    "AnimeLineArtPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AnimeLineArtPreprocessor",
        "display_name": "Anime Lineart",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "LineArtPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "coarse": [
                    [
                        "disable",
                        "enable"
                    ],
                    {
                        "default": "disable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "LineArtPreprocessor",
        "display_name": "Realistic Lineart",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "ColorPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ColorPreprocessor",
        "display_name": "Color Pallete",
        "description": "",
        "category": "ControlNet Preprocessors/T2IAdapter-only",
        "output_node": false
    },
    "LeReS-DepthMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "rm_nearest": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "rm_background": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "boost": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "disable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "LeReS-DepthMapPreprocessor",
        "display_name": "LeReS Depth Map (enable boost for leres++)",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "BAE-NormalMapPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "BAE-NormalMapPreprocessor",
        "display_name": "BAE Normal Map",
        "description": "",
        "category": "ControlNet Preprocessors/Normal and Depth Estimators",
        "output_node": false
    },
    "PiDiNetPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "safe": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "PiDiNetPreprocessor",
        "display_name": "PiDiNet Soft-Edge Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "ScribblePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ScribblePreprocessor",
        "display_name": "Scribble Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "Scribble_XDoG_Preprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "threshold": [
                    "INT",
                    {
                        "default": 32,
                        "min": 1,
                        "max": 64,
                        "step": 1
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Scribble_XDoG_Preprocessor",
        "display_name": "Scribble XDoG Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "SavePoseKpsAsJsonFile": {
        "input": {
            "required": {
                "pose_kps": [
                    "POSE_KEYPOINT"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "PoseKeypoint"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SavePoseKpsAsJsonFile",
        "display_name": "Save Pose Keypoints",
        "description": "",
        "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
        "output_node": true
    },
    "FacialPartColoringFromPoseKps": {
        "input": {
            "required": {
                "pose_kps": [
                    "POSE_KEYPOINT"
                ],
                "mode": [
                    [
                        "point",
                        "polygon"
                    ],
                    {
                        "default": "polygon"
                    }
                ],
                "skin": [
                    "STRING",
                    {
                        "default": "rgb(0, 153, 255)",
                        "multiline": false
                    }
                ],
                "left_eye": [
                    "STRING",
                    {
                        "default": "rgb(0, 204, 153)",
                        "multiline": false
                    }
                ],
                "right_eye": [
                    "STRING",
                    {
                        "default": "rgb(255, 153, 0)",
                        "multiline": false
                    }
                ],
                "nose": [
                    "STRING",
                    {
                        "default": "rgb(255, 102, 255)",
                        "multiline": false
                    }
                ],
                "upper_lip": [
                    "STRING",
                    {
                        "default": "rgb(102, 0, 51)",
                        "multiline": false
                    }
                ],
                "inner_mouth": [
                    "STRING",
                    {
                        "default": "rgb(255, 204, 255)",
                        "multiline": false
                    }
                ],
                "lower_lip": [
                    "STRING",
                    {
                        "default": "rgb(255, 0, 102)",
                        "multiline": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FacialPartColoringFromPoseKps",
        "display_name": "Colorize Facial Parts from PoseKPS",
        "description": "",
        "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
        "output_node": false
    },
    "CannyEdgePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "low_threshold": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "high_threshold": [
                    "INT",
                    {
                        "default": 200,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CannyEdgePreprocessor",
        "display_name": "Canny Edge",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "Unimatch_OptFlowPreprocessor": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "gmflow-scale1-mixdata.pth",
                        "gmflow-scale2-mixdata.pth",
                        "gmflow-scale2-regrefine6-mixdata.pth"
                    ],
                    {
                        "default": "gmflow-scale2-regrefine6-mixdata.pth"
                    }
                ],
                "backward_flow": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "bidirectional_flow": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "OPTICAL_FLOW",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "OPTICAL_FLOW",
            "PREVIEW_IMAGE"
        ],
        "name": "Unimatch_OptFlowPreprocessor",
        "display_name": "Unimatch Optical Flow",
        "description": "",
        "category": "ControlNet Preprocessors/Optical Flow",
        "output_node": false
    },
    "MaskOptFlow": {
        "input": {
            "required": {
                "optical_flow": [
                    "OPTICAL_FLOW"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "OPTICAL_FLOW",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "OPTICAL_FLOW",
            "PREVIEW_IMAGE"
        ],
        "name": "MaskOptFlow",
        "display_name": "Mask Optical Flow (DragNUWA)",
        "description": "",
        "category": "ControlNet Preprocessors/Optical Flow",
        "output_node": false
    },
    "SAMPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SAMPreprocessor",
        "display_name": "SAM Segmentor",
        "description": "",
        "category": "ControlNet Preprocessors/others",
        "output_node": false
    },
    "UniFormer-SemSegPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "UniFormer-SemSegPreprocessor",
        "display_name": "UniFormer Segmentor",
        "description": "",
        "category": "ControlNet Preprocessors/Semantic Segmentation",
        "output_node": false
    },
    "SemSegPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SemSegPreprocessor",
        "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
        "description": "",
        "category": "ControlNet Preprocessors/Semantic Segmentation",
        "output_node": false
    },
    "M-LSDPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "score_threshold": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.01,
                        "max": 2.0,
                        "step": 0.01
                    }
                ],
                "dist_threshold": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.01,
                        "max": 20.0,
                        "step": 0.01
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "M-LSDPreprocessor",
        "display_name": "M-LSD Lines",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "ShufflePreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ShufflePreprocessor",
        "display_name": "Content Shuffle",
        "description": "",
        "category": "ControlNet Preprocessors/T2IAdapter-only",
        "output_node": false
    },
    "LineartStandardPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "guassian_sigma": [
                    "FLOAT",
                    {
                        "default": 6.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "intensity_threshold": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 16
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "LineartStandardPreprocessor",
        "display_name": "Standard Lineart",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "Manga2Anime_LineArt_Preprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Manga2Anime_LineArt_Preprocessor",
        "display_name": "Manga Lineart (aka lineart_anime_denoise)",
        "description": "",
        "category": "ControlNet Preprocessors/Line Extractors",
        "output_node": false
    },
    "AIO_Preprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "preprocessor": [
                    [
                        "DiffusionEdge_Preprocessor",
                        "Zoe-DepthMapPreprocessor",
                        "HEDPreprocessor",
                        "FakeScribblePreprocessor",
                        "AnimeFace_SemSegPreprocessor",
                        "DWPreprocessor",
                        "AnimalPosePreprocessor",
                        "DepthAnythingPreprocessor",
                        "Zoe_DepthAnythingPreprocessor",
                        "TEEDPreprocessor",
                        "TilePreprocessor",
                        "OpenposePreprocessor",
                        "DensePosePreprocessor",
                        "OneFormer-COCO-SemSegPreprocessor",
                        "OneFormer-ADE20K-SemSegPreprocessor",
                        "MiDaS-NormalMapPreprocessor",
                        "MiDaS-DepthMapPreprocessor",
                        "BinaryPreprocessor",
                        "MeshGraphormer-DepthMapPreprocessor",
                        "MediaPipe-FaceMeshPreprocessor",
                        "AnimeLineArtPreprocessor",
                        "LineArtPreprocessor",
                        "ColorPreprocessor",
                        "LeReS-DepthMapPreprocessor",
                        "BAE-NormalMapPreprocessor",
                        "PiDiNetPreprocessor",
                        "ScribblePreprocessor",
                        "Scribble_XDoG_Preprocessor",
                        "SavePoseKpsAsJsonFile",
                        "FacialPartColoringFromPoseKps",
                        "CannyEdgePreprocessor",
                        "Unimatch_OptFlowPreprocessor",
                        "MaskOptFlow",
                        "SAMPreprocessor",
                        "UniFormer-SemSegPreprocessor",
                        "SemSegPreprocessor",
                        "M-LSDPreprocessor",
                        "ShufflePreprocessor",
                        "LineartStandardPreprocessor",
                        "Manga2Anime_LineArt_Preprocessor"
                    ],
                    {
                        "default": "CannyEdgePreprocessor"
                    }
                ],
                "resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 2048,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AIO_Preprocessor",
        "display_name": "AIO Aux Preprocessor",
        "description": "",
        "category": "ControlNet Preprocessors",
        "output_node": false
    },
    "PixelPerfectResolution": {
        "input": {
            "required": {
                "original_image": [
                    "IMAGE"
                ],
                "image_gen_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "image_gen_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "resize_mode": [
                    [
                        "Just Resize",
                        "Crop and Resize",
                        "Resize and Fill"
                    ],
                    {
                        "default": "Just Resize"
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "RESOLUTION (INT)"
        ],
        "name": "PixelPerfectResolution",
        "display_name": "Pixel Perfect Resolution",
        "description": "",
        "category": "ControlNet Preprocessors",
        "output_node": false
    },
    "ImageGenResolutionFromImage": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE_GEN_WIDTH (INT)",
            "IMAGE_GEN_HEIGHT (INT)"
        ],
        "name": "ImageGenResolutionFromImage",
        "display_name": "Generation Resolution From Image",
        "description": "",
        "category": "ControlNet Preprocessors",
        "output_node": false
    },
    "ImageGenResolutionFromLatent": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE_GEN_WIDTH (INT)",
            "IMAGE_GEN_HEIGHT (INT)"
        ],
        "name": "ImageGenResolutionFromLatent",
        "display_name": "Generation Resolution From Latent",
        "description": "",
        "category": "ControlNet Preprocessors",
        "output_node": false
    },
    "HintImageEnchance": {
        "input": {
            "required": {
                "hint_image": [
                    "IMAGE"
                ],
                "image_gen_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "image_gen_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "resize_mode": [
                    [
                        "Just Resize",
                        "Crop and Resize",
                        "Resize and Fill"
                    ],
                    {
                        "default": "Just Resize"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "HintImageEnchance",
        "display_name": "Enchance And Resize Hint Images",
        "description": "",
        "category": "ControlNet Preprocessors",
        "output_node": false
    },
    "Wildcard Processor": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "Prompt Text"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "prompt_": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Wildcard Processor",
        "display_name": "Wildcard Processor (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": false
    },
    "Empty Latent Ratio Select SDXL": {
        "input": {
            "required": {
                "ratio_selected": [
                    [
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ]
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Empty Latent Ratio Select SDXL",
        "display_name": "Empty Latent Ratio Select SDXL (Mikey)",
        "description": "",
        "category": "Mikey/Latent",
        "output_node": false
    },
    "Empty Latent Ratio Custom SDXL": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Empty Latent Ratio Custom SDXL",
        "display_name": "Empty Latent Ratio Custom SDXL (Mikey)",
        "description": "",
        "category": "Mikey/Latent",
        "output_node": false
    },
    "PresetRatioSelector": {
        "input": {
            "required": {
                "select_preset": [
                    [
                        "1024x1024 (AR 1:1 / DEC 1.0:1)",
                        "1024x960 (AR ~1:1 / Near 16:15 / DEC 1.07:1)",
                        "1088x896 (AR ~4:3 / Near 17:14 / DEC 1.21:1)",
                        "1088x960 (AR ~4:3 / Near 8.5:7.5 / DEC 1.13:1)",
                        "1152x832 (AR ~4:3 / Near 18:13 / DEC 1.38:1)",
                        "1152x896 (AR ~4:3 / Near 4.5:3.5 / DEC 1.29:1)",
                        "1216x832 (AR ~4:3 / Near 19:13 / DEC 1.46:1)",
                        "1280x768 (AR ~16:9 / Near 5:3 / DEC 1.67:1)",
                        "1344x768 (AR ~16:9 / Near 7:4 / DEC 1.75:1)",
                        "1408x704 (AR 2:1 / DEC 2.0:1)",
                        "1472x704 (AR ~2:1 / Near 23:11 / DEC 2.09:1)",
                        "1536x640 (AR ~21:9 / Near 12:5 / DEC 2.4:1)",
                        "1600x640 (AR ~5:2 / DEC 2.5:1)",
                        "1664x576 (AR ~26:9 / DEC 2.89:1)",
                        "1728x576 (AR ~3:1 / DEC 3.0:1)",
                        "1792x576 (AR ~28:9 / DEC 3.11:1)",
                        "1856x512 (AR ~29:8 / DEC 3.62:1)",
                        "1920x512 (AR ~15:4 / DEC 3.75:1)",
                        "1984x512 (AR ~31:8 / DEC 3.88:1)",
                        "2048x512 (AR 4:1 / DEC 4.0:1)"
                    ],
                    {
                        "default": "none"
                    }
                ],
                "swap_axis": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "use_preset_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "latent_w",
            "latent_h",
            "cte_w",
            "cte_h",
            "target_w",
            "target_h",
            "crop_w",
            "crop_h"
        ],
        "name": "PresetRatioSelector",
        "display_name": "Preset Ratio Selector (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Ratio Advanced": {
        "input": {
            "required": {
                "preset": [
                    [
                        "1024x1024 (AR 1:1 / DEC 1.0:1)",
                        "1024x960 (AR ~1:1 / Near 16:15 / DEC 1.07:1)",
                        "1088x896 (AR ~4:3 / Near 17:14 / DEC 1.21:1)",
                        "1088x960 (AR ~4:3 / Near 8.5:7.5 / DEC 1.13:1)",
                        "1152x832 (AR ~4:3 / Near 18:13 / DEC 1.38:1)",
                        "1152x896 (AR ~4:3 / Near 4.5:3.5 / DEC 1.29:1)",
                        "1216x832 (AR ~4:3 / Near 19:13 / DEC 1.46:1)",
                        "1280x768 (AR ~16:9 / Near 5:3 / DEC 1.67:1)",
                        "1344x768 (AR ~16:9 / Near 7:4 / DEC 1.75:1)",
                        "1408x704 (AR 2:1 / DEC 2.0:1)",
                        "1472x704 (AR ~2:1 / Near 23:11 / DEC 2.09:1)",
                        "1536x640 (AR ~21:9 / Near 12:5 / DEC 2.4:1)",
                        "1600x640 (AR ~5:2 / DEC 2.5:1)",
                        "1664x576 (AR ~26:9 / DEC 2.89:1)",
                        "1728x576 (AR ~3:1 / DEC 3.0:1)",
                        "1792x576 (AR ~28:9 / DEC 3.11:1)",
                        "1856x512 (AR ~29:8 / DEC 3.62:1)",
                        "1920x512 (AR ~15:4 / DEC 3.75:1)",
                        "1984x512 (AR ~31:8 / DEC 3.88:1)",
                        "2048x512 (AR 4:1 / DEC 4.0:1)",
                        "none"
                    ],
                    {
                        "default": "none"
                    }
                ],
                "swap_axis": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "select_latent_ratio": [
                    [
                        "custom",
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ],
                    {
                        "default": "1:1 [1024x1024 square]"
                    }
                ],
                "custom_latent_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "custom_latent_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "select_cte_ratio": [
                    [
                        "custom",
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ],
                    {
                        "default": "1:1 [1024x1024 square]"
                    }
                ],
                "cte_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "cte_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "cte_mult": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "cte_res": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "cte_fit_size": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "select_target_ratio": [
                    [
                        "custom",
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ],
                    {
                        "default": "1:1 [1024x1024 square]"
                    }
                ],
                "target_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "target_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "target_mult": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "target_res": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "target_fit_size": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "crop_w": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "crop_h": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "use_preset_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "latent_w",
            "latent_h",
            "cte_w",
            "cte_h",
            "target_w",
            "target_h",
            "crop_w",
            "crop_h"
        ],
        "name": "Ratio Advanced",
        "display_name": "Ratio Advanced (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Int to String": {
        "input": {
            "required": {
                "int_": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "use_commas": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Int to String",
        "display_name": "Int to String (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Float to String": {
        "input": {
            "required": {
                "float_": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1000000.0
                    }
                ],
                "use_commas": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Float to String",
        "display_name": "Float to String (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Range Float": {
        "input": {
            "required": {
                "start": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 0.0001,
                        "max": 18446744073709551615
                    }
                ],
                "end": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 0.0001,
                        "max": 18446744073709551615
                    }
                ],
                "step": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 0.0001,
                        "max": 18446744073709551615
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "FLOAT",
            "STRING"
        ],
        "name": "Range Float",
        "display_name": "Range Float (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Range Integer": {
        "input": {
            "required": {
                "start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "end": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "STRING"
        ],
        "name": "Range Integer",
        "display_name": "Range Integer (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Save Image With Prompt Data": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "positive_prompt": [
                    "STRING",
                    {
                        "default": "Positive Prompt"
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "default": "Negative Prompt"
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "parameters": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Image With Prompt Data",
        "display_name": "Save Image With Prompt Data",
        "description": "",
        "category": "Mikey/Image",
        "output_node": true
    },
    "Save Images Mikey": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "sub_directory": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "filename_text_1": [
                    "STRING",
                    {
                        "default": "Filename Text 1"
                    }
                ],
                "filename_text_2": [
                    "STRING",
                    {
                        "default": "Filename Text 2"
                    }
                ],
                "filename_text_3": [
                    "STRING",
                    {
                        "default": "Filename Text 3"
                    }
                ],
                "filename_separator": [
                    "STRING",
                    {
                        "default": "_"
                    }
                ],
                "timestamp": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "counter_type": [
                    [
                        "none",
                        "folder",
                        "filename"
                    ],
                    {
                        "default": "folder"
                    }
                ],
                "filename_text_1_pos": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "filename_text_2_pos": [
                    "INT",
                    {
                        "default": 2
                    }
                ],
                "filename_text_3_pos": [
                    "INT",
                    {
                        "default": 4
                    }
                ],
                "timestamp_pos": [
                    "INT",
                    {
                        "default": 1
                    }
                ],
                "timestamp_type": [
                    [
                        "job",
                        "save_time"
                    ],
                    {
                        "default": "save_time"
                    }
                ],
                "counter_pos": [
                    "INT",
                    {
                        "default": 3
                    }
                ],
                "extra_metadata": [
                    "STRING",
                    {
                        "default": "Extra Metadata"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Images Mikey",
        "display_name": "Save Images Mikey (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": true
    },
    "Save Images No Display": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "sub_directory": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "filename_text_1": [
                    "STRING",
                    {
                        "default": "Filename Text 1"
                    }
                ],
                "filename_text_2": [
                    "STRING",
                    {
                        "default": "Filename Text 2"
                    }
                ],
                "filename_text_3": [
                    "STRING",
                    {
                        "default": "Filename Text 3"
                    }
                ],
                "filename_separator": [
                    "STRING",
                    {
                        "default": "_"
                    }
                ],
                "timestamp": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "counter_type": [
                    [
                        "none",
                        "folder",
                        "filename"
                    ],
                    {
                        "default": "folder"
                    }
                ],
                "filename_text_1_pos": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "filename_text_2_pos": [
                    "INT",
                    {
                        "default": 2
                    }
                ],
                "filename_text_3_pos": [
                    "INT",
                    {
                        "default": 4
                    }
                ],
                "timestamp_pos": [
                    "INT",
                    {
                        "default": 1
                    }
                ],
                "timestamp_type": [
                    [
                        "job",
                        "save_time"
                    ],
                    {
                        "default": "save_time"
                    }
                ],
                "counter_pos": [
                    "INT",
                    {
                        "default": 3
                    }
                ],
                "extra_metadata": [
                    "STRING",
                    {
                        "default": "Extra Metadata"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Images No Display",
        "display_name": "Save Images No Display (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": true
    },
    "Save Image If True": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "save_condition": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Image If True",
        "display_name": "Save Image If True (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": true
    },
    "Resize Image for SDXL": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Resize Image for SDXL",
        "display_name": "Resize Image for SDXL (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Upscale Tile Calculator": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "tile_resolution": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8192,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "image",
            "tile_width",
            "tile_height"
        ],
        "name": "Upscale Tile Calculator",
        "display_name": "Upscale Tile Calculator (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Batch Resize Image for SDXL": {
        "input": {
            "required": {
                "image_directory": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Image Directory"
                    }
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "image"
        ],
        "name": "Batch Resize Image for SDXL",
        "display_name": "Batch Resize Image for SDXL (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Batch Crop Image": {
        "input": {
            "required": {
                "image_directory": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Image Directory"
                    }
                ],
                "crop_amount": [
                    "FLOAT",
                    {
                        "default": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "image"
        ],
        "name": "Batch Crop Image",
        "display_name": "Batch Crop Image (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Batch Crop Resize Inplace": {
        "input": {
            "required": {
                "image_directory": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Image Directory"
                    }
                ],
                "subdirectories": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "replace_original": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "replace_suffix": [
                    "STRING",
                    {
                        "default": "_cropped_resized"
                    }
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic"
                    ]
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ],
                "crop_amount": [
                    "FLOAT",
                    {
                        "default": 0.05
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "job_done"
        ],
        "name": "Batch Crop Resize Inplace",
        "display_name": "Batch Crop Resize Inplace (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Batch Load Images": {
        "input": {
            "required": {
                "image_directory": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Image Directory"
                    }
                ],
                "subdirectories": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "image"
        ],
        "name": "Batch Load Images",
        "display_name": "Batch Load Images (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Load Image Based on Number": {
        "input": {
            "required": {
                "image_directory": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Image Directory"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "image",
            "filename"
        ],
        "name": "Load Image Based on Number",
        "display_name": "Load Image Based on Number (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "Prompt With Style": {
        "input": {
            "required": {
                "positive_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Positive Prompt"
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Negative Prompt"
                    }
                ],
                "style": [
                    [
                        "none",
                        "SAI-Enhance",
                        "SAI-Anime",
                        "SAI-Photographic",
                        "SAI-Digital art",
                        "SAI-Comic book",
                        "SAI-Fantasy art",
                        "SAI-Analog film",
                        "SAI-Neonpunk",
                        "SAI-Isometric",
                        "SAI-Lowpoly",
                        "SAI-Origami",
                        "SAI-Line art",
                        "SAI-Craft clay",
                        "SAI-Cinematic",
                        "SAI-3d-model",
                        "SAI-pixel art",
                        "SAI-Texture",
                        "photographic",
                        "deep-field",
                        "analog-film",
                        "cinematic",
                        "red",
                        "documentary",
                        "nature-photography",
                        "editorial",
                        "polaroid",
                        "3d-model",
                        "low-poly",
                        "modeling-compound",
                        "diorama",
                        "miniatures",
                        "abstract",
                        "anime",
                        "comic-book",
                        "digital-art",
                        "fantasy-art",
                        "dark-fantasy",
                        "oil-painting",
                        "watercolor",
                        "charcoal",
                        "color-pencil",
                        "crayon",
                        "cross-stitch",
                        "felt",
                        "origami",
                        "scrapbook",
                        "isometric",
                        "line-art",
                        "vector-art",
                        "neon-punk",
                        "pixel-art",
                        "tile-texture",
                        "lithography",
                        "mosaic",
                        "woodblock-print",
                        "sticker",
                        "stained-glass",
                        "tattoo",
                        "statue",
                        "album-art",
                        "wes-anderson",
                        "vaporwave",
                        "clarendon",
                        "gingham",
                        "juno",
                        "lark",
                        "nonagon",
                        "kaleidoscope",
                        "haunting",
                        "glam",
                        "mecha",
                        "padam",
                        "collage",
                        "paper-mache",
                        "macrame",
                        "quilling",
                        "pottery",
                        "batik",
                        "felting",
                        "marquetry",
                        "wildstyle-graffiti",
                        "bubble-graffiti",
                        "stencil-graffiti",
                        "throw-up-graffiti",
                        "tag-graffiti"
                    ]
                ],
                "ratio_selected": [
                    [
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ]
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "LATENT",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "samples",
            "positive_prompt_text_g",
            "negative_prompt_text_g",
            "positive_style_text_l",
            "negative_style_text_l",
            "width",
            "height",
            "refiner_width",
            "refiner_height"
        ],
        "name": "Prompt With Style",
        "display_name": "Prompt With Style V1 (Mikey)",
        "description": "",
        "category": "Mikey",
        "output_node": true
    },
    "Prompt With Style V2": {
        "input": {
            "required": {
                "positive_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Positive Prompt"
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Negative Prompt"
                    }
                ],
                "style": [
                    [
                        "none",
                        "SAI-Enhance",
                        "SAI-Anime",
                        "SAI-Photographic",
                        "SAI-Digital art",
                        "SAI-Comic book",
                        "SAI-Fantasy art",
                        "SAI-Analog film",
                        "SAI-Neonpunk",
                        "SAI-Isometric",
                        "SAI-Lowpoly",
                        "SAI-Origami",
                        "SAI-Line art",
                        "SAI-Craft clay",
                        "SAI-Cinematic",
                        "SAI-3d-model",
                        "SAI-pixel art",
                        "SAI-Texture",
                        "photographic",
                        "deep-field",
                        "analog-film",
                        "cinematic",
                        "red",
                        "documentary",
                        "nature-photography",
                        "editorial",
                        "polaroid",
                        "3d-model",
                        "low-poly",
                        "modeling-compound",
                        "diorama",
                        "miniatures",
                        "abstract",
                        "anime",
                        "comic-book",
                        "digital-art",
                        "fantasy-art",
                        "dark-fantasy",
                        "oil-painting",
                        "watercolor",
                        "charcoal",
                        "color-pencil",
                        "crayon",
                        "cross-stitch",
                        "felt",
                        "origami",
                        "scrapbook",
                        "isometric",
                        "line-art",
                        "vector-art",
                        "neon-punk",
                        "pixel-art",
                        "tile-texture",
                        "lithography",
                        "mosaic",
                        "woodblock-print",
                        "sticker",
                        "stained-glass",
                        "tattoo",
                        "statue",
                        "album-art",
                        "wes-anderson",
                        "vaporwave",
                        "clarendon",
                        "gingham",
                        "juno",
                        "lark",
                        "nonagon",
                        "kaleidoscope",
                        "haunting",
                        "glam",
                        "mecha",
                        "padam",
                        "collage",
                        "paper-mache",
                        "macrame",
                        "quilling",
                        "pottery",
                        "batik",
                        "felting",
                        "marquetry",
                        "wildstyle-graffiti",
                        "bubble-graffiti",
                        "stencil-graffiti",
                        "throw-up-graffiti",
                        "tag-graffiti"
                    ]
                ],
                "ratio_selected": [
                    [
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ]
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "clip_base": [
                    "CLIP"
                ],
                "clip_refiner": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "LATENT",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "samples",
            "base_pos_cond",
            "base_neg_cond",
            "refiner_pos_cond",
            "refiner_neg_cond",
            "positive_prompt",
            "negative_prompt"
        ],
        "name": "Prompt With Style V2",
        "display_name": "Prompt With Style V2 (Mikey)",
        "description": "",
        "category": "Mikey",
        "output_node": false
    },
    "Prompt With Style V3": {
        "input": {
            "required": {
                "positive_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Positive Prompt"
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Negative Prompt"
                    }
                ],
                "ratio_selected": [
                    [
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ]
                ],
                "custom_size": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "fit_custom_size": [
                    [
                        "true",
                        "false"
                    ]
                ],
                "custom_width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "custom_height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "target_mode": [
                    [
                        "match",
                        "2x",
                        "4x",
                        "2x90",
                        "4x90",
                        "2048",
                        "2048-90",
                        "4096",
                        "4096-90"
                    ],
                    {
                        "default": "4x"
                    }
                ],
                "base_model": [
                    "MODEL"
                ],
                "clip_base": [
                    "CLIP"
                ],
                "clip_refiner": [
                    "CLIP"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "MODEL",
            "LATENT",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "base_model",
            "samples",
            "base_pos_cond",
            "base_neg_cond",
            "refiner_pos_cond",
            "refiner_neg_cond",
            "positive_prompt",
            "negative_prompt"
        ],
        "name": "Prompt With Style V3",
        "display_name": "Prompt With Style (Mikey)",
        "description": "",
        "category": "Mikey",
        "output_node": false
    },
    "LoraSyntaxProcessor": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "<lora:filename:weight>"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "text",
            "unprocessed_text"
        ],
        "name": "LoraSyntaxProcessor",
        "display_name": "Lora Syntax Processor (Mikey)",
        "description": "",
        "category": "Mikey/Lora",
        "output_node": false
    },
    "WildcardAndLoraSyntaxProcessor": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "<lora:filename:weight>"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "text",
            "unprocessed_text"
        ],
        "name": "WildcardAndLoraSyntaxProcessor",
        "display_name": "Wildcard And Lora Syntax Processor (Mikey)",
        "description": "",
        "category": "Mikey/Lora",
        "output_node": false
    },
    "Prompt With SDXL": {
        "input": {
            "required": {
                "positive_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Positive Prompt"
                    }
                ],
                "negative_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Negative Prompt"
                    }
                ],
                "positive_style": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Positive Style"
                    }
                ],
                "negative_style": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Negative Style"
                    }
                ],
                "ratio_selected": [
                    [
                        "1:1 [1024x1024 square]",
                        "8:5 [1216x768 landscape]",
                        "4:3 [1152x896 landscape]",
                        "3:2 [1216x832 landscape]",
                        "7:5 [1176x840 landscape]",
                        "16:9 [1344x768 landscape]",
                        "21:9 [1536x640 landscape]",
                        "19:9 [1472x704 landscape]",
                        "3:4 [896x1152 portrait]",
                        "2:3 [832x1216 portrait]",
                        "5:7 [840x1176 portrait]",
                        "9:16 [768x1344 portrait]",
                        "9:21 [640x1536 portrait]",
                        "5:8 [768x1216 portrait]",
                        "9:19 [704x1472 portrait]"
                    ]
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "output_option": [
                    [
                        "prompt -> clip_g and style -> clip_l",
                        "prompt+style -> clip_g and prompt+style -> clip_l",
                        "prompt+style -> clip_g and style -> clip_l",
                        "prompt -> clip_g and prompt+style -> clip_l",
                        "prompt+style -> clip_g and prompt -> clip_l"
                    ],
                    {
                        "default": "prompt -> clip_g and style -> clip_l"
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "LATENT",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "samples",
            "positive_prompt_text_g",
            "negative_prompt_text_g",
            "positive_style_text_l",
            "negative_style_text_l",
            "width",
            "height",
            "refiner_width",
            "refiner_height"
        ],
        "name": "Prompt With SDXL",
        "display_name": "Prompt With SDXL (Mikey)",
        "description": "",
        "category": "Mikey",
        "output_node": false
    },
    "Style Conditioner": {
        "input": {
            "required": {
                "style": [
                    [
                        "none",
                        "SAI-Enhance",
                        "SAI-Anime",
                        "SAI-Photographic",
                        "SAI-Digital art",
                        "SAI-Comic book",
                        "SAI-Fantasy art",
                        "SAI-Analog film",
                        "SAI-Neonpunk",
                        "SAI-Isometric",
                        "SAI-Lowpoly",
                        "SAI-Origami",
                        "SAI-Line art",
                        "SAI-Craft clay",
                        "SAI-Cinematic",
                        "SAI-3d-model",
                        "SAI-pixel art",
                        "SAI-Texture",
                        "photographic",
                        "deep-field",
                        "analog-film",
                        "cinematic",
                        "red",
                        "documentary",
                        "nature-photography",
                        "editorial",
                        "polaroid",
                        "3d-model",
                        "low-poly",
                        "modeling-compound",
                        "diorama",
                        "miniatures",
                        "abstract",
                        "anime",
                        "comic-book",
                        "digital-art",
                        "fantasy-art",
                        "dark-fantasy",
                        "oil-painting",
                        "watercolor",
                        "charcoal",
                        "color-pencil",
                        "crayon",
                        "cross-stitch",
                        "felt",
                        "origami",
                        "scrapbook",
                        "isometric",
                        "line-art",
                        "vector-art",
                        "neon-punk",
                        "pixel-art",
                        "tile-texture",
                        "lithography",
                        "mosaic",
                        "woodblock-print",
                        "sticker",
                        "stained-glass",
                        "tattoo",
                        "statue",
                        "album-art",
                        "wes-anderson",
                        "vaporwave",
                        "clarendon",
                        "gingham",
                        "juno",
                        "lark",
                        "nonagon",
                        "kaleidoscope",
                        "haunting",
                        "glam",
                        "mecha",
                        "padam",
                        "collage",
                        "paper-mache",
                        "macrame",
                        "quilling",
                        "pottery",
                        "batik",
                        "felting",
                        "marquetry",
                        "wildstyle-graffiti",
                        "bubble-graffiti",
                        "stencil-graffiti",
                        "throw-up-graffiti",
                        "tag-graffiti"
                    ]
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "positive_cond_refiner": [
                    "CONDITIONING"
                ],
                "negative_cond_refiner": [
                    "CONDITIONING"
                ],
                "base_clip": [
                    "CLIP"
                ],
                "refiner_clip": [
                    "CLIP"
                ],
                "use_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "base_pos_cond",
            "base_neg_cond",
            "refiner_pos_cond",
            "refiner_neg_cond",
            "style_str"
        ],
        "name": "Style Conditioner",
        "display_name": "Style Conditioner (Mikey)",
        "description": "",
        "category": "Mikey/Conditioning",
        "output_node": false
    },
    "Style Conditioner Base Only": {
        "input": {
            "required": {
                "style": [
                    [
                        "none",
                        "SAI-Enhance",
                        "SAI-Anime",
                        "SAI-Photographic",
                        "SAI-Digital art",
                        "SAI-Comic book",
                        "SAI-Fantasy art",
                        "SAI-Analog film",
                        "SAI-Neonpunk",
                        "SAI-Isometric",
                        "SAI-Lowpoly",
                        "SAI-Origami",
                        "SAI-Line art",
                        "SAI-Craft clay",
                        "SAI-Cinematic",
                        "SAI-3d-model",
                        "SAI-pixel art",
                        "SAI-Texture",
                        "photographic",
                        "deep-field",
                        "analog-film",
                        "cinematic",
                        "red",
                        "documentary",
                        "nature-photography",
                        "editorial",
                        "polaroid",
                        "3d-model",
                        "low-poly",
                        "modeling-compound",
                        "diorama",
                        "miniatures",
                        "abstract",
                        "anime",
                        "comic-book",
                        "digital-art",
                        "fantasy-art",
                        "dark-fantasy",
                        "oil-painting",
                        "watercolor",
                        "charcoal",
                        "color-pencil",
                        "crayon",
                        "cross-stitch",
                        "felt",
                        "origami",
                        "scrapbook",
                        "isometric",
                        "line-art",
                        "vector-art",
                        "neon-punk",
                        "pixel-art",
                        "tile-texture",
                        "lithography",
                        "mosaic",
                        "woodblock-print",
                        "sticker",
                        "stained-glass",
                        "tattoo",
                        "statue",
                        "album-art",
                        "wes-anderson",
                        "vaporwave",
                        "clarendon",
                        "gingham",
                        "juno",
                        "lark",
                        "nonagon",
                        "kaleidoscope",
                        "haunting",
                        "glam",
                        "mecha",
                        "padam",
                        "collage",
                        "paper-mache",
                        "macrame",
                        "quilling",
                        "pottery",
                        "batik",
                        "felting",
                        "marquetry",
                        "wildstyle-graffiti",
                        "bubble-graffiti",
                        "stencil-graffiti",
                        "throw-up-graffiti",
                        "tag-graffiti"
                    ]
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "base_clip": [
                    "CLIP"
                ],
                "use_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "base_pos_cond",
            "base_neg_cond",
            "style_str"
        ],
        "name": "Style Conditioner Base Only",
        "display_name": "Style Conditioner Base Only (Mikey)",
        "description": "",
        "category": "Mikey/Conditioning",
        "output_node": false
    },
    "Mikey Sampler": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "refiner_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "positive_cond_refiner": [
                    "CONDITIONING"
                ],
                "negative_cond_refiner": [
                    "CONDITIONING"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "hires_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Mikey Sampler",
        "display_name": "Mikey Sampler",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "MikeySamplerTiledAdvanced": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "refiner_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "positive_cond_refiner": [
                    "CONDITIONING"
                ],
                "negative_cond_refiner": [
                    "CONDITIONING"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "denoise_image": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "smooth_step": [
                    "INT",
                    {
                        "default": 1,
                        "min": -1,
                        "max": 100
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 6.5,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.1
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "tiler_denoise": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ],
                "tiler_model": [
                    [
                        "base",
                        "refiner"
                    ],
                    {
                        "default": "base"
                    }
                ],
                "use_complexity_score": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ]
            },
            "optional": {
                "image_optional": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "tiled_image",
            "upscaled_image"
        ],
        "name": "MikeySamplerTiledAdvanced",
        "display_name": "Mikey Sampler Tiled Advanced",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "MikeySamplerTiledAdvancedBaseOnly": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "denoise_image": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 6.5,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.1
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "tiler_denoise": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            },
            "optional": {
                "image_optional": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "output_image"
        ],
        "name": "MikeySamplerTiledAdvancedBaseOnly",
        "display_name": "Mikey Sampler Tiled Advanced Base Only",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "Mikey Sampler Base Only": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "vae": [
                    "VAE"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "hires_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.1
                    }
                ],
                "smooth_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1,
                        "max": 100
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Mikey Sampler Base Only",
        "display_name": "Mikey Sampler Base Only",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "Mikey Sampler Base Only Advanced": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "add_noise": [
                    [
                        "enable",
                        "disable"
                    ],
                    {
                        "default": "enable"
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 31,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "smooth_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1,
                        "max": 100
                    }
                ],
                "cfg_1": [
                    "FLOAT",
                    {
                        "default": 5.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "cfg_2": [
                    "FLOAT",
                    {
                        "default": 9.5,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ],
                    {
                        "default": "dpmpp_3m_sde_gpu"
                    }
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ],
                    {
                        "default": "exponential"
                    }
                ],
                "upscale_model": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area",
                        "bicubic",
                        "lanczos"
                    ],
                    {
                        "default": "lanczos"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "hires_denoise": [
                    "FLOAT",
                    {
                        "default": 0.4,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "hires_steps": [
                    "INT",
                    {
                        "default": 31,
                        "min": 1,
                        "max": 1000
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Mikey Sampler Base Only Advanced",
        "display_name": "Mikey Sampler Base Only Advanced",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "Mikey Sampler Tiled": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "refiner_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "positive_cond_refiner": [
                    "CONDITIONING"
                ],
                "negative_cond_refiner": [
                    "CONDITIONING"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "tiler_denoise": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ],
                "tiler_model": [
                    [
                        "base",
                        "refiner"
                    ],
                    {
                        "default": "base"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "tiled_image",
            "upscaled_image"
        ],
        "name": "Mikey Sampler Tiled",
        "display_name": "Mikey Sampler Tiled",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "Mikey Sampler Tiled Base Only": {
        "input": {
            "required": {
                "base_model": [
                    "MODEL"
                ],
                "samples": [
                    "LATENT"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "vae": [
                    "VAE"
                ],
                "model_name": [
                    []
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "tiler_denoise": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Mikey Sampler Tiled Base Only",
        "display_name": "Mikey Sampler Tiled Base Only",
        "description": "",
        "category": "Mikey/Sampling",
        "output_node": false
    },
    "FaceFixerOpenCV": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "base_model": [
                    "MODEL"
                ],
                "vae": [
                    "VAE"
                ],
                "positive_cond_base": [
                    "CONDITIONING"
                ],
                "negative_cond_base": [
                    "CONDITIONING"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "face_img_resolution": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 512,
                        "max": 2048
                    }
                ],
                "padding": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "max": 512
                    }
                ],
                "scale_factor": [
                    "FLOAT",
                    {
                        "default": 1.2,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "min_neighbors": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 100
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "classifier": [
                    [
                        "animeface",
                        "combined",
                        "haarcascade_frontalface_default.xml",
                        "haarcascade_profileface.xml",
                        "haarcascade_frontalface_alt.xml",
                        "haarcascade_frontalface_alt2.xml",
                        "haarcascade_upperbody.xml",
                        "haarcascade_fullbody.xml",
                        "haarcascade_lowerbody.xml",
                        "haarcascade_frontalcatface.xml",
                        "hands"
                    ],
                    {
                        "default": "combined"
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ],
                    {
                        "default": "dpmpp_2m_sde"
                    }
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ],
                    {
                        "default": "karras"
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 7.0,
                        "min": 0.0,
                        "max": 1000.0,
                        "step": 0.1
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 30,
                        "min": 1,
                        "max": 1000
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "FaceFixerOpenCV",
        "display_name": "Face Fixer OpenCV (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "AddMetaData": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "label": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Label for metadata"
                    }
                ],
                "text_value": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "Text to add to metadata"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AddMetaData",
        "display_name": "AddMetaData (Mikey)",
        "description": "",
        "category": "Mikey/Meta",
        "output_node": true
    },
    "SaveMetaData": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "timestamp_prefix": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "counter": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveMetaData",
        "display_name": "SaveMetaData (Mikey)",
        "description": "",
        "category": "Mikey/Meta",
        "output_node": true
    },
    "SearchAndReplace": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false,
                        "placeholder": "Text to search and replace"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "SearchAndReplace",
        "display_name": "Search And Replace (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "FileNamePrefix": {
        "input": {
            "required": {
                "date": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "date_directory": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "custom_directory": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "custom_text": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "filename_prefix"
        ],
        "name": "FileNamePrefix",
        "display_name": "File Name Prefix (Mikey)",
        "description": "",
        "category": "Mikey/Meta",
        "output_node": false
    },
    "FileNamePrefixDateDirFirst": {
        "input": {
            "required": {
                "date": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "date_directory": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "custom_directory": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "custom_text": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "filename_prefix"
        ],
        "name": "FileNamePrefixDateDirFirst",
        "display_name": "File Name Prefix Date Dir First (Mikey)",
        "description": "",
        "category": "Mikey/Meta",
        "output_node": false
    },
    "HaldCLUT ": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "hald_clut": [
                    [
                        "CandleLight.png",
                        "Kodak TRI-X 400.png",
                        "Kodak Gold 200.png",
                        "h8.png",
                        "preset.png",
                        "Hald_CLUT_Identity_12.png",
                        "Fuji Velvia 50.png",
                        "Kodak ColorPlus 200.png",
                        "lit.png",
                        "Agfa Vista 200.png",
                        "broadcast.png",
                        "bw.png",
                        "Ilford HP5.png",
                        "modern.png",
                        "ColorNegative.png",
                        "Kodak Ektachrome 100.png",
                        "retro.png",
                        "TealMagentaGold.png",
                        "dd.png",
                        "bw_warm.png",
                        "Anime.png",
                        "clipped.png",
                        "Kodak Kodachrome 64.png"
                    ]
                ],
                "gamma_correction": [
                    [
                        "True",
                        "False"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": "image,",
        "name": "HaldCLUT ",
        "display_name": "HaldCLUT ",
        "description": "",
        "category": "Mikey/Image",
        "output_node": true
    },
    "Seed String": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "seed",
            "seed_string"
        ],
        "name": "Seed String",
        "display_name": "Seed String (Mikey)",
        "description": "",
        "category": "Mikey/Utils",
        "output_node": false
    },
    "Image Caption": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "font": [
                    "STRING",
                    {
                        "default": "Path to font file"
                    }
                ],
                "caption": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Caption"
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Image Caption",
        "display_name": "Image Caption (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "ImageBorder": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "border_width": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 1000
                    }
                ],
                "border_color": [
                    "STRING",
                    {
                        "default": "black"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "ImageBorder",
        "display_name": "Image Border (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "ImagePaste": {
        "input": {
            "required": {
                "background_image": [
                    "IMAGE"
                ],
                "foreground_image": [
                    "IMAGE"
                ],
                "x_position": [
                    "INT",
                    {
                        "default": 0,
                        "min": -10000,
                        "max": 10000
                    }
                ],
                "y_position": [
                    "INT",
                    {
                        "default": 0,
                        "min": -10000,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "ImagePaste",
        "display_name": "Image Paste (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "TextCombinations": {
        "input": {
            "required": {
                "text1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text 1"
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text 2"
                    }
                ],
                "operation": [
                    [
                        "text1 to output1, text1 to output2",
                        "text1 to output1, text2 to output2",
                        "text1 to output1, text1 + text2 to output2",
                        "text2 to output1, text1 to output2",
                        "text2 to output1, text2 to output2",
                        "text2 to output1, text1 + text2 to output2",
                        "text1 + text2 to output1, text1 to output2",
                        "text1 + text2 to output1, text2 to output2",
                        "text1 + text2 to output1, text1 + text2 to output2"
                    ],
                    {
                        "default": "text1 to output1, text1 to output2"
                    }
                ],
                "delimiter": [
                    "STRING",
                    {
                        "default": " "
                    }
                ],
                "use_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "output1",
            "output2"
        ],
        "name": "TextCombinations",
        "display_name": "Text Combinations 2 (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": false
    },
    "TextCombinations3": {
        "input": {
            "required": {
                "text1": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text 1"
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text 2"
                    }
                ],
                "text3": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text 3"
                    }
                ],
                "operation": [
                    [
                        "text1 to output1, text1 to output2, text1 to output3",
                        "text1 to output1, text1 to output2, text2 to output3",
                        "text1 to output1, text1 to output2, text3 to output3",
                        "text1 to output1, text1 to output2, text1 + text2 to output3",
                        "text1 to output1, text1 to output2, text1 + text3 to output3",
                        "text1 to output1, text1 to output2, text2 + text3 to output3",
                        "text1 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text2 to output2, text1 to output3",
                        "text1 to output1, text2 to output2, text2 to output3",
                        "text1 to output1, text2 to output2, text3 to output3",
                        "text1 to output1, text2 to output2, text1 + text2 to output3",
                        "text1 to output1, text2 to output2, text1 + text3 to output3",
                        "text1 to output1, text2 to output2, text2 + text3 to output3",
                        "text1 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text3 to output2, text1 to output3",
                        "text1 to output1, text3 to output2, text2 to output3",
                        "text1 to output1, text3 to output2, text3 to output3",
                        "text1 to output1, text3 to output2, text1 + text2 to output3",
                        "text1 to output1, text3 to output2, text1 + text3 to output3",
                        "text1 to output1, text3 to output2, text2 + text3 to output3",
                        "text1 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text1 + text2 to output2, text1 to output3",
                        "text1 to output1, text1 + text2 to output2, text2 to output3",
                        "text1 to output1, text1 + text2 to output2, text3 to output3",
                        "text1 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text1 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text1 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text1 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text1 + text3 to output2, text1 to output3",
                        "text1 to output1, text1 + text3 to output2, text2 to output3",
                        "text1 to output1, text1 + text3 to output2, text3 to output3",
                        "text1 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text1 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text1 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text1 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text2 + text3 to output2, text1 to output3",
                        "text1 to output1, text2 + text3 to output2, text2 to output3",
                        "text1 to output1, text2 + text3 to output2, text3 to output3",
                        "text1 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text1 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text1 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text1 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text1 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text1 to output2, text1 to output3",
                        "text2 to output1, text1 to output2, text2 to output3",
                        "text2 to output1, text1 to output2, text3 to output3",
                        "text2 to output1, text1 to output2, text1 + text2 to output3",
                        "text2 to output1, text1 to output2, text1 + text3 to output3",
                        "text2 to output1, text1 to output2, text2 + text3 to output3",
                        "text2 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text2 to output2, text1 to output3",
                        "text2 to output1, text2 to output2, text2 to output3",
                        "text2 to output1, text2 to output2, text3 to output3",
                        "text2 to output1, text2 to output2, text1 + text2 to output3",
                        "text2 to output1, text2 to output2, text1 + text3 to output3",
                        "text2 to output1, text2 to output2, text2 + text3 to output3",
                        "text2 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text3 to output2, text1 to output3",
                        "text2 to output1, text3 to output2, text2 to output3",
                        "text2 to output1, text3 to output2, text3 to output3",
                        "text2 to output1, text3 to output2, text1 + text2 to output3",
                        "text2 to output1, text3 to output2, text1 + text3 to output3",
                        "text2 to output1, text3 to output2, text2 + text3 to output3",
                        "text2 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text1 + text2 to output2, text1 to output3",
                        "text2 to output1, text1 + text2 to output2, text2 to output3",
                        "text2 to output1, text1 + text2 to output2, text3 to output3",
                        "text2 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text2 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text2 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text2 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text1 + text3 to output2, text1 to output3",
                        "text2 to output1, text1 + text3 to output2, text2 to output3",
                        "text2 to output1, text1 + text3 to output2, text3 to output3",
                        "text2 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text2 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text2 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text2 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text2 + text3 to output2, text1 to output3",
                        "text2 to output1, text2 + text3 to output2, text2 to output3",
                        "text2 to output1, text2 + text3 to output2, text3 to output3",
                        "text2 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text2 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text2 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text2 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text2 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text1 to output2, text1 to output3",
                        "text3 to output1, text1 to output2, text2 to output3",
                        "text3 to output1, text1 to output2, text3 to output3",
                        "text3 to output1, text1 to output2, text1 + text2 to output3",
                        "text3 to output1, text1 to output2, text1 + text3 to output3",
                        "text3 to output1, text1 to output2, text2 + text3 to output3",
                        "text3 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text2 to output2, text1 to output3",
                        "text3 to output1, text2 to output2, text2 to output3",
                        "text3 to output1, text2 to output2, text3 to output3",
                        "text3 to output1, text2 to output2, text1 + text2 to output3",
                        "text3 to output1, text2 to output2, text1 + text3 to output3",
                        "text3 to output1, text2 to output2, text2 + text3 to output3",
                        "text3 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text3 to output2, text1 to output3",
                        "text3 to output1, text3 to output2, text2 to output3",
                        "text3 to output1, text3 to output2, text3 to output3",
                        "text3 to output1, text3 to output2, text1 + text2 to output3",
                        "text3 to output1, text3 to output2, text1 + text3 to output3",
                        "text3 to output1, text3 to output2, text2 + text3 to output3",
                        "text3 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text1 + text2 to output2, text1 to output3",
                        "text3 to output1, text1 + text2 to output2, text2 to output3",
                        "text3 to output1, text1 + text2 to output2, text3 to output3",
                        "text3 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text3 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text3 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text3 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text1 + text3 to output2, text1 to output3",
                        "text3 to output1, text1 + text3 to output2, text2 to output3",
                        "text3 to output1, text1 + text3 to output2, text3 to output3",
                        "text3 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text3 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text3 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text3 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text2 + text3 to output2, text1 to output3",
                        "text3 to output1, text2 + text3 to output2, text2 to output3",
                        "text3 to output1, text2 + text3 to output2, text3 to output3",
                        "text3 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text3 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text3 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text3 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text3 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text1 to output2, text1 to output3",
                        "text1 + text2 to output1, text1 to output2, text2 to output3",
                        "text1 + text2 to output1, text1 to output2, text3 to output3",
                        "text1 + text2 to output1, text1 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text1 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text1 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text2 to output2, text1 to output3",
                        "text1 + text2 to output1, text2 to output2, text2 to output3",
                        "text1 + text2 to output1, text2 to output2, text3 to output3",
                        "text1 + text2 to output1, text2 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text2 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text2 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text3 to output2, text1 to output3",
                        "text1 + text2 to output1, text3 to output2, text2 to output3",
                        "text1 + text2 to output1, text3 to output2, text3 to output3",
                        "text1 + text2 to output1, text3 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text3 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text3 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text1 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text2 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text3 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text1 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text2 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text3 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text1 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text2 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text3 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text1 to output2, text1 to output3",
                        "text1 + text3 to output1, text1 to output2, text2 to output3",
                        "text1 + text3 to output1, text1 to output2, text3 to output3",
                        "text1 + text3 to output1, text1 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text1 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text1 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text2 to output2, text1 to output3",
                        "text1 + text3 to output1, text2 to output2, text2 to output3",
                        "text1 + text3 to output1, text2 to output2, text3 to output3",
                        "text1 + text3 to output1, text2 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text2 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text2 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text3 to output2, text1 to output3",
                        "text1 + text3 to output1, text3 to output2, text2 to output3",
                        "text1 + text3 to output1, text3 to output2, text3 to output3",
                        "text1 + text3 to output1, text3 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text3 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text3 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text1 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text2 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text3 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text1 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text2 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text3 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text1 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text2 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text3 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text1 to output2, text1 to output3",
                        "text2 + text3 to output1, text1 to output2, text2 to output3",
                        "text2 + text3 to output1, text1 to output2, text3 to output3",
                        "text2 + text3 to output1, text1 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text1 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text1 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text2 to output2, text1 to output3",
                        "text2 + text3 to output1, text2 to output2, text2 to output3",
                        "text2 + text3 to output1, text2 to output2, text3 to output3",
                        "text2 + text3 to output1, text2 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text2 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text2 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text3 to output2, text1 to output3",
                        "text2 + text3 to output1, text3 to output2, text2 to output3",
                        "text2 + text3 to output1, text3 to output2, text3 to output3",
                        "text2 + text3 to output1, text3 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text3 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text3 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text1 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text2 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text3 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text1 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text2 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text3 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text1 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text2 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text3 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text2 + text3 to output2, text1 + text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text1 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text2 + text3 to output3",
                        "text1 + text2 + text3 to output1, text1 + text2 + text3 to output2, text1 + text2 + text3 to output3"
                    ],
                    {
                        "default": "text1 to output1, text1 to output2, text1 to output3"
                    }
                ],
                "delimiter": [
                    "STRING",
                    {
                        "default": " "
                    }
                ],
                "use_seed": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "output1",
            "output2",
            "output3"
        ],
        "name": "TextCombinations3",
        "display_name": "Text Combinations 3 (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": false
    },
    "Text2InputOr3rdOption": {
        "input": {
            "required": {
                "text_a": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text A"
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text B"
                    }
                ],
                "text_c": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Text C"
                    }
                ],
                "use_text_c_for_both": [
                    [
                        "true",
                        "false"
                    ],
                    {
                        "default": "false"
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "text_a",
            "text_b"
        ],
        "name": "Text2InputOr3rdOption",
        "display_name": "Text 2 Inputs Or 3rd Option Instead (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": false
    },
    "Checkpoint Loader Simple Mikey": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "vae",
            "ckpt_name",
            "ckpt_hash"
        ],
        "name": "Checkpoint Loader Simple Mikey",
        "display_name": "Checkpoint Loader Simple (Mikey)",
        "description": "",
        "category": "Mikey/Loaders",
        "output_node": false
    },
    "TextPreserve": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Input Text Here",
                        "dynamicPrompts": false
                    }
                ],
                "result_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Result Text Here (will be replaced)"
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "text"
        ],
        "name": "TextPreserve",
        "display_name": "Text Preserve (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": true
    },
    "TextConcat": {
        "input": {
            "required": {
                "delimiter": [
                    "STRING",
                    {
                        "default": " "
                    }
                ]
            },
            "optional": {
                "text1": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "text2": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "text3": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "text4": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "text5": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "TextConcat",
        "display_name": "Text Concat (Mikey)",
        "description": "",
        "category": "Mikey/Text",
        "output_node": false
    },
    "OobaPrompt": {
        "input": {
            "required": {
                "input_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Prompt Text Here",
                        "dynamicPrompts": false
                    }
                ],
                "mode": [
                    [
                        "prompt",
                        "style",
                        "descriptor",
                        "character",
                        "negative",
                        "custom"
                    ],
                    {
                        "default": "prompt"
                    }
                ],
                "custom_history": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "path to history.json",
                        "dynamicPrompts": true
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "text"
        ],
        "name": "OobaPrompt",
        "display_name": "OobaPrompt (Mikey)",
        "description": "",
        "category": "Mikey/AI",
        "output_node": false
    },
    "WildcardOobaPrompt": {
        "input": {
            "required": {
                "input_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Prompt Text Here",
                        "dynamicPrompts": false
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "text"
        ],
        "name": "WildcardOobaPrompt",
        "display_name": "Wildcard OobaPrompt (Mikey)",
        "description": "",
        "category": "Mikey/AI",
        "output_node": true
    },
    "LMStudioPrompt": {
        "input": {
            "required": {
                "input_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "Prompt Text Here",
                        "dynamicPrompts": false
                    }
                ],
                "mode": [
                    [
                        "prompt",
                        "style",
                        "descriptor",
                        "character",
                        "custom"
                    ],
                    {
                        "default": "prompt"
                    }
                ],
                "custom_history": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "path to history.json",
                        "dynamicPrompts": true
                    }
                ],
                "server_address": [
                    "STRING",
                    {
                        "default": "localhost"
                    }
                ],
                "server_port": [
                    "INT",
                    {
                        "default": 1234,
                        "min": 0,
                        "max": 65535
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "text"
        ],
        "name": "LMStudioPrompt",
        "display_name": "LM Studio Prompt (Mikey)",
        "description": "",
        "category": "Mikey/AI",
        "output_node": true
    },
    "EvalFloats": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "formula": [
                    "STRING",
                    {
                        "multiline": false,
                        "default": "a + b"
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "result_float",
            "result_int",
            "result_str"
        ],
        "name": "EvalFloats",
        "display_name": "Eval Floats (Mikey)",
        "description": "",
        "category": "Mikey/Math",
        "output_node": false
    },
    "ImageOverlay": {
        "input": {
            "required": {
                "background_image": [
                    "IMAGE",
                    {
                        "default": null
                    }
                ],
                "foreground_image": [
                    "IMAGE",
                    {
                        "default": null
                    }
                ],
                "opacity": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "result_img"
        ],
        "name": "ImageOverlay",
        "display_name": "Image Overlay (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "CinematicLook": {
        "input": {
            "required": {
                "image": [
                    "IMAGE",
                    {
                        "default": null
                    }
                ],
                "look": [
                    [
                        "modern",
                        "retro",
                        "clipped",
                        "broadcast",
                        "black and white",
                        "black and white - warm"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "result_img"
        ],
        "name": "CinematicLook",
        "display_name": "Cinematic Look (Mikey)",
        "description": "",
        "category": "Mikey/Image",
        "output_node": false
    },
    "TimestepKeyframe": {
        "input": {
            "required": {
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_timestep_kf": [
                    "TIMESTEP_KEYFRAME"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "cn_weights": [
                    "CONTROL_NET_WEIGHTS"
                ],
                "latent_keyframe": [
                    "LATENT_KEYFRAME"
                ],
                "null_latent_kf_strength": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "inherit_missing": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "guarantee_usage": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "mask_optional": [
                    "MASK"
                ]
            }
        },
        "output": [
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TIMESTEP_KF"
        ],
        "name": "TimestepKeyframe",
        "display_name": "Timestep Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
        "output_node": false
    },
    "LatentKeyframe": {
        "input": {
            "required": {
                "batch_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1000,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_latent_kf": [
                    "LATENT_KEYFRAME"
                ]
            }
        },
        "output": [
            "LATENT_KEYFRAME"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT_KF"
        ],
        "name": "LatentKeyframe",
        "display_name": "Latent Keyframe \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
        "output_node": false
    },
    "LatentKeyframeGroup": {
        "input": {
            "required": {
                "index_strengths": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": ""
                    }
                ]
            },
            "optional": {
                "prev_latent_kf": [
                    "LATENT_KEYFRAME"
                ],
                "latent_optional": [
                    "LATENT"
                ],
                "print_keyframes": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LATENT_KEYFRAME"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT_KF"
        ],
        "name": "LatentKeyframeGroup",
        "display_name": "Latent Keyframe Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
        "output_node": false
    },
    "LatentKeyframeBatchedGroup": {
        "input": {
            "required": {
                "float_strengths": [
                    "FLOAT",
                    {
                        "default": -1,
                        "min": -1,
                        "step": 0.001,
                        "forceInput": true
                    }
                ]
            },
            "optional": {
                "prev_latent_kf": [
                    "LATENT_KEYFRAME"
                ],
                "print_keyframes": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LATENT_KEYFRAME"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT_KF"
        ],
        "name": "LatentKeyframeBatchedGroup",
        "display_name": "Latent Keyframe Batched Group \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
        "output_node": false
    },
    "LatentKeyframeTiming": {
        "input": {
            "required": {
                "batch_index_from": [
                    "INT",
                    {
                        "default": 0,
                        "min": -10000,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "batch_index_to_excl": [
                    "INT",
                    {
                        "default": 0,
                        "min": -10000,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "strength_from": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "strength_to": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "interpolation": [
                    [
                        "linear",
                        "ease-in",
                        "ease-out",
                        "ease-in-out"
                    ]
                ]
            },
            "optional": {
                "prev_latent_kf": [
                    "LATENT_KEYFRAME"
                ],
                "print_keyframes": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LATENT_KEYFRAME"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT_KF"
        ],
        "name": "LatentKeyframeTiming",
        "display_name": "Latent Keyframe Interpolation \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/keyframes",
        "output_node": false
    },
    "ACN_AdvancedControlNetApply": {
        "input": {
            "required": {
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "mask_optional": [
                    "MASK"
                ],
                "timestep_kf": [
                    "TIMESTEP_KEYFRAME"
                ],
                "latent_kf_override": [
                    "LATENT_KEYFRAME"
                ],
                "weights_override": [
                    "CONTROL_NET_WEIGHTS"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative"
        ],
        "name": "ACN_AdvancedControlNetApply",
        "display_name": "Apply Advanced ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "output_node": false
    },
    "ControlNetLoaderAdvanced": {
        "input": {
            "required": {
                "control_net_name": [
                    []
                ]
            },
            "optional": {
                "timestep_keyframe": [
                    "TIMESTEP_KEYFRAME"
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "ControlNetLoaderAdvanced",
        "display_name": "Load Advanced ControlNet Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "output_node": false
    },
    "DiffControlNetLoaderAdvanced": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "control_net_name": [
                    []
                ]
            },
            "optional": {
                "timestep_keyframe": [
                    "TIMESTEP_KEYFRAME"
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "DiffControlNetLoaderAdvanced",
        "display_name": "Load Advanced ControlNet Model (diff) \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "output_node": false
    },
    "ScaledSoftControlNetWeights": {
        "input": {
            "required": {
                "base_multiplier": [
                    "FLOAT",
                    {
                        "default": 0.825,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "flip_weights": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "ScaledSoftControlNetWeights",
        "display_name": "Scaled Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
        "output_node": false
    },
    "ScaledSoftMaskedUniversalWeights": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "min_base_multiplier": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "max_base_multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "ScaledSoftMaskedUniversalWeights",
        "display_name": "Scaled Soft Masked Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
        "output_node": false
    },
    "SoftControlNetWeights": {
        "input": {
            "required": {
                "weight_00": [
                    "FLOAT",
                    {
                        "default": 0.09941396206337118,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_01": [
                    "FLOAT",
                    {
                        "default": 0.12050177219802567,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_02": [
                    "FLOAT",
                    {
                        "default": 0.14606275417942507,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_03": [
                    "FLOAT",
                    {
                        "default": 0.17704576264172736,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_04": [
                    "FLOAT",
                    {
                        "default": 0.214600924414215,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_05": [
                    "FLOAT",
                    {
                        "default": 0.26012233262329093,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_06": [
                    "FLOAT",
                    {
                        "default": 0.3152997971191405,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_07": [
                    "FLOAT",
                    {
                        "default": 0.3821815722656249,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_08": [
                    "FLOAT",
                    {
                        "default": 0.4632503906249999,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_09": [
                    "FLOAT",
                    {
                        "default": 0.561515625,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_10": [
                    "FLOAT",
                    {
                        "default": 0.6806249999999999,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_11": [
                    "FLOAT",
                    {
                        "default": 0.825,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_12": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "flip_weights": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "SoftControlNetWeights",
        "display_name": "ControlNet Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
        "output_node": false
    },
    "CustomControlNetWeights": {
        "input": {
            "required": {
                "weight_00": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_01": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_02": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_03": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_04": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_05": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_06": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_07": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_08": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_09": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_10": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_11": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_12": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "flip_weights": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "CustomControlNetWeights",
        "display_name": "ControlNet Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/ControlNet",
        "output_node": false
    },
    "SoftT2IAdapterWeights": {
        "input": {
            "required": {
                "weight_00": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_01": [
                    "FLOAT",
                    {
                        "default": 0.62,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_02": [
                    "FLOAT",
                    {
                        "default": 0.825,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_03": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "flip_weights": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "SoftT2IAdapterWeights",
        "display_name": "T2IAdapter Soft Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
        "output_node": false
    },
    "CustomT2IAdapterWeights": {
        "input": {
            "required": {
                "weight_00": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_01": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_02": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "weight_03": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "flip_weights": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "CustomT2IAdapterWeights",
        "display_name": "T2IAdapter Custom Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights/T2IAdapter",
        "output_node": false
    },
    "ACN_DefaultUniversalWeights": {
        "input": {},
        "output": [
            "CONTROL_NET_WEIGHTS",
            "TIMESTEP_KEYFRAME"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "CN_WEIGHTS",
            "TK_SHORTCUT"
        ],
        "name": "ACN_DefaultUniversalWeights",
        "display_name": "Force Default Weights \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/weights",
        "output_node": false
    },
    "ACN_SparseCtrlRGBPreprocessor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "latent_size": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "proc_IMAGE"
        ],
        "name": "ACN_SparseCtrlRGBPreprocessor",
        "display_name": "RGB SparseCtrl \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/preprocess",
        "output_node": false
    },
    "ACN_SparseCtrlLoaderAdvanced": {
        "input": {
            "required": {
                "sparsectrl_name": [
                    []
                ],
                "use_motion": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "motion_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "sparse_method": [
                    "SPARSE_METHOD"
                ],
                "tk_optional": [
                    "TIMESTEP_KEYFRAME"
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "ACN_SparseCtrlLoaderAdvanced",
        "display_name": "Load SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
        "output_node": false
    },
    "ACN_SparseCtrlMergedLoaderAdvanced": {
        "input": {
            "required": {
                "sparsectrl_name": [
                    []
                ],
                "control_net_name": [
                    []
                ],
                "use_motion": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "motion_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "sparse_method": [
                    "SPARSE_METHOD"
                ],
                "tk_optional": [
                    "TIMESTEP_KEYFRAME"
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTROL_NET"
        ],
        "name": "ACN_SparseCtrlMergedLoaderAdvanced",
        "display_name": "Load Merged SparseCtrl Model \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl/experimental",
        "output_node": false
    },
    "ACN_SparseCtrlIndexMethodNode": {
        "input": {
            "required": {
                "indexes": [
                    "STRING",
                    {
                        "default": "0"
                    }
                ]
            }
        },
        "output": [
            "SPARSE_METHOD"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SPARSE_METHOD"
        ],
        "name": "ACN_SparseCtrlIndexMethodNode",
        "display_name": "SparseCtrl Index Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
        "output_node": false
    },
    "ACN_SparseCtrlSpreadMethodNode": {
        "input": {
            "required": {
                "spread": [
                    [
                        "uniform",
                        "starting",
                        "ending",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "SPARSE_METHOD"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SPARSE_METHOD"
        ],
        "name": "ACN_SparseCtrlSpreadMethodNode",
        "display_name": "SparseCtrl Spread Method \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/SparseCtrl",
        "output_node": false
    },
    "LoadImagesFromDirectory": {
        "input": {
            "required": {
                "directory": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "optional": {
                "image_load_cap": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "name": "LoadImagesFromDirectory",
        "display_name": "Load Images [DEPRECATED] \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d",
        "description": "",
        "category": "Adv-ControlNet \ud83d\udec2\ud83c\udd50\ud83c\udd52\ud83c\udd5d/deprecated",
        "output_node": false
    },
    "ConstrainImageforVideo|pysssss": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "max_width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 0
                    }
                ],
                "max_height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 0
                    }
                ],
                "min_width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "min_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "crop_if_required": [
                    [
                        "yes",
                        "no"
                    ],
                    {
                        "default": "no"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ConstrainImageforVideo|pysssss",
        "display_name": "Constrain Image for Video \ud83d\udc0d",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "StringFunction|pysssss": {
        "input": {
            "required": {
                "action": [
                    [
                        "append",
                        "replace"
                    ],
                    {}
                ],
                "tidy_tags": [
                    [
                        "yes",
                        "no"
                    ],
                    {}
                ],
                "text_a": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "text_b": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            },
            "optional": {
                "text_c": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "StringFunction|pysssss",
        "display_name": "String Function \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": true
    },
    "MathExpression|pysssss": {
        "input": {
            "required": {
                "expression": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "pysssss.autocomplete": {
                            "words": [
                                {
                                    "text": "round",
                                    "value": "round()",
                                    "showValue": false,
                                    "hint": "number, dp? = 0",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "ceil",
                                    "value": "ceil()",
                                    "showValue": false,
                                    "hint": "number",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "floor",
                                    "value": "floor()",
                                    "showValue": false,
                                    "hint": "number",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "min",
                                    "value": "min()",
                                    "showValue": false,
                                    "hint": "...numbers",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "max",
                                    "value": "max()",
                                    "showValue": false,
                                    "hint": "...numbers",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "randomint",
                                    "value": "randomint()",
                                    "showValue": false,
                                    "hint": "min, max",
                                    "caretOffset": -1
                                },
                                {
                                    "text": "randomchoice",
                                    "value": "randomchoice()",
                                    "showValue": false,
                                    "hint": "...numbers",
                                    "caretOffset": -1
                                }
                            ],
                            "separator": ""
                        }
                    }
                ]
            },
            "optional": {
                "a": [
                    "INT,FLOAT,IMAGE,LATENT"
                ],
                "b": [
                    "INT,FLOAT,IMAGE,LATENT"
                ],
                "c": [
                    "INT,FLOAT,IMAGE,LATENT"
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "INT",
            "FLOAT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "INT",
            "FLOAT"
        ],
        "name": "MathExpression|pysssss",
        "display_name": "Math Expression \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": true
    },
    "Repeater|pysssss": {
        "input": {
            "required": {
                "source": [
                    "*",
                    {}
                ],
                "repeats": [
                    "INT",
                    {
                        "min": 0,
                        "max": 5000,
                        "default": 2
                    }
                ],
                "output": [
                    [
                        "single",
                        "multi"
                    ],
                    {}
                ],
                "node_mode": [
                    [
                        "reuse",
                        "create"
                    ],
                    {}
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "*"
        ],
        "name": "Repeater|pysssss",
        "display_name": "Repeater \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": false
    },
    "LoraLoader|pysssss": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    []
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -20.0,
                        "max": 20.0,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -20.0,
                        "max": 20.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP"
        ],
        "name": "LoraLoader|pysssss",
        "display_name": "Lora Loader \ud83d\udc0d",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "CheckpointLoader|pysssss": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoader|pysssss",
        "display_name": "Checkpoint Loader \ud83d\udc0d",
        "description": "",
        "category": "loaders",
        "output_node": false
    },
    "ReroutePrimitive|pysssss": {
        "input": {
            "required": {
                "value": [
                    "*"
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ReroutePrimitive|pysssss",
        "display_name": "Reroute Primitive \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": false
    },
    "ShowText|pysssss": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ShowText|pysssss",
        "display_name": "Show Text \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": true
    },
    "LoadText|pysssss": {
        "input": {
            "required": {
                "root_dir": [
                    [
                        "input",
                        "output",
                        "temp"
                    ],
                    {}
                ],
                "file": [
                    [
                        "[none]"
                    ],
                    {
                        "pysssss.binding": [
                            {
                                "source": "root_dir",
                                "callback": [
                                    {
                                        "type": "set",
                                        "target": "$this.disabled",
                                        "value": true
                                    },
                                    {
                                        "type": "fetch",
                                        "url": "/pysssss/text-file/{$source.value}",
                                        "then": [
                                            {
                                                "type": "set",
                                                "target": "$this.options.values",
                                                "value": "$result"
                                            },
                                            {
                                                "type": "validate-combo"
                                            },
                                            {
                                                "type": "set",
                                                "target": "$this.disabled",
                                                "value": false
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "LoadText|pysssss",
        "display_name": "Load Text \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": false
    },
    "SaveText|pysssss": {
        "input": {
            "required": {
                "root_dir": [
                    [
                        "input",
                        "output",
                        "temp"
                    ],
                    {}
                ],
                "file": [
                    "STRING",
                    {
                        "default": "file.txt"
                    }
                ],
                "append": [
                    [
                        "append",
                        "overwrite",
                        "new only"
                    ],
                    {}
                ],
                "insert": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "new line",
                        "label_off": "none",
                        "pysssss.binding": [
                            {
                                "source": "append",
                                "callback": [
                                    {
                                        "type": "if",
                                        "condition": [
                                            {
                                                "left": "$source.value",
                                                "op": "eq",
                                                "right": "\"append\""
                                            }
                                        ],
                                        "true": [
                                            {
                                                "type": "set",
                                                "target": "$this.disabled",
                                                "value": false
                                            }
                                        ],
                                        "false": [
                                            {
                                                "type": "set",
                                                "target": "$this.disabled",
                                                "value": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "forceInput": true,
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "SaveText|pysssss",
        "display_name": "Save Text \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": false
    },
    "PlaySound|pysssss": {
        "input": {
            "required": {
                "any": [
                    "*",
                    {}
                ],
                "mode": [
                    [
                        "always",
                        "on empty queue"
                    ],
                    {}
                ],
                "volume": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 1,
                        "step": 0.1,
                        "default": 0.5
                    }
                ],
                "file": [
                    "STRING",
                    {
                        "default": "notify.mp3"
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "*"
        ],
        "name": "PlaySound|pysssss",
        "display_name": "PlaySound \ud83d\udc0d",
        "description": "",
        "category": "utils",
        "output_node": true
    },
    "ConstrainImage|pysssss": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "max_width": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 0
                    }
                ],
                "max_height": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 0
                    }
                ],
                "min_width": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "min_height": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "crop_if_required": [
                    [
                        "yes",
                        "no"
                    ],
                    {
                        "default": "no"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ConstrainImage|pysssss",
        "display_name": "Constrain Image \ud83d\udc0d",
        "description": "",
        "category": "image",
        "output_node": false
    },
    "IPAdapterModelLoader": {
        "input": {
            "required": {
                "ipadapter_file": [
                    []
                ]
            }
        },
        "output": [
            "IPADAPTER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IPADAPTER"
        ],
        "name": "IPAdapterModelLoader",
        "display_name": "Load IPAdapter Model",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterApply": {
        "input": {
            "required": {
                "ipadapter": [
                    "IPADAPTER"
                ],
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "image": [
                    "IMAGE"
                ],
                "model": [
                    "MODEL"
                ],
                "weight": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "noise": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "weight_type": [
                    [
                        "original",
                        "linear",
                        "channel penalty"
                    ]
                ],
                "start_at": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_at": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "unfold_batch": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "attn_mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "IPAdapterApply",
        "display_name": "Apply IPAdapter",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterApplyFaceID": {
        "input": {
            "required": {
                "ipadapter": [
                    "IPADAPTER"
                ],
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "insightface": [
                    "INSIGHTFACE"
                ],
                "image": [
                    "IMAGE"
                ],
                "model": [
                    "MODEL"
                ],
                "weight": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "noise": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "weight_type": [
                    [
                        "original",
                        "linear",
                        "channel penalty"
                    ]
                ],
                "start_at": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_at": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "faceid_v2": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "weight_v2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "unfold_batch": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "attn_mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "IPAdapterApplyFaceID",
        "display_name": "Apply IPAdapter FaceID",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterApplyEncoded": {
        "input": {
            "required": {
                "ipadapter": [
                    "IPADAPTER"
                ],
                "embeds": [
                    "EMBEDS"
                ],
                "model": [
                    "MODEL"
                ],
                "weight": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -1,
                        "max": 3,
                        "step": 0.05
                    }
                ],
                "weight_type": [
                    [
                        "original",
                        "linear",
                        "channel penalty"
                    ]
                ],
                "start_at": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_at": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "unfold_batch": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "attn_mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "IPAdapterApplyEncoded",
        "display_name": "Apply IPAdapter from Encoded",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "PrepImageForClipVision": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "interpolation": [
                    [
                        "LANCZOS",
                        "BICUBIC",
                        "HAMMING",
                        "BILINEAR",
                        "BOX",
                        "NEAREST"
                    ]
                ],
                "crop_position": [
                    [
                        "top",
                        "bottom",
                        "left",
                        "right",
                        "center",
                        "pad"
                    ]
                ],
                "sharpening": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "PrepImageForClipVision",
        "display_name": "Prepare Image For Clip Vision",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterEncoder": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "image_1": [
                    "IMAGE"
                ],
                "ipadapter_plus": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "noise": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "weight_1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "image_2": [
                    "IMAGE"
                ],
                "image_3": [
                    "IMAGE"
                ],
                "image_4": [
                    "IMAGE"
                ],
                "weight_2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "weight_3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "weight_4": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "EMBEDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "EMBEDS"
        ],
        "name": "IPAdapterEncoder",
        "display_name": "Encode IPAdapter Image",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterSaveEmbeds": {
        "input": {
            "required": {
                "embeds": [
                    "EMBEDS"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "embeds/IPAdapter"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "IPAdapterSaveEmbeds",
        "display_name": "Save IPAdapter Embeds",
        "description": "",
        "category": "ipadapter",
        "output_node": true
    },
    "IPAdapterLoadEmbeds": {
        "input": {
            "required": {
                "embeds": [
                    [
                        "__inputs__"
                    ]
                ]
            }
        },
        "output": [
            "EMBEDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "EMBEDS"
        ],
        "name": "IPAdapterLoadEmbeds",
        "display_name": "Load IPAdapter Embeds",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "IPAdapterBatchEmbeds": {
        "input": {
            "required": {
                "embed1": [
                    "EMBEDS"
                ],
                "embed2": [
                    "EMBEDS"
                ]
            }
        },
        "output": [
            "EMBEDS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "EMBEDS"
        ],
        "name": "IPAdapterBatchEmbeds",
        "display_name": "IPAdapter Batch Embeds",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "InsightFaceLoader": {
        "input": {
            "required": {
                "provider": [
                    [
                        "CPU",
                        "CUDA",
                        "ROCM"
                    ]
                ]
            }
        },
        "output": [
            "INSIGHTFACE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INSIGHTFACE"
        ],
        "name": "InsightFaceLoader",
        "display_name": "Load InsightFace",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "PrepImageForInsightFace": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_position": [
                    [
                        "center",
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                ],
                "sharpening": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "pad_around": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "PrepImageForInsightFace",
        "display_name": "Prepare Image For InsightFace",
        "description": "",
        "category": "ipadapter",
        "output_node": false
    },
    "INTConstant": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "value"
        ],
        "name": "INTConstant",
        "display_name": "INT Constant",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "FloatConstant": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "value"
        ],
        "name": "FloatConstant",
        "display_name": "Float Constant",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ConditioningMultiCombine": {
        "input": {
            "required": {
                "inputcount": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 20,
                        "step": 1
                    }
                ],
                "conditioning_1": [
                    "CONDITIONING"
                ],
                "conditioning_2": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined",
            "inputcount"
        ],
        "name": "ConditioningMultiCombine",
        "display_name": "Conditioning Multi Combine",
        "description": "",
        "category": "KJNodes/masking/conditioning",
        "output_node": false
    },
    "ConditioningSetMaskAndCombine": {
        "input": {
            "required": {
                "positive_1": [
                    "CONDITIONING"
                ],
                "negative_1": [
                    "CONDITIONING"
                ],
                "positive_2": [
                    "CONDITIONING"
                ],
                "negative_2": [
                    "CONDITIONING"
                ],
                "mask_1": [
                    "MASK"
                ],
                "mask_2": [
                    "MASK"
                ],
                "mask_1_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_2_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "set_cond_area": [
                    [
                        "default",
                        "mask bounds"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined_positive",
            "combined_negative"
        ],
        "name": "ConditioningSetMaskAndCombine",
        "display_name": "ConditioningSetMaskAndCombine",
        "description": "",
        "category": "KJNodes/masking/conditioning",
        "output_node": false
    },
    "ConditioningSetMaskAndCombine3": {
        "input": {
            "required": {
                "positive_1": [
                    "CONDITIONING"
                ],
                "negative_1": [
                    "CONDITIONING"
                ],
                "positive_2": [
                    "CONDITIONING"
                ],
                "negative_2": [
                    "CONDITIONING"
                ],
                "positive_3": [
                    "CONDITIONING"
                ],
                "negative_3": [
                    "CONDITIONING"
                ],
                "mask_1": [
                    "MASK"
                ],
                "mask_2": [
                    "MASK"
                ],
                "mask_3": [
                    "MASK"
                ],
                "mask_1_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_2_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_3_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "set_cond_area": [
                    [
                        "default",
                        "mask bounds"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined_positive",
            "combined_negative"
        ],
        "name": "ConditioningSetMaskAndCombine3",
        "display_name": "ConditioningSetMaskAndCombine3",
        "description": "",
        "category": "KJNodes/masking/conditioning",
        "output_node": false
    },
    "ConditioningSetMaskAndCombine4": {
        "input": {
            "required": {
                "positive_1": [
                    "CONDITIONING"
                ],
                "negative_1": [
                    "CONDITIONING"
                ],
                "positive_2": [
                    "CONDITIONING"
                ],
                "negative_2": [
                    "CONDITIONING"
                ],
                "positive_3": [
                    "CONDITIONING"
                ],
                "negative_3": [
                    "CONDITIONING"
                ],
                "positive_4": [
                    "CONDITIONING"
                ],
                "negative_4": [
                    "CONDITIONING"
                ],
                "mask_1": [
                    "MASK"
                ],
                "mask_2": [
                    "MASK"
                ],
                "mask_3": [
                    "MASK"
                ],
                "mask_4": [
                    "MASK"
                ],
                "mask_1_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_2_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_3_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_4_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "set_cond_area": [
                    [
                        "default",
                        "mask bounds"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined_positive",
            "combined_negative"
        ],
        "name": "ConditioningSetMaskAndCombine4",
        "display_name": "ConditioningSetMaskAndCombine4",
        "description": "",
        "category": "KJNodes/masking/conditioning",
        "output_node": false
    },
    "ConditioningSetMaskAndCombine5": {
        "input": {
            "required": {
                "positive_1": [
                    "CONDITIONING"
                ],
                "negative_1": [
                    "CONDITIONING"
                ],
                "positive_2": [
                    "CONDITIONING"
                ],
                "negative_2": [
                    "CONDITIONING"
                ],
                "positive_3": [
                    "CONDITIONING"
                ],
                "negative_3": [
                    "CONDITIONING"
                ],
                "positive_4": [
                    "CONDITIONING"
                ],
                "negative_4": [
                    "CONDITIONING"
                ],
                "positive_5": [
                    "CONDITIONING"
                ],
                "negative_5": [
                    "CONDITIONING"
                ],
                "mask_1": [
                    "MASK"
                ],
                "mask_2": [
                    "MASK"
                ],
                "mask_3": [
                    "MASK"
                ],
                "mask_4": [
                    "MASK"
                ],
                "mask_5": [
                    "MASK"
                ],
                "mask_1_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_2_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_3_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_4_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "mask_5_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "set_cond_area": [
                    [
                        "default",
                        "mask bounds"
                    ]
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined_positive",
            "combined_negative"
        ],
        "name": "ConditioningSetMaskAndCombine5",
        "display_name": "ConditioningSetMaskAndCombine5",
        "description": "",
        "category": "KJNodes/masking/conditioning",
        "output_node": false
    },
    "GrowMaskWithBlur": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "expand": [
                    "INT",
                    {
                        "default": 0,
                        "min": -8192,
                        "max": 8192,
                        "step": 1
                    }
                ],
                "incremental_expandrate": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "tapered_corners": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "flip_input": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "blur_radius": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "lerp_alpha": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "decay_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "mask",
            "mask_inverted"
        ],
        "name": "GrowMaskWithBlur",
        "display_name": "GrowMaskWithBlur",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "ColorToMask": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "red": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "green": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "blue": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ColorToMask",
        "display_name": "ColorToMask",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "CreateGradientMask": {
        "input": {
            "required": {
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "CreateGradientMask",
        "display_name": "CreateGradientMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateTextMask": {
        "input": {
            "required": {
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "text_x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "text_y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 32,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "font_color": [
                    "STRING",
                    {
                        "default": "white"
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "default": "HELLO!"
                    }
                ],
                "font_path": [
                    "STRING",
                    {
                        "default": "fonts\\TTNorms-Black.otf"
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "start_rotation": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 359,
                        "step": 1
                    }
                ],
                "end_rotation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -359,
                        "max": 359,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "CreateTextMask",
        "display_name": "CreateTextMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateAudioMask": {
        "input": {
            "required": {
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "scale": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.01
                    }
                ],
                "audio_path": [
                    "STRING",
                    {
                        "default": "audio.wav"
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CreateAudioMask",
        "display_name": "CreateAudioMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateFadeMask": {
        "input": {
            "required": {
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 255,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "interpolation": [
                    [
                        "linear",
                        "ease_in",
                        "ease_out",
                        "ease_in_out"
                    ]
                ],
                "start_level": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "midpoint_level": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "end_level": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "midpoint_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "CreateFadeMask",
        "display_name": "CreateFadeMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateFadeMaskAdvanced": {
        "input": {
            "required": {
                "points_string": [
                    "STRING",
                    {
                        "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
                        "multiline": true
                    }
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 16,
                        "min": 2,
                        "max": 255,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "interpolation": [
                    [
                        "linear",
                        "ease_in",
                        "ease_out",
                        "ease_in_out"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "CreateFadeMaskAdvanced",
        "display_name": "CreateFadeMaskAdvanced",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateFluidMask": {
        "input": {
            "required": {
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "inflow_count": [
                    "INT",
                    {
                        "default": 3,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "inflow_velocity": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "inflow_radius": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "inflow_padding": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ],
                "inflow_duration": [
                    "INT",
                    {
                        "default": 60,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "CreateFluidMask",
        "display_name": "CreateFluidMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "VRAM_Debug": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "empty_cuda_cache": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "clip_vision": [
                    "CLIP_VISION"
                ]
            }
        },
        "output": [
            "MODEL",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "freemem_before",
            "freemem_after"
        ],
        "name": "VRAM_Debug",
        "display_name": "VRAM Debug",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "SomethingToString": {
        "input": {
            "required": {
                "input": [
                    "*",
                    {
                        "forceinput": true,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "SomethingToString",
        "display_name": "SomethingToString",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "CrossFadeImages": {
        "input": {
            "required": {
                "images_1": [
                    "IMAGE"
                ],
                "images_2": [
                    "IMAGE"
                ],
                "interpolation": [
                    [
                        "linear",
                        "ease_in",
                        "ease_out",
                        "ease_in_out",
                        "bounce",
                        "elastic",
                        "glitchy",
                        "exponential_ease_out"
                    ]
                ],
                "transition_start_index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "transitioning_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "start_level": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "end_level": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CrossFadeImages",
        "display_name": "CrossFadeImages",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "EmptyLatentImagePresets": {
        "input": {
            "required": {
                "dimensions": [
                    [
                        "512 x 512",
                        "768 x 512",
                        "960 x 512",
                        "1024 x 512",
                        "1536 x 640",
                        "1344 x 768",
                        "1216 x 832",
                        "1152 x 896",
                        "1024 x 1024"
                    ],
                    {
                        "default": "512 x 512"
                    }
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "LATENT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "Latent",
            "Width",
            "Height"
        ],
        "name": "EmptyLatentImagePresets",
        "display_name": "EmptyLatentImagePresets",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ColorMatch": {
        "input": {
            "required": {
                "image_ref": [
                    "IMAGE"
                ],
                "image_target": [
                    "IMAGE"
                ],
                "method": [
                    [
                        "mkl",
                        "hm",
                        "reinhard",
                        "mvgd",
                        "hm-mvgd-hm",
                        "hm-mkl-hm"
                    ],
                    {
                        "default": "mkl"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "ColorMatch",
        "display_name": "ColorMatch",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "GetImageRangeFromBatch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "num_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "GetImageRangeFromBatch",
        "display_name": "GetImageRangeFromBatch",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "SaveImageWithAlpha": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "SaveImageWithAlpha",
        "display_name": "SaveImageWithAlpha",
        "description": "",
        "category": "image",
        "output_node": true
    },
    "ReverseImageBatch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ReverseImageBatch",
        "display_name": "ReverseImageBatch",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ImageGridComposite2x2": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "image3": [
                    "IMAGE"
                ],
                "image4": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageGridComposite2x2",
        "display_name": "ImageGridComposite2x2",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ImageGridComposite3x3": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "image3": [
                    "IMAGE"
                ],
                "image4": [
                    "IMAGE"
                ],
                "image5": [
                    "IMAGE"
                ],
                "image6": [
                    "IMAGE"
                ],
                "image7": [
                    "IMAGE"
                ],
                "image8": [
                    "IMAGE"
                ],
                "image9": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageGridComposite3x3",
        "display_name": "ImageGridComposite3x3",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ImageConcanate": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ],
                "image2": [
                    "IMAGE"
                ],
                "direction": [
                    [
                        "right",
                        "down",
                        "left",
                        "up"
                    ],
                    {
                        "default": "right"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageConcanate",
        "display_name": "ImageConcatenate",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ImageBatchTestPattern": {
        "input": {
            "required": {
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "start_from": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBatchTestPattern",
        "display_name": "ImageBatchTestPattern",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ReplaceImagesInBatch": {
        "input": {
            "required": {
                "original_images": [
                    "IMAGE"
                ],
                "replacement_images": [
                    "IMAGE"
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ReplaceImagesInBatch",
        "display_name": "ReplaceImagesInBatch",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "BatchCropFromMask": {
        "input": {
            "required": {
                "original_images": [
                    "IMAGE"
                ],
                "masks": [
                    "MASK"
                ],
                "crop_size_mult": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "bbox_smooth_alpha": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "BBOX",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "original_images",
            "cropped_images",
            "bboxes",
            "width",
            "height"
        ],
        "name": "BatchCropFromMask",
        "display_name": "BatchCropFromMask",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "BatchCropFromMaskAdvanced": {
        "input": {
            "required": {
                "original_images": [
                    "IMAGE"
                ],
                "masks": [
                    "MASK"
                ],
                "crop_size_mult": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "bbox_smooth_alpha": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "MASK",
            "IMAGE",
            "MASK",
            "BBOX",
            "BBOX",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "original_images",
            "cropped_images",
            "cropped_masks",
            "combined_crop_image",
            "combined_crop_masks",
            "bboxes",
            "combined_bounding_box",
            "bbox_width",
            "bbox_height"
        ],
        "name": "BatchCropFromMaskAdvanced",
        "display_name": "BatchCropFromMaskAdvanced",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "FilterZeroMasksAndCorrespondingImages": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            },
            "optional": {
                "original_images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "MASK",
            "IMAGE",
            "IMAGE",
            "INDEXES"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "non_zero_masks_out",
            "non_zero_mask_images_out",
            "zero_mask_images_out",
            "zero_mask_images_out_indexes"
        ],
        "name": "FilterZeroMasksAndCorrespondingImages",
        "display_name": "FilterZeroMasksAndCorrespondingImages",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "InsertImageBatchByIndexes": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "images_to_insert": [
                    "IMAGE"
                ],
                "insert_indexes": [
                    "INDEXES"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images_after_insert"
        ],
        "name": "InsertImageBatchByIndexes",
        "display_name": "InsertImageBatchByIndexes",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "BatchUncrop": {
        "input": {
            "required": {
                "original_images": [
                    "IMAGE"
                ],
                "cropped_images": [
                    "IMAGE"
                ],
                "bboxes": [
                    "BBOX"
                ],
                "border_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_rescale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "border_top": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "border_bottom": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "border_left": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "border_right": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "BatchUncrop",
        "display_name": "BatchUncrop",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "BatchUncropAdvanced": {
        "input": {
            "required": {
                "original_images": [
                    "IMAGE"
                ],
                "cropped_images": [
                    "IMAGE"
                ],
                "cropped_masks": [
                    "MASK"
                ],
                "combined_crop_mask": [
                    "MASK"
                ],
                "bboxes": [
                    "BBOX"
                ],
                "border_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "crop_rescale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "use_combined_mask": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "use_square_mask": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            },
            "optional": {
                "combined_bounding_box": [
                    "BBOX",
                    {
                        "default": null
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "BatchUncropAdvanced",
        "display_name": "BatchUncropAdvanced",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "BatchCLIPSeg": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.15,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "binary_mask": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "combine_mask": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "use_cuda": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Mask"
        ],
        "name": "BatchCLIPSeg",
        "display_name": "BatchCLIPSeg",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "RoundMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "RoundMask",
        "display_name": "RoundMask",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "ResizeMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8,
                        "display": "number"
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 8192,
                        "step": 8,
                        "display": "number"
                    }
                ],
                "keep_proportions": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "mask",
            "width",
            "height"
        ],
        "name": "ResizeMask",
        "display_name": "ResizeMask",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "OffsetMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 8192,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 8192,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "angle": [
                    "INT",
                    {
                        "default": 0,
                        "min": -360,
                        "max": 360,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "duplication_factor": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "roll": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "incremental": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "padding_mode": [
                    [
                        "empty",
                        "border",
                        "reflection"
                    ],
                    {
                        "default": "empty"
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "mask"
        ],
        "name": "OffsetMask",
        "display_name": "OffsetMask",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "WidgetToString": {
        "input": {
            "required": {
                "id": [
                    "INT",
                    {
                        "default": 0
                    }
                ],
                "widget_name": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "return_all": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "prompt": "PROMPT"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "WidgetToString",
        "display_name": "WidgetToString",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "CreateShapeMask": {
        "input": {
            "required": {
                "shape": [
                    [
                        "circle",
                        "square",
                        "triangle"
                    ],
                    {
                        "default": "circle"
                    }
                ],
                "frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "location_x": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "location_y": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "grow": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "frame_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "frame_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "shape_width": [
                    "INT",
                    {
                        "default": 128,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "shape_height": [
                    "INT",
                    {
                        "default": 128,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "mask",
            "mask_inverted"
        ],
        "name": "CreateShapeMask",
        "display_name": "CreateShapeMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateVoronoiMask": {
        "input": {
            "required": {
                "frames": [
                    "INT",
                    {
                        "default": 16,
                        "min": 2,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "num_points": [
                    "INT",
                    {
                        "default": 15,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "line_width": [
                    "INT",
                    {
                        "default": 4,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "speed": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "frame_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "frame_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "mask",
            "mask_inverted"
        ],
        "name": "CreateVoronoiMask",
        "display_name": "CreateVoronoiMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "CreateMagicMask": {
        "input": {
            "required": {
                "frames": [
                    "INT",
                    {
                        "default": 16,
                        "min": 2,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "depth": [
                    "INT",
                    {
                        "default": 12,
                        "min": 1,
                        "max": 500,
                        "step": 1
                    }
                ],
                "distortion": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 123,
                        "min": 0,
                        "max": 99999999,
                        "step": 1
                    }
                ],
                "transitions": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 20,
                        "step": 1
                    }
                ],
                "frame_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "frame_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "mask",
            "mask_inverted"
        ],
        "name": "CreateMagicMask",
        "display_name": "CreateMagicMask",
        "description": "",
        "category": "KJNodes/masking/generate",
        "output_node": false
    },
    "BboxToInt": {
        "input": {
            "required": {
                "bboxes": [
                    "BBOX"
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 99999999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "x_min",
            "y_min",
            "width",
            "height",
            "center_x",
            "center_y"
        ],
        "name": "BboxToInt",
        "display_name": "BboxToInt",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "SplitBboxes": {
        "input": {
            "required": {
                "bboxes": [
                    "BBOX"
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 99999999,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "BBOX",
            "BBOX"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "bboxes_a",
            "bboxes_b"
        ],
        "name": "SplitBboxes",
        "display_name": "SplitBboxes",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "ImageGrabPIL": {
        "input": {
            "required": {
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "num_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 255,
                        "step": 1
                    }
                ],
                "delay": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "ImageGrabPIL",
        "display_name": "ImageGrabPIL",
        "description": "",
        "category": "KJNodes/experimental",
        "output_node": false
    },
    "DummyLatentOut": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "DummyLatentOut",
        "display_name": "DummyLatentOut",
        "description": "",
        "category": "KJNodes",
        "output_node": true
    },
    "NormalizeLatent": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "NormalizeLatent",
        "display_name": "NormalizeLatent",
        "description": "",
        "category": "KJNodes/noise",
        "output_node": true
    },
    "FlipSigmasAdjusted": {
        "input": {
            "required": {
                "sigmas": [
                    "SIGMAS"
                ]
            }
        },
        "output": [
            "SIGMAS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SIGMAS"
        ],
        "name": "FlipSigmasAdjusted",
        "display_name": "FlipSigmasAdjusted",
        "description": "",
        "category": "KJNodes/noise",
        "output_node": false
    },
    "InjectNoiseToLatent": {
        "input": {
            "required": {
                "latents": [
                    "LATENT"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 200.0,
                        "step": 0.0001
                    }
                ],
                "noise": [
                    "LATENT"
                ],
                "normalize": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "average": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "InjectNoiseToLatent",
        "display_name": "InjectNoiseToLatent",
        "description": "",
        "category": "KJNodes/noise",
        "output_node": false
    },
    "AddLabel": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "text_x": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "text_y": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 48,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "font_color": [
                    "STRING",
                    {
                        "default": "white"
                    }
                ],
                "label_color": [
                    "STRING",
                    {
                        "default": "black"
                    }
                ],
                "font": [
                    "STRING",
                    {
                        "default": "TTNorms-Black.otf"
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "default": "Text"
                    }
                ],
                "direction": [
                    [
                        "up",
                        "down"
                    ],
                    {
                        "default": "up"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AddLabel",
        "display_name": "AddLabel",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ReferenceOnlySimple3": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "reference": [
                    "LATENT"
                ],
                "reference2": [
                    "LATENT"
                ],
                "input": [
                    "LATENT"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "LATENT"
        ],
        "name": "ReferenceOnlySimple3",
        "display_name": "ReferenceOnlySimple3",
        "description": "",
        "category": "KJNodes/experiments",
        "output_node": false
    },
    "SoundReactive": {
        "input": {
            "required": {
                "sound_level": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 99999,
                        "step": 0.01
                    }
                ],
                "start_range_hz": [
                    "INT",
                    {
                        "default": 150,
                        "min": 0,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "end_range_hz": [
                    "INT",
                    {
                        "default": 2000,
                        "min": 0,
                        "max": 9999,
                        "step": 1
                    }
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 99999,
                        "step": 0.01
                    }
                ],
                "smoothing_factor": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "normalize": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "sound_level",
            "sound_level_int"
        ],
        "name": "SoundReactive",
        "display_name": "SoundReactive",
        "description": "",
        "category": "KJNodes/experimental",
        "output_node": false
    },
    "GenerateNoise": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 123,
                        "min": 0,
                        "max": 18446744073709551615,
                        "step": 1
                    }
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 4096,
                        "step": 0.01
                    }
                ],
                "constant_batch_noise": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "normalize": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "model": [
                    "MODEL"
                ],
                "sigmas": [
                    "SIGMAS"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "GenerateNoise",
        "display_name": "GenerateNoise",
        "description": "",
        "category": "KJNodes/noise",
        "output_node": false
    },
    "StableZero123_BatchSchedule": {
        "input": {
            "required": {
                "clip_vision": [
                    "CLIP_VISION"
                ],
                "init_image": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "min": 16,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ],
                "interpolation": [
                    [
                        "linear",
                        "ease_in",
                        "ease_out",
                        "ease_in_out"
                    ]
                ],
                "azimuth_points_string": [
                    "STRING",
                    {
                        "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
                        "multiline": true
                    }
                ],
                "elevation_points_string": [
                    "STRING",
                    {
                        "default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "CONDITIONING",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative",
            "latent"
        ],
        "name": "StableZero123_BatchSchedule",
        "display_name": "StableZero123_BatchSchedule",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "GetImagesFromBatchIndexed": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "indexes": [
                    "STRING",
                    {
                        "default": "0, 1, 2",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "GetImagesFromBatchIndexed",
        "display_name": "GetImagesFromBatchIndexed",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ImageBatchRepeatInterleaving": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "repeats": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4096
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageBatchRepeatInterleaving",
        "display_name": "ImageBatchRepeatInterleaving",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "NormalizedAmplitudeToMask": {
        "input": {
            "required": {
                "normalized_amp": [
                    "NORMALIZED_AMPLITUDE"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "frame_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "location_x": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "location_y": [
                    "INT",
                    {
                        "default": 256,
                        "min": 0,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "size": [
                    "INT",
                    {
                        "default": 128,
                        "min": 8,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "shape": [
                    [
                        "none",
                        "circle",
                        "square",
                        "triangle"
                    ],
                    {
                        "default": "none"
                    }
                ],
                "color": [
                    [
                        "white",
                        "amplitude"
                    ],
                    {
                        "default": "amplitude"
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "NormalizedAmplitudeToMask",
        "display_name": "NormalizedAmplitudeToMask",
        "description": "",
        "category": "AudioScheduler/Amplitude",
        "output_node": false
    },
    "OffsetMaskByNormalizedAmplitude": {
        "input": {
            "required": {
                "normalized_amp": [
                    "NORMALIZED_AMPLITUDE"
                ],
                "mask": [
                    "MASK"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 8192,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": -4096,
                        "max": 8192,
                        "step": 1,
                        "display": "number"
                    }
                ],
                "rotate": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "angle_multiplier": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -1.0,
                        "max": 1.0,
                        "step": 0.001,
                        "display": "number"
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "mask"
        ],
        "name": "OffsetMaskByNormalizedAmplitude",
        "display_name": "OffsetMaskByNormalizedAmplitude",
        "description": "",
        "category": "KJNodes/masking",
        "output_node": false
    },
    "ImageTransformByNormalizedAmplitude": {
        "input": {
            "required": {
                "normalized_amp": [
                    "NORMALIZED_AMPLITUDE"
                ],
                "zoom_scale": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -1.0,
                        "max": 1.0,
                        "step": 0.001,
                        "display": "number"
                    }
                ],
                "cumulative": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageTransformByNormalizedAmplitude",
        "display_name": "ImageTransformByNormalizedAmplitude",
        "description": "",
        "category": "KJNodes",
        "output_node": false
    },
    "ConditioningBlend": {
        "input": {
            "required": {
                "conditioning_a": [
                    "CONDITIONING"
                ],
                "conditioning_b": [
                    "CONDITIONING"
                ],
                "blending_mode": [
                    [
                        "add",
                        "bislerp",
                        "cosine interp",
                        "cuberp",
                        "difference",
                        "exclusion",
                        "hslerp",
                        "inject",
                        "lerp",
                        "random",
                        "slerp",
                        "subtract"
                    ]
                ],
                "blending_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": -10.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "conditioning"
        ],
        "name": "ConditioningBlend",
        "display_name": "Conditioning (Blend)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "DebugInput": {
        "input": {
            "required": {
                "input": [
                    "*",
                    {}
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "DebugInput",
        "display_name": "Debug Input",
        "description": "",
        "category": "debug",
        "output_node": true
    },
    "VAEEncodeForInpaint (WAS)": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "mask": [
                    "MASK"
                ],
                "mask_offset": [
                    "INT",
                    {
                        "default": 6,
                        "min": -128,
                        "max": 128,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "VAEEncodeForInpaint (WAS)",
        "display_name": "Inpainting VAE Encode (WAS)",
        "description": "",
        "category": "latent/inpaint",
        "output_node": false
    },
    "VividSharpen": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "radius": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 0.01,
                        "max": 64.0,
                        "step": 0.01
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "VividSharpen",
        "display_name": "VividSharpen",
        "description": "",
        "category": "image/postprocessing",
        "output_node": false
    },
    "CLIPTextEncodeList": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++"
                    ]
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "0:A portrait of a rosebud\n5:A portrait of a blooming rosebud\n10:A portrait of a blooming rose\n15:A portrait of a rose"
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING_SEQ"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "conditioning_sequence"
        ],
        "name": "CLIPTextEncodeList",
        "display_name": "CLIP Text Encode Sequence (Advanced)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "CLIPTextEncodeSequence2": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "token_normalization": [
                    [
                        "none",
                        "mean",
                        "length",
                        "length+mean"
                    ]
                ],
                "weight_interpretation": [
                    [
                        "comfy",
                        "A1111",
                        "compel",
                        "comfy++"
                    ]
                ],
                "cond_keyframes_type": [
                    [
                        "linear",
                        "sinus",
                        "sinus_inverted",
                        "half_sinus",
                        "half_sinus_inverted"
                    ]
                ],
                "frame_count": [
                    "INT",
                    {
                        "default": 100,
                        "min": 1,
                        "max": 1024,
                        "step": 1
                    }
                ],
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "A portrait of a rosebud\nA portrait of a blooming rosebud\nA portrait of a blooming rose\nA portrait of a rose"
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "conditioning_sequence",
            "cond_keyframes",
            "frame_count"
        ],
        "name": "CLIPTextEncodeSequence2",
        "display_name": "CLIP Text Encode Sequence (v2)",
        "description": "",
        "category": "conditioning",
        "output_node": false
    },
    "KSamplerSeq": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "seed_mode_seq": [
                    [
                        "increment",
                        "decrement",
                        "random",
                        "fixed"
                    ]
                ],
                "alternate_values": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.5,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "sequence_loop_count": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 1024,
                        "step": 1
                    }
                ],
                "positive_seq": [
                    "CONDITIONING_SEQ"
                ],
                "negative_seq": [
                    "CONDITIONING_SEQ"
                ],
                "use_conditioning_slerp": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "cond_slerp_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "latent_image": [
                    "LATENT"
                ],
                "use_latent_interpolation": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "latent_interpolation_mode": [
                    [
                        "Blend",
                        "Slerp",
                        "Cosine Interp"
                    ]
                ],
                "latent_interp_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "denoise_start": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "denoise_seq": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "unsample_latents": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSamplerSeq",
        "display_name": "KSampler Sequence",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "KSamplerSeq2": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "seed_mode_seq": [
                    [
                        "increment",
                        "decrement",
                        "random",
                        "fixed"
                    ]
                ],
                "alternate_values": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.5,
                        "round": 0.01
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "frame_count": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024,
                        "step": 1
                    }
                ],
                "cond_keyframes": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1024,
                        "step": 1
                    }
                ],
                "positive_seq": [
                    "CONDITIONING"
                ],
                "negative_seq": [
                    "CONDITIONING"
                ],
                "use_conditioning_slerp": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "cond_slerp_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "latent_image": [
                    "LATENT"
                ],
                "use_latent_interpolation": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "latent_interpolation_mode": [
                    [
                        "Blend",
                        "Slerp",
                        "Cosine Interp"
                    ]
                ],
                "latent_interp_strength": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "denoise_start": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "denoise_seq": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "unsample_latents": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "inject_noise": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "noise_strength": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "max": 1.0,
                        "min": 0.001,
                        "step": 0.001
                    }
                ],
                "denoise_sine": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "denoise_max": [
                    "FLOAT",
                    {
                        "default": 0.9,
                        "max": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "seed_keying": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "seed_keying_mode": [
                    [
                        "sine",
                        "modulo"
                    ]
                ],
                "seed_divisor": [
                    "INT",
                    {
                        "default": 4,
                        "max": 1024,
                        "min": 2,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "KSamplerSeq2",
        "display_name": "KSampler Sequence (v2)",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "BLVAEEncode": {
        "input": {
            "required": {
                "vae": [
                    "VAE"
                ],
                "tiled": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "store_or_load_latent": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "remove_latent_on_load": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "delete_workflow_latent": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ]
            },
            "hidden": {
                "extra_pnginfo": "EXTRA_PNGINFO",
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "latent"
        ],
        "name": "BLVAEEncode",
        "display_name": "VAEEncode (Bundle Latent)",
        "description": "",
        "category": "latent",
        "output_node": false
    },
    "ReActorFaceSwap": {
        "input": {
            "required": {
                "enabled": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_off": "OFF",
                        "label_on": "ON"
                    }
                ],
                "input_image": [
                    "IMAGE"
                ],
                "swap_model": [
                    []
                ],
                "facedetection": [
                    [
                        "retinaface_resnet50",
                        "retinaface_mobile0.25",
                        "YOLOv5l",
                        "YOLOv5n"
                    ]
                ],
                "face_restore_model": [
                    [
                        "none",
                        "GFPGANv1.4.pth",
                        "codeformer-v0.1.0.pth",
                        "GFPGANv1.3.pth"
                    ]
                ],
                "face_restore_visibility": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0.1,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "codeformer_weight": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "detect_gender_input": [
                    [
                        "no",
                        "female",
                        "male"
                    ],
                    {
                        "default": "no"
                    }
                ],
                "detect_gender_source": [
                    [
                        "no",
                        "female",
                        "male"
                    ],
                    {
                        "default": "no"
                    }
                ],
                "input_faces_index": [
                    "STRING",
                    {
                        "default": "0"
                    }
                ],
                "source_faces_index": [
                    "STRING",
                    {
                        "default": "0"
                    }
                ],
                "console_log_level": [
                    [
                        0,
                        1,
                        2
                    ],
                    {
                        "default": 1
                    }
                ]
            },
            "optional": {
                "source_image": [
                    "IMAGE"
                ],
                "face_model": [
                    "FACE_MODEL"
                ]
            }
        },
        "output": [
            "IMAGE",
            "FACE_MODEL"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "FACE_MODEL"
        ],
        "name": "ReActorFaceSwap",
        "display_name": "ReActor - Fast Face Swap",
        "description": "",
        "category": "ReActor",
        "output_node": false
    },
    "ReActorLoadFaceModel": {
        "input": {
            "required": {
                "face_model": [
                    [
                        "none"
                    ]
                ]
            }
        },
        "output": [
            "FACE_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FACE_MODEL"
        ],
        "name": "ReActorLoadFaceModel",
        "display_name": "Load Face Model",
        "description": "",
        "category": "ReActor",
        "output_node": false
    },
    "ReActorSaveFaceModel": {
        "input": {
            "required": {
                "save_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_off": "OFF",
                        "label_on": "ON"
                    }
                ],
                "face_model_name": [
                    "STRING",
                    {
                        "default": "default"
                    }
                ],
                "select_face_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "face_model": [
                    "FACE_MODEL"
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ReActorSaveFaceModel",
        "display_name": "Save Face Model",
        "description": "",
        "category": "ReActor",
        "output_node": true
    },
    "ReActorRestoreFace": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "facedetection": [
                    [
                        "retinaface_resnet50",
                        "retinaface_mobile0.25",
                        "YOLOv5l",
                        "YOLOv5n"
                    ]
                ],
                "model": [
                    [
                        "none",
                        "GFPGANv1.4.pth",
                        "codeformer-v0.1.0.pth",
                        "GFPGANv1.3.pth"
                    ]
                ],
                "visibility": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0.0,
                        "max": 1,
                        "step": 0.05
                    }
                ],
                "codeformer_weight": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ReActorRestoreFace",
        "display_name": "Restore Face",
        "description": "",
        "category": "ReActor",
        "output_node": false
    },
    "LLMChatMessages": {
        "input": {
            "required": {
                "prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "default": "prompt"
                    }
                ],
                "role": [
                    [
                        "SYSTEM",
                        "USER"
                    ]
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_message"
        ],
        "name": "LLMChatMessages",
        "display_name": "\u221e Message",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMChatMessagesAdv": {
        "input": {
            "required": {
                "system_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "You are a dog, you cannot speak, only woof, and react as a dog would."
                    }
                ],
                "user_prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "plaeholder": "What is your name?"
                    }
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_message"
        ],
        "name": "LLMChatMessagesAdv",
        "display_name": "\u221e Message (Advanced)",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMChatMessageConcat": {
        "input": {
            "required": {
                "message_a": [
                    "LIST"
                ],
                "message_b": [
                    "LIST"
                ]
            }
        },
        "output": [
            "LIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_message"
        ],
        "name": "LLMChatMessageConcat",
        "display_name": "\u221e Messages Concat",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMServiceContextDefault": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ]
            }
        },
        "output": [
            "LLM_CONTEXT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_context"
        ],
        "name": "LLMServiceContextDefault",
        "display_name": "\u221e Service Context",
        "description": "",
        "category": "SALT/Llama-Index/Context",
        "output_node": false
    },
    "LLMServiceContextAdv": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ]
            },
            "optional": {
                "llm_embed_model": [
                    "LLM_EMBED"
                ],
                "llm_node_parser": [
                    "LLM_NODE_PARSER"
                ],
                "enable_chunk_overlap": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "chunk_overlap": [
                    "INT",
                    {
                        "default": 50,
                        "min": 0,
                        "max": 100
                    }
                ],
                "enable_context_window": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "context_window": [
                    "INT",
                    {
                        "default": 4096,
                        "min": 2048,
                        "max": 8192
                    }
                ],
                "enable_num_output": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "num_output": [
                    "INT",
                    {
                        "default": 256,
                        "min": 64,
                        "max": 1024
                    }
                ],
                "enable_chunk_size_limit": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "chunk_size_limit": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 512,
                        "max": 2048
                    }
                ]
            }
        },
        "output": [
            "LLM_CONTEXT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_context"
        ],
        "name": "LLMServiceContextAdv",
        "display_name": "\u221e Service Context (Advanced)",
        "description": "",
        "category": "SALT/Llama-Index/Context",
        "output_node": false
    },
    "LLMVectorStoreIndex": {
        "input": {
            "required": {
                "llm_documents": [
                    "DOCUMENT"
                ],
                "llm_context": [
                    "LLM_CONTEXT"
                ]
            }
        },
        "output": [
            "LLM_INDEX"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_index"
        ],
        "name": "LLMVectorStoreIndex",
        "display_name": "\u221e Vector Store Index",
        "description": "",
        "category": "SALT/Llama-Index/Indexing",
        "output_node": false
    },
    "LLMSummaryIndex": {
        "input": {
            "required": {
                "llm_documents": [
                    "DOCUMENT"
                ],
                "llm_context": [
                    "LLM_CONTEXT"
                ]
            }
        },
        "output": [
            "LLM_INDEX"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_index"
        ],
        "name": "LLMSummaryIndex",
        "display_name": "\u221e Summary Index",
        "description": "",
        "category": "SALT/Llama-Index/Indexing",
        "output_node": false
    },
    "LLMTreeIndex": {
        "input": {
            "required": {
                "llm_nodes": [
                    "LLM_NODES"
                ],
                "service_context": [
                    "LLM_CONTEXT"
                ]
            },
            "optional": {
                "num_children": [
                    "INT",
                    {
                        "default": 10
                    }
                ],
                "build_tree": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "LLM_INDEX"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_index"
        ],
        "name": "LLMTreeIndex",
        "display_name": "\u221e Tree Index",
        "description": "",
        "category": "SALT/Llama-Index/Indexing",
        "output_node": false
    },
    "LLMSentenceSplitterNodeCreator": {
        "input": {
            "required": {
                "llm_documents": [
                    "DOCUMENT"
                ]
            },
            "optional": {
                "chunk_size": [
                    "INT",
                    {
                        "default": 1024,
                        "min": 1
                    }
                ],
                "chunk_overlap": [
                    "INT",
                    {
                        "default": 20,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "LLM_NODES"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_nodes"
        ],
        "name": "LLMSentenceSplitterNodeCreator",
        "display_name": "\u221e Setence Splitter Node Creator",
        "description": "",
        "category": "SALT/Llama-Index/Tools",
        "output_node": false
    },
    "LLMSemanticSplitterNodeParser": {
        "input": {
            "required": {
                "llm_documents": [
                    "DOCUMENT"
                ],
                "llm_embed_model": [
                    "LLM_EMBED_MODEL"
                ]
            },
            "optional": {
                "buffer_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1
                    }
                ],
                "sentence_splitter": [
                    "LLM_SENTENCE_SPLITTER"
                ],
                "include_metadata": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "include_prev_next_rel": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "LLM_NODE_PARSER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "llm_node_parser"
        ],
        "name": "LLMSemanticSplitterNodeParser",
        "display_name": "\u221e Semantics Splitter Node Parser",
        "description": "",
        "category": "SALT/Llama-Index/Parsing",
        "output_node": false
    },
    "LLMChatEngine": {
        "input": {
            "required": {
                "llm_index": [
                    "LLM_INDEX"
                ],
                "query": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Ask a question"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "LLMChatEngine",
        "display_name": "\u221e Chat Engine",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMChat": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "message": [
                    "LIST"
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "response"
        ],
        "name": "LLMChat",
        "display_name": "\u221e Chat",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMComplete": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "The circumference of the Earth is"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "completion"
        ],
        "name": "LLMComplete",
        "display_name": "\u221e Complete",
        "description": "",
        "category": "SALT/Llama-Index/Messages",
        "output_node": false
    },
    "LLMJsonComposer": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Data..."
                    }
                ],
                "classifier_list": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "json_output"
        ],
        "name": "LLMJsonComposer",
        "display_name": "\u221e JSON Composer",
        "description": "",
        "category": "SALT/Llama-Index/Tools/JSON",
        "output_node": false
    },
    "LLMJsonRepair": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Malformed JSON..."
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "json_output"
        ],
        "name": "LLMJsonRepair",
        "display_name": "\u221e JSON Repair",
        "description": "",
        "category": "SALT/Llama-Index/Tools/JSON",
        "output_node": false
    },
    "LLMYamlComposer": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Data..."
                    }
                ],
                "classifier_list": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "yaml_output"
        ],
        "name": "LLMYamlComposer",
        "display_name": "\u221e YAML Composer",
        "description": "",
        "category": "SALT/Llama-Index/Tools/YAML",
        "output_node": false
    },
    "LLMYamlRepair": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Malformed YAML..."
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "yaml_output"
        ],
        "name": "LLMYamlRepair",
        "display_name": "\u221e YAML Repair",
        "description": "",
        "category": "SALT/Llama-Index/Tools/YAML",
        "output_node": false
    },
    "LLMMarkdownComposer": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Data..."
                    }
                ],
                "classifier_list": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "markdown_output"
        ],
        "name": "LLMMarkdownComposer",
        "display_name": "\u221e Markdown Composer",
        "description": "",
        "category": "SALT/Llama-Index/Tools/Markdown",
        "output_node": false
    },
    "LLMMarkdownRepair": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Malformed Markdown..."
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "markdown_output"
        ],
        "name": "LLMMarkdownRepair",
        "display_name": "\u221e Markdown Repair",
        "description": "",
        "category": "SALT/Llama-Index/Tools/Markdown",
        "output_node": false
    },
    "LLMHtmlComposer": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Data..."
                    }
                ],
                "classifier_list": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ],
                "composer_mode": [
                    [
                        "full_markup",
                        "blocked_markup"
                    ]
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "html_output"
        ],
        "name": "LLMHtmlComposer",
        "display_name": "\u221e HTML Composer",
        "description": "",
        "category": "SALT/Llama-Index/Tools/HTML",
        "output_node": false
    },
    "LLMHtmlRepair": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Malformed HTML..."
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "html_output"
        ],
        "name": "LLMHtmlRepair",
        "display_name": "\u221e HTML Repair",
        "description": "",
        "category": "SALT/Llama-Index/Tools/HTML",
        "output_node": false
    },
    "LLMRegexCreator": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "description": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Describe regex pattern to create, optionally provide example"
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow..."
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "regex_pattern"
        ],
        "name": "LLMRegexCreator",
        "display_name": "\u221e Regex Creator",
        "description": "",
        "category": "SALT/Llama-Index/Tools/Regex",
        "output_node": false
    },
    "LLMRegexRepair": {
        "input": {
            "required": {
                "llm_model": [
                    "LLM_MODEL"
                ],
                "text_input": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Enter the malformed regex pattern here"
                    }
                ],
                "description": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Describe what the regex pattern does wrong, and what it should do."
                    }
                ]
            },
            "optional": {
                "extra_directions": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Extra directions for the LLM to follow, such as specific constraints or formats"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "repaired_regex_pattern"
        ],
        "name": "LLMRegexRepair",
        "display_name": "\u221e Regex Repair",
        "description": "",
        "category": "SALT/Llama-Index/Tools/Regex",
        "output_node": false
    },
    "LLMOpenAIModel": {
        "input": {
            "required": {
                "ModelName": [
                    [
                        "gpt-3.5-turbo-0125",
                        "gpt-3.5-turbo",
                        "gpt-3.5-turbo-1106",
                        "gpt-3.5-turbo-instruct",
                        "gpt-3.5-turbo-16k",
                        "gpt-3.5-turbo-0613",
                        "gpt-3.5-turbo-16k-0613",
                        "gpt-4-0125-preview",
                        "gpt-4-turbo-preview",
                        "gpt-4-1106-preview",
                        "gpt-4-vision-preview",
                        "gpt-4-1106-vision-preview",
                        "gpt-4",
                        "gpt-4-0613",
                        "gpt-4-32k",
                        "gpt-4-32k-0613"
                    ]
                ],
                "EmbedModel": [
                    [
                        "ada",
                        "babbage",
                        "curie",
                        "davinci",
                        "text-embedding-3-large",
                        "text-embedding-3-small",
                        "text-embedding-ada-002"
                    ],
                    {
                        "default": "text-embedding-3-small"
                    }
                ],
                "api_key": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false,
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "LLM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Model"
        ],
        "name": "LLMOpenAIModel",
        "display_name": "\u221e OpenAI Model",
        "description": "",
        "category": "SALT/Llama-Index/Loaders",
        "output_node": false
    },
    "LLMLlamaCPPModel": {
        "input": {
            "required": {
                "ModelName": [
                    []
                ]
            }
        },
        "output": [
            "LLM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "Model"
        ],
        "name": "LLMLlamaCPPModel",
        "display_name": "\u221e LlamaCPP Model",
        "description": "",
        "category": "SALT/Llama-Index/Loaders",
        "output_node": false
    },
    "LLMCSVReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMCSVReader",
        "display_name": "\u221e CSV",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMFlatReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMFlatReader",
        "display_name": "\u221e Flat",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMImageCaptionReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMImageCaptionReader",
        "display_name": "\u221e Image Caption",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMImageTabularChartReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMImageTabularChartReader",
        "display_name": "\u221e Image Tabular Chart",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMImageVisionLLMReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMImageVisionLLMReader",
        "display_name": "\u221e Image Vision LLM",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMMarkdownReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMMarkdownReader",
        "display_name": "\u221e Markdown",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMPDFReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMPDFReader",
        "display_name": "\u221e PDF",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMPagedCSVReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMPagedCSVReader",
        "display_name": "\u221e Paged CSV",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMPandasCSVReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMPandasCSVReader",
        "display_name": "\u221e Pandas CSV",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMPptxReader": {
        "input": {
            "required": {
                "file": [
                    []
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMPptxReader",
        "display_name": "\u221e Pptx",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMDirectoryReader": {
        "input": {
            "required": {
                "input_directory": [
                    "STRING",
                    {}
                ]
            },
            "optional": {
                "recursive": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "required_ext_list": [
                    "STRING",
                    {
                        "default": ".json, .txt, .html"
                    }
                ],
                "exclude_glob_list": [
                    "STRING",
                    {
                        "default": ".sqlite, .zip"
                    }
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMDirectoryReader",
        "display_name": "\u221e Simple Directory",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMSimpleWebPageReader": {
        "input": {
            "required": {
                "url_1": [
                    "STRING",
                    {}
                ]
            },
            "optional": {
                "url_2": [
                    "STRING",
                    {}
                ],
                "url_3": [
                    "STRING",
                    {}
                ],
                "url_4": [
                    "STRING",
                    {}
                ],
                "html_to_text": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMSimpleWebPageReader",
        "display_name": "\u221e Simple Web Page",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMTrafilaturaWebReader": {
        "input": {
            "required": {
                "url_1": [
                    "STRING",
                    {}
                ]
            },
            "optional": {
                "url_2": [
                    "STRING",
                    {}
                ],
                "url_3": [
                    "STRING",
                    {}
                ],
                "url_4": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMTrafilaturaWebReader",
        "display_name": "\u221e Trafilatura Web",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMRssReaderNode": {
        "input": {
            "required": {
                "url_1": [
                    "STRING",
                    {}
                ]
            },
            "optional": {
                "url_2": [
                    "STRING",
                    {}
                ],
                "url_3": [
                    "STRING",
                    {}
                ],
                "url_4": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMRssReaderNode",
        "display_name": "\u221e RSS",
        "description": "",
        "category": "SALT/Llama-Index/Readers",
        "output_node": false
    },
    "LLMInputToDocuments": {
        "input": {
            "required": {
                "input_data": [
                    "*"
                ]
            },
            "optional": {
                "extra_info": [
                    "STRING",
                    {
                        "default": "{}"
                    }
                ],
                "concat_input": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMInputToDocuments",
        "display_name": "\u221e Input to Documents",
        "description": "",
        "category": "SALT/Llama-Index/Documents",
        "output_node": false
    },
    "LLMPostProcessDocuments": {
        "input": {
            "required": {
                "document": [
                    "DOCUMENT"
                ]
            },
            "optional": {
                "required_keywords": [
                    "STRING",
                    {}
                ],
                "exclude_keywords": [
                    "STRING",
                    {}
                ]
            }
        },
        "output": [
            "DOCUMENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "document"
        ],
        "name": "LLMPostProcessDocuments",
        "display_name": "\u221e Post Process Documents",
        "description": "",
        "category": "SALT/Llama-Index/Tools",
        "output_node": false
    },
    "LLMQueryEngine": {
        "input": {
            "required": {
                "llm_index": [
                    "LLM_INDEX"
                ]
            },
            "optional": {
                "query": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Type your query here"
                    }
                ],
                "llm_message": [
                    "LIST",
                    {}
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "results"
        ],
        "name": "LLMQueryEngine",
        "display_name": "\u221e Query Engine",
        "description": "",
        "category": "SALT/Llama-Index/Querying",
        "output_node": false
    },
    "LLMQueryEngineAdv": {
        "input": {
            "required": {
                "llm_index": [
                    "LLM_INDEX"
                ]
            },
            "optional": {
                "query": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Type your query here"
                    }
                ],
                "llm_message": [
                    "LIST",
                    {}
                ],
                "top_k": [
                    "INT",
                    {
                        "default": 10
                    }
                ],
                "similarity_cutoff": [
                    "FLOAT",
                    {
                        "default": 0.7
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "results"
        ],
        "name": "LLMQueryEngineAdv",
        "display_name": "\u221e Query Engine (Advanced)",
        "description": "",
        "category": "SALT/Llama-Index/Querying",
        "output_node": false
    },
    "Bbox From Mask (mtb)": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "BBOX",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "bbox",
            "image (optional)"
        ],
        "name": "Bbox From Mask (mtb)",
        "display_name": "Bbox From Mask (mtb)",
        "description": "",
        "category": "mtb/crop",
        "output_node": false
    },
    "Bbox (mtb)": {
        "input": {
            "required": {
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "BBOX"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BBOX"
        ],
        "name": "Bbox (mtb)",
        "display_name": "Bbox (mtb)",
        "description": "",
        "category": "mtb/crop",
        "output_node": false
    },
    "Crop (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            },
            "optional": {
                "mask": [
                    "MASK"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "max": 10000000,
                        "min": 0,
                        "step": 1
                    }
                ],
                "bbox": [
                    "BBOX"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "BBOX"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK",
            "BBOX"
        ],
        "name": "Crop (mtb)",
        "display_name": "Crop (mtb)",
        "description": "",
        "category": "mtb/crop",
        "output_node": false
    },
    "Uncrop (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_image": [
                    "IMAGE"
                ],
                "bbox": [
                    "BBOX"
                ],
                "border_blending": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Uncrop (mtb)",
        "display_name": "Uncrop (mtb)",
        "description": "",
        "category": "mtb/crop",
        "output_node": false
    },
    "Curve (mtb)": {
        "input": {
            "required": {
                "curve": [
                    "FLOAT_CURVE"
                ]
            }
        },
        "output": [
            "FLOAT_CURVE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT_CURVE"
        ],
        "name": "Curve (mtb)",
        "display_name": "Curve (mtb)",
        "description": "",
        "category": "mtb/curve",
        "output_node": false
    },
    "Face Swap (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "reference": [
                    "IMAGE"
                ],
                "faces_index": [
                    "STRING",
                    {
                        "default": "0"
                    }
                ],
                "faceanalysis_model": [
                    "FACE_ANALYSIS_MODEL",
                    {
                        "default": "None"
                    }
                ],
                "faceswap_model": [
                    "FACESWAP_MODEL",
                    {
                        "default": "None"
                    }
                ]
            },
            "optional": {}
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Face Swap (mtb)",
        "display_name": "Face Swap (mtb)",
        "description": "",
        "category": "mtb/facetools",
        "output_node": false
    },
    "Load Face Analysis Model (mtb)": {
        "input": {
            "required": {
                "faceswap_model": [
                    [
                        "antelopev2",
                        "buffalo_l",
                        "buffalo_m",
                        "buffalo_sc"
                    ],
                    {
                        "default": "buffalo_l"
                    }
                ]
            }
        },
        "output": [
            "FACE_ANALYSIS_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FACE_ANALYSIS_MODEL"
        ],
        "name": "Load Face Analysis Model (mtb)",
        "display_name": "Load Face Analysis Model (mtb)",
        "description": "",
        "category": "mtb/facetools",
        "output_node": false
    },
    "Latent Lerp (mtb)": {
        "input": {
            "required": {
                "A": [
                    "LATENT"
                ],
                "B": [
                    "LATENT"
                ],
                "t": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "Latent Lerp (mtb)",
        "display_name": "Latent Lerp (mtb)",
        "description": "",
        "category": "mtb/latent",
        "output_node": false
    },
    "String Replace (mtb)": {
        "input": {
            "required": {
                "string": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ],
                "old": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "new": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "String Replace (mtb)",
        "display_name": "String Replace (mtb)",
        "description": "",
        "category": "mtb/string",
        "output_node": false
    },
    "Fit Number (mtb)": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0,
                        "forceInput": true
                    }
                ],
                "clamp": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "source_min": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "step": 0.01
                    }
                ],
                "source_max": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "step": 0.01
                    }
                ],
                "target_min": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "step": 0.01
                    }
                ],
                "target_max": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "step": 0.01
                    }
                ],
                "easing": [
                    [
                        "Linear",
                        "Sine In",
                        "Sine Out",
                        "Sine In/Out",
                        "Quart In",
                        "Quart Out",
                        "Quart In/Out",
                        "Cubic In",
                        "Cubic Out",
                        "Cubic In/Out",
                        "Circ In",
                        "Circ Out",
                        "Circ In/Out",
                        "Back In",
                        "Back Out",
                        "Back In/Out",
                        "Elastic In",
                        "Elastic Out",
                        "Elastic In/Out",
                        "Bounce In",
                        "Bounce Out",
                        "Bounce In/Out"
                    ],
                    {
                        "default": "Linear"
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "Fit Number (mtb)",
        "display_name": "Fit Number (mtb)",
        "description": "Fit the input float using a source and target range",
        "category": "mtb/math",
        "output_node": false
    },
    "Get Batch From History (mtb)": {
        "input": {
            "required": {
                "enable": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "count": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0
                    }
                ],
                "offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1000000000.0,
                        "max": 1000000000.0
                    }
                ],
                "internal_count": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            },
            "optional": {
                "passthrough_image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "images"
        ],
        "name": "Get Batch From History (mtb)",
        "display_name": "Get Batch From History (mtb)",
        "description": "",
        "category": "mtb/animation",
        "output_node": false
    },
    "Any To String (mtb)": {
        "input": {
            "required": {
                "input": "*"
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Any To String (mtb)",
        "display_name": "Any To String (mtb)",
        "description": "",
        "category": "mtb/converters",
        "output_node": false
    },
    "Concat Images (mtb)": {
        "input": {
            "required": {
                "reverse": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Concat Images (mtb)",
        "display_name": "Concat Images (mtb)",
        "description": "",
        "category": "mtb/image",
        "output_node": false
    },
    "Math Expression (mtb)": {
        "input": {
            "required": {
                "expression": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true
                    }
                ]
            }
        },
        "output": [
            "FLOAT",
            "INT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "result (float)",
            "result (int)"
        ],
        "name": "Math Expression (mtb)",
        "display_name": "Math Expression (mtb)",
        "description": "evaluate a simple math expression string (!! Fallsback to eval)",
        "category": "mtb/math",
        "output_node": false
    },
    "Filter Z (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "depth": [
                    "IMAGE"
                ],
                "to_black": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "step": 0.01,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Filter Z (mtb)",
        "display_name": "Filter Z (mtb)",
        "description": "",
        "category": "mtb/filters",
        "output_node": false
    },
    "Model Patch Seamless (mtb)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "tiling": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "MODEL"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "Original Model (passthrough)",
            "Patched Model"
        ],
        "name": "Model Patch Seamless (mtb)",
        "display_name": "Model Patch Seamless (mtb)",
        "description": "",
        "category": "mtb/textures",
        "output_node": false
    },
    "Vae Decode (mtb)": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ],
                "seamless_model": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "use_tiling_decoder": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Vae Decode (mtb)",
        "display_name": "Vae Decode (mtb)",
        "description": "",
        "category": "mtb/decode",
        "output_node": false
    },
    "Load Image Sequence (mtb)": {
        "input": {
            "required": {
                "path": [
                    "STRING",
                    {
                        "default": "videos/####.png"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1,
                        "max": 9999999
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "image",
            "mask",
            "current_frame"
        ],
        "name": "Load Image Sequence (mtb)",
        "display_name": "Load Image Sequence (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": false
    },
    "Save Image Sequence (mtb)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "Sequence"
                    }
                ],
                "current_frame": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9999999
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Image Sequence (mtb)",
        "display_name": "Save Image Sequence (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": true
    },
    "Load Film Model (mtb)": {
        "input": {
            "required": {
                "film_model": [
                    [
                        "L1",
                        "Style",
                        "VGG"
                    ],
                    {
                        "default": "Style"
                    }
                ]
            }
        },
        "output": [
            "FILM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FILM_MODEL"
        ],
        "name": "Load Film Model (mtb)",
        "display_name": "Load Film Model (mtb)",
        "description": "",
        "category": "mtb/frame iterpolation",
        "output_node": false
    },
    "Film Interpolation (mtb)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "interpolate": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1,
                        "max": 50
                    }
                ],
                "film_model": [
                    "FILM_MODEL"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Film Interpolation (mtb)",
        "display_name": "Film Interpolation (mtb)",
        "description": "",
        "category": "mtb/frame iterpolation",
        "output_node": false
    },
    "Image Remove Background Rembg (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "alpha_matting": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "alpha_matting_foreground_threshold": [
                    "INT",
                    {
                        "default": 240,
                        "min": 0,
                        "max": 255
                    }
                ],
                "alpha_matting_background_threshold": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255
                    }
                ],
                "alpha_matting_erode_size": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 255
                    }
                ],
                "post_process_mask": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "bgcolor": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "Image (rgba)",
            "Mask",
            "Image"
        ],
        "name": "Image Remove Background Rembg (mtb)",
        "display_name": "Image Remove Background Rembg (mtb)",
        "description": "",
        "category": "mtb/image",
        "output_node": false
    },
    "Debug (mtb)": {
        "input": {
            "required": {
                "output_to_console": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Debug (mtb)",
        "display_name": "Debug (mtb)",
        "description": "",
        "category": "mtb/debug",
        "output_node": true
    },
    "Save Tensors (mtb)": {
        "input": {
            "required": {
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyPickle"
                    }
                ]
            },
            "optional": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ],
                "latent": [
                    "LATENT"
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Tensors (mtb)",
        "display_name": "Save Tensors (mtb)",
        "description": "",
        "category": "mtb/debug",
        "output_node": true
    },
    "Animation Builder (mtb)": {
        "input": {
            "required": {
                "total_frames": [
                    "INT",
                    {
                        "default": 100,
                        "min": 0
                    }
                ],
                "scale_float": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0
                    }
                ],
                "loop_count": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0
                    }
                ],
                "raw_iteration": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ],
                "raw_loop": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "INT",
            "FLOAT",
            "INT",
            "BOOLEAN"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "frame",
            "0-1 (scaled)",
            "count",
            "loop_ended"
        ],
        "name": "Animation Builder (mtb)",
        "display_name": "Animation Builder (mtb)",
        "description": "",
        "category": "mtb/animation",
        "output_node": false
    },
    "Batch Float (mtb)": {
        "input": {
            "required": {
                "mode": [
                    [
                        "Single",
                        "Steps"
                    ],
                    {
                        "default": "Steps"
                    }
                ],
                "count": [
                    "INT",
                    {
                        "default": 1
                    }
                ],
                "min": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "max": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "easing": [
                    [
                        "Linear",
                        "Sine In",
                        "Sine Out",
                        "Sine In/Out",
                        "Quart In",
                        "Quart Out",
                        "Quart In/Out",
                        "Cubic In",
                        "Cubic Out",
                        "Cubic In/Out",
                        "Circ In",
                        "Circ Out",
                        "Circ In/Out",
                        "Back In",
                        "Back Out",
                        "Back In/Out",
                        "Elastic In",
                        "Elastic Out",
                        "Elastic In/Out",
                        "Bounce In",
                        "Bounce Out",
                        "Bounce In/Out"
                    ],
                    {
                        "default": "Linear"
                    }
                ]
            }
        },
        "output": [
            "FLOATS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOATS"
        ],
        "name": "Batch Float (mtb)",
        "display_name": "Batch Float (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Transform (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "border_handling": [
                    [
                        "edge",
                        "constant",
                        "reflect",
                        "symmetric"
                    ],
                    {
                        "default": "edge"
                    }
                ],
                "constant_color": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ]
            },
            "optional": {
                "x": [
                    "FLOATS"
                ],
                "y": [
                    "FLOATS"
                ],
                "zoom": [
                    "FLOATS"
                ],
                "angle": [
                    "FLOATS"
                ],
                "shear": [
                    "FLOATS"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Batch Transform (mtb)",
        "display_name": "Batch Transform (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Shape (mtb)": {
        "input": {
            "required": {
                "count": [
                    "INT",
                    {
                        "default": 1
                    }
                ],
                "shape": [
                    [
                        "Box",
                        "Circle",
                        "Diamond"
                    ],
                    {
                        "default": "Box"
                    }
                ],
                "image_width": [
                    "INT",
                    {
                        "default": 512
                    }
                ],
                "image_height": [
                    "INT",
                    {
                        "default": 512
                    }
                ],
                "shape_size": [
                    "INT",
                    {
                        "default": 100
                    }
                ],
                "color": [
                    "COLOR",
                    {
                        "default": "#ffffff"
                    }
                ],
                "bg_color": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ],
                "shade_color": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ],
                "shadex": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "shadey": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Batch Shape (mtb)",
        "display_name": "Batch Shape (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Make (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "count": [
                    "INT",
                    {
                        "default": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Batch Make (mtb)",
        "display_name": "Batch Make (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Float Assemble (mtb)": {
        "input": {
            "required": {
                "reverse": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "FLOATS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOATS"
        ],
        "name": "Batch Float Assemble (mtb)",
        "display_name": "Batch Float Assemble (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Float Fill (mtb)": {
        "input": {
            "required": {
                "floats": [
                    "FLOATS"
                ],
                "direction": [
                    [
                        "head",
                        "tail"
                    ],
                    {
                        "default": "tail"
                    }
                ],
                "value": [
                    "FLOAT",
                    {
                        "default": 0.0
                    }
                ],
                "count": [
                    "INT",
                    {
                        "default": 1
                    }
                ]
            }
        },
        "output": [
            "FLOATS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOATS"
        ],
        "name": "Batch Float Fill (mtb)",
        "display_name": "Batch Float Fill (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Merge (mtb)": {
        "input": {
            "required": {
                "fusion_mode": [
                    [
                        "add",
                        "multiply",
                        "average"
                    ],
                    {
                        "default": "average"
                    }
                ],
                "fill": [
                    [
                        "head",
                        "tail"
                    ],
                    {
                        "default": "tail"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Batch Merge (mtb)",
        "display_name": "Batch Merge (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Batch Shake (mtb)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "position_amount_x": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "position_amount_y": [
                    "FLOAT",
                    {
                        "default": 1.0
                    }
                ],
                "rotation_amount": [
                    "FLOAT",
                    {
                        "default": 10.0
                    }
                ],
                "frequency": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.005
                    }
                ],
                "frequency_divider": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.005
                    }
                ],
                "octaves": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "FLOATS",
            "FLOATS",
            "FLOATS"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "image",
            "pos_x",
            "pos_y",
            "rot"
        ],
        "name": "Batch Shake (mtb)",
        "display_name": "Batch Shake (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Plot Batch Float (mtb)": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 768
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 768
                    }
                ],
                "point_size": [
                    "INT",
                    {
                        "default": 4
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "plot"
        ],
        "name": "Plot Batch Float (mtb)",
        "display_name": "Plot Batch Float (mtb)",
        "description": "",
        "category": "mtb/batch",
        "output_node": false
    },
    "Transform Image (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "x": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "y": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "zoom": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.001,
                        "step": 0.01
                    }
                ],
                "angle": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -360,
                        "max": 360
                    }
                ],
                "shear": [
                    "FLOAT",
                    {
                        "default": 0,
                        "step": 1,
                        "min": -4096,
                        "max": 4096
                    }
                ],
                "border_handling": [
                    [
                        "edge",
                        "constant",
                        "reflect",
                        "symmetric"
                    ],
                    {
                        "default": "edge"
                    }
                ],
                "constant_color": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Transform Image (mtb)",
        "display_name": "Transform Image (mtb)",
        "description": "",
        "category": "mtb/transform",
        "output_node": false
    },
    "Stack Images (mtb)": {
        "input": {
            "required": {
                "vertical": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Stack Images (mtb)",
        "display_name": "Stack Images (mtb)",
        "description": "",
        "category": "mtb/image utils",
        "output_node": false
    },
    "Pick From Batch (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "from_direction": [
                    [
                        "end",
                        "start"
                    ],
                    {
                        "default": "start"
                    }
                ],
                "count": [
                    "INT",
                    {
                        "default": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Pick From Batch (mtb)",
        "display_name": "Pick From Batch (mtb)",
        "description": "",
        "category": "mtb/image utils",
        "output_node": false
    },
    "Qr Code (mtb)": {
        "input": {
            "required": {
                "url": [
                    "STRING",
                    {
                        "default": "https://www.github.com"
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 256,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 256,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "error_correct": [
                    [
                        "L",
                        "M",
                        "Q",
                        "H"
                    ],
                    {
                        "default": "L"
                    }
                ],
                "box_size": [
                    "INT",
                    {
                        "default": 10,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "border": [
                    "INT",
                    {
                        "default": 4,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "invert": [
                    [
                        "BOOLEAN"
                    ],
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Qr Code (mtb)",
        "display_name": "Qr Code (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Unsplash Image (mtb)": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "max": 8096,
                        "min": 0,
                        "step": 1
                    }
                ],
                "random_seed": [
                    "INT",
                    {
                        "default": 0,
                        "max": 100000.0,
                        "min": 0,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "keyword": [
                    "STRING",
                    {
                        "default": "nature"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Unsplash Image (mtb)",
        "display_name": "Unsplash Image (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Text To Image (mtb)": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "Hello world!"
                    }
                ],
                "font": [
                    []
                ],
                "wrap": [
                    "INT",
                    {
                        "default": 120,
                        "min": 0,
                        "max": 8096,
                        "step": 1
                    }
                ],
                "font_size": [
                    "INT",
                    {
                        "default": 12,
                        "min": 1,
                        "max": 2500,
                        "step": 1
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 8096,
                        "step": 1
                    }
                ],
                "color": [
                    "COLOR",
                    {
                        "default": "black"
                    }
                ],
                "background": [
                    "COLOR",
                    {
                        "default": "white"
                    }
                ],
                "h_align": [
                    [
                        "left",
                        "center",
                        "right"
                    ],
                    {
                        "default": "left"
                    }
                ],
                "v_align": [
                    [
                        "top",
                        "center",
                        "bottom"
                    ],
                    {
                        "default": "top"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "Text To Image (mtb)",
        "display_name": "Text To Image (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Color Correct (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "clamp": [
                    [
                        true,
                        false
                    ],
                    {
                        "default": true
                    }
                ],
                "gamma": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "contrast": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "exposure": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -5.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "offset": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -5.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "hue": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": -0.5,
                        "max": 0.5,
                        "step": 0.01
                    }
                ],
                "saturation": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ],
                "value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Color Correct (mtb)",
        "display_name": "Color Correct (mtb)",
        "description": "",
        "category": "mtb/image processing",
        "output_node": false
    },
    "Image Compare (mtb)": {
        "input": {
            "required": {
                "imageA": [
                    "IMAGE"
                ],
                "imageB": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "checkerboard",
                        "diff",
                        "blend"
                    ],
                    {
                        "default": "checkerboard"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Compare (mtb)",
        "display_name": "Image Compare (mtb)",
        "description": "",
        "category": "mtb/image",
        "output_node": false
    },
    "Image Tile Offset (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "tiles": [
                    "INT",
                    {
                        "default": 2
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Image Tile Offset (mtb)",
        "display_name": "Image Tile Offset (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Blur (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "sigmaX": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "sigmaY": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Blur (mtb)",
        "display_name": "Blur (mtb)",
        "description": "",
        "category": "mtb/image processing",
        "output_node": false
    },
    "Mask To Image (mtb)": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "color": [
                    "COLOR"
                ],
                "background": [
                    "COLOR",
                    {
                        "default": "#000000"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Mask To Image (mtb)",
        "display_name": "Mask To Image (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Colored Image (mtb)": {
        "input": {
            "required": {
                "color": [
                    "COLOR"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 8160
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 16,
                        "max": 8160
                    }
                ]
            },
            "optional": {
                "foreground_image": [
                    "IMAGE"
                ],
                "foreground_mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Colored Image (mtb)",
        "display_name": "Colored Image (mtb)",
        "description": "",
        "category": "mtb/generate",
        "output_node": false
    },
    "Image Premultiply (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ],
                "invert": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "RGBA"
        ],
        "name": "Image Premultiply (mtb)",
        "display_name": "Image Premultiply (mtb)",
        "description": "",
        "category": "mtb/image",
        "output_node": false
    },
    "Image Resize Factor (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.01,
                        "max": 16.0,
                        "step": 0.01
                    }
                ],
                "supersample": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "resampling": [
                    [
                        "nearest",
                        "linear",
                        "bilinear",
                        "bicubic",
                        "trilinear",
                        "area",
                        "nearest-exact"
                    ],
                    {
                        "default": "nearest"
                    }
                ]
            },
            "optional": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "Image Resize Factor (mtb)",
        "display_name": "Image Resize Factor (mtb)",
        "description": "",
        "category": "mtb/image",
        "output_node": false
    },
    "Save Image Grid (mtb)": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ],
                "save_intermediate": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Image Grid (mtb)",
        "display_name": "Save Image Grid (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": true
    },
    "Load Image From Url (mtb)": {
        "input": {
            "required": {
                "url": [
                    "STRING",
                    {
                        "default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Load Image From Url (mtb)",
        "display_name": "Load Image From Url (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": false
    },
    "Sharpen (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "sharpen_radius": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 31,
                        "step": 1
                    }
                ],
                "sigma_x": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "sigma_y": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 10.0,
                        "step": 0.1
                    }
                ],
                "alpha": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 5.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Sharpen (mtb)",
        "display_name": "Sharpen (mtb)",
        "description": "",
        "category": "mtb/image processing",
        "output_node": false
    },
    "Smart Step (mtb)": {
        "input": {
            "required": {
                "step": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "start_percent": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "end_percent": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "step",
            "start",
            "end"
        ],
        "name": "Smart Step (mtb)",
        "display_name": "Smart Step (mtb)",
        "description": "",
        "category": "mtb/conditioning",
        "output_node": false
    },
    "Styles Loader (mtb)": {
        "input": {
            "required": {
                "style_name": [
                    [
                        "name",
                        "None",
                        "Photo",
                        "Portrait",
                        "Anime",
                        "Cartoon",
                        "Comic",
                        "Vintage",
                        "Painting"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "positive",
            "negative"
        ],
        "name": "Styles Loader (mtb)",
        "display_name": "Styles Loader (mtb)",
        "description": "",
        "category": "mtb/conditioning",
        "output_node": false
    },
    "Interpolate Clip Sequential (mtb)": {
        "input": {
            "required": {
                "base_text": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "text_to_replace": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "clip": [
                    "CLIP"
                ],
                "interpolation_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "Interpolate Clip Sequential (mtb)",
        "display_name": "Interpolate Clip Sequential (mtb)",
        "description": "",
        "category": "mtb/conditioning",
        "output_node": false
    },
    "Float To Number (mtb)": {
        "input": {
            "required": {
                "float": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1000000000.0,
                        "max": 1000000000.0,
                        "step": 1,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "Float To Number (mtb)",
        "display_name": "Float To Number (mtb)",
        "description": "",
        "category": "mtb/number",
        "output_node": false
    },
    "Int To Bool (mtb)": {
        "input": {
            "required": {
                "int": [
                    "INT",
                    {
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "Int To Bool (mtb)",
        "display_name": "Int To Bool (mtb)",
        "description": "",
        "category": "mtb/number",
        "output_node": false
    },
    "Int To Number (mtb)": {
        "input": {
            "required": {
                "int": [
                    "INT",
                    {
                        "default": 0,
                        "min": -1000000000.0,
                        "max": 1000000000.0,
                        "step": 1,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NUMBER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NUMBER"
        ],
        "name": "Int To Number (mtb)",
        "display_name": "Int To Number (mtb)",
        "description": "",
        "category": "mtb/number",
        "output_node": false
    },
    "Save Gif (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "fps": [
                    "INT",
                    {
                        "default": 12,
                        "min": 1,
                        "max": 120
                    }
                ],
                "resize_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1
                    }
                ],
                "optimize": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "pingpong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "resample_filter": [
                    [
                        "nearest",
                        "box",
                        "bilinear",
                        "hamming",
                        "bicubic",
                        "lanczos"
                    ]
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Save Gif (mtb)",
        "display_name": "Save Gif (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": true
    },
    "Export With Ffmpeg (mtb)": {
        "input": {
            "optional": {
                "images": [
                    "IMAGE"
                ],
                "playlist": [
                    "PLAYLIST"
                ]
            },
            "required": {
                "fps": [
                    "FLOAT",
                    {
                        "default": 24,
                        "min": 1
                    }
                ],
                "prefix": [
                    "STRING",
                    {
                        "default": "export"
                    }
                ],
                "format": [
                    [
                        "mov",
                        "mp4",
                        "mkv",
                        "avi"
                    ],
                    {
                        "default": "mov"
                    }
                ],
                "codec": [
                    [
                        "prores_ks",
                        "libx264",
                        "libx265"
                    ],
                    {
                        "default": "prores_ks"
                    }
                ]
            }
        },
        "output": [
            "VIDEO"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VIDEO"
        ],
        "name": "Export With Ffmpeg (mtb)",
        "display_name": "Export With Ffmpeg (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": true
    },
    "Add To Playlist (mtb)": {
        "input": {
            "required": {
                "relative_paths": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "persistant_playlist": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "playlist_name": [
                    "STRING",
                    {
                        "default": "playlist_{index:04d}"
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Add To Playlist (mtb)",
        "display_name": "Add To Playlist (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": true
    },
    "Read Playlist (mtb)": {
        "input": {
            "required": {
                "enable": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "persistant_playlist": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "playlist_name": [
                    "STRING",
                    {
                        "default": "playlist_{index:04d}"
                    }
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0
                    }
                ]
            }
        },
        "output": [
            "PLAYLIST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PLAYLIST"
        ],
        "name": "Read Playlist (mtb)",
        "display_name": "Read Playlist (mtb)",
        "description": "",
        "category": "mtb/IO",
        "output_node": false
    },
    "Deep Bump (mtb)": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mode": [
                    [
                        "Color to Normals",
                        "Normals to Curvature",
                        "Normals to Height"
                    ]
                ],
                "color_to_normals_overlap": [
                    [
                        "SMALL",
                        "MEDIUM",
                        "LARGE"
                    ]
                ],
                "normals_to_curvature_blur_radius": [
                    [
                        "SMALLEST",
                        "SMALLER",
                        "SMALL",
                        "MEDIUM",
                        "LARGE",
                        "LARGER",
                        "LARGEST"
                    ]
                ],
                "normals_to_height_seamless": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Deep Bump (mtb)",
        "display_name": "Deep Bump (mtb)",
        "description": "",
        "category": "mtb/textures",
        "output_node": false
    },
    "ModelMergeBlockNumber": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "time_embed.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "label_emb.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.10.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.11.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.10.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.11.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "out.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeBlockNumber",
        "display_name": "ModelMergeBlockNumber",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ReferenceOnlySimple": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "reference": [
                    "LATENT"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "LATENT"
        ],
        "name": "ReferenceOnlySimple",
        "display_name": "ReferenceOnlySimple",
        "description": "",
        "category": "custom_node_experiments",
        "output_node": false
    },
    "RescaleClassifierFreeGuidanceTest": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "RescaleClassifierFreeGuidanceTest",
        "display_name": "RescaleClassifierFreeGuidanceTest",
        "description": "",
        "category": "custom_node_experiments",
        "output_node": false
    },
    "ModelSamplerTonemapNoiseTest": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelSamplerTonemapNoiseTest",
        "display_name": "ModelSamplerTonemapNoiseTest",
        "description": "",
        "category": "custom_node_experiments",
        "output_node": false
    },
    "TonemapNoiseWithRescaleCFG": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "tonemap_multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0,
                        "step": 0.01
                    }
                ],
                "rescale_multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "TonemapNoiseWithRescaleCFG",
        "display_name": "TonemapNoiseWithRescaleCFG",
        "description": "",
        "category": "custom_node_experiments",
        "output_node": false
    },
    "ModelMergeSDXL": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "time_embed.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "label_emb.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.0": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.6": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.0": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.6": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.7": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.8": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "out.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeSDXL",
        "display_name": "ModelMergeSDXL",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ModelMergeSDXLTransformers": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "time_embed.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "label_emb.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.0.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.1.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.2.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.3.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.6.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.6.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.7.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.8.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "out.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeSDXLTransformers",
        "display_name": "ModelMergeSDXLTransformers",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "ModelMergeSDXLDetailedTransformers": {
        "input": {
            "required": {
                "model1": [
                    "MODEL"
                ],
                "model2": [
                    "MODEL"
                ],
                "time_embed.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "label_emb.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.0.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.1.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.2.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.3.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.4.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.5.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.6.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.7.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "input_blocks.8.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "middle_block.2.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.0.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.1.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.2.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.3.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.4.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.5.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.6.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.7.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.8.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.2.1.transformer_blocks.9.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.3.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.4.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.0.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.norm1": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn1.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn1.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn1.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn1.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.ff.net": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.norm2": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn2.to_q": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn2.to_k": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn2.to_v": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.attn2.to_out": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.5.1.transformer_blocks.1.norm3": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.6.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.7.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "output_blocks.8.0.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "out.": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ModelMergeSDXLDetailedTransformers",
        "display_name": "ModelMergeSDXLDetailedTransformers",
        "description": "",
        "category": "advanced/model_merging",
        "output_node": false
    },
    "SAMLoader": {
        "input": {
            "required": {
                "model_name": [
                    [
                        "sam_vit_b_01ec64.pth"
                    ]
                ],
                "device_mode": [
                    [
                        "AUTO",
                        "Prefer GPU",
                        "CPU"
                    ]
                ]
            }
        },
        "output": [
            "SAM_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SAM_MODEL"
        ],
        "name": "SAMLoader",
        "display_name": "SAMLoader (Impact)",
        "description": "",
        "category": "ImpactPack",
        "output_node": false
    },
    "CLIPSegDetectorProvider": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "blur": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 15,
                        "step": 0.1,
                        "default": 7
                    }
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 1,
                        "step": 0.05,
                        "default": 0.4
                    }
                ],
                "dilation_factor": [
                    "INT",
                    {
                        "min": 0,
                        "max": 10,
                        "step": 1,
                        "default": 4
                    }
                ]
            }
        },
        "output": [
            "BBOX_DETECTOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BBOX_DETECTOR"
        ],
        "name": "CLIPSegDetectorProvider",
        "display_name": "CLIPSegDetectorProvider",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ONNXDetectorProvider": {
        "input": {
            "required": {
                "model_name": [
                    []
                ]
            }
        },
        "output": [
            "BBOX_DETECTOR"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BBOX_DETECTOR"
        ],
        "name": "ONNXDetectorProvider",
        "display_name": "ONNXDetectorProvider",
        "description": "",
        "category": "ImpactPack",
        "output_node": false
    },
    "BitwiseAndMaskForEach": {
        "input": {
            "required": {
                "base_segs": [
                    "SEGS"
                ],
                "mask_segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "BitwiseAndMaskForEach",
        "display_name": "Bitwise(SEGS & SEGS)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "SubtractMaskForEach": {
        "input": {
            "required": {
                "base_segs": [
                    "SEGS"
                ],
                "mask_segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "SubtractMaskForEach",
        "display_name": "Bitwise(SEGS - SEGS)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "DetailerForEach": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "DetailerForEach",
        "display_name": "Detailer (SEGS)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DetailerForEachDebug": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            true,
            true,
            true,
            true
        ],
        "output_name": [
            "image",
            "cropped",
            "cropped_refined",
            "cropped_refined_alpha",
            "cnet_images"
        ],
        "name": "DetailerForEachDebug",
        "display_name": "DetailerDebug (SEGS)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DetailerForEachPipe": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "SEGS",
            "BASIC_PIPE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            true
        ],
        "output_name": [
            "image",
            "segs",
            "basic_pipe",
            "cnet_images"
        ],
        "name": "DetailerForEachPipe",
        "display_name": "Detailer (SEGS/pipe)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DetailerForEachDebugPipe": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "SEGS",
            "BASIC_PIPE",
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            true,
            true,
            true,
            true
        ],
        "output_name": [
            "image",
            "segs",
            "basic_pipe",
            "cropped",
            "cropped_refined",
            "cropped_refined_alpha",
            "cnet_images"
        ],
        "name": "DetailerForEachDebugPipe",
        "display_name": "DetailerDebug (SEGS/pipe)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DetailerForEachPipeForAnimateDiff": {
        "input": {
            "required": {
                "image_frames": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "IMAGE",
            "SEGS",
            "BASIC_PIPE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            true
        ],
        "output_name": [
            "image",
            "segs",
            "basic_pipe"
        ],
        "name": "DetailerForEachPipeForAnimateDiff",
        "display_name": "Detailer For AnimateDiff (SEGS/pipe)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "SAMDetectorCombined": {
        "input": {
            "required": {
                "sam_model": [
                    "SAM_MODEL"
                ],
                "segs": [
                    "SEGS"
                ],
                "image": [
                    "IMAGE"
                ],
                "detection_hint": [
                    [
                        "center-1",
                        "horizontal-2",
                        "vertical-2",
                        "rect-4",
                        "diamond-4",
                        "mask-area",
                        "mask-points",
                        "mask-point-bbox",
                        "none"
                    ]
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.93,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "mask_hint_use_negative": [
                    [
                        "False",
                        "Small",
                        "Outter"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "SAMDetectorCombined",
        "display_name": "SAMDetector (combined)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "SAMDetectorSegmented": {
        "input": {
            "required": {
                "sam_model": [
                    "SAM_MODEL"
                ],
                "segs": [
                    "SEGS"
                ],
                "image": [
                    "IMAGE"
                ],
                "detection_hint": [
                    [
                        "center-1",
                        "horizontal-2",
                        "vertical-2",
                        "rect-4",
                        "diamond-4",
                        "mask-area",
                        "mask-points",
                        "mask-point-bbox",
                        "none"
                    ]
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.93,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "mask_hint_use_negative": [
                    [
                        "False",
                        "Small",
                        "Outter"
                    ]
                ]
            }
        },
        "output": [
            "MASK",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "combined_mask",
            "batch_masks"
        ],
        "name": "SAMDetectorSegmented",
        "display_name": "SAMDetector (segmented)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "FaceDetailer": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "bbox_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "bbox_crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 10,
                        "step": 0.1
                    }
                ],
                "sam_detection_hint": [
                    [
                        "center-1",
                        "horizontal-2",
                        "vertical-2",
                        "rect-4",
                        "diamond-4",
                        "mask-area",
                        "mask-points",
                        "mask-point-bbox",
                        "none"
                    ]
                ],
                "sam_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "sam_threshold": [
                    "FLOAT",
                    {
                        "default": 0.93,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sam_bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "sam_mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sam_mask_hint_use_negative": [
                    [
                        "False",
                        "Small",
                        "Outter"
                    ]
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "MASK",
            "DETAILER_PIPE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            true,
            true,
            false,
            false,
            true
        ],
        "output_name": [
            "image",
            "cropped_refined",
            "cropped_enhanced_alpha",
            "mask",
            "detailer_pipe",
            "cnet_images"
        ],
        "name": "FaceDetailer",
        "display_name": "FaceDetailer",
        "description": "",
        "category": "ImpactPack/Simple",
        "output_node": false
    },
    "FaceDetailerPipe": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "bbox_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "bbox_crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 10,
                        "step": 0.1
                    }
                ],
                "sam_detection_hint": [
                    [
                        "center-1",
                        "horizontal-2",
                        "vertical-2",
                        "rect-4",
                        "diamond-4",
                        "mask-area",
                        "mask-points",
                        "mask-point-bbox",
                        "none"
                    ]
                ],
                "sam_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "sam_threshold": [
                    "FLOAT",
                    {
                        "default": 0.93,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sam_bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "sam_mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sam_mask_hint_use_negative": [
                    [
                        "False",
                        "Small",
                        "Outter"
                    ]
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "MASK",
            "DETAILER_PIPE",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            true,
            true,
            false,
            false,
            true
        ],
        "output_name": [
            "image",
            "cropped_refined",
            "cropped_enhanced_alpha",
            "mask",
            "detailer_pipe",
            "cnet_images"
        ],
        "name": "FaceDetailerPipe",
        "display_name": "FaceDetailer (pipe)",
        "description": "",
        "category": "ImpactPack/Simple",
        "output_node": false
    },
    "MaskDetailerPipe": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "mask": [
                    "MASK"
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 384,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "mask bbox",
                        "label_off": "crop region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 1024,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "mask_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "masked only",
                        "label_off": "whole"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 10,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 100
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "IMAGE",
            "IMAGE",
            "BASIC_PIPE",
            "BASIC_PIPE"
        ],
        "output_is_list": [
            false,
            true,
            true,
            false,
            false
        ],
        "output_name": [
            "image",
            "cropped_refined",
            "cropped_enhanced_alpha",
            "basic_pipe",
            "refiner_basic_pipe_opt"
        ],
        "name": "MaskDetailerPipe",
        "display_name": "MaskDetailer (pipe)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "ToDetailerPipe": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "ToDetailerPipe",
        "display_name": "ToDetailerPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "ToDetailerPipeSDXL": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "refiner_model": [
                    "MODEL"
                ],
                "refiner_clip": [
                    "CLIP"
                ],
                "refiner_positive": [
                    "CONDITIONING"
                ],
                "refiner_negative": [
                    "CONDITIONING"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "ToDetailerPipeSDXL",
        "display_name": "ToDetailerPipeSDXL",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "FromDetailerPipe": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "BBOX_DETECTOR",
            "SAM_MODEL",
            "SEGM_DETECTOR",
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "vae",
            "positive",
            "negative",
            "bbox_detector",
            "sam_model_opt",
            "segm_detector_opt",
            "detailer_hook"
        ],
        "name": "FromDetailerPipe",
        "display_name": "FromDetailerPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "FromDetailerPipe_v2": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "BBOX_DETECTOR",
            "SAM_MODEL",
            "SEGM_DETECTOR",
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "detailer_pipe",
            "model",
            "clip",
            "vae",
            "positive",
            "negative",
            "bbox_detector",
            "sam_model_opt",
            "segm_detector_opt",
            "detailer_hook"
        ],
        "name": "FromDetailerPipe_v2",
        "display_name": "FromDetailerPipe_v2",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "FromDetailerPipeSDXL": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING",
            "BBOX_DETECTOR",
            "SAM_MODEL",
            "SEGM_DETECTOR",
            "DETAILER_HOOK",
            "MODEL",
            "CLIP",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "detailer_pipe",
            "model",
            "clip",
            "vae",
            "positive",
            "negative",
            "bbox_detector",
            "sam_model_opt",
            "segm_detector_opt",
            "detailer_hook",
            "refiner_model",
            "refiner_clip",
            "refiner_positive",
            "refiner_negative"
        ],
        "name": "FromDetailerPipeSDXL",
        "display_name": "FromDetailer (SDXL/pipe)",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "ToBasicPipe": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "BASIC_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "basic_pipe"
        ],
        "name": "ToBasicPipe",
        "display_name": "ToBasicPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "FromBasicPipe": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "vae",
            "positive",
            "negative"
        ],
        "name": "FromBasicPipe",
        "display_name": "FromBasicPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "FromBasicPipe_v2": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "BASIC_PIPE",
            "MODEL",
            "CLIP",
            "VAE",
            "CONDITIONING",
            "CONDITIONING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "basic_pipe",
            "model",
            "clip",
            "vae",
            "positive",
            "negative"
        ],
        "name": "FromBasicPipe_v2",
        "display_name": "FromBasicPipe_v2",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "BasicPipeToDetailerPipe": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "BasicPipeToDetailerPipe",
        "display_name": "BasicPipe -> DetailerPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "BasicPipeToDetailerPipeSDXL": {
        "input": {
            "required": {
                "base_basic_pipe": [
                    "BASIC_PIPE"
                ],
                "refiner_basic_pipe": [
                    "BASIC_PIPE"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "BasicPipeToDetailerPipeSDXL",
        "display_name": "BasicPipe -> DetailerPipe (SDXL)",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "DetailerPipeToBasicPipe": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ]
            }
        },
        "output": [
            "BASIC_PIPE",
            "BASIC_PIPE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "base_basic_pipe",
            "refiner_basic_pipe"
        ],
        "name": "DetailerPipeToBasicPipe",
        "display_name": "DetailerPipe -> BasicPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "EditBasicPipe": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            },
            "optional": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "BASIC_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "basic_pipe"
        ],
        "name": "EditBasicPipe",
        "display_name": "Edit BasicPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "EditDetailerPipe": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "sam_model": [
                    "SAM_MODEL"
                ],
                "segm_detector": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "EditDetailerPipe",
        "display_name": "Edit DetailerPipe",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "EditDetailerPipeSDXL": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ],
                "wildcard": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            },
            "optional": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "vae": [
                    "VAE"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "refiner_model": [
                    "MODEL"
                ],
                "refiner_clip": [
                    "CLIP"
                ],
                "refiner_positive": [
                    "CONDITIONING"
                ],
                "refiner_negative": [
                    "CONDITIONING"
                ],
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "sam_model": [
                    "SAM_MODEL"
                ],
                "segm_detector": [
                    "SEGM_DETECTOR"
                ],
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_PIPE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "detailer_pipe"
        ],
        "name": "EditDetailerPipeSDXL",
        "display_name": "Edit DetailerPipe (SDXL)",
        "description": "",
        "category": "ImpactPack/Pipe",
        "output_node": false
    },
    "LatentPixelScale": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "scale_factor": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 0.1,
                        "max": 10000,
                        "step": 0.1
                    }
                ],
                "vae": [
                    "VAE"
                ],
                "use_tiled_vae": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ]
            },
            "optional": {
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ]
            }
        },
        "output": [
            "LATENT",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "IMAGE"
        ],
        "name": "LatentPixelScale",
        "display_name": "Latent Scale (on Pixel Space)",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "PixelKSampleUpscalerProvider": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "model": [
                    "MODEL"
                ],
                "vae": [
                    "VAE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "use_tiled_vae": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            },
            "optional": {
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "PixelKSampleUpscalerProvider",
        "display_name": "PixelKSampleUpscalerProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "PixelKSampleUpscalerProviderPipe": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "use_tiled_vae": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            },
            "optional": {
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "PixelKSampleUpscalerProviderPipe",
        "display_name": "PixelKSampleUpscalerProviderPipe",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "IterativeLatentUpscale": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 1,
                        "max": 10000,
                        "step": 0.1
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "temp_prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "upscaler": [
                    "UPSCALER"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "LATENT",
            "VAE"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "latent",
            "vae"
        ],
        "name": "IterativeLatentUpscale",
        "display_name": "Iterative Upscale (Latent/on Pixel Space)",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "IterativeImageUpscale": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "upscale_factor": [
                    "FLOAT",
                    {
                        "default": 1.5,
                        "min": 1,
                        "max": 10000,
                        "step": 0.1
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 3,
                        "min": 1,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "temp_prefix": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "upscaler": [
                    "UPSCALER"
                ],
                "vae": [
                    "VAE"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "image"
        ],
        "name": "IterativeImageUpscale",
        "display_name": "Iterative Upscale (Image)",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "PixelTiledKSampleUpscalerProvider": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "model": [
                    "MODEL"
                ],
                "vae": [
                    "VAE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "tile_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tile_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tiling_strategy": [
                    [
                        "random",
                        "padded",
                        "simple"
                    ]
                ]
            },
            "optional": {
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "PixelTiledKSampleUpscalerProvider",
        "display_name": "PixelTiledKSampleUpscalerProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "PixelTiledKSampleUpscalerProviderPipe": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "tile_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tile_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tiling_strategy": [
                    [
                        "random",
                        "padded",
                        "simple"
                    ]
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            },
            "optional": {
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "PixelTiledKSampleUpscalerProviderPipe",
        "display_name": "PixelTiledKSampleUpscalerProviderPipe",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "TwoSamplersForMaskUpscalerProvider": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "full_sample_schedule": [
                    [
                        "none",
                        "interleave1",
                        "interleave2",
                        "interleave3",
                        "last1",
                        "last2",
                        "interleave1+last1",
                        "interleave2+last1",
                        "interleave3+last1"
                    ]
                ],
                "use_tiled_vae": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "base_sampler": [
                    "KSAMPLER"
                ],
                "mask_sampler": [
                    "KSAMPLER"
                ],
                "mask": [
                    "MASK"
                ],
                "vae": [
                    "VAE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            },
            "optional": {
                "full_sampler_opt": [
                    "KSAMPLER"
                ],
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_base_opt": [
                    "PK_HOOK"
                ],
                "pk_hook_mask_opt": [
                    "PK_HOOK"
                ],
                "pk_hook_full_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "TwoSamplersForMaskUpscalerProvider",
        "display_name": "TwoSamplersForMask Upscaler Provider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "TwoSamplersForMaskUpscalerProviderPipe": {
        "input": {
            "required": {
                "scale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "lanczos",
                        "area"
                    ]
                ],
                "full_sample_schedule": [
                    [
                        "none",
                        "interleave1",
                        "interleave2",
                        "interleave3",
                        "last1",
                        "last2",
                        "interleave1+last1",
                        "interleave2+last1",
                        "interleave3+last1"
                    ]
                ],
                "use_tiled_vae": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "base_sampler": [
                    "KSAMPLER"
                ],
                "mask_sampler": [
                    "KSAMPLER"
                ],
                "mask": [
                    "MASK"
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            },
            "optional": {
                "full_sampler_opt": [
                    "KSAMPLER"
                ],
                "upscale_model_opt": [
                    "UPSCALE_MODEL"
                ],
                "pk_hook_base_opt": [
                    "PK_HOOK"
                ],
                "pk_hook_mask_opt": [
                    "PK_HOOK"
                ],
                "pk_hook_full_opt": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "UPSCALER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "UPSCALER"
        ],
        "name": "TwoSamplersForMaskUpscalerProviderPipe",
        "display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "PixelKSampleHookCombine": {
        "input": {
            "required": {
                "hook1": [
                    "PK_HOOK"
                ],
                "hook2": [
                    "PK_HOOK"
                ]
            }
        },
        "output": [
            "PK_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PK_HOOK"
        ],
        "name": "PixelKSampleHookCombine",
        "display_name": "PixelKSampleHookCombine",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "DenoiseScheduleHookProvider": {
        "input": {
            "required": {
                "schedule_for_iteration": [
                    [
                        "simple"
                    ]
                ],
                "target_denoise": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "PK_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PK_HOOK"
        ],
        "name": "DenoiseScheduleHookProvider",
        "display_name": "DenoiseScheduleHookProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "CfgScheduleHookProvider": {
        "input": {
            "required": {
                "schedule_for_iteration": [
                    [
                        "simple"
                    ]
                ],
                "target_cfg": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ]
            }
        },
        "output": [
            "PK_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PK_HOOK"
        ],
        "name": "CfgScheduleHookProvider",
        "display_name": "CfgScheduleHookProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "NoiseInjectionHookProvider": {
        "input": {
            "required": {
                "schedule_for_iteration": [
                    [
                        "simple"
                    ]
                ],
                "source": [
                    [
                        "CPU",
                        "GPU"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "start_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 200.0,
                        "step": 0.01
                    }
                ],
                "end_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 200.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "PK_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PK_HOOK"
        ],
        "name": "NoiseInjectionHookProvider",
        "display_name": "NoiseInjectionHookProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "UnsamplerHookProvider": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "steps": [
                    "INT",
                    {
                        "default": 25,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "start_end_at_step": [
                    "INT",
                    {
                        "default": 21,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_end_at_step": [
                    "INT",
                    {
                        "default": 24,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "normalize": [
                    [
                        "disable",
                        "enable"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "schedule_for_iteration": [
                    [
                        "simple"
                    ]
                ]
            }
        },
        "output": [
            "PK_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PK_HOOK"
        ],
        "name": "UnsamplerHookProvider",
        "display_name": "UnsamplerHookProvider",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "CoreMLDetailerHookProvider": {
        "input": {
            "required": {
                "mode": [
                    [
                        "512x512",
                        "768x768",
                        "512x768",
                        "768x512"
                    ]
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "CoreMLDetailerHookProvider",
        "display_name": "CoreMLDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DetailerHookCombine": {
        "input": {
            "required": {
                "hook1": [
                    "DETAILER_HOOK"
                ],
                "hook2": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "DetailerHookCombine",
        "display_name": "DetailerHookCombine",
        "description": "",
        "category": "ImpactPack/Upscale",
        "output_node": false
    },
    "NoiseInjectionDetailerHookProvider": {
        "input": {
            "required": {
                "schedule_for_cycle": [
                    [
                        "skip_start",
                        "from_start"
                    ]
                ],
                "source": [
                    [
                        "CPU",
                        "GPU"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "start_strength": [
                    "FLOAT",
                    {
                        "default": 2.0,
                        "min": 0.0,
                        "max": 200.0,
                        "step": 0.01
                    }
                ],
                "end_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 200.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "NoiseInjectionDetailerHookProvider",
        "display_name": "NoiseInjectionDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "UnsamplerDetailerHookProvider": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "steps": [
                    "INT",
                    {
                        "default": 25,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "start_end_at_step": [
                    "INT",
                    {
                        "default": 21,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_end_at_step": [
                    "INT",
                    {
                        "default": 24,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "normalize": [
                    [
                        "disable",
                        "enable"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "schedule_for_cycle": [
                    [
                        "skip_start",
                        "from_start"
                    ]
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "UnsamplerDetailerHookProvider",
        "display_name": "UnsamplerDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "DenoiseSchedulerDetailerHookProvider": {
        "input": {
            "required": {
                "schedule_for_cycle": [
                    [
                        "simple"
                    ]
                ],
                "target_denoise": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "DenoiseSchedulerDetailerHookProvider",
        "display_name": "DenoiseSchedulerDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "SEGSOrderedFilterDetailerHookProvider": {
        "input": {
            "required": {
                "target": [
                    [
                        "area(=w*h)",
                        "width",
                        "height",
                        "x1",
                        "y1",
                        "x2",
                        "y2"
                    ]
                ],
                "order": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "descending",
                        "label_off": "ascending"
                    }
                ],
                "take_start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "take_count": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "SEGSOrderedFilterDetailerHookProvider",
        "display_name": "SEGSOrderedFilterDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "SEGSRangeFilterDetailerHookProvider": {
        "input": {
            "required": {
                "target": [
                    [
                        "area(=w*h)",
                        "width",
                        "height",
                        "x1",
                        "y1",
                        "x2",
                        "y2",
                        "length_percent"
                    ]
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "inside",
                        "label_off": "outside"
                    }
                ],
                "min_value": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "max_value": [
                    "INT",
                    {
                        "default": 67108864,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "SEGSRangeFilterDetailerHookProvider",
        "display_name": "SEGSRangeFilterDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "SEGSLabelFilterDetailerHookProvider": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "preset": [
                    [
                        "all",
                        "hand",
                        "face",
                        "mouth",
                        "eyes",
                        "eyebrows",
                        "pupils",
                        "left_eyebrow",
                        "left_eye",
                        "left_pupil",
                        "right_eyebrow",
                        "right_eye",
                        "right_pupil",
                        "short_sleeved_shirt",
                        "long_sleeved_shirt",
                        "short_sleeved_outwear",
                        "long_sleeved_outwear",
                        "vest",
                        "sling",
                        "shorts",
                        "trousers",
                        "skirt",
                        "short_sleeved_dress",
                        "long_sleeved_dress",
                        "vest_dress",
                        "sling_dress",
                        "person",
                        "bicycle",
                        "car",
                        "motorcycle",
                        "airplane",
                        "bus",
                        "train",
                        "truck",
                        "boat",
                        "traffic light",
                        "fire hydrant",
                        "stop sign",
                        "parking meter",
                        "bench",
                        "bird",
                        "cat",
                        "dog",
                        "horse",
                        "sheep",
                        "cow",
                        "elephant",
                        "bear",
                        "zebra",
                        "giraffe",
                        "backpack",
                        "umbrella",
                        "handbag",
                        "tie",
                        "suitcase",
                        "frisbee",
                        "skis",
                        "snowboard",
                        "sports ball",
                        "kite",
                        "baseball bat",
                        "baseball glove",
                        "skateboard",
                        "surfboard",
                        "tennis racket",
                        "bottle",
                        "wine glass",
                        "cup",
                        "fork",
                        "knife",
                        "spoon",
                        "bowl",
                        "banana",
                        "apple",
                        "sandwich",
                        "orange",
                        "broccoli",
                        "carrot",
                        "hot dog",
                        "pizza",
                        "donut",
                        "cake",
                        "chair",
                        "couch",
                        "potted plant",
                        "bed",
                        "dining table",
                        "toilet",
                        "tv",
                        "laptop",
                        "mouse",
                        "remote",
                        "keyboard",
                        "cell phone",
                        "microwave",
                        "oven",
                        "toaster",
                        "sink",
                        "refrigerator",
                        "book",
                        "clock",
                        "vase",
                        "scissors",
                        "teddy bear",
                        "hair drier",
                        "toothbrush"
                    ]
                ],
                "labels": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "List the types of segments to be allowed, separated by commas"
                    }
                ]
            }
        },
        "output": [
            "DETAILER_HOOK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "DETAILER_HOOK"
        ],
        "name": "SEGSLabelFilterDetailerHookProvider",
        "display_name": "SEGSLabelFilterDetailerHookProvider",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "BitwiseAndMask": {
        "input": {
            "required": {
                "mask1": [
                    "MASK"
                ],
                "mask2": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "BitwiseAndMask",
        "display_name": "Bitwise(MASK & MASK)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "SubtractMask": {
        "input": {
            "required": {
                "mask1": [
                    "MASK"
                ],
                "mask2": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "SubtractMask",
        "display_name": "Bitwise(MASK - MASK)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "AddMask": {
        "input": {
            "required": {
                "mask1": [
                    "MASK"
                ],
                "mask2": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "AddMask",
        "display_name": "Bitwise(MASK + MASK)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "ImpactSegsAndMask": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSegsAndMask",
        "display_name": "Bitwise(SEGS & MASK)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "ImpactSegsAndMaskForEach": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSegsAndMaskForEach",
        "display_name": "Bitwise(SEGS & MASKS ForEach)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "EmptySegs": {
        "input": {
            "required": {}
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "EmptySegs",
        "display_name": "EmptySegs",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "MediaPipeFaceMeshToSEGS": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "bbox_fill": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "crop_min_size": [
                    "INT",
                    {
                        "min": 10,
                        "max": 8192,
                        "step": 1,
                        "default": 50
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 1
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "face": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "mouth": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "left_eyebrow": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "left_eye": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "left_pupil": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "right_eyebrow": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "right_eye": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ],
                "right_pupil": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "Enabled",
                        "label_off": "Disabled"
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "MediaPipeFaceMeshToSEGS",
        "display_name": "MediaPipe FaceMesh to SEGS",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "MaskToSEGS": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "combined": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "True",
                        "label_off": "False"
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "bbox_fill": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "contour_fill": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "MaskToSEGS",
        "display_name": "MASK to SEGS",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "MaskToSEGS_for_AnimateDiff": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "combined": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "True",
                        "label_off": "False"
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "bbox_fill": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "contour_fill": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "MaskToSEGS_for_AnimateDiff",
        "display_name": "MASK to SEGS for AnimateDiff",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "ToBinaryMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "threshold": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 255
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ToBinaryMask",
        "display_name": "ToBinaryMask",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "MasksToMaskList": {
        "input": {
            "required": {
                "masks": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MasksToMaskList",
        "display_name": "Masks to Mask List",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "MaskListToMaskBatch": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "MaskListToMaskBatch",
        "display_name": "Mask List to Masks",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "ImageListToImageBatch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImageListToImageBatch",
        "display_name": "Image List to Image Batch",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "SetDefaultImageForSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "image": [
                    "IMAGE"
                ],
                "override": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "SetDefaultImageForSEGS",
        "display_name": "Set Default Image for SEGS",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "RemoveImageFromSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "RemoveImageFromSEGS",
        "display_name": "Remove Image from SEGS",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "BboxDetectorSEGS": {
        "input": {
            "required": {
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "labels": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "all",
                        "placeholder": "List the types of segments to be allowed, separated by commas"
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "BboxDetectorSEGS",
        "display_name": "BBOX Detector (SEGS)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "SegmDetectorSEGS": {
        "input": {
            "required": {
                "segm_detector": [
                    "SEGM_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "labels": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "all",
                        "placeholder": "List the types of segments to be allowed, separated by commas"
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "SegmDetectorSEGS",
        "display_name": "SEGM Detector (SEGS)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "ONNXDetectorSEGS": {
        "input": {
            "required": {
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "labels": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "all",
                        "placeholder": "List the types of segments to be allowed, separated by commas"
                    }
                ]
            },
            "optional": {
                "detailer_hook": [
                    "DETAILER_HOOK"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ONNXDetectorSEGS",
        "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "ImpactSimpleDetectorSEGS_for_AD": {
        "input": {
            "required": {
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "image_frames": [
                    "IMAGE"
                ],
                "bbox_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "sub_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sub_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "sub_bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "sam_mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "masking_mode": [
                    [
                        "Pivot SEGS",
                        "Combine neighboring frames",
                        "Don't combine"
                    ]
                ],
                "segs_pivot": [
                    [
                        "Combined mask",
                        "1st frame mask"
                    ]
                ],
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSimpleDetectorSEGS_for_AD",
        "display_name": "Simple Detector for AnimateDiff (SEGS)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "ImpactSimpleDetectorSEGS": {
        "input": {
            "required": {
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "bbox_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "sub_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sub_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "sub_bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "sam_mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "post_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "sam_model_opt": [
                    "SAM_MODEL"
                ],
                "segm_detector_opt": [
                    "SEGM_DETECTOR"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSimpleDetectorSEGS",
        "display_name": "Simple Detector (SEGS)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "ImpactSimpleDetectorSEGSPipe": {
        "input": {
            "required": {
                "detailer_pipe": [
                    "DETAILER_PIPE"
                ],
                "image": [
                    "IMAGE"
                ],
                "bbox_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "bbox_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "drop_size": [
                    "INT",
                    {
                        "min": 1,
                        "max": 8192,
                        "step": 1,
                        "default": 10
                    }
                ],
                "sub_threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "sub_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ],
                "sub_bbox_expansion": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1000,
                        "step": 1
                    }
                ],
                "sam_mask_hint_threshold": [
                    "FLOAT",
                    {
                        "default": 0.7,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "post_dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSimpleDetectorSEGSPipe",
        "display_name": "Simple Detector (SEGS/pipe)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "ImpactControlNetApplySEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "segs_preprocessor": [
                    "SEGS_PREPROCESSOR"
                ],
                "control_image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactControlNetApplySEGS",
        "display_name": "ControlNetApply (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactControlNetApplyAdvancedSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.01
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "segs_preprocessor": [
                    "SEGS_PREPROCESSOR"
                ],
                "control_image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactControlNetApplyAdvancedSEGS",
        "display_name": "ControlNetApplyAdvanced (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactControlNetClearSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactControlNetClearSEGS",
        "display_name": "ImpactControlNetClearSEGS",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactDecomposeSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS_HEADER",
            "SEG_ELT"
        ],
        "output_is_list": [
            false,
            true
        ],
        "output_name": [
            "SEGS_HEADER",
            "SEG_ELT"
        ],
        "name": "ImpactDecomposeSEGS",
        "display_name": "Decompose (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactAssembleSEGS": {
        "input": {
            "required": {
                "seg_header": [
                    "SEGS_HEADER"
                ],
                "seg_elt": [
                    "SEG_ELT"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactAssembleSEGS",
        "display_name": "Assemble (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactFrom_SEG_ELT": {
        "input": {
            "required": {
                "seg_elt": [
                    "SEG_ELT"
                ]
            }
        },
        "output": [
            "SEG_ELT",
            "IMAGE",
            "MASK",
            "SEG_ELT_crop_region",
            "SEG_ELT_bbox",
            "SEG_ELT_control_net_wrapper",
            "FLOAT",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "seg_elt",
            "cropped_image",
            "cropped_mask",
            "crop_region",
            "bbox",
            "control_net_wrapper",
            "confidence",
            "label"
        ],
        "name": "ImpactFrom_SEG_ELT",
        "display_name": "From SEG_ELT",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactEdit_SEG_ELT": {
        "input": {
            "required": {
                "seg_elt": [
                    "SEG_ELT"
                ]
            },
            "optional": {
                "cropped_image_opt": [
                    "IMAGE"
                ],
                "cropped_mask_opt": [
                    "MASK"
                ],
                "crop_region_opt": [
                    "SEG_ELT_crop_region"
                ],
                "bbox_opt": [
                    "SEG_ELT_bbox"
                ],
                "control_net_wrapper_opt": [
                    "SEG_ELT_control_net_wrapper"
                ],
                "confidence_opt": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 1.0,
                        "step": 0.1,
                        "forceInput": true
                    }
                ],
                "label_opt": [
                    "STRING",
                    {
                        "multiline": false,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "SEG_ELT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEG_ELT"
        ],
        "name": "ImpactEdit_SEG_ELT",
        "display_name": "Edit SEG_ELT",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactDilate_Mask_SEG_ELT": {
        "input": {
            "required": {
                "seg_elt": [
                    "SEG_ELT"
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEG_ELT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEG_ELT"
        ],
        "name": "ImpactDilate_Mask_SEG_ELT",
        "display_name": "Dilate Mask (SEG_ELT)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactDilateMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImpactDilateMask",
        "display_name": "Dilate Mask",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactGaussianBlurMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "kernel_size": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "sigma": [
                    "FLOAT",
                    {
                        "default": 10.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImpactGaussianBlurMask",
        "display_name": "Gaussian Blur Mask",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactDilateMaskInSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 10,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactDilateMaskInSEGS",
        "display_name": "Dilate Mask (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactGaussianBlurMaskInSEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "kernel_size": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "sigma": [
                    "FLOAT",
                    {
                        "default": 10.0,
                        "min": 0.1,
                        "max": 100.0,
                        "step": 0.1
                    }
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactGaussianBlurMaskInSEGS",
        "display_name": "Gaussian Blur Mask (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactScaleBy_BBOX_SEG_ELT": {
        "input": {
            "required": {
                "seg": [
                    "SEG_ELT"
                ],
                "scale_by": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.01,
                        "max": 8.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "SEG_ELT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEG_ELT"
        ],
        "name": "ImpactScaleBy_BBOX_SEG_ELT",
        "display_name": "ScaleBy BBOX (SEG_ELT)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "BboxDetectorCombined_v2": {
        "input": {
            "required": {
                "bbox_detector": [
                    "BBOX_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 4,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "BboxDetectorCombined_v2",
        "display_name": "BBOX Detector (combined)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "SegmDetectorCombined_v2": {
        "input": {
            "required": {
                "segm_detector": [
                    "SEGM_DETECTOR"
                ],
                "image": [
                    "IMAGE"
                ],
                "threshold": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "dilation": [
                    "INT",
                    {
                        "default": 0,
                        "min": -512,
                        "max": 512,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "SegmDetectorCombined_v2",
        "display_name": "SEGM Detector (combined)",
        "description": "",
        "category": "ImpactPack/Detector",
        "output_node": false
    },
    "SegsToCombinedMask": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "SegsToCombinedMask",
        "display_name": "SEGS to MASK (combined)",
        "description": "",
        "category": "ImpactPack/Operation",
        "output_node": false
    },
    "KSamplerProvider": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "KSAMPLER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "KSAMPLER"
        ],
        "name": "KSamplerProvider",
        "display_name": "KSamplerProvider",
        "description": "",
        "category": "ImpactPack/Sampler",
        "output_node": false
    },
    "TwoSamplersForMask": {
        "input": {
            "required": {
                "latent_image": [
                    "LATENT"
                ],
                "base_sampler": [
                    "KSAMPLER"
                ],
                "mask_sampler": [
                    "KSAMPLER"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "TwoSamplersForMask",
        "display_name": "TwoSamplersForMask",
        "description": "",
        "category": "ImpactPack/Sampler",
        "output_node": false
    },
    "TiledKSamplerProvider": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "tile_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tile_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 8192,
                        "step": 64
                    }
                ],
                "tiling_strategy": [
                    [
                        "random",
                        "padded",
                        "simple"
                    ]
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "KSAMPLER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "KSAMPLER"
        ],
        "name": "TiledKSamplerProvider",
        "display_name": "TiledKSamplerProvider",
        "description": "",
        "category": "ImpactPack/Sampler",
        "output_node": false
    },
    "KSamplerAdvancedProvider": {
        "input": {
            "required": {
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "KSAMPLER_ADVANCED"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "KSAMPLER_ADVANCED"
        ],
        "name": "KSamplerAdvancedProvider",
        "display_name": "KSamplerAdvancedProvider",
        "description": "",
        "category": "ImpactPack/Sampler",
        "output_node": false
    },
    "TwoAdvancedSamplersForMask": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "samples": [
                    "LATENT"
                ],
                "base_sampler": [
                    "KSAMPLER_ADVANCED"
                ],
                "mask_sampler": [
                    "KSAMPLER_ADVANCED"
                ],
                "mask": [
                    "MASK"
                ],
                "overlap_factor": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 10000
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "TwoAdvancedSamplersForMask",
        "display_name": "TwoAdvancedSamplersForMask",
        "description": "",
        "category": "ImpactPack/Sampler",
        "output_node": false
    },
    "PreviewBridge": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "image": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "PreviewBridge",
        "display_name": "Preview Bridge (Image)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "PreviewBridgeLatent": {
        "input": {
            "required": {
                "latent": [
                    "LATENT"
                ],
                "image": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "preview_method": [
                    [
                        "Latent2RGB-SDXL",
                        "Latent2RGB-SD15",
                        "TAESDXL",
                        "TAESD15"
                    ]
                ]
            },
            "optional": {
                "vae_opt": [
                    "VAE"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "LATENT",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "LATENT",
            "MASK"
        ],
        "name": "PreviewBridgeLatent",
        "display_name": "Preview Bridge (Latent)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "ImageSender": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ImgSender"
                    }
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImageSender",
        "display_name": "Image Sender",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "ImageReceiver": {
        "input": {
            "required": {
                "image": [
                    [
                        "__inputs__"
                    ]
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "save_to_workflow": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "image_data": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "trigger_always": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enable",
                        "label_off": "disable"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "ImageReceiver",
        "display_name": "Image Receiver",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "LatentSender": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "latents/LatentSender"
                    }
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "preview_method": [
                    [
                        "Latent2RGB-SDXL",
                        "Latent2RGB-SD15",
                        "TAESDXL",
                        "TAESD15"
                    ]
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "LatentSender",
        "display_name": "LatentSender",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "LatentReceiver": {
        "input": {
            "required": {
                "latent": [
                    []
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "trigger_always": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enable",
                        "label_off": "disable"
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "LatentReceiver",
        "display_name": "LatentReceiver",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImageMaskSwitch": {
        "input": {
            "required": {
                "select": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 4,
                        "step": 1
                    }
                ],
                "images1": [
                    "IMAGE"
                ]
            },
            "optional": {
                "mask1_opt": [
                    "MASK"
                ],
                "images2_opt": [
                    "IMAGE"
                ],
                "mask2_opt": [
                    "MASK"
                ],
                "images3_opt": [
                    "IMAGE"
                ],
                "mask3_opt": [
                    "MASK"
                ],
                "images4_opt": [
                    "IMAGE"
                ],
                "mask4_opt": [
                    "MASK"
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "ImageMaskSwitch",
        "display_name": "Switch (images, mask)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "LatentSwitch": {
        "input": {
            "required": {
                "select": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999999,
                        "step": 1
                    }
                ],
                "sel_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "select_on_prompt",
                        "label_off": "select_on_execution",
                        "forceInput": false
                    }
                ]
            },
            "optional": {
                "input1": [
                    "*"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "*",
            "STRING",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "selected_value",
            "selected_label",
            "selected_index"
        ],
        "name": "LatentSwitch",
        "display_name": "Switch (latent/legacy)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "SEGSSwitch": {
        "input": {
            "required": {
                "select": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999999,
                        "step": 1
                    }
                ],
                "sel_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "select_on_prompt",
                        "label_off": "select_on_execution",
                        "forceInput": false
                    }
                ]
            },
            "optional": {
                "input1": [
                    "*"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "*",
            "STRING",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "selected_value",
            "selected_label",
            "selected_index"
        ],
        "name": "SEGSSwitch",
        "display_name": "Switch (SEGS/legacy)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSwitch": {
        "input": {
            "required": {
                "select": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999999,
                        "step": 1
                    }
                ],
                "sel_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "select_on_prompt",
                        "label_off": "select_on_execution",
                        "forceInput": false
                    }
                ]
            },
            "optional": {
                "input1": [
                    "*"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "*",
            "STRING",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "selected_value",
            "selected_label",
            "selected_index"
        ],
        "name": "ImpactSwitch",
        "display_name": "Switch (Any)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactInversedSwitch": {
        "input": {
            "required": {
                "select": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 999999,
                        "step": 1
                    }
                ],
                "input": [
                    "*"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ImpactInversedSwitch",
        "display_name": "Inversed Switch (Any)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactWildcardProcessor": {
        "input": {
            "required": {
                "wildcard_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "populated_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Populate",
                        "label_off": "Fixed"
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ImpactWildcardProcessor",
        "display_name": "ImpactWildcardProcessor",
        "description": "",
        "category": "ImpactPack/Prompt",
        "output_node": false
    },
    "ImpactWildcardEncode": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "wildcard_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "populated_text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Populate",
                        "label_off": "Fixed"
                    }
                ],
                "Select to add LoRA": [
                    [
                        "Select the LoRA to add to the text"
                    ]
                ],
                "Select to add Wildcard": [
                    [
                        "Select the Wildcard to add to the text"
                    ]
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "CONDITIONING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "model",
            "clip",
            "conditioning",
            "populated_text"
        ],
        "name": "ImpactWildcardEncode",
        "display_name": "ImpactWildcardEncode",
        "description": "",
        "category": "ImpactPack/Prompt",
        "output_node": false
    },
    "SEGSDetailer": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 256,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 768,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "noise_mask": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "force_inpaint": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 100
                    }
                ],
                "cycle": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 10,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ],
                "inpaint_model": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_mask_feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEGS",
            "IMAGE"
        ],
        "output_is_list": [
            false,
            true
        ],
        "output_name": [
            "segs",
            "cnet_images"
        ],
        "name": "SEGSDetailer",
        "display_name": "SEGSDetailer",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "SEGSPaste": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "feather": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "alpha": [
                    "INT",
                    {
                        "default": 255,
                        "min": 0,
                        "max": 255,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "ref_image_opt": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SEGSPaste",
        "display_name": "SEGSPaste",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "SEGSPreview": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "alpha_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enable",
                        "label_off": "disable"
                    }
                ],
                "min_alpha": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "optional": {
                "fallback_image_opt": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SEGSPreview",
        "display_name": "SEGSPreview",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "SEGSPreviewCNet": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SEGSPreviewCNet",
        "display_name": "SEGSPreview (CNET Image)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "SEGSToImageList": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            },
            "optional": {
                "fallback_image_opt": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "SEGSToImageList",
        "display_name": "SEGSToImageList",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSToMaskList": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImpactSEGSToMaskList",
        "display_name": "SEGS to Mask List",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSToMaskBatch": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "ImpactSEGSToMaskBatch",
        "display_name": "SEGS to Mask Batch",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSConcat": {
        "input": {
            "required": {
                "segs1": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSEGSConcat",
        "display_name": "SEGS Concat",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSPicker": {
        "input": {
            "required": {
                "picks": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "pysssss.autocomplete": false
                    }
                ],
                "segs": [
                    "SEGS"
                ]
            },
            "optional": {
                "fallback_image_opt": [
                    "IMAGE"
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactSEGSPicker",
        "display_name": "Picker (SEGS)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": true
    },
    "ImpactMakeTileSEGS": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "bbox_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 8
                    }
                ],
                "crop_factor": [
                    "FLOAT",
                    {
                        "default": 3.0,
                        "min": 1.0,
                        "max": 10,
                        "step": 0.1
                    }
                ],
                "min_overlap": [
                    "INT",
                    {
                        "default": 5,
                        "min": 0,
                        "max": 512,
                        "step": 1
                    }
                ],
                "filter_segs_dilation": [
                    "INT",
                    {
                        "default": 20,
                        "min": -255,
                        "max": 255,
                        "step": 1
                    }
                ],
                "mask_irregularity": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "irregular_mask_mode": [
                    [
                        "Reuse fast",
                        "Reuse quality",
                        "All random fast",
                        "All random quality"
                    ]
                ]
            },
            "optional": {
                "filter_in_segs_opt": [
                    "SEGS"
                ],
                "filter_out_segs_opt": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "SEGS"
        ],
        "name": "ImpactMakeTileSEGS",
        "display_name": "Make Tile SEGS",
        "description": "",
        "category": "ImpactPack/__for_testing",
        "output_node": false
    },
    "SEGSDetailerForAnimateDiff": {
        "input": {
            "required": {
                "image_frames": [
                    "IMAGE"
                ],
                "segs": [
                    "SEGS"
                ],
                "guide_size": [
                    "FLOAT",
                    {
                        "default": 256,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "guide_size_for": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "bbox",
                        "label_off": "crop_region"
                    }
                ],
                "max_size": [
                    "FLOAT",
                    {
                        "default": 768,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0001,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "refiner_ratio": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0
                    }
                ]
            },
            "optional": {
                "refiner_basic_pipe_opt": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "SEGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "segs"
        ],
        "name": "SEGSDetailerForAnimateDiff",
        "display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)",
        "description": "",
        "category": "ImpactPack/Detailer",
        "output_node": false
    },
    "ImpactKSamplerBasicPipe": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "BASIC_PIPE",
            "LATENT",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "BASIC_PIPE",
            "LATENT",
            "VAE"
        ],
        "name": "ImpactKSamplerBasicPipe",
        "display_name": "KSampler (pipe)",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "ImpactKSamplerAdvancedBasicPipe": {
        "input": {
            "required": {
                "basic_pipe": [
                    "BASIC_PIPE"
                ],
                "add_noise": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enable",
                        "label_off": "disable"
                    }
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "latent_image": [
                    "LATENT"
                ],
                "start_at_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_at_step": [
                    "INT",
                    {
                        "default": 10000,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "return_with_leftover_noise": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enable",
                        "label_off": "disable"
                    }
                ]
            }
        },
        "output": [
            "BASIC_PIPE",
            "LATENT",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "BASIC_PIPE",
            "LATENT",
            "VAE"
        ],
        "name": "ImpactKSamplerAdvancedBasicPipe",
        "display_name": "KSampler (Advanced/pipe)",
        "description": "",
        "category": "sampling",
        "output_node": false
    },
    "ReencodeLatent": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "tile_mode": [
                    [
                        "None",
                        "Both",
                        "Decode(input) only",
                        "Encode(output) only"
                    ]
                ],
                "input_vae": [
                    "VAE"
                ],
                "output_vae": [
                    "VAE"
                ],
                "tile_size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 320,
                        "max": 4096,
                        "step": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "ReencodeLatent",
        "display_name": "Reencode Latent",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ReencodeLatentPipe": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "tile_mode": [
                    [
                        "None",
                        "Both",
                        "Decode(input) only",
                        "Encode(output) only"
                    ]
                ],
                "input_basic_pipe": [
                    "BASIC_PIPE"
                ],
                "output_basic_pipe": [
                    "BASIC_PIPE"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "ReencodeLatentPipe",
        "display_name": "Reencode Latent (pipe)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactImageBatchToImageList": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImpactImageBatchToImageList",
        "display_name": "Image batch to Image List",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactMakeImageList": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            true
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImpactMakeImageList",
        "display_name": "Make Image List",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactMakeImageBatch": {
        "input": {
            "required": {
                "image1": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "ImpactMakeImageBatch",
        "display_name": "Make Image Batch",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "RegionalSampler": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "seed_2nd": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "seed_2nd_mode": [
                    [
                        "ignore",
                        "fixed",
                        "seed+seed_2nd",
                        "seed-seed_2nd",
                        "increment",
                        "decrement",
                        "randomize"
                    ]
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "base_only_steps": [
                    "INT",
                    {
                        "default": 2,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "samples": [
                    "LATENT"
                ],
                "base_sampler": [
                    "KSAMPLER_ADVANCED"
                ],
                "regional_prompts": [
                    "REGIONAL_PROMPTS"
                ],
                "overlap_factor": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "restore_latent": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "additional_mode": [
                    [
                        "DISABLE",
                        "ratio additional",
                        "ratio between"
                    ],
                    {
                        "default": "ratio between"
                    }
                ],
                "additional_sampler": [
                    [
                        "AUTO",
                        "euler",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_fast",
                        "dpmpp_2m",
                        "ddpm"
                    ]
                ],
                "additional_sigma_ratio": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RegionalSampler",
        "display_name": "RegionalSampler",
        "description": "",
        "category": "ImpactPack/Regional",
        "output_node": false
    },
    "RegionalSamplerAdvanced": {
        "input": {
            "required": {
                "add_noise": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "start_at_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_at_step": [
                    "INT",
                    {
                        "default": 10000,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "overlap_factor": [
                    "INT",
                    {
                        "default": 10,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "restore_latent": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "return_with_leftover_noise": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "latent_image": [
                    "LATENT"
                ],
                "base_sampler": [
                    "KSAMPLER_ADVANCED"
                ],
                "regional_prompts": [
                    "REGIONAL_PROMPTS"
                ],
                "additional_mode": [
                    [
                        "DISABLE",
                        "ratio additional",
                        "ratio between"
                    ],
                    {
                        "default": "ratio between"
                    }
                ],
                "additional_sampler": [
                    [
                        "AUTO",
                        "euler",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_fast",
                        "dpmpp_2m",
                        "ddpm"
                    ]
                ],
                "additional_sigma_ratio": [
                    "FLOAT",
                    {
                        "default": 0.3,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RegionalSamplerAdvanced",
        "display_name": "RegionalSamplerAdvanced",
        "description": "",
        "category": "ImpactPack/Regional",
        "output_node": false
    },
    "CombineRegionalPrompts": {
        "input": {
            "required": {
                "regional_prompts1": [
                    "REGIONAL_PROMPTS"
                ]
            }
        },
        "output": [
            "REGIONAL_PROMPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REGIONAL_PROMPTS"
        ],
        "name": "CombineRegionalPrompts",
        "display_name": "CombineRegionalPrompts",
        "description": "",
        "category": "ImpactPack/Regional",
        "output_node": false
    },
    "RegionalPrompt": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "advanced_sampler": [
                    "KSAMPLER_ADVANCED"
                ]
            }
        },
        "output": [
            "REGIONAL_PROMPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "REGIONAL_PROMPTS"
        ],
        "name": "RegionalPrompt",
        "display_name": "RegionalPrompt",
        "description": "",
        "category": "ImpactPack/Regional",
        "output_node": false
    },
    "ImpactCombineConditionings": {
        "input": {
            "required": {
                "conditioning1": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ImpactCombineConditionings",
        "display_name": "Combine Conditionings",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactConcatConditionings": {
        "input": {
            "required": {
                "conditioning1": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONDITIONING"
        ],
        "name": "ImpactConcatConditionings",
        "display_name": "Concat Conditionings",
        "description": "",
        "category": "ImpactPack/__for_testing",
        "output_node": false
    },
    "ImpactSEGSLabelFilter": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "preset": [
                    [
                        "all",
                        "hand",
                        "face",
                        "mouth",
                        "eyes",
                        "eyebrows",
                        "pupils",
                        "left_eyebrow",
                        "left_eye",
                        "left_pupil",
                        "right_eyebrow",
                        "right_eye",
                        "right_pupil",
                        "short_sleeved_shirt",
                        "long_sleeved_shirt",
                        "short_sleeved_outwear",
                        "long_sleeved_outwear",
                        "vest",
                        "sling",
                        "shorts",
                        "trousers",
                        "skirt",
                        "short_sleeved_dress",
                        "long_sleeved_dress",
                        "vest_dress",
                        "sling_dress",
                        "person",
                        "bicycle",
                        "car",
                        "motorcycle",
                        "airplane",
                        "bus",
                        "train",
                        "truck",
                        "boat",
                        "traffic light",
                        "fire hydrant",
                        "stop sign",
                        "parking meter",
                        "bench",
                        "bird",
                        "cat",
                        "dog",
                        "horse",
                        "sheep",
                        "cow",
                        "elephant",
                        "bear",
                        "zebra",
                        "giraffe",
                        "backpack",
                        "umbrella",
                        "handbag",
                        "tie",
                        "suitcase",
                        "frisbee",
                        "skis",
                        "snowboard",
                        "sports ball",
                        "kite",
                        "baseball bat",
                        "baseball glove",
                        "skateboard",
                        "surfboard",
                        "tennis racket",
                        "bottle",
                        "wine glass",
                        "cup",
                        "fork",
                        "knife",
                        "spoon",
                        "bowl",
                        "banana",
                        "apple",
                        "sandwich",
                        "orange",
                        "broccoli",
                        "carrot",
                        "hot dog",
                        "pizza",
                        "donut",
                        "cake",
                        "chair",
                        "couch",
                        "potted plant",
                        "bed",
                        "dining table",
                        "toilet",
                        "tv",
                        "laptop",
                        "mouse",
                        "remote",
                        "keyboard",
                        "cell phone",
                        "microwave",
                        "oven",
                        "toaster",
                        "sink",
                        "refrigerator",
                        "book",
                        "clock",
                        "vase",
                        "scissors",
                        "teddy bear",
                        "hair drier",
                        "toothbrush"
                    ]
                ],
                "labels": [
                    "STRING",
                    {
                        "multiline": true,
                        "placeholder": "List the types of segments to be allowed, separated by commas"
                    }
                ]
            }
        },
        "output": [
            "SEGS",
            "SEGS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filtered_SEGS",
            "remained_SEGS"
        ],
        "name": "ImpactSEGSLabelFilter",
        "display_name": "SEGS Filter (label)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSRangeFilter": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "target": [
                    [
                        "area(=w*h)",
                        "width",
                        "height",
                        "x1",
                        "y1",
                        "x2",
                        "y2",
                        "length_percent"
                    ]
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "inside",
                        "label_off": "outside"
                    }
                ],
                "min_value": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "max_value": [
                    "INT",
                    {
                        "default": 67108864,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEGS",
            "SEGS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filtered_SEGS",
            "remained_SEGS"
        ],
        "name": "ImpactSEGSRangeFilter",
        "display_name": "SEGS Filter (range)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactSEGSOrderedFilter": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ],
                "target": [
                    [
                        "area(=w*h)",
                        "width",
                        "height",
                        "x1",
                        "y1",
                        "x2",
                        "y2"
                    ]
                ],
                "order": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "descending",
                        "label_off": "ascending"
                    }
                ],
                "take_start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ],
                "take_count": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "SEGS",
            "SEGS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filtered_SEGS",
            "remained_SEGS"
        ],
        "name": "ImpactSEGSOrderedFilter",
        "display_name": "SEGS Filter (ordered)",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactCompare": {
        "input": {
            "required": {
                "cmp": [
                    [
                        "a = b",
                        "a <> b",
                        "a > b",
                        "a < b",
                        "a >= b",
                        "a <= b",
                        "tt",
                        "ff"
                    ]
                ],
                "a": [
                    "*"
                ],
                "b": [
                    "*"
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "ImpactCompare",
        "display_name": "ImpactCompare",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactConditionalBranch": {
        "input": {
            "required": {
                "cond": [
                    "BOOLEAN"
                ],
                "tt_value": [
                    "*"
                ],
                "ff_value": [
                    "*"
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ImpactConditionalBranch",
        "display_name": "ImpactConditionalBranch",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactConditionalBranchSelMode": {
        "input": {
            "required": {
                "cond": [
                    "BOOLEAN"
                ],
                "sel_mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "select_on_prompt",
                        "label_off": "select_on_execution"
                    }
                ]
            },
            "optional": {
                "tt_value": [
                    "*"
                ],
                "ff_value": [
                    "*"
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ImpactConditionalBranchSelMode",
        "display_name": "ImpactConditionalBranchSelMode",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactInt": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "ImpactInt",
        "display_name": "ImpactInt",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactFloat": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": -3.402823466e+38,
                        "max": 3.402823466e+38
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "ImpactFloat",
        "display_name": "ImpactFloat",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactValueSender": {
        "input": {
            "required": {
                "value": [
                    "*"
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "signal_opt": [
                    "*"
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "signal"
        ],
        "name": "ImpactValueSender",
        "display_name": "ImpactValueSender",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": true
    },
    "ImpactValueReceiver": {
        "input": {
            "required": {
                "typ": [
                    [
                        "STRING",
                        "INT",
                        "FLOAT",
                        "BOOLEAN"
                    ]
                ],
                "value": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "link_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ImpactValueReceiver",
        "display_name": "ImpactValueReceiver",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactImageInfo": {
        "input": {
            "required": {
                "value": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "batch",
            "height",
            "width",
            "channel"
        ],
        "name": "ImpactImageInfo",
        "display_name": "ImpactImageInfo",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": false
    },
    "ImpactLatentInfo": {
        "input": {
            "required": {
                "value": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "INT",
            "INT",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "batch",
            "height",
            "width",
            "channel"
        ],
        "name": "ImpactLatentInfo",
        "display_name": "ImpactLatentInfo",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": false
    },
    "ImpactMinMax": {
        "input": {
            "required": {
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "max",
                        "label_off": "min"
                    }
                ],
                "a": [
                    "*"
                ],
                "b": [
                    "*"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "ImpactMinMax",
        "display_name": "ImpactMinMax",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": false
    },
    "ImpactNeg": {
        "input": {
            "required": {
                "value": [
                    "BOOLEAN",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "ImpactNeg",
        "display_name": "ImpactNeg",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactConditionalStopIteration": {
        "input": {
            "required": {
                "cond": [
                    "BOOLEAN",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImpactConditionalStopIteration",
        "display_name": "ImpactConditionalStopIteration",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": true
    },
    "ImpactStringSelector": {
        "input": {
            "required": {
                "strings": [
                    "STRING",
                    {
                        "multiline": true
                    }
                ],
                "multiline": [
                    "BOOLEAN",
                    {
                        "default": false,
                        "label_on": "enabled",
                        "label_off": "disabled"
                    }
                ],
                "select": [
                    "INT",
                    {
                        "min": 0,
                        "max": 9223372036854775807,
                        "step": 1,
                        "default": 0
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "ImpactStringSelector",
        "display_name": "String Selector",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "RemoveNoiseMask": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "RemoveNoiseMask",
        "display_name": "Remove Noise Mask",
        "description": "",
        "category": "ImpactPack/Util",
        "output_node": false
    },
    "ImpactLogger": {
        "input": {
            "required": {
                "data": [
                    "*",
                    ""
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImpactLogger",
        "display_name": "ImpactLogger",
        "description": "",
        "category": "ImpactPack/Debug",
        "output_node": true
    },
    "ImpactDummyInput": {
        "input": {
            "required": {}
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "*"
        ],
        "name": "ImpactDummyInput",
        "display_name": "ImpactDummyInput",
        "description": "",
        "category": "ImpactPack/Debug",
        "output_node": false
    },
    "ImpactQueueTrigger": {
        "input": {
            "required": {
                "signal": [
                    "*"
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Trigger",
                        "label_off": "Don't trigger"
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "signal_opt"
        ],
        "name": "ImpactQueueTrigger",
        "display_name": "Queue Trigger",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactQueueTriggerCountdown": {
        "input": {
            "required": {
                "signal": [
                    "*"
                ],
                "count": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "total": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 18446744073709551615
                    }
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Trigger",
                        "label_off": "Don't trigger"
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID"
            }
        },
        "output": [
            "*",
            "INT",
            "INT"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "signal_opt",
            "count",
            "total"
        ],
        "name": "ImpactQueueTriggerCountdown",
        "display_name": "Queue Trigger (Countdown)",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactSetWidgetValue": {
        "input": {
            "required": {
                "signal": [
                    "*"
                ],
                "node_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "widget_name": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "boolean_value": [
                    "BOOLEAN",
                    {
                        "forceInput": true
                    }
                ],
                "int_value": [
                    "INT",
                    {
                        "forceInput": true
                    }
                ],
                "float_value": [
                    "FLOAT",
                    {
                        "forceInput": true
                    }
                ],
                "string_value": [
                    "STRING",
                    {
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "signal_opt"
        ],
        "name": "ImpactSetWidgetValue",
        "display_name": "Set Widget Value",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactNodeSetMuteState": {
        "input": {
            "required": {
                "signal": [
                    "*"
                ],
                "node_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "set_state": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "active",
                        "label_off": "mute"
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "signal_opt"
        ],
        "name": "ImpactNodeSetMuteState",
        "display_name": "Set Mute State",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactControlBridge": {
        "input": {
            "required": {
                "value": [
                    "*"
                ],
                "mode": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Active",
                        "label_off": "Mute/Bypass"
                    }
                ],
                "behavior": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "Mute",
                        "label_off": "Bypass"
                    }
                ]
            },
            "hidden": {
                "unique_id": "UNIQUE_ID",
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "value"
        ],
        "name": "ImpactControlBridge",
        "display_name": "Control Bridge",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactIsNotEmptySEGS": {
        "input": {
            "required": {
                "segs": [
                    "SEGS"
                ]
            }
        },
        "output": [
            "BOOLEAN"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "BOOLEAN"
        ],
        "name": "ImpactIsNotEmptySEGS",
        "display_name": "SEGS isn't Empty",
        "description": "",
        "category": "ImpactPack/Logic",
        "output_node": false
    },
    "ImpactSleep": {
        "input": {
            "required": {
                "signal": [
                    "*"
                ],
                "seconds": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0,
                        "max": 3600
                    }
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "signal_opt"
        ],
        "name": "ImpactSleep",
        "display_name": "Sleep",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactRemoteBoolean": {
        "input": {
            "required": {
                "node_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "widget_name": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "value": [
                    "BOOLEAN",
                    {
                        "default": true,
                        "label_on": "True",
                        "label_off": "False"
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImpactRemoteBoolean",
        "display_name": "Remote Boolean (on prompt)",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactRemoteInt": {
        "input": {
            "required": {
                "node_id": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "widget_name": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "ImpactRemoteInt",
        "display_name": "Remote Int (on prompt)",
        "description": "",
        "category": "ImpactPack/Logic/_for_test",
        "output_node": true
    },
    "ImpactHFTransformersClassifierProvider": {
        "input": {
            "required": {
                "preset_repo_id": [
                    [
                        "rizvandwiki/gender-classification-2",
                        "NTQAI/pedestrian_gender_recognition",
                        "Leilab/gender_class",
                        "ProjectPersonal/GenderClassifier",
                        "crangana/trained-gender",
                        "cledoux42/GenderNew_v002",
                        "ivensamdh/genderage2",
                        "Manual repo id"
                    ]
                ],
                "manual_repo_id": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ],
                "device_mode": [
                    [
                        "AUTO",
                        "Prefer GPU",
                        "CPU"
                    ]
                ]
            }
        },
        "output": [
            "TRANSFORMERS_CLASSIFIER"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "TRANSFORMERS_CLASSIFIER"
        ],
        "name": "ImpactHFTransformersClassifierProvider",
        "display_name": "HF Transformers Classifier Provider",
        "description": "",
        "category": "ImpactPack/HuggingFace",
        "output_node": false
    },
    "ImpactSEGSClassify": {
        "input": {
            "required": {
                "classifier": [
                    "TRANSFORMERS_CLASSIFIER"
                ],
                "segs": [
                    "SEGS"
                ],
                "preset_expr": [
                    [
                        "#Female > #Male",
                        "#Female < #Male",
                        "female > 0.5",
                        "male > 0.5",
                        "Age16to25 > 0.1",
                        "Age50to69 > 0.1",
                        "Manual expr"
                    ]
                ],
                "manual_expr": [
                    "STRING",
                    {
                        "multiline": false
                    }
                ]
            },
            "optional": {
                "ref_image_opt": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "SEGS",
            "SEGS"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "filtered_SEGS",
            "remained_SEGS"
        ],
        "name": "ImpactSEGSClassify",
        "display_name": "SEGS Classify",
        "description": "",
        "category": "ImpactPack/HuggingFace",
        "output_node": false
    },
    "UltralyticsDetectorProvider": {
        "input": {
            "required": {
                "model_name": [
                    [
                        "bbox/face_yolov8m.pt",
                        "bbox/hand_yolov8s.pt",
                        "segm/person_yolov8m-seg.pt"
                    ]
                ]
            }
        },
        "output": [
            "BBOX_DETECTOR",
            "SEGM_DETECTOR"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "BBOX_DETECTOR",
            "SEGM_DETECTOR"
        ],
        "name": "UltralyticsDetectorProvider",
        "display_name": "UltralyticsDetectorProvider",
        "description": "",
        "category": "ImpactPack",
        "output_node": false
    },
    "SaltDisplayAny": {
        "input": {
            "required": {
                "input_value": [
                    "*",
                    {}
                ]
            }
        },
        "output": [
            "*"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "output"
        ],
        "name": "SaltDisplayAny",
        "display_name": "SaltDisplayAny",
        "description": "",
        "category": "SALT/Utility",
        "output_node": true
    },
    "ADE_AnimateDiffLoRALoader": {
        "input": {
            "required": {
                "lora_name": [
                    []
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_motion_lora": [
                    "MOTION_LORA"
                ]
            }
        },
        "output": [
            "MOTION_LORA"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MOTION_LORA"
        ],
        "name": "ADE_AnimateDiffLoRALoader",
        "display_name": "Load AnimateDiff LoRA \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "output_node": false
    },
    "ADE_AnimateDiffSamplingSettings": {
        "input": {
            "required": {
                "batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "noise_type": [
                    [
                        "default",
                        "constant",
                        "empty",
                        "repeated_context",
                        "FreeNoise"
                    ]
                ],
                "seed_gen": [
                    [
                        "comfy",
                        "auto1111"
                    ]
                ],
                "seed_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ]
            },
            "optional": {
                "noise_layers": [
                    "NOISE_LAYERS"
                ],
                "iteration_opts": [
                    "ITERATION_OPTS"
                ],
                "seed_override": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615,
                        "forceInput": true
                    }
                ],
                "adapt_denoise_steps": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "SAMPLE_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "settings"
        ],
        "name": "ADE_AnimateDiffSamplingSettings",
        "display_name": "Sample Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "output_node": false
    },
    "ADE_AnimateDiffKeyframe": {
        "input": {
            "required": {
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_ad_keyframes": [
                    "AD_KEYFRAMES"
                ],
                "scale_multival": [
                    "MULTIVAL"
                ],
                "effect_multival": [
                    "MULTIVAL"
                ],
                "inherit_missing": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ]
            }
        },
        "output": [
            "AD_KEYFRAMES"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_KEYFRAMES"
        ],
        "name": "ADE_AnimateDiffKeyframe",
        "display_name": "AnimateDiff Keyframe \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "output_node": false
    },
    "ADE_MultivalDynamic": {
        "input": {
            "required": {
                "float_val": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "mask_optional": [
                    "MASK"
                ]
            }
        },
        "output": [
            "MULTIVAL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MULTIVAL"
        ],
        "name": "ADE_MultivalDynamic",
        "display_name": "Multival Dynamic \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
        "output_node": false
    },
    "ADE_MultivalScaledMask": {
        "input": {
            "required": {
                "min_float_val": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "max_float_val": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "mask": [
                    "MASK"
                ]
            },
            "optional": {
                "scaling": [
                    [
                        "absolute",
                        "relative"
                    ]
                ]
            }
        },
        "output": [
            "MULTIVAL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MULTIVAL"
        ],
        "name": "ADE_MultivalScaledMask",
        "display_name": "Multival Scaled Mask \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/multival",
        "output_node": false
    },
    "ADE_StandardStaticContextOptions": {
        "input": {
            "required": {
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "context_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ],
                "use_on_equal_length": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ],
                "view_opts": [
                    "VIEW_OPTS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_StandardStaticContextOptions",
        "display_name": "Context Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
        "output_node": false
    },
    "ADE_StandardUniformContextOptions": {
        "input": {
            "required": {
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "context_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 32
                    }
                ],
                "context_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ],
                "use_on_equal_length": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ],
                "view_opts": [
                    "VIEW_OPTS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_StandardUniformContextOptions",
        "display_name": "Context Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
        "output_node": false
    },
    "ADE_LoopedUniformContextOptions": {
        "input": {
            "required": {
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "context_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 32
                    }
                ],
                "context_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ],
                "closed_loop": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ],
                "use_on_equal_length": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ],
                "view_opts": [
                    "VIEW_OPTS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_LoopedUniformContextOptions",
        "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
        "output_node": false
    },
    "ADE_ViewsOnlyContextOptions": {
        "input": {
            "required": {
                "view_opts_req": [
                    "VIEW_OPTS"
                ]
            },
            "optional": {
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_ViewsOnlyContextOptions",
        "display_name": "Context Options\u25c6Views Only [VRAM\u21c8] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
        "output_node": false
    },
    "ADE_BatchedContextOptions": {
        "input": {
            "required": {
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ]
            },
            "optional": {
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_BatchedContextOptions",
        "display_name": "Context Options\u25c6Batched [Non-AD] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts",
        "output_node": false
    },
    "ADE_AnimateDiffUniformContextOptions": {
        "input": {
            "required": {
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "context_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 32
                    }
                ],
                "context_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ],
                "context_schedule": [
                    [
                        "uniform"
                    ]
                ],
                "closed_loop": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ],
                    {
                        "default": "flat"
                    }
                ],
                "use_on_equal_length": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "guarantee_steps": [
                    "INT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "prev_context": [
                    "CONTEXT_OPTIONS"
                ],
                "view_opts": [
                    "VIEW_OPTS"
                ]
            }
        },
        "output": [
            "CONTEXT_OPTIONS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "CONTEXT_OPTS"
        ],
        "name": "ADE_AnimateDiffUniformContextOptions",
        "display_name": "Context Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_StandardStaticViewOptions": {
        "input": {
            "required": {
                "view_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "view_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ]
            }
        },
        "output": [
            "VIEW_OPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VIEW_OPTS"
        ],
        "name": "ADE_StandardStaticViewOptions",
        "display_name": "View Options\u25c6Standard Static \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
        "output_node": false
    },
    "ADE_StandardUniformViewOptions": {
        "input": {
            "required": {
                "view_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "view_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 32
                    }
                ],
                "view_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ]
            }
        },
        "output": [
            "VIEW_OPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VIEW_OPTS"
        ],
        "name": "ADE_StandardUniformViewOptions",
        "display_name": "View Options\u25c6Standard Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
        "output_node": false
    },
    "ADE_LoopedUniformViewOptions": {
        "input": {
            "required": {
                "view_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "max": 128
                    }
                ],
                "view_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 32
                    }
                ],
                "view_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 128
                    }
                ],
                "closed_loop": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "fuse_method": [
                    [
                        "pyramid",
                        "flat"
                    ]
                ],
                "use_on_equal_length": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "VIEW_OPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "VIEW_OPTS"
        ],
        "name": "ADE_LoopedUniformViewOptions",
        "display_name": "View Options\u25c6Looped Uniform \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/context opts/view opts",
        "output_node": false
    },
    "ADE_IterationOptsDefault": {
        "input": {
            "required": {
                "iterations": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1
                    }
                ]
            },
            "optional": {
                "iter_batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "iter_seed_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ]
            }
        },
        "output": [
            "ITERATION_OPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "ITERATION_OPTS"
        ],
        "name": "ADE_IterationOptsDefault",
        "display_name": "Default Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
        "output_node": false
    },
    "ADE_IterationOptsFreeInit": {
        "input": {
            "required": {
                "iterations": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1
                    }
                ],
                "filter": [
                    [
                        "gaussian",
                        "butterworth",
                        "ideal",
                        "box"
                    ]
                ],
                "d_s": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "d_t": [
                    "FLOAT",
                    {
                        "default": 0.25,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "n_butterworth": [
                    "INT",
                    {
                        "default": 4,
                        "min": 1,
                        "max": 100
                    }
                ],
                "sigma_step": [
                    "INT",
                    {
                        "default": 999,
                        "min": 1,
                        "max": 999
                    }
                ],
                "apply_to_1st_iter": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "init_type": [
                    [
                        "FreeInit [sampler sigma]",
                        "FreeInit [model sigma]",
                        "DinkInit_v1"
                    ]
                ]
            },
            "optional": {
                "iter_batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "iter_seed_offset": [
                    "INT",
                    {
                        "default": 1,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ]
            }
        },
        "output": [
            "ITERATION_OPTS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "ITERATION_OPTS"
        ],
        "name": "ADE_IterationOptsFreeInit",
        "display_name": "FreeInit Iteration Options \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/iteration opts",
        "output_node": false
    },
    "ADE_NoiseLayerAdd": {
        "input": {
            "required": {
                "batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "noise_type": [
                    [
                        "default",
                        "constant",
                        "empty",
                        "repeated_context",
                        "FreeNoise"
                    ]
                ],
                "seed_gen_override": [
                    [
                        "use existing",
                        "comfy",
                        "auto1111"
                    ]
                ],
                "seed_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ],
                "noise_weight": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_noise_layers": [
                    "NOISE_LAYERS"
                ],
                "mask_optional": [
                    "MASK"
                ],
                "seed_override": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NOISE_LAYERS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NOISE_LAYERS"
        ],
        "name": "ADE_NoiseLayerAdd",
        "display_name": "Noise Layer [Add] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
        "output_node": false
    },
    "ADE_NoiseLayerAddWeighted": {
        "input": {
            "required": {
                "batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "noise_type": [
                    [
                        "default",
                        "constant",
                        "empty",
                        "repeated_context",
                        "FreeNoise"
                    ]
                ],
                "seed_gen_override": [
                    [
                        "use existing",
                        "comfy",
                        "auto1111"
                    ]
                ],
                "seed_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ],
                "noise_weight": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.001
                    }
                ],
                "balance_multiplier": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "prev_noise_layers": [
                    "NOISE_LAYERS"
                ],
                "mask_optional": [
                    "MASK"
                ],
                "seed_override": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NOISE_LAYERS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NOISE_LAYERS"
        ],
        "name": "ADE_NoiseLayerAddWeighted",
        "display_name": "Noise Layer [Add Weighted] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
        "output_node": false
    },
    "ADE_NoiseLayerReplace": {
        "input": {
            "required": {
                "batch_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "noise_type": [
                    [
                        "default",
                        "constant",
                        "empty",
                        "repeated_context",
                        "FreeNoise"
                    ]
                ],
                "seed_gen_override": [
                    [
                        "use existing",
                        "comfy",
                        "auto1111"
                    ]
                ],
                "seed_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": -9223372036854775807,
                        "max": 9223372036854775807
                    }
                ]
            },
            "optional": {
                "prev_noise_layers": [
                    "NOISE_LAYERS"
                ],
                "mask_optional": [
                    "MASK"
                ],
                "seed_override": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615,
                        "forceInput": true
                    }
                ]
            }
        },
        "output": [
            "NOISE_LAYERS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "NOISE_LAYERS"
        ],
        "name": "ADE_NoiseLayerReplace",
        "display_name": "Noise Layer [Replace] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/noise layers",
        "output_node": false
    },
    "ADE_AnimateDiffSettings": {
        "input": {
            "optional": {
                "pe_adjust": [
                    "PE_ADJUST"
                ]
            }
        },
        "output": [
            "AD_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_SETTINGS"
        ],
        "name": "ADE_AnimateDiffSettings",
        "display_name": "AnimateDiff Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings",
        "output_node": false
    },
    "ADE_AdjustPESweetspotStretch": {
        "input": {
            "required": {
                "sweetspot": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "new_sweetspot": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "print_adjustment": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "prev_pe_adjust": [
                    "PE_ADJUST"
                ]
            }
        },
        "output": [
            "PE_ADJUST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PE_ADJUST"
        ],
        "name": "ADE_AdjustPESweetspotStretch",
        "display_name": "Adjust PE [Sweetspot Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
        "output_node": false
    },
    "ADE_AdjustPEFullStretch": {
        "input": {
            "required": {
                "pe_stretch": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 9223372036854775807
                    }
                ],
                "print_adjustment": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "prev_pe_adjust": [
                    "PE_ADJUST"
                ]
            }
        },
        "output": [
            "PE_ADJUST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PE_ADJUST"
        ],
        "name": "ADE_AdjustPEFullStretch",
        "display_name": "Adjust PE [Full Stretch] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
        "output_node": false
    },
    "ADE_AdjustPEManual": {
        "input": {
            "required": {
                "cap_initial_pe_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "interpolate_pe_to_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "initial_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "final_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "print_adjustment": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "prev_pe_adjust": [
                    "PE_ADJUST"
                ]
            }
        },
        "output": [
            "PE_ADJUST"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "PE_ADJUST"
        ],
        "name": "ADE_AdjustPEManual",
        "display_name": "Adjust PE [Manual] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/ad settings/pe adjust",
        "output_node": false
    },
    "ADE_AnimateDiffUnload": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ADE_AnimateDiffUnload",
        "display_name": "AnimateDiff Unload \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
        "output_node": false
    },
    "ADE_EmptyLatentImageLarge": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 262144
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "ADE_EmptyLatentImageLarge",
        "display_name": "Empty Latent Image (Big Batch) \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
        "output_node": false
    },
    "CheckpointLoaderSimpleWithNoiseSelect": {
        "input": {
            "required": {
                "ckpt_name": [
                    []
                ],
                "beta_schedule": [
                    [
                        "autoselect",
                        "sqrt_linear (AnimateDiff)",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ],
                    {
                        "default": "use existing"
                    }
                ]
            },
            "optional": {
                "use_custom_scale_factor": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "scale_factor": [
                    "FLOAT",
                    {
                        "default": 0.18215,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 1e-05
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoaderSimpleWithNoiseSelect",
        "display_name": "Load Checkpoint w/ Noise Select \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/extras",
        "output_node": false
    },
    "ADE_AnimateDiffLoaderGen1": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "model_name": [
                    []
                ],
                "beta_schedule": [
                    [
                        "autoselect",
                        "sqrt_linear (AnimateDiff)",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ],
                    {
                        "default": "autoselect"
                    }
                ]
            },
            "optional": {
                "context_options": [
                    "CONTEXT_OPTIONS"
                ],
                "motion_lora": [
                    "MOTION_LORA"
                ],
                "ad_settings": [
                    "AD_SETTINGS"
                ],
                "ad_keyframes": [
                    "AD_KEYFRAMES"
                ],
                "sample_settings": [
                    "SAMPLE_SETTINGS"
                ],
                "scale_multival": [
                    "MULTIVAL"
                ],
                "effect_multival": [
                    "MULTIVAL"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ADE_AnimateDiffLoaderGen1",
        "display_name": "AnimateDiff Loader \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
        "output_node": false
    },
    "ADE_AnimateDiffLoaderWithContext": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "model_name": [
                    []
                ],
                "beta_schedule": [
                    [
                        "autoselect",
                        "sqrt_linear (AnimateDiff)",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ],
                    {
                        "default": "autoselect"
                    }
                ]
            },
            "optional": {
                "context_options": [
                    "CONTEXT_OPTIONS"
                ],
                "motion_lora": [
                    "MOTION_LORA"
                ],
                "ad_settings": [
                    "AD_SETTINGS"
                ],
                "sample_settings": [
                    "SAMPLE_SETTINGS"
                ],
                "motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "apply_v2_models_properly": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "ad_keyframes": [
                    "AD_KEYFRAMES"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ADE_AnimateDiffLoaderWithContext",
        "display_name": "AnimateDiff Loader [Legacy] \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2460 Gen1 nodes \u2460",
        "output_node": false
    },
    "ADE_AnimateDiffModelSettings_Release": {
        "input": {
            "required": {
                "min_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "max_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "mask_motion_scale": [
                    "MASK"
                ]
            }
        },
        "output": [
            "AD_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_SETTINGS"
        ],
        "name": "ADE_AnimateDiffModelSettings_Release",
        "display_name": "[DEPR] Motion Model Settings \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_AnimateDiffModelSettingsSimple": {
        "input": {
            "required": {
                "motion_pe_stretch": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "mask_motion_scale": [
                    "MASK"
                ],
                "min_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "max_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "AD_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_SETTINGS"
        ],
        "name": "ADE_AnimateDiffModelSettingsSimple",
        "display_name": "[DEPR] Motion Model Settings (Simple) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_AnimateDiffModelSettings": {
        "input": {
            "required": {
                "pe_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "other_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "motion_pe_stretch": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "cap_initial_pe_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "interpolate_pe_to_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "initial_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "final_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "mask_motion_scale": [
                    "MASK"
                ],
                "min_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "max_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "AD_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_SETTINGS"
        ],
        "name": "ADE_AnimateDiffModelSettings",
        "display_name": "[DEPR] Motion Model Settings (Advanced) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
        "input": {
            "required": {
                "pe_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_q_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_k_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_v_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_out_weight_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "attn_out_bias_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "other_strength": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 10.0,
                        "step": 0.0001
                    }
                ],
                "motion_pe_stretch": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "cap_initial_pe_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "interpolate_pe_to_length": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "initial_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "final_pe_idx_offset": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            },
            "optional": {
                "mask_motion_scale": [
                    "MASK"
                ],
                "min_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ],
                "max_motion_scale": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "step": 0.001
                    }
                ]
            }
        },
        "output": [
            "AD_SETTINGS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "AD_SETTINGS"
        ],
        "name": "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
        "display_name": "[DEPR] Motion Model Settings (Adv. Attn) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2460",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_UseEvolvedSampling": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "beta_schedule": [
                    [
                        "autoselect",
                        "sqrt_linear (AnimateDiff)",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ],
                    {
                        "default": "autoselect"
                    }
                ]
            },
            "optional": {
                "m_models": [
                    "M_MODELS"
                ],
                "context_options": [
                    "CONTEXT_OPTIONS"
                ],
                "sample_settings": [
                    "SAMPLE_SETTINGS"
                ]
            }
        },
        "output": [
            "MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MODEL"
        ],
        "name": "ADE_UseEvolvedSampling",
        "display_name": "Use Evolved Sampling \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
        "output_node": false
    },
    "ADE_ApplyAnimateDiffModelSimple": {
        "input": {
            "required": {
                "motion_model": [
                    "MOTION_MODEL_ADE"
                ]
            },
            "optional": {
                "motion_lora": [
                    "MOTION_LORA"
                ],
                "scale_multival": [
                    "MULTIVAL"
                ],
                "effect_multival": [
                    "MULTIVAL"
                ],
                "ad_keyframes": [
                    "AD_KEYFRAMES"
                ]
            }
        },
        "output": [
            "M_MODELS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "M_MODELS"
        ],
        "name": "ADE_ApplyAnimateDiffModelSimple",
        "display_name": "Apply AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
        "output_node": false
    },
    "ADE_ApplyAnimateDiffModel": {
        "input": {
            "required": {
                "motion_model": [
                    "MOTION_MODEL_ADE"
                ],
                "start_percent": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ],
                "end_percent": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.001
                    }
                ]
            },
            "optional": {
                "motion_lora": [
                    "MOTION_LORA"
                ],
                "scale_multival": [
                    "MULTIVAL"
                ],
                "effect_multival": [
                    "MULTIVAL"
                ],
                "ad_keyframes": [
                    "AD_KEYFRAMES"
                ],
                "prev_m_models": [
                    "M_MODELS"
                ]
            }
        },
        "output": [
            "M_MODELS"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "M_MODELS"
        ],
        "name": "ADE_ApplyAnimateDiffModel",
        "display_name": "Apply AnimateDiff Model (Adv.) \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
        "output_node": false
    },
    "ADE_LoadAnimateDiffModel": {
        "input": {
            "required": {
                "model_name": [
                    []
                ]
            },
            "optional": {
                "ad_settings": [
                    "AD_SETTINGS"
                ]
            }
        },
        "output": [
            "MOTION_MODEL_ADE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MOTION_MODEL"
        ],
        "name": "ADE_LoadAnimateDiffModel",
        "display_name": "Load AnimateDiff Model \ud83c\udfad\ud83c\udd50\ud83c\udd53\u2461",
        "description": "",
        "category": "Animate Diff \ud83c\udfad\ud83c\udd50\ud83c\udd53/\u2461 Gen2 nodes \u2461",
        "output_node": false
    },
    "AnimateDiffLoaderV1": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "latents": [
                    "LATENT"
                ],
                "model_name": [
                    []
                ],
                "unlimited_area_hack": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "beta_schedule": [
                    [
                        "sqrt_linear (AnimateDiff)",
                        "autoselect",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ]
                ]
            }
        },
        "output": [
            "MODEL",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "LATENT"
        ],
        "name": "AnimateDiffLoaderV1",
        "display_name": "AnimateDiff Loader [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_AnimateDiffLoaderV1Advanced": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "latents": [
                    "LATENT"
                ],
                "model_name": [
                    []
                ],
                "unlimited_area_hack": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "context_length": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 1000
                    }
                ],
                "context_stride": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "context_overlap": [
                    "INT",
                    {
                        "default": 4,
                        "min": 0,
                        "max": 1000
                    }
                ],
                "context_schedule": [
                    [
                        "uniform"
                    ]
                ],
                "closed_loop": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "beta_schedule": [
                    [
                        "sqrt_linear (AnimateDiff)",
                        "autoselect",
                        "linear (AnimateDiff-SDXL)",
                        "linear (HotshotXL/default)",
                        "use existing",
                        "sqrt",
                        "cosine",
                        "squaredcos_cap_v2"
                    ]
                ]
            }
        },
        "output": [
            "MODEL",
            "LATENT"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "LATENT"
        ],
        "name": "ADE_AnimateDiffLoaderV1Advanced",
        "display_name": "AnimateDiff Loader (Advanced) [DEPRECATED] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "",
        "output_node": false
    },
    "ADE_AnimateDiffCombine": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "frame_rate": [
                    "INT",
                    {
                        "default": 8,
                        "min": 1,
                        "max": 24,
                        "step": 1
                    }
                ],
                "loop_count": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 100,
                        "step": 1
                    }
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "AnimateDiff"
                    }
                ],
                "format": [
                    [
                        "image/gif",
                        "image/webp",
                        "video/av1-webm",
                        "video/h264-mp4",
                        "video/h265-mp4",
                        "video/webm"
                    ]
                ],
                "pingpong": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "save_image": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [
            "GIF"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "GIF"
        ],
        "name": "ADE_AnimateDiffCombine",
        "display_name": "DO NOT USE, USE VideoCombine from ComfyUI-VideoHelperSuite instead! AnimateDiff Combine [DEPRECATED, DO NOT USE] \ud83c\udfad\ud83c\udd50\ud83c\udd53",
        "description": "",
        "category": "",
        "output_node": true
    },
    "PLRAGSimple": {
        "input": {
            "required": {
                "documents_id": [
                    "STRING",
                    {
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "query_a": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Query Prompt"
                    }
                ],
                "query_b": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Query Prompt"
                    }
                ],
                "query_c": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Query Prompt"
                    }
                ],
                "query_d": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Query Prompt"
                    }
                ]
            },
            "optional": {
                "custom_gpt_model": [
                    "STRING",
                    {
                        "default": "gpt-4-0125-preview"
                    }
                ],
                "use_custom_gpt": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "temperature": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1.0,
                        "default": 0.1,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "response_a",
            "response_b",
            "response_c",
            "response_d",
            "documents_id"
        ],
        "name": "PLRAGSimple",
        "display_name": "Analyze Documents",
        "description": "",
        "category": "RAG LLM Nodes",
        "output_node": false
    },
    "PLRAGNodeHelper": {
        "input": {
            "required": {
                "query": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "Query about nodes"
                    }
                ]
            },
            "optional": {
                "use_gpt4": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "temperature": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1.0,
                        "default": 0.1,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "response"
        ],
        "name": "PLRAGNodeHelper",
        "display_name": "Block Info Assistant",
        "description": "",
        "category": "RAG LLM Nodes",
        "output_node": false
    },
    "PLRAGRSSReader": {
        "input": {
            "required": {
                "feeds": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "default": "http://export.arxiv.org/rss/stat.ML\nhttps://openai.com/blog/rss.xml"
                    }
                ],
                "prompt": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamicPrompts": false,
                        "placeholder": "What's new in the news today?"
                    }
                ]
            },
            "optional": {
                "use_gpt4": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ],
                "temperature": [
                    "FLOAT",
                    {
                        "min": 0.0,
                        "max": 1.0,
                        "default": 0.1,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "response"
        ],
        "name": "PLRAGRSSReader",
        "display_name": "Analyze RSS Feeds",
        "description": "",
        "category": "RAG LLM Nodes",
        "output_node": false
    },
    "FaceRestoreCFWithModel": {
        "input": {
            "required": {
                "facerestore_model": [
                    "FACERESTORE_MODEL"
                ],
                "image": [
                    "IMAGE"
                ],
                "facedetection": [
                    [
                        "retinaface_resnet50",
                        "retinaface_mobile0.25",
                        "YOLOv5l",
                        "YOLOv5n"
                    ]
                ],
                "codeformer_fidelity": [
                    "FLOAT",
                    {
                        "default": 0.5,
                        "min": 0.0,
                        "max": 1,
                        "step": 0.05
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FaceRestoreCFWithModel",
        "display_name": "FaceRestoreCFWithModel",
        "description": "",
        "category": "facerestore_cf",
        "output_node": false
    },
    "CropFace": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "facedetection": [
                    [
                        "retinaface_resnet50",
                        "retinaface_mobile0.25",
                        "YOLOv5l",
                        "YOLOv5n"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CropFace",
        "display_name": "CropFace",
        "description": "",
        "category": "facerestore_cf",
        "output_node": false
    },
    "FaceRestoreModelLoader": {
        "input": {
            "required": {
                "model_name": [
                    [
                        "GFPGANv1.3.pth",
                        "GFPGANv1.4.pth",
                        "codeformer-v0.1.0.pth"
                    ]
                ]
            }
        },
        "output": [
            "FACERESTORE_MODEL"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FACERESTORE_MODEL"
        ],
        "name": "FaceRestoreModelLoader",
        "display_name": "FaceRestoreModelLoader",
        "description": "",
        "category": "facerestore_cf",
        "output_node": false
    },
    "UltimateSDUpscale": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "model": [
                    "MODEL"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "vae": [
                    "VAE"
                ],
                "upscale_by": [
                    "FLOAT",
                    {
                        "default": 2,
                        "min": 0.05,
                        "max": 4,
                        "step": 0.05
                    }
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "upscale_model": [
                    "UPSCALE_MODEL"
                ],
                "mode_type": [
                    [
                        "Linear",
                        "Chess",
                        "None"
                    ]
                ],
                "tile_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "tile_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "mask_blur": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ],
                "tile_padding": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seam_fix_mode": [
                    [
                        "None",
                        "Band Pass",
                        "Half Tile",
                        "Half Tile + Intersections"
                    ]
                ],
                "seam_fix_denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "seam_fix_width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seam_fix_mask_blur": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ],
                "seam_fix_padding": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "force_uniform_tiles": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "tiled_decode": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "UltimateSDUpscale",
        "display_name": "Ultimate SD Upscale",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "UltimateSDUpscaleNoUpscale": {
        "input": {
            "required": {
                "upscaled_image": [
                    "IMAGE"
                ],
                "model": [
                    "MODEL"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "vae": [
                    "VAE"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000,
                        "step": 1
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 0.2,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "mode_type": [
                    [
                        "Linear",
                        "Chess",
                        "None"
                    ]
                ],
                "tile_width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "tile_height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "mask_blur": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ],
                "tile_padding": [
                    "INT",
                    {
                        "default": 32,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seam_fix_mode": [
                    [
                        "None",
                        "Band Pass",
                        "Half Tile",
                        "Half Tile + Intersections"
                    ]
                ],
                "seam_fix_denoise": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "seam_fix_width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "seam_fix_mask_blur": [
                    "INT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 64,
                        "step": 1
                    }
                ],
                "seam_fix_padding": [
                    "INT",
                    {
                        "default": 16,
                        "min": 0,
                        "max": 8192,
                        "step": 8
                    }
                ],
                "force_uniform_tiles": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "tiled_decode": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "UltimateSDUpscaleNoUpscale",
        "display_name": "Ultimate SD Upscale (No Upscale)",
        "description": "",
        "category": "image/upscaling",
        "output_node": false
    },
    "KSampler Gradually Adding More Denoise (efficient)": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8.0,
                        "min": 0.0,
                        "max": 100.0
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "heunpp2",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_sde_gpu",
                        "dpmpp_2m",
                        "dpmpp_2m_sde",
                        "dpmpp_2m_sde_gpu",
                        "dpmpp_3m_sde",
                        "dpmpp_3m_sde_gpu",
                        "ddpm",
                        "lcm",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "normal",
                        "karras",
                        "exponential",
                        "sgm_uniform",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "start_denoise": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "denoise_increment": [
                    "FLOAT",
                    {
                        "default": 0.1,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.1
                    }
                ],
                "denoise_increment_steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ]
            },
            "optional": {
                "optional_vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "MODEL",
            "CONDITIONING",
            "CONDITIONING",
            "LATENT",
            "VAE"
        ],
        "output_is_list": [
            false,
            false,
            false,
            false,
            false
        ],
        "output_name": [
            "MODEL",
            "CONDITIONING+",
            "CONDITIONING-",
            "LATENT",
            "VAE"
        ],
        "name": "KSampler Gradually Adding More Denoise (efficient)",
        "display_name": "KSampler Gradually Adding More Denoise (efficient)",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/others",
        "output_node": true
    },
    "GMFSS Fortuna VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "GMFSS_fortuna_union",
                        "GMFSS_fortuna"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "GMFSS Fortuna VFI",
        "display_name": "GMFSS Fortuna VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "IFRNet VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "IFRNet_S_Vimeo90K.pth",
                        "IFRNet_L_Vimeo90K.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ],
                "scale_factor": [
                    [
                        0.25,
                        0.5,
                        1.0,
                        2.0,
                        4.0
                    ],
                    {
                        "default": 1.0
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "IFRNet VFI",
        "display_name": "IFRNet VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "IFUnet VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "IFUNet.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ],
                "scale_factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.1,
                        "max": 100,
                        "step": 0.1
                    }
                ],
                "ensemble": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "IFUnet VFI",
        "display_name": "IFUnet VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "M2M VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "M2M.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "M2M VFI",
        "display_name": "M2M VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "RIFE VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "rife40.pth",
                        "rife41.pth",
                        "rife42.pth",
                        "rife43.pth",
                        "rife44.pth",
                        "rife45.pth",
                        "rife46.pth",
                        "rife47.pth",
                        "rife48.pth",
                        "rife49.pth"
                    ],
                    {
                        "default": "rife47.pth"
                    }
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 1
                    }
                ],
                "fast_mode": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "ensemble": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ],
                "scale_factor": [
                    [
                        0.25,
                        0.5,
                        1.0,
                        2.0,
                        4.0
                    ],
                    {
                        "default": 1.0
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "RIFE VFI",
        "display_name": "RIFE VFI (recommend rife47 and rife49)",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "Sepconv VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "sepconv.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "Sepconv VFI",
        "display_name": "Sepconv VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "AMT VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "amt-s.pth",
                        "amt-l.pth",
                        "amt-g.pth",
                        "gopro_amt-s.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 100
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "AMT VFI",
        "display_name": "AMT VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "FILM VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "film_net_fp32.pt"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FILM VFI",
        "display_name": "FILM VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "Make Interpolation State List": {
        "input": {
            "required": {
                "frame_indices": [
                    "STRING",
                    {
                        "multiline": true,
                        "default": "1,2,3"
                    }
                ],
                "is_skip_list": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "INTERPOLATION_STATES"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INTERPOLATION_STATES"
        ],
        "name": "Make Interpolation State List",
        "display_name": "Make Interpolation State List",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "STMFNet VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "stmfnet.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 2
                    }
                ],
                "duplicate_first_last_frames": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "STMFNet VFI",
        "display_name": "STMFNet VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "FLAVR VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "FLAVR_2x.pth",
                        "FLAVR_4x.pth",
                        "FLAVR_8x.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 2
                    }
                ],
                "duplicate_first_last_frames": [
                    "BOOLEAN",
                    {
                        "default": false
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "FLAVR VFI",
        "display_name": "FLAVR VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "CAIN VFI": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "pretrained_cain.pth"
                    ]
                ],
                "frames": [
                    "IMAGE"
                ],
                "clear_cache_after_n_frames": [
                    "INT",
                    {
                        "default": 10,
                        "min": 1,
                        "max": 1000
                    }
                ],
                "multiplier": [
                    "INT",
                    {
                        "default": 2,
                        "min": 2,
                        "max": 1000
                    }
                ]
            },
            "optional": {
                "optional_interpolation_states": [
                    "INTERPOLATION_STATES"
                ],
                "cache_in_fp16": [
                    "BOOLEAN",
                    {
                        "default": true
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "CAIN VFI",
        "display_name": "CAIN VFI",
        "description": "",
        "category": "ComfyUI-Frame-Interpolation/VFI",
        "output_node": false
    },
    "Seed Everywhere": {
        "input": {
            "required": {
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709551615
                    }
                ]
            },
            "hidden": {
                "id": "UNIQUE_ID"
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "Seed Everywhere",
        "display_name": "Seed Everywhere",
        "description": "",
        "category": "everywhere",
        "output_node": true
    },
    "Anything Everywhere": {
        "input": {
            "required": {},
            "optional": {
                "anything": [
                    "*",
                    {}
                ]
            },
            "hidden": {
                "id": "UNIQUE_ID"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Anything Everywhere",
        "display_name": "Anything Everywhere",
        "description": "",
        "category": "everywhere",
        "output_node": true
    },
    "Anything Everywhere3": {
        "input": {
            "required": {},
            "optional": {
                "anything": [
                    "*",
                    {}
                ],
                "anything2": [
                    "*",
                    {}
                ],
                "anything3": [
                    "*",
                    {}
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Anything Everywhere3",
        "display_name": "Anything Everywhere3",
        "description": "",
        "category": "everywhere",
        "output_node": true
    },
    "Anything Everywhere?": {
        "input": {
            "required": {},
            "optional": {
                "anything": [
                    "*",
                    {}
                ],
                "title_regex": [
                    "STRING",
                    {
                        "default": ".*"
                    }
                ],
                "input_regex": [
                    "STRING",
                    {
                        "default": ".*"
                    }
                ],
                "group_regex": [
                    "STRING",
                    {
                        "default": ".*"
                    }
                ]
            },
            "hidden": {
                "id": "UNIQUE_ID"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Anything Everywhere?",
        "display_name": "Anything Everywhere?",
        "description": "",
        "category": "everywhere",
        "output_node": true
    },
    "Prompts Everywhere": {
        "input": {
            "required": {},
            "optional": {
                "+ve": [
                    "*",
                    {}
                ],
                "-ve": [
                    "*",
                    {}
                ]
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "Prompts Everywhere",
        "display_name": "Prompts Everywhere",
        "description": "",
        "category": "everywhere",
        "output_node": true
    },
    "Simple String": {
        "input": {
            "required": {
                "string": [
                    "STRING",
                    {
                        "default": ""
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "Simple String",
        "display_name": "Simple String",
        "description": "",
        "category": "everywhere",
        "output_node": false
    },
    "JWImageLoadRGB": {
        "input": {
            "required": {
                "path": [
                    "STRING",
                    {
                        "default": "./image.png"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageLoadRGB",
        "display_name": "Image Load RGB",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageLoadRGBA": {
        "input": {
            "required": {
                "path": [
                    "STRING",
                    {
                        "default": "./image.png"
                    }
                ]
            }
        },
        "output": [
            "IMAGE",
            "MASK"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "IMAGE",
            "MASK"
        ],
        "name": "JWImageLoadRGBA",
        "display_name": "Image Load RGBA",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWLoadImagesFromString": {
        "input": {
            "required": {
                "paths": [
                    "STRING",
                    {
                        "default": "./frame000001.png\n./frame000002.png\n./frame000003.png",
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ],
                "ignore_missing_images": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWLoadImagesFromString",
        "display_name": "Load Images From String",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageSaveToPath": {
        "input": {
            "required": {
                "path": [
                    "STRING",
                    {
                        "default": "./image.png"
                    }
                ],
                "image": [
                    "IMAGE"
                ],
                "overwrite": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "true"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "JWImageSaveToPath",
        "display_name": "Image Save To Path",
        "description": "",
        "category": "jamesWalker55",
        "output_node": true
    },
    "JWImageExtractFromBatch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageExtractFromBatch",
        "display_name": "Image Extract From Batch",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageBatchCount": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWImageBatchCount",
        "display_name": "Get Image Batch Count",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageResize": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageResize",
        "display_name": "Image Resize",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageFlip": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "direction": [
                    [
                        "horizontal",
                        "vertical"
                    ],
                    {
                        "default": "hotizontal"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageFlip",
        "display_name": "Image Flip",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWMaskResize": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "JWMaskResize",
        "display_name": "Mask Resize",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWMaskLikeImageSize": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "value": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK"
        ],
        "name": "JWMaskLikeImageSize",
        "display_name": "Mask Like Image Size",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageResizeToSquare": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageResizeToSquare",
        "display_name": "Image Resize to Square",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageResizeByFactor": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "step": 0.01,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageResizeByFactor",
        "display_name": "Image Resize by Factor",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageResizeByShorterSide": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageResizeByShorterSide",
        "display_name": "Image Resize by Shorter Side",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageResizeByLongerSide": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "size": [
                    "INT",
                    {
                        "default": 512,
                        "min": 0,
                        "step": 1,
                        "max": 99999
                    }
                ],
                "interpolation_mode": [
                    [
                        "bicubic",
                        "bilinear",
                        "nearest",
                        "nearest exact"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageResizeByLongerSide",
        "display_name": "Image Resize by Longer Side",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWInteger": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWInteger",
        "display_name": "Integer",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerToFloat": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWIntegerToFloat",
        "display_name": "Integer to Float",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerToString": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "format_string": [
                    "STRING",
                    {
                        "default": "{:04d}",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWIntegerToString",
        "display_name": "Integer to String",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerAdd": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerAdd",
        "display_name": "Integer Add",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerSub": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerSub",
        "display_name": "Integer Subtract",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerMul": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerMul",
        "display_name": "Integer Multiply",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerDiv": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWIntegerDiv",
        "display_name": "Integer Divide",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerAbsolute": {
        "input": {
            "required": {
                "value": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerAbsolute",
        "display_name": "Integer Absolute Value",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerMin": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerMin",
        "display_name": "Integer Minimum",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWIntegerMax": {
        "input": {
            "required": {
                "a": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ],
                "b": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWIntegerMax",
        "display_name": "Integer Maximum",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloat": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloat",
        "display_name": "Float",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatToInteger": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "mode": [
                    [
                        "round",
                        "floor",
                        "ceiling"
                    ]
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWFloatToInteger",
        "display_name": "Float to Integer",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatToString": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "format_string": [
                    "STRING",
                    {
                        "default": "{:.6g}",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWFloatToString",
        "display_name": "Float to String",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatAdd": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatAdd",
        "display_name": "Float Add",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatSub": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatSub",
        "display_name": "Float Subtract",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatMul": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatMul",
        "display_name": "Float Multiply",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatDiv": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatDiv",
        "display_name": "Float Divide",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatAbsolute": {
        "input": {
            "required": {
                "value": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatAbsolute",
        "display_name": "Float Absolute Value",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatMin": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatMin",
        "display_name": "Float Minimum",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWFloatMax": {
        "input": {
            "required": {
                "a": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ],
                "b": [
                    "FLOAT",
                    {
                        "default": 0,
                        "min": -1e+17,
                        "max": 1e+17
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWFloatMax",
        "display_name": "Float Maximum",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWString": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWString",
        "display_name": "String",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringToInteger": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "0",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "INT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "INT"
        ],
        "name": "JWStringToInteger",
        "display_name": "String to Integer",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringToFloat": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "0.0",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "FLOAT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "FLOAT"
        ],
        "name": "JWStringToFloat",
        "display_name": "String to Float",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringMultiline": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": true,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWStringMultiline",
        "display_name": "String (Multiline)",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringConcat": {
        "input": {
            "required": {
                "a": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "b": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWStringConcat",
        "display_name": "String Concatenate",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringReplace": {
        "input": {
            "required": {
                "source": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "to_replace": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "replace_with": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWStringReplace",
        "display_name": "String Replace",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringSplit": {
        "input": {
            "required": {
                "source": [
                    "STRING",
                    {
                        "default": "a,b",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "split_by": [
                    "STRING",
                    {
                        "default": ",",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "from_right": [
                    [
                        "false",
                        "true"
                    ]
                ]
            }
        },
        "output": [
            "STRING",
            "STRING"
        ],
        "output_is_list": [
            false,
            false
        ],
        "output_name": [
            "STRING",
            "STRING"
        ],
        "name": "JWStringSplit",
        "display_name": "String Split",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringGetLine": {
        "input": {
            "required": {
                "source": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ],
                "line_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": -18446744073709551615,
                        "max": 18446744073709551615
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWStringGetLine",
        "display_name": "String Get Line",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWStringUnescape": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "default": "",
                        "multiline": false,
                        "dynamicPrompts": false
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWStringUnescape",
        "display_name": "String Unescape",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "RAFTEstimate": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "RAFT_FLOW"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "RAFT_FLOW"
        ],
        "name": "RAFTEstimate",
        "display_name": "RAFT Estimate",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "RAFTFlowToImage": {
        "input": {
            "required": {
                "raft_flow": [
                    "RAFT_FLOW"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "RAFTFlowToImage",
        "display_name": "RAFT Flow to Image",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "RAFTLoadFlowFromEXRChannels": {
        "input": {
            "required": {
                "path": [
                    "STRING",
                    {
                        "default": ""
                    }
                ],
                "x_channel": [
                    [
                        "R",
                        "G",
                        "B",
                        "A"
                    ],
                    {
                        "default": "R"
                    }
                ],
                "y_channel": [
                    [
                        "R",
                        "G",
                        "B",
                        "A"
                    ],
                    {
                        "default": "G"
                    }
                ],
                "invert_x": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "true"
                    }
                ],
                "invert_y": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "RAFT_FLOW"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "RAFT_FLOW"
        ],
        "name": "RAFTLoadFlowFromEXRChannels",
        "display_name": "RAFT Load Flow from EXR Channels",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageStackChannels": {
        "input": {
            "required": {
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageStackChannels",
        "display_name": "Image Stack Channels",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageMix": {
        "input": {
            "required": {
                "blend_type": [
                    [
                        "mix",
                        "multiply"
                    ],
                    {
                        "default": "mix"
                    }
                ],
                "factor": [
                    "FLOAT",
                    {
                        "min": 0,
                        "max": 1,
                        "step": 0.01,
                        "default": 0.5
                    }
                ],
                "image_a": [
                    "IMAGE"
                ],
                "image_b": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageMix",
        "display_name": "Image Mix",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageContrast": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageContrast",
        "display_name": "Image Contrast",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageSaturation": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "factor": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 2.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageSaturation",
        "display_name": "Image Saturation",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageLevels": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "min": [
                    "FLOAT",
                    {
                        "default": 0.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ],
                "max": [
                    "FLOAT",
                    {
                        "default": 1.0,
                        "min": 0.0,
                        "max": 1.0,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageLevels",
        "display_name": "Image Levels",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWDatetimeString": {
        "input": {
            "required": {
                "format": [
                    "STRING",
                    {
                        "default": "%Y-%m-%dT%H:%M:%S"
                    }
                ]
            }
        },
        "output": [
            "STRING"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "STRING"
        ],
        "name": "JWDatetimeString",
        "display_name": "Datetime String",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWLoadImageSequence": {
        "input": {
            "required": {
                "path_pattern": [
                    "STRING",
                    {
                        "default": "./frame{:06d}.png",
                        "multiline": false
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "frame_count": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "step": 1
                    }
                ],
                "ignore_missing_images": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWLoadImageSequence",
        "display_name": "Batch Load Image Sequence",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWLoadImageSequenceWithStopIndex": {
        "input": {
            "required": {
                "path_pattern": [
                    "STRING",
                    {
                        "default": "./frame{:06d}.png",
                        "multiline": false
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1,
                        "max": 999999
                    }
                ],
                "stop_index": [
                    "INT",
                    {
                        "default": 16,
                        "min": 1,
                        "step": 1,
                        "max": 999999
                    }
                ],
                "inclusive": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ],
                "ignore_missing_images": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWLoadImageSequenceWithStopIndex",
        "display_name": "Batch Load Image Sequence With Stop Index",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageSequenceExtractFromBatch": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "i_start": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "i_stop": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "inclusive": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "false"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageSequenceExtractFromBatch",
        "display_name": "Extract Image Sequence From Batch",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWSaveImageSequence": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "path_pattern": [
                    "STRING",
                    {
                        "default": "./frame{:06d}.png",
                        "multiline": false
                    }
                ],
                "start_index": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "step": 1
                    }
                ],
                "overwrite": [
                    [
                        "false",
                        "true"
                    ],
                    {
                        "default": "true"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "output_is_list": [],
        "output_name": [],
        "name": "JWSaveImageSequence",
        "display_name": "Batch Save Image Sequence",
        "description": "",
        "category": "jamesWalker55",
        "output_node": true
    },
    "JWLoopImageSequence": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "target_frames": [
                    "INT",
                    {
                        "default": 16,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWLoopImageSequence",
        "display_name": "Loop Image Sequence",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWMaskSequenceFromMask": {
        "input": {
            "required": {
                "mask": [
                    "MASK"
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "MASK_SEQUENCE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK_SEQUENCE"
        ],
        "name": "JWMaskSequenceFromMask",
        "display_name": "Mask Sequence From Mask",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWMaskSequenceJoin": {
        "input": {
            "required": {
                "mask_sequence_1": [
                    "MASK_SEQUENCE"
                ],
                "mask_sequence_2": [
                    "MASK_SEQUENCE"
                ]
            }
        },
        "output": [
            "MASK_SEQUENCE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "MASK_SEQUENCE"
        ],
        "name": "JWMaskSequenceJoin",
        "display_name": "Join Mask Sequence",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWMaskSequenceApplyToLatent": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "mask_sequence": [
                    "MASK_SEQUENCE"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "LATENT"
        ],
        "name": "JWMaskSequenceApplyToLatent",
        "display_name": "Apply Mask Sequence to Latent",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    },
    "JWImageLoadRGBIfExists": {
        "input": {
            "required": {
                "default": [
                    "IMAGE"
                ],
                "path": [
                    "STRING",
                    {
                        "default": "./image.png"
                    }
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "output_is_list": [
            false
        ],
        "output_name": [
            "IMAGE"
        ],
        "name": "JWImageLoadRGBIfExists",
        "display_name": "Image Load RGB If Exists",
        "description": "",
        "category": "jamesWalker55",
        "output_node": false
    }
}