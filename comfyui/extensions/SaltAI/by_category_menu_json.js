export const data = {
    "Image": {
        "Image Size and Aspect": {
            "ImageSize": [
                "Get Image Size",
                "Image Resize Factor (mtb)",
                "Match Dimensions (mtb)",
                "easy imageSize",
                "easy imageSizeBySide",
                "easy imageSizeByLongerSide",
                "Get Image Size (JPS)",
                "DF_Get_image_size",
                "GetImageSize",
                "WAS_Image_Size_To_Number",
                "FL_ImageDimensionDisplay",
                "GetImageSize+"
            ],
            "AspectRatio": [
                "Common Frame Dimensions [Dream]",
                "AspectRatioSelector",
                "SDXLAspectRatioSelector",
                "PresetRatioSelector",
                "Ratio Advanced",
                "easy imageRatio",
                "CR Aspect Ratio",
                "CR Aspect Ratio SDXL",
                "CR Aspect Ratio Banners",
                "CR SD1.5 Aspect Ratio",
                "CR SDXL Aspect Ratio",
                "CR Image Size",
                "CR Aspect Ratio Social Media",
                "CR_Aspect Ratio For Print",
                "Image Aspect Ratio"
            ],
            "ImageResize": [
                "ConstrainImage",
                "ConstrainImageforVideo",
                "ImageTransformResizeAbsolute",
                "ImageTransformResizeClip",
                "ImageTransformResizeRelative",
                "JWImageResizeByShorterSide",
                "JWImageResizeByFactor",
                "JWImageResize",
                "JWImageResizeByLongerSide",
                "JWImageResizeToSquare",
                "Image Resize",
                "ImageResize+"
            ],
            "ImageResolution": [
                "Get resolution [Crystools]",
                "ImageGenResolutionFromImage",
                "PixelPerfectResolution",
                "SDXL Resolutions (JPS)",
                "SDXL Recommended Resolution Calc (JPS)",
                "Resolution Multiply (JPS)",
                "CM_SDXLResolution",
                "CM_NearestSDXLResolution",
                "Inference_Core_ImageGenResolutionFromImage",
                "Inference_Core_PixelPerfectResolution"
            ],
            "Other": [
                "Width_Height Literal",
                "Uncrop (mtb)",
                "ImageScaleDownBy",
                "ImageScaleToMegapixels",
                "ImageScaleDown",
                "ImageScaleDownToSize",
                "Resize Image for SDXL",
                "Batch Resize Image for SDXL",
                "Upscale Tile Calculator",
                "BatchCropResizeInplace",
                "ImageScaleToTotalPixels",
                "ImageScale",
                "ImageContainerInheritanceScale",
                "SizeSelector",
                "easy imageScaleDownToSize",
                "easy imageScaleDownBy",
                "easy imageScaleDown",
                "Crop Image TargetSize (JPS)",
                "CR_SelectResizeMethod",
                "DF_Image_scale_by_ratio",
                "DF_Image_scale_to_side",
                "Image Bounds"
            ]
        },
        "Image Transformation and Manipulation": {
            "ImageTransformation": [
                "JitterImage",
                "RemapRange",
                "UnJitterImage",
                "RemapToInnerCylinder",
                "RemapInsideParabolas",
                "RemapStretch",
                "RemapFromQuadrilateral (homography)",
                "RemapInsideParabolasAdvanced",
                "Remap",
                "RemapBarrelDistortion",
                "RemapPinch",
                "RemapToQuadrilateral",
                "RemapWarpPolar",
                "RemapToOuterCylinder",
                "RemapFromInsideParabolas",
                "Image Brightness Adjustment [Dream]",
                "Image Motion [Dream]",
                "Image Contrast Adjustment [Dream]",
                "Batch Transform (mtb)",
                "Image Premultiply (mtb)",
                "Stack Images (mtb)",
                "Transform Image (mtb)",
                "Stack Images",
                "ImageTransformTranspose",
                "ImageCompositeAbsolute",
                "ImageContainerInheritanceMax",
                "ImageContainerInheritanceAdd",
                "ImageCompositeRelativeByContainer",
                "ImageCompositeAbsoluteByContainer",
                "ImageContainerInheritanceSum",
                "ImageCompositeRelative",
                "ImageTransformRotate",
                "JWImageStackChannels",
                "JWImageContrast",
                "JWImageLevels",
                "Crop Image Settings (JPS)",
                "InstantID Source Prepare Pipe (JPS)",
                "InstantID Source Prepare Settings (JPS)",
                "ImageToImage Settings (JPS)",
                "Image Prepare Settings (JPS)",
                "ImageToImage Pipe (JPS)",
                "Prepare Image (JPS)",
                "Crop Image Pipe (JPS)",
                "Image Shadows and Highlights",
                "Image Rotate",
                "Image Pixelate",
                "Image Stitch",
                "Image Levels Adjustment",
                "Image Displacement Warp",
                "FL_ImagePixelator",
                "PixelOEPixelize+"
            ],
            "ImageComposite": [
                "Paste By Mask",
                "OverlayInpaintedImage",
                "ImageOverlay",
                "ImagePaste",
                "SaltImagePasteCrop",
                "CR Overlay Transparent Image",
                "Image Overlay",
                "Image Paste Crop by Location",
                "Image Paste Crop",
                "Image Paste Face"
            ],
            "ImageBlend": [
                "Mix Images By Mask",
                "SeamlessClone",
                "SaltImageComposite",
                "SaltFilmicTransitions",
                "ImageCompositeMasked",
                "ImageBlend",
                "PorterDuffImageComposite",
                "SaltImageBlendingModes",
                "JWImageMix",
                "ColorBlend",
                "Image Blend",
                "Bounded Image Blend",
                "Bounded Image Blend with Mask",
                "Image Blend by Mask",
                "Image Blending Mode",
                "ImageCompositeFromMaskBatch+"
            ],
            "ImageSwitching": [
                "Switch image [Crystools]",
                "Big Image Switch [Dream]",
                "easy imageSwitch",
                "Image Switch (JPS)",
                "Image Input Switch"
            ],
            "ImageSplitting": [
                "easy imageSplitList",
                "easy imagesSplitImage",
                "VHS_SplitImages"
            ],
            "Flip": [
                "JWImageFlip",
                "Image Flip",
                "ImageFlip+"
            ],
            "ImageDuplication": [
                "ImageDuplicator",
                "ImageRepeat",
                "RepeatImageBatch",
                "ReActorImageDublicator",
                "VHS_DuplicateImages"
            ],
            "Crop": [
                "Crop (mtb)",
                "BatchCropImage",
                "MosaicExpandImage",
                "ImageCrop",
                "SaltCropImageLocation",
                "Image Inset Crop",
                "ImageTransformCropRelative",
                "ImageTransformCropAbsolute",
                "ImageTransformCropCorners",
                "easy imageInsetCrop",
                "Crop Image Square (JPS)",
                "Inset Image Bounds",
                "Bounded Image Crop",
                "Image Crop Square Location",
                "Image Crop Location",
                "ImageCrop+",
                "BatchUncropAdvanced",
                "BatchUncrop"
            ],
            "ImageDrawing": [
                "ImageDrawPiesliceByContainer",
                "ImageDrawRectangleRounded",
                "ImageDrawLine",
                "ImageDrawEllipseByContainer",
                "ImageDrawArcByContainer",
                "ImageDrawRectangle",
                "ImageDrawChordByContainer",
                "ImageDrawRectangleRoundedByContainer",
                "ImageDrawEllipse",
                "ImageDrawChord",
                "ImageDrawRectangleByContainer",
                "ImageDrawArc",
                "ImageDrawLineByContainer",
                "ImageDrawPolygon",
                "ImageDrawPieslice"
            ],
            "ImagePadding": [
                "ImagePadForOutpaint",
                "ImageTransformPaddingRelative",
                "ImageTransformPaddingAbsolute",
                "Image Padding",
                "ImagePadForOutpaintMasked"
            ],
            "ImageThresholding": [
                "DistanceTransform",
                "AdaptiveThresholding",
                "OtsuThreshold",
                "FindThreshold",
                "dynamicThresholdingFull",
                "WAS_Image_Threshold"
            ],
            "Other": [
                "Tonemap",
                "DifferenceChecker",
                "Keyer",
                "UnTonemap",
                "AdainImage",
                "BatchAverageImage",
                "Unary Image Op",
                "ImageSelector",
                "IpaConfiguration",
                "ConvertImg",
                "UnGridify (image)",
                "AdjustRect",
                "Repeat Into Grid (image)",
                "MonoMerge",
                "EqualizeHistogram",
                "CLAHE",
                "MorphologicOperation",
                "CopyMakeBorder",
                "MorphologicSkeletoning",
                "PlaiLabsImageBlendingModes",
                "PlaiLabsImagePasteCrop",
                "PLRandomRotateImageBatch",
                "WHBatch2dTransform2",
                "WHImageDisplacement",
                "WHBatch2dTransform",
                "WHTransformImageBatch",
                "PlaiLabsCropImageLocation",
                "Image Compare (mtb)",
                "Concat Images (mtb)",
                "Batch Shake (mtb)",
                "HyperTile __Inspire",
                "ImageMuxer",
                "ImageAlphaComposite",
                "SaltScheduledImageDisplacement",
                "SaltScheduledShapeTransformation",
                "SaltScheduledImageAdjust",
                "Cross Fade Image Batches (SuperBeasts.AI)",
                "Deflicker (SuperBeasts.AI)",
                "ImpactImageInfo",
                "PixelKSampleHookCombine",
                "SALVTON_Apply",
                "XYImage",
                "ImageBorder",
                "HyperTile",
                "ImageQuantize",
                "JoinImageWithAlpha",
                "BinaryPreprocessor",
                "ImageLuminanceDetector",
                "LineArtPreprocessor",
                "Image Comparer",
                "AlphaChanelAddByMask",
                "easy joinImageBatch",
                "Revision Settings (JPS)",
                "Revision Settings Pipe (JPS)",
                "CR_DrawPie",
                "CR Comic Panel Templates",
                "CR Image Input Switch",
                "CR Draw Shape",
                "CR Simple Image Compare",
                "CR Image Pipe Edit",
                "CR Composite Text",
                "CR_ImageGridPanel",
                "CR Img2Img Process Switch",
                "CR Image Border",
                "CR Feathered Border",
                "Inference_Core_ImageLuminanceDetector",
                "Inference_Core_BinaryPreprocessor",
                "Inference_Core_FakeScribblePreprocessor",
                "Inference_Core_TilePreprocessor",
                "ImageRGBA2RGB",
                "CameraStyler",
                "Camera_AnglesStylerAdvanced",
                "Image Canny Filter",
                "Image Analyze",
                "Create Grid Image",
                "VHS_MergeImages",
                "FL_ImageRandomizer",
                "FL_Ascii",
                "ImageSeamCarving+",
                "ImageConcanate",
                "ImageGridComposite2x2",
                "ImageTransformByNormalizedAmplitude",
                "ReverseImageBatch",
                "CrossFadeImages",
                "InsertImageBatchByIndexes",
                "ImageGridComposite3x3",
                "PainterNode"
            ]
        },
        "Color and Channels": {
            "AlphaChannel": [
                "AddAlpha",
                "SplitImageWithAlpha",
                "AlphaChanelRestore",
                "AlphaChanelAdd",
                "AlphaChanelRemove",
                "AlphaChanelAsMask"
            ],
            "Color": [
                "ColorMatchImage",
                "ConvertColorSpace",
                "NaiveAutoKMeansColor",
                "ToColorList",
                "SampleColorHSV",
                "RGB to HSV",
                "InRangeHSV",
                "Color Clip (advanced)",
                "Color Clip ADE20k",
                "Color (hexadecimal)",
                "Color Clip",
                "KMeansColor",
                "ColorDictionary",
                "Color (RGB)",
                "BuildColorRangeAdvanced (hsv)",
                "BuildColorRangeHSV",
                "FindComplementaryColor",
                "FromListGetColors",
                "ColorDictionary (custom)",
                "Analyze Palette [Dream]",
                "Big Palette Switch [Dream]",
                "Palette Color Align [Dream]",
                "Image Color Shift [Dream]",
                "Sample Image Area as Palette [Dream]",
                "Sample Image as Palette [Dream]",
                "Compare Palettes [Dream]",
                "Palette Color Shift [Dream]",
                "Colored Image (mtb)",
                "Color Correct (mtb)",
                "ColorCorrect",
                "ImageExtractChannel",
                "ImageApplyChannel",
                "HaldCLUT",
                "SAIColorTransfer",
                "easy imageColorMatch",
                "WAS_Image_Select_Channel",
                "Image Remove Color",
                "Image Mix RGB Channels",
                "Image Select Color",
                "Image Color Palette",
                "ImageApplyLUT+",
                "ColorMatch"
            ],
            "Other": [
                "ImageConstantHSV",
                "ShuffleChannels",
                "Change Channel Count",
                "Mix Color By Mask",
                "ExtendColorList",
                "PlaiLabsColorTransfer",
                "ImageInvert",
                "ColorPreprocessor",
                "JWImageSaturation",
                "CR Color Gradient",
                "CR Color Tint",
                "CR Random Hex Color",
                "CR_RandomRGBGradient",
                "CR Random Multiline Colors",
                "CR_ColorPanel",
                "Inference_Core_ColorPreprocessor",
                "Images_To_RGB",
                "Image Rotate Hue",
                "Image Gradient Map",
                "Images to Linear",
                "ImageDesaturate+"
            ]
        },
        "Image Preprocessing": {
            "ImagePreprocessing": [
                "FakeScribblePreprocessor",
                "ImageIntensityDetector",
                "AIO_Preprocessor",
                "Scribble_PiDiNet_Preprocessor",
                "CannyEdgePreprocessor",
                "ScribblePreprocessor",
                "Manga2Anime_LineArt_Preprocessor",
                "Scribble_XDoG_Preprocessor",
                "Prepare Image Plus (JPS)",
                "Prepare Image Tiled IPA (JPS)",
                "Image Prepare Pipe (JPS)",
                "Inference_Core_LineArtPreprocessor",
                "Inference_Core_HintImageEnchance",
                "Inference_Core_CannyEdgePreprocessor",
                "Inference_Core_ImageIntensityDetector"
            ],
            "Other": [
                "AlphaClean",
                "ImageReceiver",
                "ShufflePreprocessor",
                "ImageClamp",
                "SUPIR_first_stage",
                "CR Image Pipe In",
                "SeargeImageAdapterV2",
                "Inference_Core_ShufflePreprocessor",
                "RemapImageRange",
                "ImageNormalize_Neg1_To_1"
            ]
        },
        "Text": {
            "TextOnImage": [
                "Text To Image (mtb)",
                "ImageTextMultiline",
                "ImageText",
                "ImageTextOutlined",
                "ImageTextMultilineOutlined",
                "CR Simple Text Watermark",
                "CR Simple Banner",
                "CR_DrawText",
                "CR Overlay Text",
                "CR Simple Meme Template",
                "DrawText+"
            ],
            "Other": [
                "Create QR Code",
                "WHImageText",
                "DeepDanbooruCaption",
                "Image Caption",
                "CR Select Font",
                "AddLabel",
                "GLIGENTextBoxApplyBatch"
            ]
        },
        "Patterns": {
            "Tiled": [
                "TilePreprocessor",
                "SUPIR_tiles",
                "SeamlessTile",
                "Image Seamless Texture",
                "Image Tiled"
            ],
            "PatternGeneration": [
                "CR Color Bars",
                "CR_RandomShapePattern",
                "CR Simple Binary Pattern",
                "CR Style Bars",
                "CR Starburst Lines",
                "CR Starburst Colors",
                "CR Binary Pattern",
                "CR Checker Pattern"
            ],
            "NoisePatterns": [
                "SaltScheduledPerlinPowerFractalNoise",
                "SaltScheduledVoronoiNoise",
                "Image Perlin Noise",
                "WAS_Image_Perlin_Power_Fractal",
                "Image Voronoi Noise Filter",
                "Image Power Noise"
            ],
            "Other": [
                "Noise from Palette [Dream]",
                "Noise from Area Palettes [Dream]",
                "Linear Cross-Hatch Power Fractal (PL Power Noise)",
                "WHBatchShape",
                "Cross-Hatch Power Fractal (PL Power Noise)",
                "Cross-Hatch Power Fractal Settings (PL Power Noise)",
                "Power-Law Noise (PL Power Noise)",
                "Perlin Power Fractal Settings (PL Power Noise)",
                "Image Tile Offset (mtb)",
                "Batch Shape (mtb)",
                "SaltOPACPerlinSettings",
                "Mikey Sampler Tiled",
                "Mikey Sampler Tiled Base Only",
                "CR Halftone Grid",
                "CR Half Drop Panel",
                "CR_DiamondPanel",
                "CR Radial Gradient",
                "OffsetImage",
                "Image to Noise",
                "Image Generate Gradient",
                "FL_HexagonalPattern"
            ]
        },
        "Visual Effects": {
            "ImageFilter": [
                "ImageFilterEdgeEnhance",
                "ImageFilterMax",
                "ImageFilterFindEdges",
                "ImageFilterEdgeEnhanceMore",
                "ImageFilterSmoothMore",
                "ImageFilterSmooth",
                "ImageFilterMin",
                "ImageFilterEmboss",
                "ImageFilterDetail",
                "ImageFilterMode",
                "Image Bloom Filter",
                "WAS_Image_Nova_Filter",
                "Image fDOF Filter",
                "Image Style Filter",
                "Image Monitor Effects Filter",
                "Image Edge Detection Filter",
                "Image High Pass Filter"
            ],
            "ImageNoise": [
                "IPAdapterNoise",
                "ImageNoiseGaussian",
                "ImageNoiseBinomial",
                "ImageNoiseBeta",
                "ImageNoiseBytes"
            ],
            "VisualEffects": [
                "BetterFilmGrain",
                "ExposureAdjust",
                "RelightSimple",
                "Sharpen (mtb)",
                "SaltOPAC",
                "HDR Effects (SuperBeasts.AI)",
                "Pixel Deflicker (SuperBeasts.AI)",
                "ImageSharpen",
                "ImageEffectsNegative",
                "ImageEffectsAdjustment",
                "ImageEffectsSepia",
                "ImageFilterRank",
                "ImageFilterSharpen",
                "ImageEffectsGrayscale",
                "IG Cross Fade Images",
                "CR Halftone Filter",
                "VividSharpen",
                "Image Dragan Photography Filter",
                "Image SSAO (Ambient Occlusion)",
                "Image Lucy Sharpen",
                "Image Film Grain",
                "Image Filter Adjustments",
                "Image SSDO (Direct Occlusion)",
                "FL_Ripple",
                "FL_PixelSort",
                "FL_Glitch",
                "ImageCASharpening+",
                "ImagePosterize+"
            ],
            "LensEffects": [
                "ImageEffectsLensZoomBurst",
                "ImageEffectsLensOpticAxis",
                "ImageEffectsLensChromaticAberration",
                "ImageEffectsLensVignette",
                "ImageEffectsLensBokeh",
                "CR Vignette Filter",
                "Image Chromatic Aberration"
            ],
            "Blur": [
                "BlurImageFast",
                "Blur",
                "Blur (mtb)",
                "ImageGaussianBlur",
                "ImageBlur",
                "ImageFilterGaussianBlur",
                "ImageFilterBilateralBlur",
                "ImageFilterMedianBlur",
                "ImageFilterBoxBlur",
                "ImageFilterGaussianBlurAdvanced",
                "ImageFilterStackBlur",
                "ImageFilterBlur",
                "Image Median Filter"
            ],
            "Other": [
                "GuidedFilterAlpha",
                "RemapReverseBarrelDistortion",
                "ADE_NoiseLayerReplace",
                "NoiseInjectionHookProvider",
                "CinematicLook",
                "ImageFilterContour",
                "IG Analyze SSIM",
                "CameraStylerAdvanced"
            ]
        },
        "Base": {
            "Image": [
                "ImageConstant",
                "Make Image Batch",
                "ImageBatchToList",
                "Batch Merge (mtb)",
                "ChangeImageBatchSize __Inspire",
                "Image Batch Manager (SuperBeasts.AI)",
                "ImageListToImageBatch",
                "Kep_VariableImageBuilder",
                "Empty Images",
                "RebatchImages",
                "ImageBatch",
                "ImageFromBatch",
                "EmptyImage",
                "ImageBatchFork",
                "ImageBatchJoin",
                "ImageBatchCopy",
                "ImageBatchRemove",
                "ImageContainer",
                "ImageBatchPermute",
                "ImageBatchGet",
                "JWImageExtractFromBatch",
                "CR Thumbnail Preview",
                "WAS_Image_Blank",
                "Image Batch",
                "ImageExpandBatch+",
                "ImageFromBatch+",
                "ImageBatchMultiple+",
                "GetImageRangeFromBatch",
                "ImageBatchTestPattern",
                "ImageBatchRepeatInterleaving",
                "ImageBatchMulti",
                "ReplaceImagesInBatch"
            ],
            "Other": [
                "PLReverseImageBatch",
                "PLSetTempImage",
                "PLSelectImageBatch",
                "PLTruncateImageBatch",
                "JWImageBatchCount",
                "easy imageCount",
                "ImagePass"
            ]
        }
    },
    "LLM": {
        "RAG": {
            "LlamaIndex": [
                "LLMPyMuPDFReader",
                "LLMPandasCSVReader",
                "LLMCSVReader",
                "LLMPostProcessDocuments",
                "LLMUnstructuredReader",
                "LLMMarkdownReader"
            ],
            "Other": [
                "LLMHWPReader",
                "LLMRTFReader",
                "LLMLlamaCPPModel",
                "LLMTrafilaturaWebReader",
                "LLMXMLReader",
                "LLMTreeIndex",
                "LLMMboxReader",
                "LLMDocxReader",
                "ConvertAgentToLlamaindex",
                "LLMIPYNBReader",
                "LLMFlatReader",
                "LLMVectorStoreIndex",
                "LLMPptxReader",
                "LLMQueryEngine",
                "LLMPDFReader",
                "LLMQueryEngineAdv",
                "LLMScaleSERPSearch",
                "LLMVectorStoreIndexAdv"
            ]
        },
        "Agents": {
            "Agents": [
                "ConversableAgentCreator",
                "ConversableAgentCreatorAdvanced"
            ],
            "Other": [
                "LLMQueryEngineAsTool",
                "SendMessage",
                "ChangeSystemMessage",
                "ClearMemory",
                "ConvertAgentAsTool",
                "AddTool",
                "Plaiday_Video_Director",
                "LLMParquetDatasetSearcher",
                "AV_ClaudeApi",
                "ImpactHFTransformersClassifierProvider"
            ]
        },
        "Multimodal": {
            "LLMImage": [
                "LLMImageVisionLLMReader",
                "LLMImageTextReader"
            ],
            "Other": [
                "LLMYamlRepair",
                "LLMImageCaptionReader",
                "LLMLLaVANextImageEvaluator",
                "Moondream Interrogator",
                "Modelscopet2v",
                "BLIPCaption",
                "PhotoMakerEncode",
                "BLIP Analyze Image"
            ]
        },
        "Conversation": {
            "LLM": [
                "LLMSemanticSplitterNodeParser",
                "LLMTavilyResearch",
                "LLMServiceContextAdv",
                "LLMChatBot",
                "LLMYamlComposer",
                "AV_LLMMessage",
                "AV_LLMApiConfig",
                "AV_OpenAIApi",
                "AV_LLMChat"
            ],
            "Other": [
                "LLMGroqModel",
                "LLMChatEngine",
                "LLMHtmlComposer",
                "LLMServiceContextDefault",
                "GroupChat",
                "LLMChatMessages",
                "LLMChatMessagesAdv",
                "GenerateReply",
                "GroupChatAdvanced",
                "LLMChat",
                "LLMChatMessageConcat",
                "LLMHtmlRepair",
                "LLMMarkdownRepair",
                "LLMJsonComposer",
                "GroupChatManagerCreator",
                "LLMComplete",
                "LLMJsonRepair",
                "LLMRegexRepair",
                "LLMRegexCreator",
                "LLMOpenAIModelOpts",
                "SimpleChat",
                "LLMSummaryIndex",
                "LLMOpenAIModel",
                "PlaiDay_GPT_Interpolator_Streamline",
                "PlaiDay_GPT",
                "PlaiDay_LocalLLM",
                "PladDay_GPTV",
                "PlaiDay_GPT_Streamline",
                "PladDay_GPTV_Storyboard_Summary",
                "LLMMistralAI",
                "IF_ChatPrompt"
            ]
        }
    },
    "Prompt": {
        "PromptScheduling": {
            "PromptScheduling": [
                "PromptScheduleEncodeSDXL",
                "BatchPromptScheduleLatentInput",
                "PromptSchedule",
                "BatchPromptScheduleSDXLLatentInput",
                "BatchPromptScheduleEncodeSDXL"
            ],
            "Other": [
                "IPAdapterPromptScheduleFromWeightsStrategy",
                "SaltCyclicalSchedule",
                "SaltSchedule2ExecSchedule",
                "CfgScheduleHookProvider",
                "CR Prompt Scheduler",
                "CR Simple Text Scheduler",
                "CR Text Scheduler",
                "CR Cycle Text",
                "ScaleBatchPromptSchedule",
                "PromptScheduleNodeFlowEnd",
                "PromptScheduleNodeFlow"
            ]
        },
        "Base": {
            "Prompt": [
                "LMStudioPrompt",
                "Power Prompt - Simple (rgthree)",
                "SDXL Prompt Handling (JPS)"
            ],
            "Other": [
                "PlaiLabsPrompt",
                "CR SDXL Base Prompt Encoder"
            ]
        },
        "Other": {
            "Wildcard": [
                "WildcardEncode __Inspire",
                "ImpactWildcardEncode",
                "ImpactWildcardProcessor",
                "WildcardOobaPrompt",
                "OobaPrompt",
                "Wildcard Processor",
                "easy wildcards",
                "Text Parse Noodle Soup Prompts"
            ],
            "PromptComposer": [
                "OneButtonPreset",
                "CreatePromptVariant",
                "OneButtonPrompt",
                "Build Prompt [Dream]",
                "Finalize Prompt [Dream]",
                "PromptComposerMerge",
                "PromptComposerGrouping",
                "PromptComposerTextSingle",
                "PromptComposerEffect",
                "PromptComposerCustomLists",
                "promptComposerTextMultiple",
                "easy promptConcat",
                "CR_CombinePrompt",
                "SeargePromptCombiner"
            ],
            "Searge": [
                "SeargeAdvancedParameters",
                "SeargeOperatingMode",
                "SeargeInput7",
                "SeargeInput5",
                "SeargePromptAdapterV2",
                "SeargeOutput6",
                "SeargeInput3",
                "SeargeParameterProcessor",
                "SeargeInput2",
                "SeargeGenerated1",
                "SeargeOutput1",
                "SeargeOutput5",
                "SeargeOutput3",
                "SeargeOutput2",
                "SeargeEnablerInputs",
                "SeargeOutput7",
                "SeargeGenerationParameters",
                "SeargeConditionMixing",
                "SeargeSaveFolderInputs",
                "SeargeSeparator",
                "SeargeMagicBox",
                "SeargeInput6",
                "SeargeInput1"
            ],
            "Other": [
                "SavePromptToFile",
                "AutoNegativePrompt",
                "LLMMarkdownComposer",
                "Get Prompt",
                "Plaiday_Prompt_Given_Theme",
                "Plaiday_Prompt_Remix",
                "Plaiday Prompt Title",
                "Prompts Everywhere",
                "Interpolate Clip Sequential (mtb)",
                "ZipPrompt __Inspire",
                "UnzipPrompt __Inspire",
                "LoadPromptsFromDir __Inspire",
                "LoadSinglePromptFromFile __Inspire",
                "PromptExtractor __Inspire",
                "LoadPromptsFromFile __Inspire",
                "PromptBuilder __Inspire",
                "AV_ParametersPipeToPrompts",
                "AV_PromptsToParametersPipe",
                "TextPreserve",
                "SRStringPromptInput",
                "WildcardAndLoraSyntaxProcessor",
                "SRFloatPromptInput",
                "SRIntPromptInput",
                "TextCombinations3",
                "TextCombinations",
                "SDXL Power Prompt - Simple / Negative",
                "Power Prompt",
                "easy imageInterrogator",
                "easy promptList",
                "easy promptLine",
                "easy XYInputs: PromptSR",
                "easy promptReplace",
                "Text Prompt Combo (JPS)",
                "SDXL Prompt Handling Plus (JPS)",
                "CR Get Parameter From Prompt",
                "CR Prompt List",
                "CR Text Cycler",
                "CR Simple Prompt List",
                "CR Prompt Text",
                "CR Text Blacklist",
                "DF_DynamicPrompts_Text_Box",
                "SeargeTextInputV2",
                "SeargeSDXLPromptEncoder",
                "SeargeSDXLBasePromptEncoder",
                "SeargePromptText",
                "SeargeSDXLRefinerPromptEncoder",
                "SeargeFreeU",
                "SeargeCustomPromptMode",
                "Inference_Core_PromptExpansion",
                "XY Input: Prompt S_R",
                "WAS_Text_Random_Prompt",
                "IF_ImagePrompt",
                "Superprompt",
                "GoogleTranslateTextNode"
            ]
        },
        "Styling": {
            "PromptStyling": [
                "SDXLPromptStylerAdvanced",
                "SDXLPromptStyler",
                "PromptWithStyle",
                "PromptWithStyleV2",
                "Prompt With Style V3",
                "Prompt With SDXL",
                "SDXL Power Prompt - Positive (rgthree)",
                "PromptComposerStyler",
                "easy stylesSelector",
                "SDXL Prompt Styler (JPS)",
                "CR SDXL Prompt Mixer",
                "CR SDXL Style Text",
                "CR SDXL Prompt Mix Presets",
                "Fans Prompt Styler Negative",
                "Fans Prompt Styler Positive",
                "Fans Styler",
                "PrepositionStyler",
                "Clothing_StyleStyler",
                "PrepositionStylerAdvanced",
                "NounsStyler",
                "MaterialsStyler",
                "ArtistStyler",
                "DepthStyler",
                "AzazealStylesStylerAdvanced",
                "Clothing_StyleStylerAdvanced",
                "Breast_StateStylerAdvanced",
                "Banana_StylesStylerAdvanced",
                "Clothing_StateStyler",
                "FocusStyler",
                "FilterStylerAdvanced",
                "MoodStylerAdvanced",
                "DepthStylerAdvanced",
                "MilehighStylerAdvanced",
                "EnvironmentStylerAdvanced",
                "FocalPointStylerAdvanced",
                "SubjectStylerAdvanced",
                "CompositionStylerAdvanced",
                "ThemeStyler",
                "SubjectStyler",
                "TimeofdayStylerAdvanced",
                "ArtistStylerAdvanced",
                "VerbingStylerAdvanced",
                "Banana_StylesStyler",
                "ThemeStylerAdvanced",
                "MilehighStyler",
                "NounsStylerAdvanced",
                "PerfectionStyler",
                "MaterialsStylerAdvanced",
                "TimeofdayStyler",
                "AdjectiveStylerAdvanced",
                "LightingStyler",
                "FocalPointStyler",
                "EnvironmentStyler",
                "LightingStylerAdvanced",
                "FilterStyler",
                "VerbingStyler",
                "MoodStyler",
                "AdjectiveStyler",
                "Clothing_StateStylerAdvanced",
                "PerfectionStylerAdvanced",
                "FocusStylerAdvanced",
                "CompositionStyler",
                "LutsStyler",
                "Breast_StateStyler",
                "LutsStylerAdvanced",
                "AzazealStylesStyler",
                "WAS_Prompt_Multiple_Styles_Selector",
                "WAS_Prompt_Styles_Selector"
            ],
            "Other": [
                "OneButtonSuperPrompt",
                "OneButtonFlufferize",
                "OneButtonArtify",
                "PLPromptStyler",
                "PLPromptStylerList",
                "Plaiday_Prompt_Given_ArtStyle",
                "Plaiday_Prompt_Enhance",
                "Styles Loader (mtb)",
                "AV_StyleApply",
                "easy portraitMaster",
                "easy positive",
                "SeargePromptStyles",
                "SeargeStylePreprocessor",
                "IF_PromptMkr"
            ]
        },
        "Regional": {
            "RegionalPrompt": [
                "RegionalPromptSimple __Inspire",
                "RegionalPromptColorMask __Inspire",
                "RegionalPrompt"
            ],
            "Other": [
                "CombineRegionalPrompts"
            ]
        }
    },
    "Diffusion": {
        "Latent": {
            "LayeredDiffusion": [
                "easy preSamplingLayerDiffusionADDTL",
                "easy preSamplingLayerDiffusion",
                "Inference_Core_LayeredDiffusionApply",
                "Inference_Core_LayeredDiffusionCondJointApply",
                "Inference_Core_LayeredDiffusionCondApply",
                "Inference_Core_LayeredDiffusionDiffApply",
                "Inference_Core_LayeredDiffusionJointApply",
                "LayeredDiffusionCondJointApply",
                "LayeredDiffusionJointApply",
                "LayeredDiffusionApply",
                "LayeredDiffusionDiffApply"
            ],
            "Latent": [
                "AdainLatent",
                "LatentNormalizeShuffle",
                "LatentStats",
                "BatchNormalizeLatent",
                "FromListGetLatents",
                "ExtendLatentList",
                "FromListGet1Latent",
                "ToLatentList",
                "Latent Lerp (mtb)",
                "BNK_SlerpLatent",
                "ADE_EmptyLatentImageLarge",
                "LatentSender",
                "LatentReceiver",
                "Empty Latent Ratio Select SDXL",
                "Empty Latent Ratio Custom SDXL",
                "LatentInterpolate",
                "LatentCompositeMasked",
                "LatentBlend",
                "LoadLatent",
                "LatentBatch",
                "LatentComposite",
                "LatentAdd",
                "LatentMultiply",
                "EmptyLatentImage",
                "SaveLatent",
                "LatentFromBatch",
                "SDXL Empty Latent Image",
                "easy latentCompositeMaskedWithCond",
                "CR Interpolate Latents",
                "DF_Get_latent_size",
                "DF_Latent_Scale_to_side",
                "DF_Latent_Scale_by_ratio",
                "PreviewLatentXL",
                "PreviewLatentAdvanced",
                "PreviewLatent",
                "Latent Batch",
                "Blend Latents",
                "VHS_MergeLatents",
                "VHS_SelectEveryNthLatent",
                "VHS_SplitLatents",
                "SDXLEmptyLatentSizePicker+",
                "GetLatentsFromBatchIndexed",
                "EmptyLatentImagePresets",
                "DummyLatentOut"
            ],
            "LatentNoise": [
                "BNK_InjectNoise",
                "BNK_NoisyLatentImage",
                "RemoveNoiseMask",
                "SetLatentNoiseMask",
                "AddNoise",
                "easy preSamplingNoiseIn",
                "easy latentNoisy",
                "easy injectNoiseToLatent",
                "Latent Noise Injection",
                "RemoveLatentMask",
                "InjectNoiseToLatent",
                "GenerateNoise"
            ],
            "Noise": [
                "ADE_NoiseLayerAdd",
                "ADE_NoiseLayerAddWeighted",
                "Noise Control Script"
            ],
            "Other": [
                "OffsetLatentImage",
                "CSwitchBooleanLatent",
                "LatentDuplicator",
                "LatentSelector",
                "FlatLatentsIntoSingleGrid",
                "Merge Latent Batch Gridwise",
                "MaskGrid N KSamplers Advanced",
                "Repeat Into Grid (latent)",
                "Big Latent Switch [Dream]",
                "PLLatentList",
                "Perlin Power Fractal Latent (PL Power Noise)",
                "Images as Latents (PL Power Noise)",
                "Latents to CPU (PL Power Noise)",
                "Latent Adjustment (PL Power Noise)",
                "Blend Latents (PL Power Noise)",
                "LatentBatchSplitter __Inspire",
                "RegionalSeedExplorerColorMask __Inspire",
                "ChangeLatentBatchSize __Inspire",
                "OverlayInpaintedLatent",
                "NoiseInjectionDetailerHookProvider",
                "ReencodeLatentPipe",
                "LatentPixelScale",
                "ReencodeLatent",
                "ImpactLatentInfo",
                "LatentSwitch",
                "RepeatLatentBatch",
                "RebatchLatents",
                "StableCascade_EmptyLatentImage",
                "LatentFlip",
                "LatentCrop",
                "LatentUpscaleBy",
                "LatentRotate",
                "VAEEncodeTiled",
                "LatentSubtract",
                "LatentBatchSeedBehavior",
                "ImageGenResolutionFromLatent",
                "LatentClamp",
                "JWMaskSequenceApplyToLatent",
                "easy stableDiffusion3API",
                "IG Explorer",
                "Latent Switch (JPS)",
                "CR_LatentInputSwitch",
                "CR Latent Batch Size",
                "SeargeLatentMuxer3",
                "Inference_Core_ImageGenResolutionFromLatent",
                "LatentKeyframeTiming",
                "LatentKeyframe",
                "LatentKeyframeBatchedGroup",
                "BLVAEEncode",
                "VAEEncodeTiled_TiledDiffusion",
                "Latent Size to Number",
                "Latent Upscale by Factor (WAS)",
                "Image to Latent Mask",
                "Latent Input Switch",
                "VHS_GetLatentCount",
                "VHS_DuplicateLatents",
                "FloatToSigmas",
                "BatchValueScheduleLatentInput"
            ]
        },
        "CLIP": {
            "CLIP": [
                "PrepImageForClipVision",
                "BNK_CLIPTextEncodeSDXLAdvanced",
                "BNK_CLIPTextEncodeAdvanced",
                "MotionCLIPTextEncode",
                "CLIPEncodeMultipleAdvanced",
                "CLIPEncodeMultiple",
                "CLIPTextEncodeWithWeight __Inspire",
                "SaltCLIPTextEncodeSequence",
                "CLIPTextEncode",
                "CLIPSetLastLayer",
                "GLIGENTextBoxApply",
                "CLIPTextEncodeControlnet",
                "CLIPVisionLoader",
                "CLIPVisionEncode",
                "CLIPTextEncodeSDXLRefiner",
                "unCLIPConditioning",
                "CLIPTextEncodeSDXL",
                "CLIPLoader",
                "DualCLIPLoader",
                "CLIPTextEncode SDXL Plus (JPS)",
                "CLIPTextEncodeSequence2",
                "CLIPTextEncodeList",
                "CLIPTextEncode (BlenderNeko Advanced + NSP)",
                "CLIPTextEncode (NSP)",
                "CLIPTextEncodeSDXL+",
                "GLIGENTextBoxApplyBatchCoords",
                "DeepTranslatorCLIPTextEncodeNode"
            ],
            "Other": [
                "BNK_AddCLIPSDXLRParams",
                "PLCLIPTextEncode",
                "CLIPMergeSimple",
                "CLIPMergeAdd",
                "CLIPSave",
                "CLIPMergeSubtract",
                "ClipVisionOutputClamp",
                "ClipVisionClamp",
                "ClipClamp",
                "smZ CLIPTextEncode",
                "ELLATextEncode",
                "CLIP Input Switch",
                "CLIP Vision Input Switch",
                "GoogleTranslateCLIPTextEncodeNode",
                "ArgosTranslateCLIPTextEncodeNode"
            ]
        },
        "Conditioning": {
            "Conditioning": [
                "InstructPixToPixConditioningAdvanced",
                "BNK_AddCLIPSDXLParams",
                "FromListGet1Cond",
                "ExtendCondList",
                "Conditioning Grid (cond)",
                "Conditioning Grid (string) Advanced",
                "ToCondList",
                "Conditioning Grid (string)",
                "ConcatConditioningsWithMultiplier __Inspire",
                "SaltConditioningSetMaskAndCombine",
                "ADE_ConditioningSetMaskAndCombine",
                "ADE_PairedConditioningSetUnmaskedAndCombine",
                "ADE_PairedConditioningSetMask",
                "ADE_ConditioningSetMask",
                "ADE_ConditioningSetUnmaskedAndCombine",
                "ADE_PairedConditioningSetMaskAndCombine",
                "ImpactConcatConditionings",
                "ImpactCombineConditionings",
                "ConditioningSetMask",
                "ConditioningZeroOut",
                "ConditioningSetAreaPercentage",
                "ConditioningCombine",
                "InstructPixToPixConditioning",
                "ConditioningConcat",
                "StableZero123_Conditioning_Batched",
                "ConditioningAverage",
                "StableCascade_StageB_Conditioning",
                "ConditioningSetTimestepRange",
                "SVD_img2vid_Conditioning",
                "SV3D_Conditioning",
                "ConditioningSetArea",
                "StableZero123_Conditioning",
                "ConditioningSetAreaStrength",
                "SUPIR_conditioner",
                "CR Conditioning Mixer",
                "DF_Conditioning_area_scale_by_ratio",
                "SeargeConditioningParameters",
                "ConditioningBlend",
                "Text to Conditioning",
                "ConditioningCombineMultiple+",
                "ConditioningSetMaskAndCombine",
                "ConditioningMultiCombine",
                "ConditioningSetMaskAndCombine4",
                "ConditioningSetMaskAndCombine3",
                "ConditioningSetMaskAndCombine5"
            ],
            "Other": [
                "CSwitchBooleanConditioning",
                "RegionalConditioningSimple __Inspire",
                "RegionalConditioningColorMask __Inspire",
                "ToDetailerPipeSDXL",
                "StyleConditioner",
                "PerpNeg",
                "CFGGuider",
                "RescaleCFG",
                "BasicGuider",
                "PerpNegGuider",
                "ConditioningClamp",
                "PFG",
                "ttN pipeEncodeConcat",
                "easy negative",
                "Conditioning Switch (JPS)",
                "CR_ConditioningInputSwitch",
                "SeargeConditioningMuxer2",
                "SeargeConditioningMuxer5",
                "LayeredDiffusionCondApply",
                "Conditioning Input Switch",
                "InstanceDiffusionTrackingPrompt",
                "CondPassThrough"
            ]
        },
        "Transformation and Normalization": {
            "Normalization": [
                "BatchNormalizeImage"
            ],
            "Other": [
                "ClampOutliers",
                "Automatic CFG - Post rescale only",
                "Inference_Core_TonemapNoiseWithRescaleCFG"
            ]
        },
        "Decoding": {
            "VAE": [
                "Circular VAEDecode",
                "VAEEncodeBatch",
                "Vae Decode (mtb)",
                "VAESave",
                "StableCascade_StageC_VAEEncode",
                "VAEDecodeTiled",
                "VAEEncode",
                "VAEDecode",
                "SUPIR_encode",
                "SUPIR_decode",
                "CR_VAEDecode",
                "CR VAE Input Switch",
                "SeargeCustomAfterVaeDecode",
                "CircularVAEDecode",
                "MakeCircularVAE",
                "XY Input: VAE",
                "VAEDecodeTiled_TiledDiffusion",
                "VHS_VAEEncodeBatched",
                "VHS_VAEDecodeBatched"
            ],
            "LayeredDiffusionDecode": [
                "Inference_Core_LayeredDiffusionDecodeRGBA",
                "Inference_Core_LayeredDiffusionDecodeSplit",
                "Inference_Core_LayeredDiffusionDecode",
                "LayeredDiffusionDecode",
                "LayeredDiffusionDecodeSplit",
                "LayeredDiffusionDecodeRGBA"
            ],
            "Other": [
                "PreviewBridgeLatent",
                "VaeClamp"
            ]
        },
        "Inpaint": {
            "Inpaint": [
                "Inpaint",
                "PrepareImageAndMaskForInpaint",
                "LaMaInpaint",
                "INPAINT_LoadInpaintModel",
                "INPAINT_ApplyFooocusInpaint",
                "INPAINT_InpaintWithModel",
                "INPAINT_LoadFooocusInpaint",
                "InpaintPreprocessor",
                "easy fooocusInpaintLoader",
                "easy kSamplerInpainting",
                "SeargeImage2ImageAndInpainting",
                "Inference_Core_InpaintPreprocessor"
            ],
            "Other": [
                "PLVaeInpaintingGetter",
                "INPAINT_MaskedBlur",
                "INPAINT_VAEEncodeInpaintConditioning",
                "INPAINT_MaskedFill",
                "VAEEncodeForInpaint",
                "InpaintModelConditioning",
                "VAEEncodeForInpaint (WAS)"
            ]
        },
        "Style": {
            "Style": [
                "Style Conditioner Base Only",
                "StyleModelApply"
            ],
            "Other": [
                "StyleAlignedSampleReferenceLatents"
            ]
        },
        "Other": {
            "SDXLSettings": [
                "easy isSDXL",
                "SDXL Settings Pipe (JPS)",
                "SDXL Settings (JPS)",
                "SDXL Basic Settings (JPS)",
                "SDXL Basic Settings Pipe (JPS)"
            ],
            "Weight": [
                "ADE_AdjustWeightAllAdd"
            ],
            "Other": [
                "DifferentialDiffusion",
                "SDXL Fundamentals MultiPipe (JPS)",
                "Generation TXT IMG Settings (JPS)",
                "Pack SDXL Tuple",
                "Unpack SDXL Tuple",
                "TiledDiffusion",
                "StabilityAPI_SD3",
                "WeightScheduleConvert"
            ]
        },
        "Sampling and Scheduling": {
            "SamplerScheduler": [
                "Scheduler Selector",
                "Sampler Selector",
                "TiledKSamplerProvider",
                "KSamplerAdvancedProvider",
                "KSamplerProvider",
                "KSamplerSelect",
                "KSampler Config (rgthree)",
                "easy XYInputs: Sampler_Scheduler",
                "easy kSamplerTiled",
                "easy kSampler",
                "easy kSamplerSDTurbo",
                "Sampler Scheduler Settings (JPS)",
                "SeargeSamplerInputs",
                "XY Input: Sampler_Scheduler"
            ],
            "Sampling": [
                "Asymmetric Tiled KSampler",
                "Tiled KSampler",
                "Smart Step (mtb)",
                "StyleAlignedReferenceSampler",
                "KSamplerAdvanced __Inspire",
                "KSamplerProgress __Inspire",
                "KSamplerPipe __Inspire",
                "KSampler __Inspire",
                "KSamplerAdvancedProgress __Inspire",
                "GlobalSampler __Inspire",
                "KSamplerAdvancedPipe __Inspire",
                "Fooocus_KSamplerEfficientAdvanced",
                "Fooocus_KSamplerEfficient",
                "Fooocus_KSampler",
                "Fooocus_KSamplerAdvanced",
                "BNK_Unsampler",
                "RegionalSamplerAdvanced",
                "ImpactKSamplerAdvancedBasicPipe",
                "ImpactKSamplerBasicPipe",
                "RegionalSampler",
                "TwoSamplersForMask",
                "MikeySamplerTiledAdvancedBaseOnly",
                "Mikey Sampler Base Only Advanced",
                "Mikey Sampler",
                "Mikey Sampler Base Only",
                "MikeySamplerTiledAdvanced",
                "ModelSamplingDiscrete",
                "SamplerLMS",
                "SamplerDPMAdaptative",
                "SamplerEulerAncestral",
                "KSampler",
                "KSamplerAdvanced",
                "SamplerDPMPP_2M_SDE",
                "ModelSamplingContinuousEDM",
                "SamplerDPMPP_3M_SDE",
                "SamplerCustom",
                "SamplerDPMPP_SDE",
                "SamplerCustomAdvanced",
                "SamplerLCMAlternative",
                "SamplerLCMCycle",
                "KSampler Gradually Adding More Denoise (efficient)",
                "SUPIR_sample",
                "ttN KSampler_v2",
                "ttN pipeKSamplerAdvanced_v2",
                "ttN pipeKSamplerSDXL",
                "ttN pipeKSampler_v2",
                "ttN pipeKSampler",
                "ttN pipeKSamplerAdvanced",
                "ttN pipeKSamplerSDXL_v2",
                "easy preSamplingSdTurbo",
                "easy fullCascadeKSampler",
                "easy preSamplingDynamicCFG",
                "easy fullkSampler",
                "easy unSampler",
                "easy preSamplingCustom",
                "easy cascadeKSampler",
                "easy preSamplingAdvanced",
                "easy preSamplingCascade",
                "easy preSampling",
                "SeargeSDXLSampler",
                "SeargeSDXLSampler2",
                "SeargeSDXLImage2ImageSampler",
                "SeargeSDXLSamplerV3",
                "SeargeSDXLImage2ImageSampler2",
                "KSampler Adv. (Efficient)",
                "KSampler (Efficient)",
                "KSampler SDXL (Eff.)",
                "KSamplerSeq2",
                "KSamplerSeq",
                "KSampler Cycle",
                "KSamplerVariationsStochastic+",
                "KSamplerVariationsWithNoise+"
            ],
            "SigmaScheduling": [
                "BNK_GetSigma",
                "ADE_SigmaSchedule",
                "ADE_SigmaScheduleWeightedAverageInterp",
                "ADE_RawSigmaSchedule",
                "ADE_SigmaScheduleWeightedAverage",
                "ADE_SigmaScheduleSplitAndCombine",
                "SplitSigmas",
                "VPScheduler",
                "BasicScheduler",
                "AlignYourStepsScheduler",
                "PolyexponentialScheduler",
                "KarrasScheduler",
                "ExponentialScheduler",
                "FlipSigmas",
                "SDTurboScheduler",
                "LCMScheduler",
                "GetSigma",
                "CustomSigmas",
                "FlipSigmasAdjusted"
            ],
            "Other": [
                "MotionDiffSimpleSampler",
                "PLLoopBatchKSampler",
                "PLSamplePipeline",
                "Power KSampler Advanced (PL Power Noise)",
                "ADE_TimestepsConditioning",
                "ADE_UseEvolvedSampling",
                "DenoiseScheduleHookProvider",
                "DenoiseSchedulerDetailerHookProvider",
                "UnsamplerHookProvider",
                "UnsamplerDetailerHookProvider",
                "StepsScheduleHookProvider",
                "DualCFGGuider",
                "DisableNoise",
                "easy kSamplerDownscaleUnet",
                "easy kSamplerLayerDiffusion",
                "smZ Settings",
                "Inference_Core_ModelSamplerTonemapNoiseTest",
                "TonemapNoiseWithRescaleCFG",
                "ModelSamplerTonemapNoiseTest"
            ]
        }
    },
    "Controls": {
        "IPAdapter": {
            "IPAdapter": [
                "IPAdapterAdvanced",
                "IPAdapterUnifiedLoaderCommunity",
                "IPAdapterUnifiedLoaderFaceID",
                "IPAdapterInsightFaceLoader",
                "IPAdapterSaveEmbeds",
                "IPAdapterFaceID",
                "IPAdapterTiled",
                "IPAdapterMS",
                "IPAdapterUnifiedLoader",
                "IPAdapterLoadEmbeds",
                "IPAdapterStyleComposition",
                "IPAdapter",
                "IPAdapterEncoder",
                "IPAdapterCombineParams",
                "IPAdapterStyleCompositionBatch",
                "IPAAdapterFaceIDBatch",
                "IPAdapterBatch",
                "IPAdapterTiledBatch",
                "IPAdapterCombineEmbeds",
                "IPAdapterModelLoader",
                "IPAdapterEmbeds",
                "IPAdapterFromParams",
                "ToIPAdapterPipe __Inspire",
                "IPAdapterModelHelper __Inspire",
                "FromIPAdapterPipe __Inspire",
                "ApplyRegionalIPAdapters __Inspire",
                "AV_IPAdapterPipeline",
                "AV_IPAdapter",
                "easy ipadapterStyleComposition",
                "easy ipadapterApplyEncoder",
                "easy ipadapterApplyEmbeds",
                "easy ipadapterApplyADV",
                "easy ipadapterApply",
                "easy ipadapterApplyFromParams",
                "easy ipadapterApplyRegional"
            ],
            "Other": [
                "IPAdapterWeightsFromStrategy",
                "IPAdapterCombineWeights",
                "IPAdapterWeights",
                "IP Adapter Settings Pipe (JPS)",
                "IP Adapter Tiled Settings (JPS)",
                "IP Adapter Settings (JPS)",
                "IP Adapter Tiled Settings Pipe (JPS)",
                "IPA Switch (JPS)"
            ]
        },
        "ControlNet": {
            "ControlNet": [
                "ControlNetHadamard",
                "AV_ControlNetLoader",
                "AV_ControlNetEfficientStackerSimple",
                "AV_ControlNetEfficientLoader",
                "AV_ControlNetEfficientLoaderAdvanced",
                "AV_ControlNetEfficientStacker",
                "ControlNetLoader",
                "ControlNetApply",
                "DiffControlNetLoader",
                "ControlNetApplyAdvanced",
                "ControlNetPreprocessorSelector",
                "easy controlnetLoader",
                "easy XYInputs: ControlNet",
                "easy controlnetNames",
                "easy controlnetLoaderADV",
                "CtrlNet OpenPose Pipe (JPS)",
                "CtrlNet OpenPose Settings (JPS)",
                "ControlNet Switch (JPS)",
                "CtrlNet MiDaS Settings (JPS)",
                "CtrlNet MiDaS Pipe (JPS)",
                "CtrlNet ZoeDepth Settings (JPS)",
                "CR Apply ControlNet",
                "CR_ControlNetInputSwitch",
                "CR Apply Multi-ControlNet",
                "CR Multi-ControlNet Stack",
                "SeargeControlnetModels",
                "SeargeControlnetAdapterV2",
                "ACN_ReferenceControlNetFinetune",
                "ACN_ReferenceControlNet",
                "SoftControlNetWeights",
                "CustomT2IAdapterWeights",
                "ACN_AdvancedControlNetApply",
                "DiffControlNetLoaderAdvanced",
                "ScaledSoftControlNetWeights",
                "ACN_SparseCtrlLoaderAdvanced",
                "CustomControlNetWeights",
                "ControlNetLoaderAdvanced",
                "Apply ControlNet Stack",
                "Control Net Stacker",
                "XY Input: Control Net",
                "Control Net Model Input Switch"
            ],
            "Other": [
                "PLControlNetApplyAdvanced",
                "PLControlNetList",
                "ApplyInstantIDControlNet",
                "RemoveControlNet __Inspire",
                "AV_ControlNetPreprocessor",
                "StableCascade_SuperResolutionControlnet",
                "ControlNetClamp",
                "CtrlNet CannyEdge Settings (JPS)",
                "Inference_Core_AnimeLineArtPreprocessor",
                "ACN_SparseCtrlRGBPreprocessor",
                "ACN_ReferencePreprocessor"
            ]
        },
        "Other": {
            "RegionalImageProcessing": [
                "IPAdapterRegionalConditioning",
                "RegionalIPAdapterColorMask __Inspire",
                "RegionalIPAdapterEncodedMask __Inspire",
                "RegionalIPAdapterMask __Inspire",
                "RegionalIPAdapterEncodedColorMask __Inspire"
            ],
            "Other": [
                "RemoveControlNetFromRegionalPrompts __Inspire",
                "ImpactRemoteBoolean",
                "CtrlNet ZoeDepth Pipe (JPS)",
                "ACN_DefaultUniversalWeights",
                "ACN_SparseCtrlSpreadMethodNode",
                "ScaledSoftMaskedUniversalWeights",
                "ACN_SparseCtrlIndexMethodNode",
                "ACN_SparseCtrlMergedLoaderAdvanced"
            ]
        }
    },
    "Enhancers": {
        "DetailEnhancement": [
            "easy preDetailerFix",
            "easy detailerFix"
        ],
        "ImageScaling": [
            "CCSR_Upscale",
            "LDSRUpscaler",
            "LDSRUpscale",
            "SEGSUpscalerPipe",
            "PixelTiledKSampleUpscalerProviderPipe",
            "IterativeImageUpscale",
            "IterativeLatentUpscale",
            "SEGSUpscaler",
            "PixelKSampleUpscalerProviderPipe",
            "PixelTiledKSampleUpscalerProvider",
            "TwoSamplersForMaskUpscalerProvider",
            "PixelKSampleUpscalerProvider",
            "ImageScaleBy",
            "SD_4XUpscale_Conditioning",
            "ImageUpscaleWithModel",
            "LatentUpscale",
            "SUPIR_Upscale",
            "ttN hiresfixScale",
            "easy hiresFix",
            "CR Upscale Image",
            "CR Apply Multi Upscale",
            "CR Multi Upscale Stack",
            "SeargeCustomAfterUpscaling",
            "SeargeUpscaleModels",
            "SeargeHighResolution",
            "Tiled Upscaler Script",
            "HighRes-Fix Script",
            "ImageUpscaleWithModelBatched",
            "UltimateSDUpscaleNoUpscale",
            "UltimateSDUpscale"
        ],
        "ImageEnhancement": [
            "VariationNoiseDetailerHookProvider",
            "DetailerHookCombine",
            "PreviewDetailerHookProvider",
            "CoreMLDetailerHookProvider"
        ],
        "Other": [
            "EnhanceDetail",
            "WHImageUpscaleWithModelList",
            "ADE_UpscaleAndVAEEncode",
            "EditDetailerPipeSDXL",
            "FreeU",
            "HintImageEnchance",
            "ttN pipe2DETAILER",
            "easy imagePixelPerfect",
            "CR_HiResFixProcessSwitch",
            "ImageEnhanceDifference+"
        ]
    },
    "Detectors": {
        "LineExtraction": {
            "LineExtraction": [
                "AnimeLineArtPreprocessor",
                "HEDPreprocessor",
                "DiffusionEdge_Preprocessor",
                "PiDiNetPreprocessor",
                "LineartStandardPreprocessor",
                "TEEDPreprocessor",
                "M-LSDPreprocessor",
                "Inference_Core_M-LSDPreprocessor",
                "Inference_Core_ScribblePreprocessor",
                "Inference_Core_LineartStandardPreprocessor",
                "Inference_Core_DiffusionEdge_Preprocessor",
                "Inference_Core_PiDiNetPreprocessor",
                "Inference_Core_TEEDPreprocessor",
                "Inference_Core_Scribble_XDoG_Preprocessor",
                "Inference_Core_HEDPreprocessor",
                "Inference_Core_Manga2Anime_LineArt_Preprocessor"
            ],
            "Other": [
                "Canny",
                "CtrlNet CannyEdge Pipe (JPS)"
            ]
        },
        "NormalMap": {
            "NormalMap": [
                "NormalMapSimple",
                "ConvertNormals",
                "Deep Bump (mtb)",
                "DSINE-NormalMapPreprocessor",
                "BAE-NormalMapPreprocessor",
                "Inference_Core_BAE-NormalMapPreprocessor"
            ],
            "Other": [
                "MiDaS-NormalMapPreprocessor",
                "Inference_Core_MiDaS-NormalMapPreprocessor"
            ]
        },
        "PoseEstimation": {
            "PoseEstimation": [
                "AnimalPosePreprocessor",
                "SavePoseKpsAsJsonFile",
                "OpenposePreprocessor",
                "DensePosePreprocessor",
                "easy poseEditor",
                "Inference_Core_AnimalPosePreprocessor",
                "Inference_Core_OpenposePreprocessor",
                "Inference_Core_DWPreprocessor",
                "Inference_Core_DensePosePreprocessor",
                "Inference_Core_SavePoseKpsAsJsonFile",
                "PoseNode"
            ],
            "Other": [
                "Render_OpenPose_From_SMPL_Mesh_Multiple_Subjects",
                "InstantID Pose Prepare Settings (JPS)",
                "InstantID Pose Prepare Pipe (JPS)",
                "Inference_Core_FacialPartColoringFromPoseKps"
            ]
        },
        "DepthMap": {
            "DepthMap": [
                "Zoe_DepthAnythingPreprocessor",
                "LeReS-DepthMapPreprocessor",
                "MeshGraphormer-DepthMapPreprocessor",
                "DepthAnythingPreprocessor",
                "Zoe-DepthMapPreprocessor",
                "MiDaS-DepthMapPreprocessor",
                "MarigoldDepthEstimation",
                "ColorizeDepthmap",
                "MarigoldDepthEstimationVideo",
                "Inference_Core_Zoe_DepthAnythingPreprocessor",
                "Inference_Core_MeshGraphormer-DepthMapPreprocessor",
                "Inference_Core_DepthAnythingPreprocessor",
                "Inference_Core_LeReS-DepthMapPreprocessor",
                "Inference_Core_Zoe-DepthMapPreprocessor",
                "Inference_Core_MiDaS-DepthMapPreprocessor",
                "MiDaS Depth Approximation"
            ],
            "Other": [
                "MTB_FilterZ",
                "RemapDepth"
            ]
        },
        "Face Landmarks": {
            "MediaPipeFaceMesh": [
                "MediaPipeFaceMeshDetectorProvider __Inspire",
                "MediaPipe-FaceMeshPreprocessor",
                "Inference_Core_MediaPipe-FaceMeshPreprocessor"
            ]
        },
        "OpticalFlow": {
            "OpticalFlow": [
                "Unimatch_OptFlowPreprocessor",
                "MaskOptFlow",
                "RAFTEstimate",
                "RAFTLoadFlowFromEXRChannels",
                "RAFTFlowToImage",
                "Inference_Core_Unimatch_OptFlowPreprocessor",
                "Inference_Core_MaskOptFlow"
            ]
        },
        "Utils": {
            "BoundingBox": [
                "Bbox (mtb)",
                "FaceBoundingBox",
                "SplitBboxes",
                "BboxToInt",
                "BboxVisualize"
            ],
            "Contour": [
                "BoundingRect",
                "DrawContours",
                "Contours",
                "GetContourFromList",
                "Filter Contour"
            ],
            "Other": [
                "ImpactFrom_SEG_ELT_bbox",
                "UltralyticsDetectorProvider",
                "SaltMaskContourExtraction",
                "easy ultralyticsDetectorPipe"
            ]
        },
        "Other": {
            "Other": [
                "ONNXDetectorProvider",
                "WD14Tagger|pysssss"
            ]
        }
    },
    "Segmentation": {
        "SAM": {
            "SAM": [
                "AV_SAMLoader",
                "SAMEmbeddingToImage",
                "GetSAMEmbedding",
                "SAMDetectorCombined",
                "SAMDetectorSegmented",
                "SAMPreprocessor",
                "SAMModelLoader (segment anything)",
                "GroundingDinoSAMSegment",
                "easy samLoaderPipe",
                "Inference_Core_SAMPreprocessor",
                "SAM Model Loader",
                "SAM Image Mask",
                "SAM Parameters",
                "SAM_Parameters_Combine"
            ]
        },
        "BackgroundRemoval": {
            "BackgroundRemoval": [
                "Image Remove Background Rembg (mtb)",
                "ttN imageREMBG",
                "easy imageRemBg",
                "Image Remove Background (Alpha)",
                "Image Rembg (Remove Background)",
                "RemBGSession+",
                "ImageRemoveBackground+",
                "BRIAAI Matting"
            ],
            "Other": [
                "RectGrabCut"
            ]
        },
        "Masks": {
            "Mask": [
                "DilateErodeMask",
                "Separate Mask Components",
                "Create Rect Mask",
                "Combine Masks",
                "Mask Morphology",
                "Mask By Text",
                "Constant Mask",
                "Mask To Region",
                "Prune By Mask",
                "ExtendMaskList",
                "FromListGet1Mask",
                "ToMaskList",
                "FadeMaskEdges",
                "ChameleonMask",
                "FromListGetMasks",
                "Make Resized Mask Batch (SuperBeasts.AI)",
                "Mask Batch Manager (SuperBeasts.AI)",
                "ImpactDilate_Mask_SEG_ELT",
                "ImpactDilateMaskInSEGS",
                "ToBinaryMask",
                "MaskListToMaskBatch",
                "AddMask",
                "MasksToMaskList",
                "ImpactDilateMask",
                "GrowMask",
                "FeatherMask",
                "SolidMask",
                "ThresholdMask",
                "SaltMaskFloorRegion",
                "SaltMaskSharpeningFilter",
                "SaltMaskFillRegion",
                "SaltMasksToImages",
                "SaltMaskRegionSplit",
                "SaltMaskSkeletonization",
                "SaltMaskEdgeDetection",
                "SaltMaskDominantRegion",
                "SaltMaskRegionLabeling",
                "SaltMaskGradientRegion",
                "SaltMaskErodeRegion",
                "SaltMaskAdaptiveThresholdingRegion",
                "SaltMaskCeilingRegion",
                "SaltMaskArbitaryRegion",
                "SaltMaskNoiseAddition",
                "SaltMaskGaussianRegion",
                "SaltMaskMinorityRegion",
                "SaltMaskClipHardeningFilter",
                "SaltMaskBilateralFilter",
                "SaltMaskThresholdRegion",
                "SaltMaskDilateRegion",
                "SaltMaskAdd",
                "IsMaskEmptyNode",
                "JWMaskResize",
                "JWMaskSequenceFromMask",
                "JWMaskSequenceJoin",
                "JWMaskLikeImageSize",
                "CR Mask Text",
                "ReActorMaskHelper",
                "Mask Batch",
                "Mask Threshold Region",
                "Mask Erode Region",
                "Mask Arbitrary Region",
                "Mask Batch to Mask",
                "Mask Fill Holes",
                "Masks Combine Regions",
                "Masks Add",
                "Mask Dilate Region",
                "Mask Ceiling Region",
                "Mask Minority Region",
                "Mask Crop Dominant Region",
                "Masks Combine Batch",
                "Mask Floor Region",
                "Mask Dominant Region",
                "VHS_SplitMasks",
                "VHS_DuplicateMasks",
                "VHS_MergeMasks",
                "VHS_SelectEveryNthMask",
                "MaskFromList+",
                "TransitionMask+",
                "MaskBatch+",
                "MaskFromBatch+",
                "MaskFromRGBCMYBW+",
                "MaskExpandBatch+",
                "MaskFromColor+",
                "CreateFadeMaskAdvanced",
                "MaskBatchMulti",
                "CreateFluidMask",
                "FilterZeroMasksAndCorrespondingImages",
                "RoundMask",
                "CreateShapeMaskOnPath",
                "CreateTextMask",
                "ResizeMask",
                "FloatToMask",
                "CreateFadeMask",
                "CreateMagicMask",
                "CreateVoronoiMask",
                "OffsetMask",
                "CreateShapeMask",
                "GrowMaskWithBlur",
                "CreateGradientMask"
            ],
            "ImageMask": [
                "Image To Mask",
                "Mask To Image (mtb)",
                "ImageToMask",
                "MaskToImage",
                "ImageColorToMask",
                "easy imageToMask",
                "Convert Masks to Images",
                "ColorToMask"
            ],
            "MaskBlur": [
                "BlurMaskFast",
                "ImpactGaussianBlurMask",
                "Mask Gaussian Region",
                "MaskSmooth+",
                "MaskBlur+"
            ],
            "MaskInversion": [
                "InvertMask",
                "SaltMaskInvert",
                "Mask Invert"
            ],
            "Other": [
                "AlphaMatte",
                "Unary Mask Op",
                "Cut By Mask",
                "Switch mask [Crystools]",
                "Framed Mask Grab Cut",
                "Contour To Mask",
                "Framed Mask Grab Cut 2",
                "MaskOuterBlur",
                "PlaiLabsMaskThresholdRegion",
                "PlaiLabsMaskFillRegion",
                "PlaiLabsMaskAdd",
                "PlaiLabsMaskCropRegion",
                "PlaiLabsMaskDilateRegion",
                "PlaiLabsMaskInvert",
                "PlaiLabsMasksToImages",
                "PlaiLabsMaskFloorRegion",
                "PlaiLabsMaskArbitaryRegion",
                "PlaiLabsMaskCeilingRegion",
                "PlaiLabsMaskErodeRegion",
                "PlaiLabsMaskMinorityRegion",
                "PlaiLabsMaskGaussianRegion",
                "PlaiLabsCLIPSegMasking",
                "PlaiLabsMaskSubtract",
                "PlaiLabsMaskDominantRegion",
                "PlaiLabsMaskSmoothRegion",
                "Bbox From Mask (mtb)",
                "RegionalSeedExplorerMask __Inspire",
                "LoadImageAsMaskFromUrl",
                "INPAINT_DenoiseToCompositingMask",
                "ADE_MultivalScaledMask",
                "ImpactSEGSToMaskBatch",
                "SubtractMaskForEach",
                "TwoSamplersForMaskUpscalerProviderPipe",
                "ImpactGaussianBlurMaskInSEGS",
                "ImpactSegsAndMaskForEach",
                "BitwiseAndMask",
                "MaskDetailerPipe",
                "ImpactMakeTileSEGS",
                "ImpactSegsAndMask",
                "SegsToCombinedMask",
                "ImageMaskSwitch",
                "SubtractMask",
                "TwoAdvancedSamplersForMask",
                "BboxDetectorCombined_v2",
                "BitwiseAndMaskForEach",
                "CropMask",
                "MaskComposite",
                "Morphology",
                "SaltMaskHistogramEqualizationRegion",
                "SaltMaskSubtract",
                "SaltMaskSmoothRegion",
                "SaltRGBAFromMask",
                "SaltMaskCropRegion",
                "ImageSegmentation",
                "MaskClamp",
                "easy preMaskDetailerFix",
                "APersonMaskGenerator",
                "Images Masks MultiPipe (JPS)",
                "Mask Switch (JPS)",
                "InstantID Mask Prepare Pipe (JPS)",
                "InstantID Mask Prepare Settings (JPS)",
                "Mask Crop Region",
                "MiDaS Mask Image",
                "CLIPSeg Batch Masking",
                "Mask Crop Minority Region",
                "Mask Smooth Region",
                "Mask Paste Region",
                "Masks Subtract",
                "Bounded Image Crop with Mask",
                "VHS_GetMaskCount",
                "MaskBoundingBox+",
                "MaskFromSegmentation+",
                "MaskPreview+",
                "MaskFlip+",
                "OffsetMaskByNormalizedAmplitude",
                "BatchCLIPSeg",
                "RemapMaskRange",
                "NormalizedAmplitudeToMask",
                "BatchCropFromMask",
                "BatchCropFromMaskAdvanced"
            ]
        },
        "Other": {
            "ImpactPack": [
                "SEGSOrderedFilterDetailerHookProvider",
                "ImpactScaleBy_BBOX_SEG_ELT",
                "SEGSRangeFilterDetailerHookProvider",
                "ImpactNodeSetMuteState",
                "ImpactSEGSOrderedFilter",
                "ImpactSEGSClassify",
                "ImpactSEGSLabelFilter",
                "ImpactIsNotEmptySEGS",
                "SEGSToImageList",
                "EmptySegs",
                "ImpactFrom_SEG_ELT",
                "SetDefaultImageForSEGS",
                "ImpactAssembleSEGS",
                "RemoveImageFromSEGS",
                "ImpactSEGSRangeFilter",
                "ImpactSEGSLabelAssign",
                "ImpactDecomposeSEGS",
                "ImpactControlNetClearSEGS",
                "ImpactEdit_SEG_ELT",
                "SEGSLabelFilterDetailerHookProvider",
                "ImpactDummyInput",
                "ImpactFrom_SEG_ELT_crop_region",
                "ImpactSEGSPicker",
                "ImpactSEGSConcat"
            ],
            "SEGSPrep": [
                "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS __Inspire",
                "Color_Preprocessor_Provider_for_SEGS __Inspire",
                "LineArt_Preprocessor_Provider_for_SEGS __Inspire",
                "InpaintPreprocessor_Provider_for_SEGS __Inspire",
                "TilePreprocessor_Provider_for_SEGS __Inspire",
                "HEDPreprocessor_Provider_for_SEGS __Inspire",
                "FakeScribblePreprocessor_Provider_for_SEGS __Inspire",
                "OpenPose_Preprocessor_Provider_for_SEGS __Inspire",
                "AnimeLineArt_Preprocessor_Provider_for_SEGS __Inspire",
                "Canny_Preprocessor_Provider_for_SEGS __Inspire",
                "DWPreprocessor_Provider_for_SEGS __Inspire",
                "MaskToSEGS",
                "ImpactSEGSToMaskList",
                "MaskToSEGS_for_AnimateDiff"
            ],
            "Segmentation": [
                "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS __Inspire",
                "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS __Inspire",
                "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS __Inspire",
                "LeRes_DepthMap_Preprocessor_Provider_for_SEGS __Inspire",
                "ISNetSegment",
                "SegmDetectorCombined_v2",
                "MediaPipeFaceMeshToSEGS",
                "SEGSPreview",
                "CLIPSegDetectorProvider",
                "ONNXDetectorSEGS",
                "ImpactSimpleDetectorSEGSPipe",
                "ImpactSimpleDetectorSEGS_for_AD",
                "BboxDetectorSEGS",
                "SEGSPreviewCNet",
                "SegmDetectorSEGS",
                "ImpactSimpleDetectorSEGS",
                "SaltCLIPSegMasking",
                "OneFormer-ADE20K-SemSegPreprocessor",
                "OneFormer-COCO-SemSegPreprocessor",
                "SemSegPreprocessor",
                "AnimeFace_SemSegPreprocessor",
                "UniFormer-SemSegPreprocessor",
                "ImageSegmentationCustomAdvanced",
                "ImageSegmentationCustom",
                "easy humanSegmentation",
                "Inference_Core_OneFormer-COCO-SemSegPreprocessor",
                "Inference_Core_AnimeFace_SemSegPreprocessor",
                "Inference_Core_UniFormer-SemSegPreprocessor",
                "Inference_Core_SemSegPreprocessor",
                "Inference_Core_OneFormer-ADE20K-SemSegPreprocessor",
                "CLIPSeg Masking"
            ],
            "Other": [
                "PlaiLabsCLIPSegLoader",
                "SEGSSwitch",
                "SEGSDetailerForAnimateDiff",
                "SEGSDetailer",
                "SEGSPaste",
                "ImpactIPAdapterApplySEGS",
                "ImpactControlNetApplyAdvancedSEGS",
                "ImpactControlNetApplySEGS",
                "DWPreprocessor",
                "CreateAudioMask",
                "Robust Video Matting"
            ]
        }
    },
    "Facial": {
        "Face Detection": {
            "Face": [
                "SpectreFaceReconLoader",
                "InstantIDFaceAnalysis",
                "FaceKeypointsPreprocessor",
                "Load Face Analysis Model (mtb)",
                "FaceEmbedDistance"
            ],
            "Other": [
                "CropFace",
                "Image Crop Face"
            ]
        },
        "Face Swap": {
            "ReActorFace": [
                "ReActorFaceSwap",
                "ReActorFaceSwapOpt",
                "ReActorMakeFaceModelBatch",
                "ReActorOptions"
            ],
            "Other": [
                "Face Swap (mtb)"
            ]
        },
        "Face Enhancements": {
            "IdentityImage": [
                "ApplyInstantIDAdvanced",
                "ApplyInstantID",
                "easy instantIDApply",
                "easy instantIDApplyADV"
            ],
            "FaceRestoration": [
                "Load Face Enhance Model (mtb)",
                "Restore Face (mtb)",
                "FaceFixerOpenCV",
                "FaceRestoreModelLoader",
                "FaceRestoreCFWithModel",
                "ReActorRestoreFace"
            ],
            "Other": [
                "PortraitMaster",
                "PLFaceAlignCrop",
                "AV_FaceDetailerPipe",
                "AV_FaceDetailer",
                "FaceDetailer",
                "FaceDetailerPipe",
                "FacialPartColoringFromPoseKps",
                "FaceAnalysisModels",
                "ReActorSaveFaceModel",
                "ReActorLoadFaceModel",
                "ReActorBuildFaceModel",
                "FaceStylerAdvanced",
                "FaceStyler"
            ]
        }
    },
    "Animation": {
        "Keyframes": {
            "Animation": [
                "ADE_ViewsOnlyContextOptions",
                "CR Load Animation Frames",
                "CR_LoadFlowFrames",
                "CR Cycle Images Simple",
                "CR_DebatchFrames",
                "CR Current Frame",
                "CR_CycleImages",
                "Write to Video",
                "Create Video from Path",
                "Create Morph Image",
                "Write to GIF",
                "Create Morph Image from Path"
            ],
            "Scheduling": [
                "SaltScheduleSmoothing",
                "SaltFloatScheduler",
                "SaltScheduleListExponentialFade",
                "SaltLayerExtractor",
                "SaltLayerScheduler",
                "SaltParallaxMotion",
                "SaltKeyframeSchedulerBFN",
                "SaltKeyframeScheduler",
                "SaltAudioFramesyncSchedule",
                "SaltScheduleVariance",
                "SaltKeyframeMetrics",
                "SaltThresholdSchedule",
                "SaltKeyframeVisualizer",
                "CR Combine Schedules",
                "CR_SimplePromptScheduler",
                "CR_SimpleSchedule",
                "CR Prompt List Keyframes",
                "CR Schedule Input Switch",
                "CR_SimplePromptListKeyframes",
                "CR_LoadScheduleFromFile",
                "CR Value Scheduler",
                "CR Encode Scheduled Prompts",
                "CR Simple Value Scheduler",
                "CR Keyframe List",
                "CR Bit Schedule",
                "CR Central Schedule",
                "ValueSchedule",
                "StringSchedule",
                "BatchStringSchedule",
                "BatchPromptSchedule"
            ],
            "VideoHelperSuite": [
                "VHS_LoadVideo",
                "VHS_VideoCombine",
                "VHS_BatchManager",
                "VHS_LoadVideoPath",
                "VHS_VideoInfoSource"
            ],
            "Curve": [
                "WAV Curve [Dream]",
                "CSV Curve [Dream]",
                "Smooth Event Curve [Dream]",
                "Triangle Curve [Dream]",
                "Linear Curve [Dream]",
                "Beat Curve [Dream]",
                "Triangle Event Curve [Dream]",
                "Curve (mtb)"
            ],
            "Frame": [
                "Frame Counter Offset [Dream]",
                "Frame Counter Info [Dream]",
                "Frame Counter (Simple) [Dream]",
                "Frame Counter (Directory) [Dream]",
                "Frame Count Calculator [Dream]",
                "Frame Counter Time Offset [Dream]",
                "Animation Builder (mtb)",
                "TimestepKeyframe",
                "LatentKeyframeGroup",
                "ExtractKeyframes+",
                "convertKeyframeKeysToBatchKeys",
                "FizzFrame",
                "FizzFrameConcatenate",
                "Init FizzFrame",
                "CalculateFrameOffset"
            ],
            "Other": [
                "Image Sequence Blend [Dream]",
                "FFMPEG Video Encoder [Dream]",
                "WHVideoGridBatch",
                "Extract Frames As Batch",
                "Batch Time Wrap (mtb)",
                "SaltKSamplerSequence",
                "ADE_LoraHookKeyframe",
                "ADE_LoraHookKeyframeFromStrengthList",
                "ADE_SetLoraHookKeyframe",
                "ImpactSchedulerAdapter",
                "ImpactQueueTriggerCountdown",
                "JWLoopImageSequence",
                "CR Cycle Text Simple",
                "Video Dump Frames",
                "FL_ImageDurationSync",
                "SV3D_BatchSchedule",
                "SplineEditor",
                "Lerp"
            ]
        },
        "FrameInterpolation": {
            "FrameInterpolation": [
                "Film Interpolation (mtb)",
                "STMFNet VFI",
                "IFUnet VFI",
                "GMFSS Fortuna VFI",
                "FILM VFI",
                "CAIN VFI",
                "AMT VFI",
                "Sepconv VFI",
                "IFRNet VFI",
                "M2M VFI",
                "Make Interpolation State List",
                "FLAVR VFI",
                "RIFE VFI",
                "CR_GradientFloat",
                "CR XY Interpolate"
            ],
            "Other": [
                "Image Sequence Tweening [Dream]",
                "SaltListLinearInterpolation",
                "ADE_LoraHookKeyframeInterpolation"
            ]
        },
        "AnimateDiff": {
            "AnimateDiff": [
                "ADE_InjectI2VIntoAnimateDiffModel",
                "ADE_IterationOptsFreeInit",
                "ADE_AnimateDiffSettings",
                "ADE_ApplyAnimateLCMI2VModel",
                "ADE_AnimateDiffLoRALoader",
                "ADE_AnimateDiffModelSettings",
                "ADE_AnimateDiffSamplingSettings",
                "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
                "ADE_AdjustWeightIndivAdd",
                "ADE_CameraCtrlAnimateDiffKeyframe",
                "AnimateDiffLoaderV1",
                "ADE_AnimateDiffModelSettingsSimple",
                "ADE_AnimateDiffUniformContextOptions",
                "ADE_AnimateDiffUnload",
                "ADE_BatchedContextOptions",
                "ADE_ApplyAnimateDiffModelWithCameraCtrl",
                "ADE_IterationOptsDefault",
                "ADE_LoopedUniformViewOptions",
                "ADE_AdjustWeightIndivAttnAdd",
                "ADE_AnimateDiffModelSettings_Release",
                "ADE_StandardStaticViewOptions",
                "ADE_LoopedUniformContextOptions",
                "ADE_AnimateDiffLoaderV1Advanced",
                "ADE_ApplyAnimateDiffModel",
                "ADE_ApplyAnimateDiffModelSimple",
                "ADE_StandardUniformContextOptions",
                "ADE_AnimateDiffLoaderWithContext",
                "ADE_AdjustPESweetspotStretch",
                "ADE_AdjustPEManual",
                "ADE_LoadAnimateDiffModelWithCameraCtrl",
                "ADE_StandardUniformViewOptions",
                "ADE_AnimateDiffKeyframe",
                "ADE_CustomCFG",
                "ADE_StandardStaticContextOptions",
                "ADE_CustomCFGKeyframe",
                "ADE_AnimateDiffCombine"
            ],
            "CameraControl": [
                "ADE_ReplaceCameraParameters",
                "ADE_LoadCameraPoses",
                "ADE_CameraPoseCombo",
                "ADE_CameraPoseAdvanced",
                "ADE_CameraManualPoseAppend",
                "ADE_ReplaceOriginalPoseAspectRatio",
                "ADE_CameraPoseBasic"
            ],
            "Other": [
                "mgpt_t2m",
                "EmptyMotionData",
                "PLSAIStableVideoDiffusion",
                "WHTransformImage",
                "Auto Pan Equilateral (mtb)",
                "DetailerForEachPipeForAnimateDiff",
                "VideoLinearCFGGuidance",
                "VideoTriangleCFGGuidance",
                "SaltAIStableVideoDiffusion",
                "Camera_AnglesStyler"
            ]
        },
        "Utils": {
            "Other": [
                "VHS_VideoInfo"
            ]
        }
    },
    "Audio": {
        "Audio": [
            "PlaySound|pysssss",
            "SaltAudioFade",
            "SaltAudioStereoSplitter",
            "SaltAudioInversion",
            "SaltAudioLDM2Sampler",
            "SaltLoadAudio",
            "SaltAudioStereoMerge",
            "SaltAudioPlaybackRate",
            "SaltAudioPitchShiftScheduled",
            "SaltAudioTrim",
            "SaltAudioRepeat",
            "SaltAudioNormalize",
            "SaltAudioPitchShift",
            "SaltChangeAudioVolume",
            "SaltAudioMixer",
            "SaltAudioBandpassFilter",
            "SaltAudioNoiseReductionSpectralSubtraction",
            "SaltAudioBassBoost",
            "SaltAudio2VHS",
            "SaltAudioTrebleBoost",
            "SaltAudioDeesser",
            "SaltAudioFrequencyCutoff",
            "SaltAdvancedAudioCompressor",
            "SaltSaveAudio",
            "SaltAudioCompressor",
            "SaltAudioSimpleReverb",
            "SaltAudioSimpleEcho",
            "SaltAudioFrequencyBoost",
            "SaltAudioStitcher",
            "FL_AudioConverter",
            "SoundReactive"
        ],
        "Other": [
            "SAIOpenAIAPIWhisper",
            "SAIWhisperTranscribe",
            "VHS_LoadAudioUpload",
            "VHS_LoadAudio",
            "FL_AudioPreview",
            "FL_AudioFrameCalculator"
        ]
    },
    "3D": {
        "SMPLModel": [
            "SaveSMPL",
            "ExportSMPLTo3DSoftware",
            "SmplifyMotionData",
            "Export_SMPLMultipleSubjects_To_3DSoftware",
            "SMPLShapeParameters",
            "SMPLLoader"
        ],
        "SMPL": [
            "RenderSMPLMesh",
            "Human4D_Img2SMPL",
            "SpectreImg2SMPL",
            "RenderMultipleSubjectsSMPLMesh"
        ],
        "Other": [
            "CameraPoseVisualizer"
        ]
    },
    "Model": {
        "Loading": {
            "Model": [
                "ToModelList",
                "Get Models",
                "FromListGet1Model"
            ],
            "Loader": [
                "HypernetworkLoader",
                "BLIPLoader",
                "GLIGENLoader",
                "UNETLoader",
                "PhotoMakerLoader",
                "DiffusersLoader",
                "SaltCLIPSegLoader",
                "GroundingDinoModelLoader",
                "SUPIR_model_loader",
                "SUPIR_model_loader_v2",
                "easy LLLiteLoader",
                "easy zero123Loader",
                "easy a1111Loader",
                "easy fullLoader",
                "easy comfyLoader",
                "easy sv3dLoader",
                "easy dynamiCrafterLoader",
                "easy svdLoader",
                "easy showLoaderSettingsNames",
                "easy cascadeLoader",
                "CR Load Scheduled Models",
                "CR Model List",
                "CR Select Model",
                "Efficient Loader",
                "Eff. Loader SDXL",
                "WAS_Diffusers_Hub_Model_Loader",
                "BLIP Model Loader",
                "Diffusers Model Loader",
                "CLIPSeg Model Loader"
            ],
            "LoRA": [
                "LoraInfo",
                "LoraLoader|pysssss",
                "LoraLoader",
                "LLMLLaVANextModelLoader",
                "AV_LoraLoader",
                "AV_LoraListLoader",
                "LoraLoaderModelOnly",
                "Power Lora Loader (rgthree)",
                "Lora Loader Stack (rgthree)",
                "easy loraStack",
                "Lora Loader (JPS)",
                "CR_LoadScheduledLoRAs",
                "CR Load LoRA",
                "CR LoRA List",
                "SeargeLoraLoader",
                "LoadElla"
            ],
            "Checkpoint": [
                "CCSR_Model_Select",
                "Checkpoint Selector",
                "CheckpointLoader|pysssss",
                "CheckpointLoaderSimple (dirty)",
                "CheckpointLoader (dirty)",
                "CheckpointLoaderSimpleShared __Inspire",
                "StableCascade_CheckpointLoader __Inspire",
                "CheckpointNameSelector",
                "AV_CheckpointSave",
                "AV_CheckpointLoader",
                "CheckpointLoaderSimpleWithNoiseSelect",
                "CheckpointHash",
                "Checkpoint Loader Simple Mikey",
                "CheckpointLoaderSimple",
                "ImageOnlyCheckpointSave",
                "unCLIPCheckpointLoader",
                "CheckpointLoader",
                "ImageOnlyCheckpointLoader",
                "CheckpointSave",
                "easy ckptNames",
                "SeargeCheckpointLoader",
                "Checkpoint Loader",
                "unCLIP Checkpoint Loader"
            ],
            "Other": [
                "MotionDiffLoader",
                "Humans4DLoader",
                "mgpt_model_loader",
                "PLResourcePackageLoader",
                "PLLoraList",
                "PLCheckpointList",
                "PlaiLoraLoader",
                "PLDiffusersVaeLoader",
                "PLCustomPipelineLoader",
                "PLUpscaleModelList",
                "InstantIDModelLoader",
                "LDSRModelLoader",
                "Load Film Model (mtb)",
                "Load Face Swap Model (mtb)",
                "LLMGeminiModel",
                "AV_CheckpointModelsToParametersPipe",
                "AV_VAELoader",
                "ISNetLoader",
                "AV_ParametersPipeToCheckpointModels",
                "SaltAudioLDM2LoadModel",
                "ADE_AnimateDiffLoaderGen1",
                "ADE_LoadAnimateLCMI2VModel",
                "ADE_LoadAnimateDiffModel",
                "FromDetailerPipeSDXL",
                "SAMLoader",
                "UpscaleModelLoader",
                "StyleModelLoader",
                "VAELoader",
                "ttN pipeLoaderSDXL",
                "ttN pipeLoaderSDXL_v2",
                "CR Module Pipe Loader",
                "SeargeUpscaleModelLoader",
                "SeargeVAELoader",
                "SeargeInput4",
                "SeargeModelSelector",
                "SAIWhisperLoadModel",
                "MiDaS Model Loader",
                "Upscale Model Loader",
                "LoadInstancePositionNetModel",
                "DownloadInstanceDiffusionModels",
                "LoadInstanceScaleUNode",
                "LoadInstanceFusersNode",
                "LoadResAdapterNormalization"
            ]
        },
        "Manipulation": {
            "ModelTuning": [
                "ADE_AdjustWeightIndivMult",
                "ADE_AdjustWeightAllMult",
                "ADE_AdjustPEFullStretch",
                "ADE_AdjustWeightIndivAttnMult"
            ],
            "ModelSwitching": [
                "CR Cycle Models",
                "Bus Node"
            ],
            "ModelMerge": [
                "MergeModels",
                "AV_CheckpointMerge",
                "ModelMergeSDXL",
                "ModelMergeSD2",
                "ModelMergeBlocks",
                "ModelMergeSD1",
                "ModelMergeSubtract",
                "ModelMergeAdd",
                "ModelMergeSimple",
                "ttN multiModelMerge",
                "easy XYInputs: ModelMergeBlocks",
                "CR Apply Model Merge",
                "CR Model Merge Stack",
                "Inference_Core_ModelMergeSDXLTransformers",
                "Inference_Core_ModelMergeSDXLDetailedTransformers",
                "Inference_Core_ModelMergeBlockNumber",
                "Inference_Core_ModelMergeSDXL",
                "ModelMergeSDXLTransformers",
                "ModelMergeBlockNumber",
                "ModelMergeSDXLDetailedTransformers"
            ],
            "ModelGuidance": [
                "Automatic CFG",
                "SAG delayed activation",
                "Automatic CFG - Negative",
                "Automatic CFG - Fastest",
                "Automatic CFG - Advanced",
                "InstantIDAttentionPatch",
                "Model Patch Seamless (mtb)",
                "SelfAttentionGuidance",
                "TomePatchModel",
                "PerturbedAttentionGuidance",
                "easy XYInputs: CFG Scale",
                "Inference_Core_RescaleClassifierFreeGuidanceTest",
                "RescaleClassifierFreeGuidanceTest"
            ],
            "Other": [
                "FromListGetModels",
                "Plaiday_Best_Lora_Select",
                "StyleAlignedBatchAlign",
                "LoraBlockInfo __Inspire",
                "LoraLoaderBlockWeight __Inspire",
                "Modelscopev2v",
                "DependenciesEdit",
                "AV_LoraListStacker",
                "ADE_CombineLoraHooks",
                "ADE_AttachLoraHookToConditioning",
                "ADE_RegisterLoraHookModelOnly",
                "ADE_RegisterModelAsLoraHookModelOnly",
                "ADE_CombineLoraHooksEight",
                "ADE_AttachLoraHookToCLIP",
                "ADE_CombineLoraHooksFour",
                "ADE_RegisterModelAsLoraHook",
                "ADE_RegisterLoraHook",
                "EditDetailerPipe",
                "FromBasicPipe_v2",
                "EditBasicPipe",
                "ToDetailerPipe",
                "BasicPipeToDetailerPipeSDXL",
                "FromBasicPipe",
                "LoraSyntaxProcessor",
                "FreeU_V2",
                "ModelSamplingStableCascade",
                "PatchModelAddDownscale",
                "UpscaleModelClamp",
                "StyleModelClamp",
                "ModelClamp",
                "ttN pipeLoraStack",
                "easy XYInputs: Lora",
                "easy XYInputs: Checkpoint",
                "easy styleAlignedBatchAlign",
                "VAE Switch (JPS)",
                "Model Switch (JPS)",
                "CR_RandomWeightLoRA",
                "CR_ApplyLoRAStack",
                "CR_RandomLoRAStack",
                "CR Model Input Switch",
                "CR Switch Model and CLIP",
                "CR Cycle LoRAs",
                "CR LoRA Stack",
                "SeargeOutput4",
                "SeargeLoras",
                "ReferenceOnlySimple",
                "SoftT2IAdapterWeights",
                "LoRA Stack to String converter",
                "LoRA Stacker",
                "ControlLoraSave",
                "Lora Input Switch",
                "Upscale Model Switch",
                "VAE Input Switch",
                "Model Input Switch",
                "Load Lora",
                "ModelCompile+",
                "ApplyScaleUModelNode",
                "Intrinsic_lora_sampling"
            ]
        }
    },
    "Math": {
        "Arithmetic Operations": {
            "Arithmetic": [
                "JWIntegerDiv",
                "JWFloatSub",
                "JWIntegerSub",
                "JWFloatDiv",
                "Substract Int Int (JPS)",
                "DF_Subtract",
                "DF_Divide"
            ],
            "Math": [
                "MathExpression",
                "Calculation [Dream]",
                "Math Expression (mtb)",
                "EvalFloats",
                "CR_MathOperation",
                "CM_Vec3ToScalarUnaryOperation",
                "CM_Vec4ScalarOperation",
                "CM_NumberUnaryCondition",
                "CM_NumberUnaryOperation",
                "CM_FloatUnaryOperation",
                "CM_IntUnaryOperation",
                "CM_IntBinaryOperation",
                "CM_FloatBinaryOperation",
                "CM_NumberBinaryOperation",
                "CM_IntUnaryCondition",
                "DF_Ceil",
                "DF_Square_root",
                "DF_Sum",
                "DF_Cosines",
                "DF_Floor",
                "DF_Power",
                "DF_Tangent",
                "Evaluate Floats",
                "Evaluate Integers",
                "Number Operation",
                "SimpleMath+"
            ],
            "MathematicalFunctions": [
                "JWFloatMin",
                "JWIntegerMul",
                "JWFloatMul",
                "JWIntegerMin",
                "JWFloatToInteger",
                "JWFloatMax",
                "JWFloatAdd",
                "JWFloatAbsolute",
                "JWIntegerAdd",
                "JWIntegerAbsolute",
                "JWIntegerMax",
                "IG Multiply",
                "Multiply Int Int (JPS)",
                "Multiply Int Float (JPS)",
                "Multiply Float Float (JPS)",
                "CR_IntegerMultipleOf",
                "CR Index Multiply",
                "DF_Absolute_value",
                "DF_Multiply"
            ],
            "NumericConversion": [
                "JWFloat",
                "CM_FloatToInt",
                "CM_NumberToInt",
                "CM_IntToFloat",
                "CM_IntToNumber",
                "Number PI"
            ],
            "Other": [
                "MasqueradeIncrementer",
                "Cfg Literal",
                "Fit Number (mtb)",
                "NumberScaler",
                "SaltListOperation",
                "ADE_MultivalDynamic",
                "Range(Step) - Float",
                "CR_IncrementFloat",
                "CR_GradientInteger",
                "CR_IncrementInteger",
                "CR Clamp Value",
                "SeargeIntegerMath",
                "SeargeFloatMath",
                "SeargeIntegerScaler",
                "Integer_Place_Counter",
                "Number Counter"
            ]
        },
        "Specialized Math": {
            "WavePatterns": [
                "AbsCosWave",
                "TriangleWave",
                "SquareWave",
                "SinWave",
                "InvSinWave",
                "SawtoothWave",
                "AbsSinWave",
                "CosWave",
                "InvCosWave"
            ],
            "VectorMath": [
                "CM_Vec3ScalarOperation",
                "CM_Vec2BinaryOperation",
                "CM_Vec3UnaryOperation",
                "CM_Vec3ToScalarBinaryOperation",
                "CM_Vec2UnaryOperation",
                "CM_Vec2ToScalarUnaryOperation",
                "CM_BreakoutVec2",
                "CM_ComposeVec3",
                "CM_Vec2ToScalarBinaryOperation",
                "CM_Vec4BinaryOperation",
                "CM_Vec2ScalarOperation",
                "CM_Vec4UnaryOperation",
                "CM_Vec4ToScalarUnaryOperation",
                "CM_ComposeVec2",
                "CM_BreakoutVec3",
                "CM_Vec3BinaryOperation",
                "CM_BreakoutVec4",
                "CM_Vec4ToScalarBinaryOperation"
            ],
            "Other": [
                "Sine Curve [Dream]",
                "Saw Curve [Dream]",
                "DF_Sinus"
            ]
        },
        "Conditional and Logical Operations": {
            "BooleanLogic": [
                "Primitive boolean [Crystools]",
                "Boolean To Float [Dream]",
                "Boolean To Int [Dream]",
                "Int To Bool (mtb)",
                "BooleanPrimitive",
                "ImpactIfNone",
                "ImpactConditionalStopIteration",
                "ImpactLogicalOperators",
                "ImpactNeg",
                "ImpactConditionalBranch",
                "ImpactConditionalBranchSelMode",
                "If ANY execute A else B",
                "Bool",
                "easy if",
                "easy boolean",
                "CR_SetValueOnBoolean",
                "CM_BoolToInt",
                "CM_IntToBool",
                "DF_Logic_node",
                "Logic Comparison XOR",
                "Logic NOT",
                "Logic Comparison OR",
                "Logic Comparison AND",
                "Logic Boolean Primitive",
                "Logic Boolean"
            ],
            "Comparison": [
                "ImpactCompare",
                "Compare",
                "easy compare"
            ],
            "ConditionalSelection": [
                "Switch any [Crystools]",
                "Switch string [Crystools]",
                "Big Float Switch [Dream]",
                "Big Text Switch [Dream]",
                "Big Int Switch [Dream]",
                "ImpactSwitch",
                "ImpactMinMax",
                "ImpactQueueTrigger",
                "Any Switch (rgthree)",
                "easy textSwitch",
                "Integer Switch (JPS)",
                "Disable Enable Switch (JPS)",
                "Enable Disable Switch (JPS)",
                "CR_TextInputSwitch4way",
                "CR Clip Input Switch",
                "CR Set Switch From String",
                "CR_TextInputSwitch",
                "Number Input Switch",
                "Text Input Switch"
            ],
            "Other": [
                "SaltScheduledBinaryComparison",
                "ImpactInversedSwitch",
                "Largest Int (JPS)",
                "CR Trigger",
                "CR_SetValueOnBinary",
                "CM_IntBinaryCondition",
                "CM_Vec2BinaryCondition",
                "CM_Vec4BinaryCondition",
                "CM_FloatUnaryCondition",
                "CM_FloatBinaryCondition",
                "CM_Vec3BinaryCondition",
                "CM_Vec3UnaryCondition",
                "CM_BoolUnaryOperation",
                "CM_NumberBinaryCondition",
                "CM_BoolBinaryOperation",
                "CM_Vec4UnaryCondition",
                "CM_Vec2UnaryCondition",
                "Number Input Condition",
                "Number Multiple Of"
            ]
        },
        "Randomization and Seed": {
            "NumberRangeGeneration": [
                "FloatRange __Inspire",
                "Range(Num Steps) - Float",
                "Range(Step) - Int",
                "Range(Num Steps) - Int",
                "RangeInteger",
                "Range Float",
                "easy rangeFloat",
                "easy rangeInt",
                "CR_IntegerRangeList"
            ],
            "RandomGeneration": [
                "Seed Generator",
                "Laboratory [Dream]",
                "Seed Everywhere",
                "SeedExplorer __Inspire",
                "GlobalSeed __Inspire",
                "RandomGeneratorForList __Inspire",
                "RandomFloat",
                "SeedSelector",
                "RandomInt",
                "Seed String",
                "Seed (rgthree)",
                "ttN seed",
                "easy globalSeed",
                "easy seed",
                "Time Seed (JPS)",
                "CR Seed to Int",
                "CR Random Multiline Values",
                "CR Random Panel Codes",
                "CR Random RGB",
                "CR Seed",
                "DF_Random",
                "Number to Seed",
                "True Random.org Number Generator",
                "WAS_Seed",
                "Random Number",
                "Text Random Line",
                "Text Shuffle"
            ],
            "Other": [
                "SaltScheduleRandomValues",
                "RandomNoise",
                "easy XYInputs: Seeds++ Batch",
                "XY Input: Seeds++ Batch",
                "Image to Seed"
            ]
        },
        "Data Representation": {
            "XYPlot": [
                "easy XYPlotAdvanced",
                "easy XYPlot"
            ],
            "Other": [
                "XYAny",
                "easy XYInputs: PositiveCond",
                "easy XYInputs: NegativeCondList",
                "easy XYInputs: NegativeCond",
                "easy XYInputs: Steps",
                "CM_ComposeVec4",
                "XY Input: Refiner On_Off",
                "XY Input: Steps",
                "XY Input: Aesthetic Score",
                "XY Input: Manual XY Entry",
                "XY Input: Clip Skip",
                "XY Input: Denoise",
                "Manual XY Entry Info",
                "XY Input: Add_Return Noise"
            ]
        }
    },
    "Input": {
        "Text": {
            "Text": [
                "LoadText|pysssss",
                "Text Input [Dream]",
                "String Input [Dream]",
                "ttN text",
                "CR Load Text List",
                "DF_Text",
                "Text Load Line From File",
                "Load Text File"
            ],
            "Other": [
                "LLMVideoAudioReader",
                "Text Prompt (JPS)",
                "CR Font File List"
            ]
        },
        "Image": {
            "ImageListLoader": [
                "ImageListLoader",
                "CR Image List",
                "CR Image List Simple",
                "CR Load Image List Plus",
                "CR Load Image List"
            ],
            "ImageLoad": [
                "LoadImageMask",
                "LoadImage",
                "IG Load Images",
                "IG Load Image",
                "LoadImagesFromDirectory",
                "Image Load",
                "VHS_LoadImages",
                "VHS_LoadImagesPath"
            ],
            "ImageSequence": [
                "Image Sequence Loader [Dream]",
                "Load Image Sequence (mtb)",
                "JWLoadImagesFromString",
                "JWLoadImageSequenceWithStopIndex",
                "JWLoadImageSequence"
            ],
            "Other": [
                "ImageFromURL",
                "Load image with metadata [Crystools]",
                "Load 64 Encoded Image",
                "FromListGet1Image",
                "PLLoadImageRetry",
                "PLLoadImageBatch",
                "PLLoadImage",
                "PLVideoDownloadLoader",
                "Unsplash Image (mtb)",
                "Load Image From Url (mtb)",
                "LoadImageListFromDir __Inspire",
                "LoadImagesFromDir __Inspire",
                "LoadImage __Inspire",
                "ImageDirIterator",
                "LoadImageFromUrl",
                "SV_random",
                "Load Image Based on Number",
                "Batch Load Images",
                "SaltInput",
                "SaltLoadImageZip",
                "JWImageLoadRGB",
                "JWImageSequenceExtractFromBatch",
                "JWImageLoadRGBA",
                "JWImageLoadRGBIfExists",
                "easy loadImageBase64",
                "easy imageChooser",
                "CR Load GIF As List",
                "CR XY From Folder",
                "Image History Loader",
                "Load Image Batch",
                "FL_DirectoryCrawl",
                "ImageGrabPIL"
            ]
        },
        "Video": {
            "Other": [
                "VidDirIterator",
                "LoadVideoFromUrl"
            ]
        }
    },
    "Output": {
        "Text": {
            "Text": [
                "SaveText",
                "ShowText|pysssss",
                "CR_SaveTextToFile",
                "Save Text File",
                "IF_DisplayText",
                "IF_SaveText"
            ],
            "Other": [
                "OutputString",
                "CR_OutputScheduleToFile",
                "CR Simple Text Panel",
                "PreviewTextNode",
                "ArgosTranslateTextNode"
            ]
        },
        "Image": {
            "Preview": [
                "Preview from image [Crystools]",
                "Preview from metadata [Crystools]",
                "PreviewBridge",
                "PreviewImage",
                "SeargePreviewImage",
                "ImageAndMaskPreview"
            ],
            "ImageSave": [
                "SaveImageExtended",
                "Save Image w_Metadata",
                "Save Image",
                "Image Sequence Saver [Dream]",
                "Save Image Sequence (mtb)",
                "Save Tensors (mtb)",
                "ImageSender",
                "Save Images No Display",
                "Save Images Mikey",
                "Save Image With Prompt Data",
                "Save Image If True",
                "SaveImage",
                "JWSaveImageSequence",
                "JWImageSaveToPath",
                "ttN imageOutput",
                "SaveImageOpenEXR",
                "easy imageSave",
                "Save Images Plus (JPS)",
                "SeargeImageSave",
                "SeargeImageSaving",
                "Image Save",
                "FL_ImageCaptionSaver",
                "SaveImageWithAlpha"
            ],
            "Other": [
                "PNG_Save",
                "Save image with extra metadata [Crystools]",
                "Save Gif (mtb)",
                "Save Image Grid (mtb)",
                "Export With Ffmpeg (mtb)",
                "SaveAnimatedPNG",
                "SaveAnimatedWEBP",
                "SaltOutput",
                "CR XY Save Grid Image",
                "CR Output Flow Frames",
                "CR Image Output",
                "CR_ImagePipeOut",
                "Preview Chooser",
                "Preview Chooser Fabric"
            ]
        },
        "Video": {
            "Other": [
                "VHS_PruneOutputs"
            ]
        }
    },
    "Data": {
        "Data Types": {
            "Integer": [
                "Int Input [Dream]",
                "ImpactInt",
                "RgthreeDisplayInt",
                "Int",
                "easy int"
            ],
            "Float": [
                "Float Input [Dream]",
                "ImpactFloat",
                "Float",
                "easy float",
                "IG Float",
                "DF_Float"
            ],
            "String": [
                "Primitive string [Crystools]",
                "String",
                "SingleString",
                "PresentString"
            ],
            "List": [
                "Primitive string multiline [Crystools]",
                "ToIntList",
                "ExtendImageList",
                "FromListGetImages",
                "KepStringList",
                "JWStringMultiline",
                "CR Text",
                "CR Multiline Text",
                "StringConstantMultiline"
            ],
            "Index": [
                "CR Index"
            ],
            "Other": [
                "Int Literal",
                "String Literal",
                "Primitive integer [Crystools]",
                "Primitive float [Crystools]",
                "PLStringListLIteral",
                "JWInteger",
                "IG String",
                "IG Int",
                "CR_FloatRangeList",
                "DF_Text_Box",
                "DF_Integer",
                "SeargeIntegerConstant",
                "SeargeFloatConstant",
                "SeargeFloatPair",
                "SeargeIntegerPair",
                "FloatConstant",
                "StringConstant",
                "INTConstant"
            ]
        },
        "Data Conversion and Manipulation": {
            "DataTypeConversion": [
                "ImpactValueReceiver",
                "ImpactConvertDataType",
                "SAIPrimitiveConverter",
                "JWIntegerToFloat",
                "JWStringToFloat",
                "easy convertAnything",
                "Evaluate Strings",
                "WeightScheduleExtend"
            ],
            "DataConversion": [
                "FromListGetFloats",
                "FromListGet1Float",
                "ToFloatList",
                "String to Integer",
                "String2Float",
                "InputString2IntArray",
                "Floats To Float (mtb)",
                "Float To Floats (mtb)",
                "StringToInt",
                "StringToNumber",
                "ImpactRemoteInt",
                "FloatToString",
                "IntToString",
                "ListStringToFloatNode",
                "PrintFloats",
                "JWFloatToString",
                "JWStringToInteger",
                "JWIntegerToString",
                "ttN int",
                "ttN float",
                "CR Integer To String",
                "CR String To Number",
                "CR Float To String",
                "CR_FloatToInteger",
                "CM_FloatToNumber",
                "CM_NumberToFloat",
                "Number_To_Int",
                "WAS_Constant_Number",
                "Text to Number",
                "Number to Text",
                "Number to String",
                "Number_To_Float"
            ],
            "DataTypeAgnostic": [
                "ReroutePrimitive|pysssss",
                "AnyToAny",
                "Anything Everywhere",
                "Anything Everywhere?",
                "Anything Everywhere3",
                "easy showAnything"
            ],
            "TextReplacement": [
                "String Replace (mtb)",
                "SearchAndReplace",
                "JWStringReplace",
                "CR Text Replace",
                "DF_String_Replace",
                "Text Find and Replace",
                "Text Find and Replace Input",
                "Text Find and Replace by Dictionary",
                "Text Parse A1111 Embeddings"
            ],
            "Concatenate": [
                "Add String To Many",
                "TextConcat",
                "concat",
                "JWStringConcat",
                "ttN text3BOX_3WAYconcat",
                "ttN concat",
                "ttN text7BOX_concat",
                "Text Concatenate (JPS)",
                "CR Text Concatenate",
                "DF_String_Concatenate",
                "Fans Text Concatenate",
                "Text Concatenate",
                "JoinStrings",
                "ConcatStringSingle",
                "StringConcatenate"
            ],
            "Other": [
                "List of any [Crystools]",
                "Pipe from any [Crystools]",
                "CConsoleAnyToJson",
                "Pipe to_edit any [Crystools]",
                "List of strings [Crystools]",
                "Json comparator [Crystools]",
                "Metadata extractor [Crystools]",
                "CMetadataCompare",
                "Repeater",
                "StringFunction|pysssss",
                "LLMDirectoryReader",
                "LLMTrafilaturaWebReaderAdv",
                "LLMInputToDocuments",
                "LLMSentenceSplitterNodeCreator",
                "LLMPagedCSVReader",
                "LLMEpubReader",
                "LLMDocumentListAppend",
                "LLMRssReaderNode",
                "LLMImageTabularChartReader",
                "LLMHTMLTagReader",
                "LLMSimpleWebPageReaderAdv",
                "LLMSaltWebCrawler",
                "CreateRequestMetadata",
                "FromListGetStrings",
                "FromListGetInts",
                "ExtendIntList",
                "FromListGet1String",
                "ToImageList",
                "ExtendFloatList",
                "ExtendStringList",
                "FromListGet1Int",
                "ToStringList",
                "ExtendModelList",
                "RequestInputs",
                "FromListGetConds",
                "FromListGet1Color",
                "CSV Generator [Dream]",
                "Int to Log Entry [Dream]",
                "String to Log Entry [Dream]",
                "String Tokenizer [Dream]",
                "APIPassthrough",
                "PLWildcardToText",
                "DivTest",
                "PLResourcePackager",
                "TensorRepeater",
                "WorkflowDifference",
                "PLDirectoryListing",
                "PLStringToList",
                "PLStringToListAny",
                "Simple String",
                "Any To String (mtb)",
                "Add To Playlist (mtb)",
                "Batch Float Fit (mtb)",
                "Apply Text Template (mtb)",
                "To Device (mtb)",
                "GetObjectFromJson",
                "LoadJsonFromUrl",
                "GetFloatFromJson",
                "GetBoolFromJson",
                "GetIntFromJson",
                "GetTextFromJson",
                "SaltScheduleConverter",
                "SaltListClamp",
                "DetailerPipeToBasicPipe",
                "ImpactValueSender",
                "FromDetailerPipe",
                "FromDetailerPipe_v2",
                "ImpactImageBatchToImageList",
                "ImpactSetWidgetValue",
                "ImpactStringSelector",
                "Join Image Lists",
                "Kep_RepeatList",
                "Join Float Lists",
                "Kep_ReverseList",
                "List Length",
                "Kep_JoinListAny",
                "KepStringListFromNewline",
                "Text2InputOr3rdOption",
                "SaveMetaData",
                "AddMetaData",
                "FileNamePrefixDateDirFirst",
                "SAIStringRegexSearchMatch",
                "SAIStringRegexSearchReplace",
                "Context Switch (rgthree)",
                "Context Switch Big (rgthree)",
                "Context Merge (rgthree)",
                "Context Merge Big (rgthree)",
                "Filter",
                "JWStringSplit",
                "JWStringUnescape",
                "JWStringListToFormatedString",
                "JWStringGetLine",
                "JWDatetimeString",
                "easy imageToBase64",
                "easy string",
                "IG ZFill",
                "IG Path Join",
                "IG Folder",
                "InstantID Settings (JPS)",
                "Get Date Time String (JPS)",
                "InstantID Pipe (JPS)",
                "CR Repeater",
                "CR Set Value on String",
                "CR_StringToCombo",
                "CR_BinaryToBitList",
                "CR Image Input Switch (4 way)",
                "CR Text List To String",
                "CR XY List",
                "CR Value",
                "CR String To Boolean",
                "CR Text List",
                "CR_ValueCycler",
                "CR Select ISO Size",
                "CR 8 Channel Out",
                "CR XY Index",
                "CR Text Length",
                "CR Split String",
                "CR Index Reset",
                "CR Index Increment",
                "CR_SimpleList",
                "CR Text Operation",
                "CR_IntertwineLists",
                "CR XY Product",
                "CR Text List Simple",
                "DF_Int_to_Float",
                "Inference_Core_AIO_Preprocessor",
                "Join XY Inputs of Same Type",
                "WAS_Text_List_to_Text",
                "WAS_Text_String",
                "WAS_Text_Contains",
                "WAS_Text_Add_Token_Input",
                "Text Dictionary New",
                "Text Dictionary Get",
                "WAS_Text_Parse_Tokens",
                "WAS_Text_Add_Tokens",
                "Text File History Loader",
                "Boolean To Text",
                "WAS_Text_List_Concatenate",
                "Text Dictionary Update",
                "Export API",
                "String to Text",
                "Text Compare",
                "Text Dictionary Convert",
                "WAS_Text_String_Truncate",
                "Text Dictionary To Text",
                "Text Multiline",
                "Tensor Batch to Image",
                "WAS_Text_To_String",
                "WAS_Text_List",
                "FL_CodeNode",
                "WidgetToString",
                "MaskOrImageToWeight",
                "SomethingToString",
                "DeepTranslatorTextNode"
            ]
        },
        "Batch and Pipeline Processing": {
            "Batch": [
                "BatchAverageUnJittered",
                "Batch Float (mtb)",
                "Batch Float Fill (mtb)",
                "Batch Make (mtb)",
                "Pick From Batch (mtb)",
                "Batch Float Assemble (mtb)",
                "Get Batch From History (mtb)",
                "Batch Float Normalize (mtb)",
                "ImageBatchSplitter __Inspire",
                "ImpactMakeImageBatch",
                "CR_MakeBatchFromImageList",
                "ImageListToBatch+",
                "GetImagesFromBatchIndexed",
                "InsertImagesToBatchIndexed"
            ],
            "Pipeline": [
                "MakeBasicPipe __Inspire",
                "DetailerForEach",
                "BasicPipeToDetailerPipe",
                "DetailerForEachPipe",
                "ToBasicPipe",
                "ttN pipeIN",
                "ttN pipeOUT",
                "ttN pipeLoader_v2",
                "ttN pipeLoader",
                "ttN pipe2BASIC",
                "ttN pipeEDIT",
                "easy pipeToBasicPipe",
                "easy pipeEdit",
                "easy pipeOut",
                "easy pipeIn",
                "CR_ModuleInput",
                "CR Data Bus Out",
                "CR Pipe Switch",
                "CR 8 Channel In",
                "CR Module Output",
                "CR Data Bus In"
            ],
            "Other": [
                "BatchAlign",
                "BatchCreativeInterpolation",
                "PLBatchCropDataExtractor",
                "WHBatchFloat",
                "WHBatchFloatAssemble",
                "PLListToImages",
                "PLBatchImageToList",
                "WHBatchMake",
                "WHBatchFloatFill",
                "Read Playlist (mtb)",
                "BindImageListPromptList __Inspire",
                "CacheBackendDataNumberKeyList __Inspire",
                "SaltScheduleSplit",
                "SaltScheduleMerge",
                "ImpactMakeImageList",
                "SaltBatchCropDataExtractor",
                "GligenClamp",
                "easy pipeBatchIndex",
                "CR Batch Process Switch",
                "SeargePipelineStart",
                "SeargePipelineTerminator",
                "Samples Passthrough (Stat System)",
                "VHS_GetImageCount",
                "VHS_SelectEveryNthImage",
                "BatchCount+",
                "StableZero123_BatchSchedule",
                "ImagesFromBatchSchedule",
                "BatchValueSchedule"
            ]
        },
        "Visualization": {
            "LoRAVisualization": [
                "XY Input: Lora Block Weight __Inspire",
                "XY Input: LoRA",
                "XY Input: LoRA Plot",
                "XY Input: LoRA Stacks"
            ],
            "DataVisualization": [
                "ttN xyPlot",
                "ttN advanced xyPlot",
                "easy xyAny",
                "easy XYInputs: Denoise",
                "XY Input: Checkpoint",
                "XY Plot"
            ],
            "GridLayout": [
                "Create Grid Image from Batch"
            ],
            "Other": [
                "MotionDataVisualizer",
                "Plot Batch Float (mtb)",
                "Qr Code (mtb)",
                "QRCodeGenerator",
                "SaltAudioVisualizer",
                "RgthreeDisplayAny",
                "easy XYInputs: PositiveCondList",
                "easy showTensorShape",
                "CR Polygons",
                "CR Image Panel",
                "SaltDisplayAny",
                "XY Input: Control Net Plot",
                "XY Input: CFG Scale"
            ]
        },
        "Other": {
            "Constant": [
                "Constant (mtb)"
            ],
            "Dictionary": [
                "Dictionary_Keys"
            ],
            "LogEntry": [
                "Log Entry Joiner [Dream]",
                "Float to Log Entry [Dream]"
            ],
            "Context": [
                "Context (rgthree)",
                "Context Big"
            ],
            "Counting": [
                "File Count [Dream]"
            ],
            "BackendCache": [
                "CacheBackendData __Inspire",
                "CacheBackendDataList __Inspire",
                "RetrieveBackendData __Inspire",
                "RemoveBackendDataNumberKey __Inspire",
                "RemoveBackendData __Inspire",
                "RetrieveBackendDataNumberKey __Inspire",
                "CacheBackendDataNumberKey __Inspire"
            ],
            "Cache": [
                "ShowCachedInfo __Inspire",
                "easy clearCacheAll",
                "easy clearCacheKey",
                "Load Cache",
                "Cache Node"
            ],
            "Other": [
                "CreateTavilySearchTool",
                "LLMSimpleWebPageReader",
                "SetRequestStateToComplete",
                "CatPassthrough",
                "ListCounter __Inspire",
                "ImpactSleep",
                "SaltInfo",
                "Simple Eval Examples",
                "VHS_VideoInfoLoaded"
            ]
        }
    },
    "Other": {
        "PanelDesign": [
            "CR Page Layout"
        ],
        "Time": [
            "easy showSpentTime",
            "Sleep"
        ],
        "Debugging": [
            "Show any [Crystools]",
            "Debug (mtb)",
            "DebugPrint",
            "ttN textDebug",
            "SeargeDebugPrinter",
            "DebugInput",
            "Dictionary to Console",
            "Text to Console",
            "WAS_Debug_Number_to_Console",
            "ConsoleDebug"
        ],
        "Other": [
            "PrintSigmas",
            "Stats system [Crystools]",
            "Log File [Dream]",
            "ImpactControlBridge",
            "DetailerForEachDebug",
            "DetailerForEachDebugPipe",
            "ImpactLogger",
            "easy cleanGpuUsed",
            "CR Seamless Checker",
            "DF_To_text_(Debug)",
            "Inference_Core_ReferenceOnlySimple",
            "Image Bounds to Console",
            "DebugTensorShape+",
            "VRAM_Debug"
        ]
    }
};